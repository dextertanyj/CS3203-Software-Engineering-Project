1 - Boolean No Clause Trivial
stmt s;
Select BOOLEAN
TRUE
5000
2 - Boolean 1 Clause positive
procedure p;
Select BOOLEAN such that Uses(p, "x")
TRUE
5000
3 - Boolean 1 Clause negative
stmt s;
Select BOOLEAN such that Uses("main", "a")
FALSE
5000
4 - Boolean Multiple Clauses positive
procedure p; variable v;
Select BOOLEAN such that Uses(p, "x") and Parent*(2, 4) such that Modifies("mars", v)
TRUE
5000
5 - Boolean Multiple Clauses negative
procedure p; variable v;
Select BOOLEAN such that Uses(p, "x") and Parent(2, 4) such that Modifies("mars", v)
FALSE
5000
6 - Boolean wrong spelling negative
procedure p; variable v;
Select Boolean such that Uses(p, "x") and Parent(6, 9) such that Modifies("mars", v)

5000
7 - Boolean invalid clause negative
stmt s; variable v;
Select BOOLEAN such that Calls(s, "mars") and Parent(6, 9) such that Modifies("mars", v)

5000
8 - Single Tuple No Clause Trivial
procedure p;
Select <p>
main, mars
5000
9 - Tuple No Clause Trivial
procedure p; stmt s;
Select <p, s>
main 1, main 2, main 3, main 4, main 5, main 6, main 7, mars 1, mars 2, mars 3, mars 4, mars 5, mars 6, mars 7
5000
10 - Tuple 1 Clause positive
procedure p; assign a;
Select <p, a> such that Uses(a, "b")
mars 7, main 7
5000
11 - Tuple 1 Clause negative
procedure p; assign a;
Select <p, a> such that Uses(a, "x")

5000
12 - Tuple Multiple Clause positive
procedure p, q; stmt s;
Select <p, s> such that Uses(s, _) such that Calls(p, q)
main 7, main 4, main 3, main 2, main 1,
5000
13 - Tuple Multiple Clause positive
procedure p, q; stmt s;
Select <p, q, s> such that Uses(s, _) such that Calls(p, q)
main mars 7, main mars 4, main mars 3, main mars 2, main mars 1,
5000
14 - Tuple Multiple Clause negative
procedure p, q; stmt s;
Select <p, s> such that Uses(s, _) such that Calls(p, q) such that Modifies(q, "a")

5000
15 - Tuple invalid elem
procedure p, q; stmt s;
Select <> such that Uses(s, _) such that Calls(p, q) such that Modifies(q, "a")

5000
15 - Tuple invalid elem
procedure p, q; stmt s;
Select <BOOLEAN> such that Uses(s, _) such that Calls(p, q) such that Modifies(q, "a")

5000