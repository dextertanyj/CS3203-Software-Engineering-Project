0 - Query 0
while while; read read; variable variable; if if; 
Select BOOLEAN  such that Uses(while, "else")  pattern while(_, _)  pattern if(_, _, _)  pattern while(variable, _)  pattern if(variable, _, _)  pattern if(_, _, _)  such that Next*(read, _)  pattern if(variable, _, _)  pattern while(variable, _)  such that Uses(53, variable) 
TRUE
5000
1 - Query 1
while while; read read; variable variable; if if; 
Select BOOLEAN  pattern if(variable, _, _)  pattern if(_, _, _)  pattern if(variable, _, _)  pattern while(_, _)  pattern if(_, _, _) with variable.varName=variable.varName  pattern if(variable, _, _) with read.stmt#=read.stmt#  pattern while(variable, _)  pattern while(_, _) 
TRUE
5000
2 - Query 2
while while; variable variable; if if; 
Select BOOLEAN  pattern if(_, _, _)  pattern while(variable, _)  pattern while(_, _) with variable.varName="if"  pattern while(variable, _)  pattern while(_, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern while(variable, _)  pattern if(variable, _, _) 
TRUE
5000
3 - Query 3
procedure procedure; print print; assign assign; if if; 
Select BOOLEAN  pattern if(_, _, _)  pattern if(_, _, _)  pattern if(_, _, _)  such that Uses(assign, _)  pattern if(_, _, _)  pattern if(_, _, _) with print.varName="then" with "else"=procedure.procName  such that Affects*(_, assign) with "then"=print.varName 
TRUE
5000
4 - Query 4
while while; call call; variable variable; if if; 
Select BOOLEAN  pattern if(_, _, _)  pattern while(variable, _)  such that Next(call, _)  pattern while(_, _)  pattern while(variable, _)  such that Next*(_, while)  pattern if(_, _, _)  such that Uses(203, variable)  pattern if(variable, _, _)  pattern while(_, _) 
TRUE
5000
5 - Query 5
while while; variable variable; if if; stmt stmt; 
Select BOOLEAN  such that Modifies(169, variable)  pattern if(_, _, _)  such that Parent*(stmt, _)  pattern if(_, _, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern while(_, _)  pattern while(_, _)  pattern while(variable, _)  pattern while(variable, _) 
TRUE
5000
6 - Query 6
while while; print print; assign assign; variable variable; 
Select BOOLEAN  pattern while(variable, _)  pattern while(variable, _)  pattern while(_, _)  such that Uses(while, "then")  pattern while(variable, _) with variable.varName="else"  such that Follows*(_, assign)  pattern while(_, _)  such that Next*(_, while)  such that Follows(assign, print) 
TRUE
5000
7 - Query 7
call call; while while; variable variable; if if; 
Select BOOLEAN  such that Parent(_, call)  pattern while(_, _)  pattern while(variable, _)  pattern while(_, _)  pattern if(_, _, _) with variable.varName=call.procName  such that Follows*(while, call)  pattern while(_, _)  pattern if(_, _, _)  pattern if(variable, _, _) 
TRUE
5000
8 - Query 8
while while; variable variable; assign assign; if if; 
Select BOOLEAN  pattern assign(variable, _)  pattern assign(_, _)  pattern while(variable, _)  pattern if(_, _, _)  such that Uses(while, variable)  pattern if(variable, _, _)  pattern if(_, _, _)  such that Uses(118, variable)  pattern while(variable, _)  pattern while(_, _) 
TRUE
5000
9 - Query 9
while while; variable variable; procedure procedure; if if; 
Select BOOLEAN  pattern if(variable, _, _)  such that Follows*(if, _)  pattern if(_, _, _)  pattern while(variable, _)  pattern while(variable, _)  pattern while(_, _)  pattern while(_, _)  such that Next(if, _) with "while"=procedure.procName with "else"=variable.varName 
TRUE
5000
10 - Query 10
while while; read read; variable variable; if if; 
Select BOOLEAN with "if"=variable.varName  pattern while(variable, _)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern while(_, _)  pattern while(_, _)  pattern if(variable, _, _)  such that Follows(_, read)  pattern while(_, _)  pattern while(_, _) 
TRUE
5000
11 - Query 11
procedure procedure; while while; variable variable; if if; 
Select BOOLEAN  pattern while(variable, _)  pattern while(variable, _)  pattern if(_, _, _) with procedure.procName=variable.varName  such that Calls*(_, procedure)  pattern if(variable, _, _)  such that Calls(_, procedure) with "else"=variable.varName  pattern if(variable, _, _)  pattern if(_, _, _) 
TRUE
5000
12 - Query 12
procedure procedure; while while; variable variable; if if; 
Select BOOLEAN  pattern if(_, _, _)  pattern while(variable, _)  such that Uses(177, variable) with procedure.procName="if"  pattern if(variable, _, _)  pattern while(variable, _)  pattern if(variable, _, _)  such that Calls*(_, procedure)  pattern while(variable, _)  pattern if(_, _, _) 
TRUE
5000
13 - Query 13
procedure procedure; assign assign; variable variable; if if; 
Select BOOLEAN  pattern if(_, _, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  such that Uses(procedure, variable)  pattern if(_, _, _)  such that Calls(procedure, _)  pattern if(variable, _, _) with 2=assign.stmt#  pattern if(variable, _, _) 
TRUE
5000
14 - Query 14
while while; variable variable; assign assign; if if; 
Select BOOLEAN  pattern if(_, _, _)  such that Follows(if, _)  pattern if(_, _, _)  such that Next(_, while)  pattern if(variable, _, _)  pattern assign(_, _)  pattern while(_, _)  pattern if(variable, _, _)  such that Follows(assign, 142)  such that Follows(assign, _) 
TRUE
5000
15 - Query 15
while while; variable variable; if if; 
Select BOOLEAN  pattern if(_, _, _)  pattern if(variable, _, _)  pattern while(_, _)  pattern if(_, _, _)  pattern if(_, _, _)  pattern if(_, _, _)  pattern while(variable, _)  pattern while(variable, _)  pattern while(_, _) with while.stmt#=while.stmt# 
TRUE
5000
16 - Query 16
while while; variable variable; if if; stmt stmt; 
Select BOOLEAN  pattern while(_, _)  pattern if(_, _, _)  pattern if(_, _, _)  pattern if(variable, _, _)  such that Modifies(138, variable)  pattern if(_, _, _) with if.stmt#=stmt.stmt#  such that Follows(_, while)  pattern while(_, _)  pattern if(_, _, _) 
TRUE
5000
17 - Query 17
while while; call call; variable variable; stmt stmt; 
Select BOOLEAN  pattern while(variable, _)  such that Next*(43, while)  such that Parent(while, _) with "else"=variable.varName  pattern while(_, _)  pattern while(_, _)  such that Next*(stmt, _)  such that Affects*(stmt, _)  pattern while(variable, _) with "if"=call.procName 
TRUE
5000
18 - Query 18
procedure procedure; read read; variable variable; if if; 
Select BOOLEAN  such that Calls(_, procedure) with variable.varName="else" with variable.varName="else"  pattern if(_, _, _)  pattern if(_, _, _) with variable.varName=read.varName  such that Calls*(procedure, _)  such that Calls*(_, procedure)  such that Uses(if, _) with "if"=procedure.procName 
TRUE
5000
19 - Query 19
while while; read read; variable variable; if if; 
Select BOOLEAN  pattern while(_, _)  pattern while(_, _)  pattern while(_, _)  pattern while(_, _)  pattern if(variable, _, _) with "if"=read.varName  pattern while(_, _)  pattern while(_, _)  such that Next(while, _)  pattern if(_, _, _) 
TRUE
5000
20 - Query 20
while while; variable variable; if if; stmt stmt; 
Select BOOLEAN with 5=stmt.stmt#  pattern if(_, _, _)  pattern if(_, _, _)  such that Follows*(_, stmt)  pattern while(_, _) with "then"=variable.varName  pattern while(_, _)  pattern while(_, _)  pattern if(variable, _, _)  such that Parent*(if, _) 
TRUE
5000
21 - Query 21
print print; while while; variable variable; if if; 
Select BOOLEAN  pattern if(_, _, _)  such that Parent(if, print)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern while(_, _)  pattern while(variable, _)  pattern if(_, _, _)  pattern if(_, _, _)  pattern if(_, _, _)  pattern while(variable, _) 
TRUE
5000
22 - Query 22
while while; variable variable; constant constant; if if; 
Select BOOLEAN  pattern while(variable, _)  pattern if(_, _, _)  such that Next*(62, while) with 5=constant.value  pattern if(variable, _, _)  pattern if(_, _, _)  pattern if(variable, _, _)  such that Modifies(while, "while")  pattern if(variable, _, _)  such that Parent*(if, 278) 
TRUE
5000
23 - Query 23
while while; variable variable; assign assign; procedure procedure; 
Select BOOLEAN with variable.varName="while"  such that Calls*(_, procedure)  such that Calls("while", procedure)  such that Modifies(assign, "while")  pattern assign(_, _)  such that Parent(_, while)  such that Next*(assign, 144)  such that Calls("if", procedure)  pattern while(variable, _)  such that Uses(243, variable) 
TRUE
5000
24 - Query 24
procedure procedure; variable variable; assign assign; if if; 
Select BOOLEAN  pattern if(_, _, _)  pattern assign(_, _)  such that Modifies(procedure, variable)  such that Uses(assign, "then")  such that Affects*(assign, _)  pattern if(_, _, _)  pattern if(_, _, _)  pattern assign(variable, _) with variable.varName="while"  pattern assign(_, _) 
TRUE
5000
25 - Query 25
while while; variable variable; assign assign; if if; 
Select BOOLEAN with variable.varName=variable.varName  pattern while(_, _)  such that Modifies(assign, variable)  pattern while(_, _)  such that Uses(while, _)  pattern if(_, _, _)  pattern while(_, _)  such that Parent*(_, assign)  pattern while(_, _)  pattern if(variable, _, _) 
TRUE
5000
26 - Query 26
procedure procedure; while while; variable variable; if if; 
Select BOOLEAN  pattern if(variable, _, _)  pattern while(_, _)  pattern while(variable, _)  pattern if(_, _, _) with "while"=variable.varName  pattern while(variable, _)  such that Modifies(procedure, _)  pattern while(_, _)  pattern while(_, _)  pattern while(_, _) 
TRUE
5000
27 - Query 27
procedure procedure; call call; variable variable; if if; 
Select BOOLEAN  such that Calls*(_, procedure) with "while"=variable.varName  pattern if(variable, _, _)  such that Modifies(call, "then") with "then"=procedure.procName  pattern if(variable, _, _)  such that Calls(_, procedure)  such that Uses(call, _)  pattern if(variable, _, _)  pattern if(_, _, _) 
TRUE
5000
28 - Query 28
while while; call call; variable variable; if if; 
Select BOOLEAN  such that Parent(if, _)  pattern while(_, _)  pattern if(_, _, _)  pattern if(_, _, _)  pattern while(_, _)  such that Follows(_, call)  such that Uses(if, _)  pattern if(variable, _, _)  such that Uses(if, "if")  pattern if(variable, _, _) 
TRUE
5000
29 - Query 29
while while; assign assign; variable variable; if if; 
Select BOOLEAN  pattern while(variable, _)  pattern if(_, _, _) with 3=assign.stmt#  pattern while(_, _)  pattern assign(_, _)  pattern if(_, _, _)  pattern if(_, _, _)  pattern assign(_, _)  pattern if(_, _, _)  such that Follows*(_, while) 
TRUE
5000
30 - Query 30
while while; variable variable; if if; stmt stmt; 
Select BOOLEAN  such that Parent*(_, while)  pattern while(_, _)  pattern while(variable, _)  pattern while(variable, _)  such that Affects(stmt, _)  pattern while(variable, _)  pattern while(_, _)  pattern if(_, _, _) with stmt.stmt#=stmt.stmt#  pattern while(_, _) 
TRUE
5000
31 - Query 31
while while; variable variable; assign assign; if if; 
Select BOOLEAN with variable.varName="while"  pattern if(variable, _, _)  such that Uses(153, variable)  such that Next(_, assign)  pattern while(variable, _)  such that Modifies(while, "else")  pattern assign(_, _)  pattern if(_, _, _)  pattern if(_, _, _)  pattern assign(_, _) 
TRUE
5000
32 - Query 32
procedure procedure; while while; variable variable; if if; 
Select BOOLEAN  pattern if(_, _, _)  pattern while(_, _)  pattern if(variable, _, _) with "while"=procedure.procName  pattern while(variable, _)  pattern if(_, _, _)  pattern if(variable, _, _)  pattern while(variable, _)  such that Calls*(procedure, "then") with procedure.procName=variable.varName 
TRUE
5000
33 - Query 33
while while; variable variable; assign assign; if if; 
Select BOOLEAN  pattern if(variable, _, _)  such that Parent(while, assign)  such that Modifies(105, variable)  pattern while(_, _)  pattern assign(_, _)  pattern if(_, _, _)  pattern while(_, _)  such that Affects*(assign, _)  such that Follows*(if, 113)  pattern if(_, _, _) 
TRUE
5000
34 - Query 34
procedure procedure; while while; variable variable; if if; 
Select BOOLEAN  pattern if(_, _, _)  such that Uses(260, variable) with "then"=variable.varName  pattern if(_, _, _)  such that Calls(_, procedure) with procedure.procName=variable.varName  pattern while(variable, _)  pattern while(variable, _)  pattern while(_, _)  such that Calls*(procedure, _) 
TRUE
5000
35 - Query 35
while while; variable variable; if if; stmt stmt; 
Select BOOLEAN  pattern while(_, _)  pattern while(variable, _)  pattern if(_, _, _)  pattern if(_, _, _)  pattern while(_, _)  pattern while(variable, _)  pattern while(variable, _) with 4=stmt.stmt#  such that Modifies(while, variable)  pattern while(_, _) 
TRUE
5000
36 - Query 36
variable variable; while while; assign assign; stmt stmt; 
Select BOOLEAN  pattern assign(variable, _)  pattern while(variable, _)  pattern assign(_, _)  pattern while(_, _)  pattern while(variable, _)  pattern while(_, _)  pattern while(_, _) with 2=assign.stmt#  pattern while(_, _) with stmt.stmt#=3 
TRUE
5000
37 - Query 37
while while; read read; variable variable; if if; 
Select BOOLEAN  pattern while(variable, _)  pattern if(variable, _, _)  such that Next*(if, 239)  pattern while(_, _)  such that Uses(while, _)  pattern while(variable, _)  pattern while(_, _)  pattern while(variable, _)  such that Next*(16, read)  such that Modifies(40, variable) 
TRUE
5000
38 - Query 38
while while; assign assign; variable variable; if if; 
Select <assign, while>  pattern assign(_, _)  pattern while(_, _)  such that Parent*(_, while)  pattern if(_, _, _)  pattern assign(_, _)  such that Modifies(222, variable)  such that Uses(if, _)  pattern assign(_, _)  pattern while(_, _)  pattern if(_, _, _) 
40 190,31 190,100 190,1 190,102 190,3 190,103 190,2 190,54 190,55 190,138 190,6 190,210 190,9 190,265 190,10 190,276 190,87 190,229 190,14 190,17 190,250 190,32 190,254 190,36 190,113 190,237 190,20 190,24 190,118 190,230 190,241 190,27 190,29 190,291 190,273 190,35 190,172 190,39 190,49 190,53 190,58 190,62 190,71 190,247 190,72 190,231 190,75 190,243 190,76 190,177 190,80 190,223 190,270 190,81 190,221 190,272 190,83 190,277 190,86 190,279 190,88 190,191 190,92 190,112 190,117 190,146 190,119 190,187 190,121 190,122 190,152 190,123 190,151 190,136 190,258 190,141 190,142 190,256 190,149 190,181 190,156 190,158 190,195 190,164 190,286 190,170 190,282 190,174 190,288 190,180 190,189 190,192 190,193 190,198 190,202 190,207 190,252 190,239 190,248 190,251 190,40 154,31 154,100 154,1 154,102 154,3 154,103 154,2 154,54 154,55 154,138 154,6 154,210 154,9 154,265 154,10 154,276 154,87 154,229 154,14 154,17 154,250 154,32 154,254 154,36 154,113 154,237 154,20 154,24 154,118 154,230 154,241 154,27 154,29 154,291 154,273 154,35 154,172 154,39 154,49 154,53 154,58 154,62 154,71 154,247 154,72 154,231 154,75 154,243 154,76 154,177 154,80 154,223 154,270 154,81 154,221 154,272 154,83 154,277 154,86 154,279 154,88 154,191 154,92 154,112 154,117 154,146 154,119 154,187 154,121 154,122 154,152 154,123 154,151 154,136 154,258 154,141 154,142 154,256 154,149 154,181 154,156 154,158 154,195 154,164 154,286 154,170 154,282 154,174 154,288 154,180 154,189 154,192 154,193 154,198 154,202 154,207 154,252 154,239 154,248 154,251 154,40 211,31 211,100 211,1 211,102 211,3 211,103 211,2 211,54 211,55 211,138 211,6 211,210 211,9 211,265 211,10 211,276 211,87 211,229 211,14 211,17 211,250 211,32 211,254 211,36 211,113 211,237 211,20 211,24 211,118 211,230 211,241 211,27 211,29 211,291 211,273 211,35 211,172 211,39 211,49 211,53 211,58 211,62 211,71 211,247 211,72 211,231 211,75 211,243 211,76 211,177 211,80 211,223 211,270 211,81 211,221 211,272 211,83 211,277 211,86 211,279 211,88 211,191 211,92 211,112 211,117 211,146 211,119 211,187 211,121 211,122 211,152 211,123 211,151 211,136 211,258 211,141 211,142 211,256 211,149 211,181 211,156 211,158 211,195 211,164 211,286 211,170 211,282 211,174 211,288 211,180 211,189 211,192 211,193 211,198 211,202 211,207 211,252 211,239 211,248 211,251 211,40 145,31 145,100 145,1 145,102 145,3 145,103 145,2 145,54 145,55 145,138 145,6 145,210 145,9 145,265 145,10 145,276 145,87 145,229 145,14 145,17 145,250 145,32 145,254 145,36 145,113 145,237 145,20 145,24 145,118 145,230 145,241 145,27 145,29 145,291 145,273 145,35 145,172 145,39 145,49 145,53 145,58 145,62 145,71 145,247 145,72 145,231 145,75 145,243 145,76 145,177 145,80 145,223 145,270 145,81 145,221 145,272 145,83 145,277 145,86 145,279 145,88 145,191 145,92 145,112 145,117 145,146 145,119 145,187 145,121 145,122 145,152 145,123 145,151 145,136 145,258 145,141 145,142 145,256 145,149 145,181 145,156 145,158 145,195 145,164 145,286 145,170 145,282 145,174 145,288 145,180 145,189 145,192 145,193 145,198 145,202 145,207 145,252 145,239 145,248 145,251 145,40 28,31 28,100 28,1 28,102 28,3 28,103 28,2 28,54 28,55 28,138 28,6 28,210 28,9 28,265 28,10 28,276 28,87 28,229 28,14 28,17 28,250 28,32 28,254 28,36 28,113 28,237 28,20 28,24 28,118 28,230 28,241 28,27 28,29 28,291 28,273 28,35 28,172 28,39 28,49 28,53 28,58 28,62 28,71 28,247 28,72 28,231 28,75 28,243 28,76 28,177 28,80 28,223 28,270 28,81 28,221 28,272 28,83 28,277 28,86 28,279 28,88 28,191 28,92 28,112 28,117 28,146 28,119 28,187 28,121 28,122 28,152 28,123 28,151 28,136 28,258 28,141 28,142 28,256 28,149 28,181 28,156 28,158 28,195 28,164 28,286 28,170 28,282 28,174 28,288 28,180 28,189 28,192 28,193 28,198 28,202 28,207 28,252 28,239 28,248 28,251 28,40 73,31 73,100 73,1 73,102 73,3 73,103 73,2 73,54 73,55 73,138 73,6 73,210 73,9 73,265 73,10 73,276 73,87 73,229 73,14 73,17 73,250 73,32 73,254 73,36 73,113 73,237 73,20 73,24 73,118 73,230 73,241 73,27 73,29 73,291 73,273 73,35 73,172 73,39 73,49 73,53 73,58 73,62 73,71 73,247 73,72 73,231 73,75 73,243 73,76 73,177 73,80 73,223 73,270 73,81 73,221 73,272 73,83 73,277 73,86 73,279 73,88 73,191 73,92 73,112 73,117 73,146 73,119 73,187 73,121 73,122 73,152 73,123 73,151 73,136 73,258 73,141 73,142 73,256 73,149 73,181 73,156 73,158 73,195 73,164 73,286 73,170 73,282 73,174 73,288 73,180 73,189 73,192 73,193 73,198 73,202 73,207 73,252 73,239 73,248 73,251 73,40 74,31 74,100 74,1 74,102 74,3 74,103 74,2 74,54 74,55 74,138 74,6 74,210 74,9 74,265 74,10 74,276 74,87 74,229 74,14 74,17 74,250 74,32 74,254 74,36 74,113 74,237 74,20 74,24 74,118 74,230 74,241 74,27 74,29 74,291 74,273 74,35 74,172 74,39 74,49 74,53 74,58 74,62 74,71 74,247 74,72 74,231 74,75 74,243 74,76 74,177 74,80 74,223 74,270 74,81 74,221 74,272 74,83 74,277 74,86 74,279 74,88 74,191 74,92 74,112 74,117 74,146 74,119 74,187 74,121 74,122 74,152 74,123 74,151 74,136 74,258 74,141 74,142 74,256 74,149 74,181 74,156 74,158 74,195 74,164 74,286 74,170 74,282 74,174 74,288 74,180 74,189 74,192 74,193 74,198 74,202 74,207 74,252 74,239 74,248 74,251 74,40 271,31 271,100 271,1 271,102 271,3 271,103 271,2 271,54 271,55 271,138 271,6 271,210 271,9 271,265 271,10 271,276 271,87 271,229 271,14 271,17 271,250 271,32 271,254 271,36 271,113 271,237 271,20 271,24 271,118 271,230 271,241 271,27 271,29 271,291 271,273 271,35 271,172 271,39 271,49 271,53 271,58 271,62 271,71 271,247 271,72 271,231 271,75 271,243 271,76 271,177 271,80 271,223 271,270 271,81 271,221 271,272 271,83 271,277 271,86 271,279 271,88 271,191 271,92 271,112 271,117 271,146 271,119 271,187 271,121 271,122 271,152 271,123 271,151 271,136 271,258 271,141 271,142 271,256 271,149 271,181 271,156 271,158 271,195 271,164 271,286 271,170 271,282 271,174 271,288 271,180 271,189 271,192 271,193 271,198 271,202 271,207 271,252 271,239 271,248 271,251 271,40 89,31 89,100 89,1 89,102 89,3 89,103 89,2 89,54 89,55 89,138 89,6 89,210 89,9 89,265 89,10 89,276 89,87 89,229 89,14 89,17 89,250 89,32 89,254 89,36 89,113 89,237 89,20 89,24 89,118 89,230 89,241 89,27 89,29 89,291 89,273 89,35 89,172 89,39 89,49 89,53 89,58 89,62 89,71 89,247 89,72 89,231 89,75 89,243 89,76 89,177 89,80 89,223 89,270 89,81 89,221 89,272 89,83 89,277 89,86 89,279 89,88 89,191 89,92 89,112 89,117 89,146 89,119 89,187 89,121 89,122 89,152 89,123 89,151 89,136 89,258 89,141 89,142 89,256 89,149 89,181 89,156 89,158 89,195 89,164 89,286 89,170 89,282 89,174 89,288 89,180 89,189 89,192 89,193 89,198 89,202 89,207 89,252 89,239 89,248 89,251 89,40 98,31 98,100 98,1 98,102 98,3 98,103 98,2 98,54 98,55 98,138 98,6 98,210 98,9 98,265 98,10 98,276 98,87 98,229 98,14 98,17 98,250 98,32 98,254 98,36 98,113 98,237 98,20 98,24 98,118 98,230 98,241 98,27 98,29 98,291 98,273 98,35 98,172 98,39 98,49 98,53 98,58 98,62 98,71 98,247 98,72 98,231 98,75 98,243 98,76 98,177 98,80 98,223 98,270 98,81 98,221 98,272 98,83 98,277 98,86 98,279 98,88 98,191 98,92 98,112 98,117 98,146 98,119 98,187 98,121 98,122 98,152 98,123 98,151 98,136 98,258 98,141 98,142 98,256 98,149 98,181 98,156 98,158 98,195 98,164 98,286 98,170 98,282 98,174 98,288 98,180 98,189 98,192 98,193 98,198 98,202 98,207 98,252 98,239 98,248 98,251 98,40 116,31 116,100 116,1 116,102 116,3 116,103 116,2 116,54 116,55 116,138 116,6 116,210 116,9 116,265 116,10 116,276 116,87 116,229 116,14 116,17 116,250 116,32 116,254 116,36 116,113 116,237 116,20 116,24 116,118 116,230 116,241 116,27 116,29 116,291 116,273 116,35 116,172 116,39 116,49 116,53 116,58 116,62 116,71 116,247 116,72 116,231 116,75 116,243 116,76 116,177 116,80 116,223 116,270 116,81 116,221 116,272 116,83 116,277 116,86 116,279 116,88 116,191 116,92 116,112 116,117 116,146 116,119 116,187 116,121 116,122 116,152 116,123 116,151 116,136 116,258 116,141 116,142 116,256 116,149 116,181 116,156 116,158 116,195 116,164 116,286 116,170 116,282 116,174 116,288 116,180 116,189 116,192 116,193 116,198 116,202 116,207 116,252 116,239 116,248 116,251 116,40 150,31 150,100 150,1 150,102 150,3 150,103 150,2 150,54 150,55 150,138 150,6 150,210 150,9 150,265 150,10 150,276 150,87 150,229 150,14 150,17 150,250 150,32 150,254 150,36 150,113 150,237 150,20 150,24 150,118 150,230 150,241 150,27 150,29 150,291 150,273 150,35 150,172 150,39 150,49 150,53 150,58 150,62 150,71 150,247 150,72 150,231 150,75 150,243 150,76 150,177 150,80 150,223 150,270 150,81 150,221 150,272 150,83 150,277 150,86 150,279 150,88 150,191 150,92 150,112 150,117 150,146 150,119 150,187 150,121 150,122 150,152 150,123 150,151 150,136 150,258 150,141 150,142 150,256 150,149 150,181 150,156 150,158 150,195 150,164 150,286 150,170 150,282 150,174 150,288 150,180 150,189 150,192 150,193 150,198 150,202 150,207 150,252 150,239 150,248 150,251 150,40 171,31 171,100 171,1 171,102 171,3 171,103 171,2 171,54 171,55 171,138 171,6 171,210 171,9 171,265 171,10 171,276 171,87 171,229 171,14 171,17 171,250 171,32 171,254 171,36 171,113 171,237 171,20 171,24 171,118 171,230 171,241 171,27 171,29 171,291 171,273 171,35 171,172 171,39 171,49 171,53 171,58 171,62 171,71 171,247 171,72 171,231 171,75 171,243 171,76 171,177 171,80 171,223 171,270 171,81 171,221 171,272 171,83 171,277 171,86 171,279 171,88 171,191 171,92 171,112 171,117 171,146 171,119 171,187 171,121 171,122 171,152 171,123 171,151 171,136 171,258 171,141 171,142 171,256 171,149 171,181 171,156 171,158 171,195 171,164 171,286 171,170 171,282 171,174 171,288 171,180 171,189 171,192 171,193 171,198 171,202 171,207 171,252 171,239 171,248 171,251 171,40 205,31 205,100 205,1 205,102 205,3 205,103 205,2 205,54 205,55 205,138 205,6 205,210 205,9 205,265 205,10 205,276 205,87 205,229 205,14 205,17 205,250 205,32 205,254 205,36 205,113 205,237 205,20 205,24 205,118 205,230 205,241 205,27 205,29 205,291 205,273 205,35 205,172 205,39 205,49 205,53 205,58 205,62 205,71 205,247 205,72 205,231 205,75 205,243 205,76 205,177 205,80 205,223 205,270 205,81 205,221 205,272 205,83 205,277 205,86 205,279 205,88 205,191 205,92 205,112 205,117 205,146 205,119 205,187 205,121 205,122 205,152 205,123 205,151 205,136 205,258 205,141 205,142 205,256 205,149 205,181 205,156 205,158 205,195 205,164 205,286 205,170 205,282 205,174 205,288 205,180 205,189 205,192 205,193 205,198 205,202 205,207 205,252 205,239 205,248 205,251 205,40 234,31 234,100 234,1 234,102 234,3 234,103 234,2 234,54 234,55 234,138 234,6 234,210 234,9 234,265 234,10 234,276 234,87 234,229 234,14 234,17 234,250 234,32 234,254 234,36 234,113 234,237 234,20 234,24 234,118 234,230 234,241 234,27 234,29 234,291 234,273 234,35 234,172 234,39 234,49 234,53 234,58 234,62 234,71 234,247 234,72 234,231 234,75 234,243 234,76 234,177 234,80 234,223 234,270 234,81 234,221 234,272 234,83 234,277 234,86 234,279 234,88 234,191 234,92 234,112 234,117 234,146 234,119 234,187 234,121 234,122 234,152 234,123 234,151 234,136 234,258 234,141 234,142 234,256 234,149 234,181 234,156 234,158 234,195 234,164 234,286 234,170 234,282 234,174 234,288 234,180 234,189 234,192 234,193 234,198 234,202 234,207 234,252 234,239 234,248 234,251 234
5000
39 - Query 39
while while; print print; variable variable; if if; 
Select <print, while>  pattern if(_, _, _)  pattern while(_, _)  such that Parent*(while, _)  pattern if(variable, _, _)  such that Next(print, _)  pattern if(_, _, _)  pattern if(_, _, _)  pattern while(_, _) with variable.varName="then" with print.varName="else" 
11 154,33 154,110 154,57 154,255 154,37 154,179 154,283 154,175 154,290 154,120 154,70 154,56 154,206 154,183 154,262 154,11 145,33 145,110 145,57 145,255 145,37 145,179 145,283 145,175 145,290 145,120 145,70 145,56 145,206 145,183 145,262 145,11 28,33 28,110 28,57 28,255 28,37 28,179 28,283 28,175 28,290 28,120 28,70 28,56 28,206 28,183 28,262 28,11 73,33 73,110 73,57 73,255 73,37 73,179 73,283 73,175 73,290 73,120 73,70 73,56 73,206 73,183 73,262 73,11 74,33 74,110 74,57 74,255 74,37 74,179 74,283 74,175 74,290 74,120 74,70 74,56 74,206 74,183 74,262 74,11 271,33 271,110 271,57 271,255 271,37 271,179 271,283 271,175 271,290 271,120 271,70 271,56 271,206 271,183 271,262 271,11 89,33 89,110 89,57 89,255 89,37 89,179 89,283 89,175 89,290 89,120 89,70 89,56 89,206 89,183 89,262 89,11 98,33 98,110 98,57 98,255 98,37 98,179 98,283 98,175 98,290 98,120 98,70 98,56 98,206 98,183 98,262 98,11 116,33 116,110 116,57 116,255 116,37 116,179 116,283 116,175 116,290 116,120 116,70 116,56 116,206 116,183 116,262 116,11 129,33 129,110 129,57 129,255 129,37 129,179 129,283 129,175 129,290 129,120 129,70 129,56 129,206 129,183 129,262 129,11 134,33 134,110 134,57 134,255 134,37 134,179 134,283 134,175 134,290 134,120 134,70 134,56 134,206 134,183 134,262 134,11 150,33 150,110 150,57 150,255 150,37 150,179 150,283 150,175 150,290 150,120 150,70 150,56 150,206 150,183 150,262 150,11 211,33 211,110 211,57 211,255 211,37 211,179 211,283 211,175 211,290 211,120 211,70 211,56 211,206 211,183 211,262 211,11 171,33 171,110 171,57 171,255 171,37 171,179 171,283 171,175 171,290 171,120 171,70 171,56 171,206 171,183 171,262 171,11 190,33 190,110 190,57 190,255 190,37 190,179 190,283 190,175 190,290 190,120 190,70 190,56 190,206 190,183 190,262 190,11 205,33 205,110 205,57 205,255 205,37 205,179 205,283 205,175 205,290 205,120 205,70 205,56 205,206 205,183 205,262 205,11 234,33 234,110 234,57 234,255 234,37 234,179 234,283 234,175 234,290 234,120 234,70 234,56 234,206 234,183 234,262 234
5000
40 - Query 40
procedure procedure; while while; variable variable; if if; 
Select <while, variable>  such that Modifies(if, variable)  pattern if(variable, _, _) with variable.varName="if"  such that Uses(if, _)  such that Calls*(procedure, "else")  pattern while(variable, _)  such that Next*(if, _)  pattern if(variable, _, _) with variable.varName=variable.varName  such that Calls*(_, procedure) 
145 if,28 if,205 if,74 if,98 if
5000
41 - Query 41
while while; variable variable; print print; if if; 
Select <while, while>  pattern if(_, _, _)  pattern if(_, _, _)  pattern while(_, _)  such that Uses(289, variable)  pattern while(variable, _)  pattern while(variable, _)  pattern while(variable, _)  pattern while(variable, _)  pattern if(variable, _, _) with print.varName="if" 
150 150,211 211,271 271,28 28,205 205,74 74,98 98,145 145,89 89,129 129,190 190,134 134,171 171,154 154,116 116,73 73,234 234
5000
42 - Query 42
while while; variable variable; procedure procedure; if if; 
Select <if, procedure>  pattern if(_, _, _)  pattern if(variable, _, _) with "then"=variable.varName  pattern while(variable, _)  pattern while(variable, _)  such that Uses(98, variable)  pattern if(_, _, _)  pattern while(variable, _) with procedure.procName="else"  pattern if(_, _, _) 
104 else,43 else,289 else,48 else,222 else,140 else,249 else
5000
43 - Query 43
read read; assign assign; variable variable; if if; 
Select <if, assign>  such that Next(assign, read)  pattern if(variable, _, _)  such that Next*(142, if)  pattern if(variable, _, _)  pattern if(_, _, _) with variable.varName=variable.varName  such that Parent(if, _)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern if(variable, _, _) 
140 256,140 3,140 273,140 138,140 17,140 76,140 32,140 100,140 83,140 142,140 146,140 286,140 149,140 207,140 279,165 256,165 3,165 273,165 138,165 17,165 76,165 32,165 100,165 83,165 142,165 146,165 286,165 149,165 207,165 279,143 256,143 3,143 273,143 138,143 17,143 76,143 32,143 100,143 83,143 142,143 146,143 286,143 149,143 207,143 279,178 256,178 3,178 273,178 138,178 17,178 76,178 32,178 100,178 83,178 142,178 146,178 286,178 149,178 207,178 279
5000
44 - Query 44
while while; variable variable; if if; 
Select <if, while>  pattern if(variable, _, _)  pattern while(variable, _)  pattern if(_, _, _)  pattern while(variable, _)  pattern if(_, _, _)  pattern if(_, _, _) with "if"=variable.varName  pattern while(_, _)  pattern if(_, _, _)  pattern while(_, _) 
289 98,26 145,26 28,26 205,26 74,26 98,67 145,67 28,67 205,67 74,266 205,67 98,91 98,266 145,266 28,266 74,289 74,266 98,46 145,46 28,46 205,46 74,46 98,143 98,59 145,59 28,59 205,59 74,59 98,143 145,143 28,143 205,143 74,91 145,91 28,91 205,91 74,289 145,289 28,289 205
5000
45 - Query 45
while while; read read; variable variable; if if; 
Select <variable, if>  pattern if(variable, _, _)  pattern if(_, _, _)  pattern if(variable, _, _)  pattern while(variable, _)  pattern if(_, _, _)  pattern if(_, _, _)  pattern while(variable, _)  such that Follows(read, _)  pattern if(variable, _, _)  pattern if(variable, _, _) 
while 48,while 30,while 42,while 43,while 140,while 143,else 42,while 178,while 203,while 212,while 249,while 289,if 26,if 67,if 266,if 46,if 59,if 143,if 91,if 289,then 43,then 289,then 48,then 222,then 104,then 140,then 249,else 67,else 26,else 38,else 104,else 59,else 93,else 91,else 165,else 222
5000
46 - Query 46
while while; assign assign; variable variable; if if; 
Select <while, if>  pattern while(variable, _)  such that Next*(226, while)  pattern if(variable, _, _)  such that Next(while, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern while(variable, _)  pattern if(_, _, _)  such that Uses(assign, _)  such that Parent(_, while) 
234 104,234 67,234 26,234 38,234 42,234 222,234 59,234 93,234 91,234 165
5000
47 - Query 47
while while; variable variable; if if; stmt stmt; 
Select <if, if>  such that Parent*(if, _)  such that Uses(stmt, variable)  pattern if(_, _, _)  pattern while(variable, _)  pattern if(variable, _, _)  such that Next(if, stmt)  pattern while(variable, _)  pattern while(variable, _)  such that Affects*(_, stmt)  pattern while(variable, _) 
222 222
5000
48 - Query 48
while while; variable variable; assign assign; if if; 
Select <variable, variable>  such that Parent*(_, if)  pattern if(_, _, _)  pattern if(_, _, _)  pattern while(variable, _)  pattern while(variable, _)  pattern assign(variable, _) with assign.stmt#=2  such that Next(_, assign)  such that Modifies(while, _)  pattern while(_, _) 
if if
5000
49 - Query 49
while while; variable variable; assign assign; if if; 
Select <if, variable>  pattern assign(variable, _)  pattern if(_, _, _)  pattern while(variable, _)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern if(variable, _, _)  pattern while(variable, _)  pattern assign(variable, _)  pattern assign(_, _)  pattern while(variable, _) 
48 while,30 while,42 while,43 while,140 while,143 while,178 while,203 while,212 while,249 while,289 while,26 if,67 if,266 if,46 if,59 if,143 if,91 if,289 if,43 then,289 then,48 then,222 then,104 then,140 then,249 then,67 else,26 else,38 else,104 else,42 else,59 else,93 else,91 else,165 else,222 else
5000
50 - Query 50
while while; assign assign; variable variable; if if; 
Select <assign, if>  pattern while(_, _)  pattern if(_, _, _)  such that Parent(_, if)  pattern if(variable, _, _)  such that Affects*(assign, _)  such that Modifies(if, variable)  pattern if(_, _, _)  such that Modifies(72, variable)  pattern if(_, _, _)  pattern while(_, _) 
276 30,87 30,35 30,170 30,149 30,24 30,100 30,36 30,62 30,237 30,282 30,174 30,112 30,55 30,265 30,193 30,86 30,113 30,117 30,122 30,141 30,164 30,177 30,202 30,276 178,87 178,35 178,170 178,149 178,24 178,100 178,36 178,62 178,237 178,282 178,174 178,112 178,55 178,265 178,193 178,86 178,113 178,117 178,122 178,141 178,164 178,177 178,202 178,276 42,87 42,35 42,170 42,149 42,24 42,100 42,36 42,62 42,237 42,282 42,174 42,112 42,55 42,265 42,193 42,86 42,113 42,117 42,122 42,141 42,164 42,177 42,202 42,276 140,87 140,35 140,170 140,149 140,24 140,100 140,36 140,62 140,237 140,282 140,174 140,112 140,55 140,265 140,193 140,86 140,113 140,117 140,122 140,141 140,164 140,177 140,202 140,276 43,87 43,35 43,170 43,149 43,24 43,100 43,36 43,62 43,237 43,282 43,174 43,112 43,55 43,265 43,193 43,86 43,113 43,117 43,122 43,141 43,164 43,177 43,202 43,276 143,87 143,35 143,170 143,149 143,24 143,100 143,36 143,62 143,237 143,282 143,174 143,112 143,55 143,265 143,193 143,86 143,113 143,117 143,122 143,141 143,164 143,177 143,202 143,276 48,87 48,35 48,170 48,149 48,24 48,100 48,36 48,62 48,237 48,282 48,174 48,112 48,55 48,265 48,193 48,86 48,113 48,117 48,122 48,141 48,164 48,177 48,202 48,276 212,87 212,35 212,170 212,149 212,24 212,100 212,36 212,62 212,237 212,282 212,174 212,112 212,55 212,265 212,193 212,86 212,113 212,117 212,122 212,141 212,164 212,177 212,202 212
5000
51 - Query 51
while while; print print; if if; stmt stmt; 
Select <stmt, if>  pattern if(_, _, _) with while.stmt#=stmt.stmt#  pattern while(_, _)  pattern if(_, _, _) with "while"=print.varName  pattern if(_, _, _)  pattern while(_, _)  such that Parent(stmt, 206)  pattern if(_, _, _)  such that Next*(while, _) 
205 26,205 178,205 59,205 30,205 38,205 43,205 104,205 42,205 46,205 48,205 212,205 67,205 140,205 91,205 93,205 249,205 165,205 143,205 266,205 203,205 222,205 289
5000
52 - Query 52
while while; variable variable; assign assign; if if; 
Select <while, variable>  pattern while(_, _)  such that Follows*(assign, if)  pattern if(variable, _, _)  pattern if(variable, _, _)  such that Uses(if, "if")  such that Affects(assign, _)  such that Follows*(assign, _)  pattern while(variable, _)  such that Parent(_, if)  pattern if(_, _, _) 
89 else,150 while,211 while,271 while,116 else,145 else,28 else,129 else,73 else,205 else,154 else,234 else
5000
53 - Query 53
procedure procedure; print print; variable variable; if if; 
Select <procedure, procedure>  such that Follows*(_, print)  pattern if(_, _, _) with "while"=procedure.procName  pattern if(_, _, _) with "if"=variable.varName  pattern if(variable, _, _)  pattern if(_, _, _) with procedure.procName=procedure.procName with print.varName="while"  pattern if(variable, _, _) 
while while
5000
54 - Query 54
while while; variable variable; if if; 
Select <while, if>  such that Next*(25, if) with "else"=variable.varName  pattern while(variable, _)  pattern if(variable, _, _)  such that Parent(if, _)  pattern if(variable, _, _)  pattern while(_, _)  pattern if(_, _, _)  pattern if(_, _, _)  pattern while(_, _) 
73 93,234 91,116 59,28 59,205 38,129 59,89 59,73 59,205 59,154 59,205 93,234 59,145 59,116 26,28 26,129 26,89 26,129 165,89 42,73 26,205 26,145 165,154 26,234 26,145 26,205 42,116 38,28 38,129 38,73 104,89 38,73 38,154 38,116 67,73 42,234 38,145 38,73 67,116 42,28 42,129 67,129 42,154 42,234 42,145 42,28 67,234 93,89 67,205 104,205 67,154 67,234 67,145 67,154 165,116 91,28 91,129 91,89 91,73 91,205 91,154 91,145 91,116 93,28 93,129 93,234 104,89 93,205 165,154 93,145 93,116 104,28 104,129 104,89 104,154 104,145 104,116 165,28 165,89 165,73 165,234 165
5000
55 - Query 55
while while; assign assign; variable variable; if if; 
Select <if, variable>  such that Uses(if, "while")  pattern if(_, _, _)  pattern assign(_, _)  pattern if(variable, _, _)  pattern assign(_, _) with variable.varName="while"  pattern if(variable, _, _)  pattern while(variable, _) with assign.stmt#=3  pattern while(variable, _) 
30 while,203 while,42 while,143 while,43 while,178 while,48 while,140 while,212 while,249 while,289 while
5000
56 - Query 56
while while; variable variable; assign assign; if if; 
Select <if, variable>  such that Modifies(if, "else")  pattern if(_, _, _)  such that Follows*(_, if)  pattern while(_, _)  such that Uses(while, variable)  pattern assign(_, _)  pattern while(_, _)  pattern while(variable, _)  pattern assign(variable, _)  pattern while(_, _) 
38 while,38 if,38 then,38 else,249 while,249 if,249 then,249 else,266 while,266 if,266 then,266 else,203 while,203 if,203 then,203 else,26 while,26 if,26 then,26 else,30 while,30 if,30 then,30 else,42 while,42 if,42 then,42 else,91 while,91 if,91 then,91 else,46 while,46 if,46 then,46 else,165 while,165 if,165 then,165 else,48 while,48 if,48 then,48 else,59 while,59 if,59 then,59 else,67 while,67 if,67 then,67 else,93 while,93 if,93 then,93 else,104 while,104 if,104 then,104 else,140 while,140 if,140 then,140 else
5000
57 - Query 57
procedure procedure; while while; variable variable; if if; 
Select <while, if>  pattern if(variable, _, _)  pattern while(variable, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern while(variable, _)  pattern while(variable, _)  pattern while(_, _)  pattern while(_, _)  such that Calls*("if", procedure) 
150 30,234 104,89 93,211 30,89 140,271 30,234 93,89 67,150 203,116 38,211 249,211 203,74 67,271 203,150 43,150 42,211 42,271 42,150 143,211 143,271 143,211 43,134 222,205 26,271 43,150 178,129 104,211 178,28 42,271 178,150 48,211 48,28 38,271 48,150 140,211 140,73 104,89 38,150 222,271 140,116 93,150 212,73 67,116 42,211 212,190 43,205 46,271 212,150 249,205 289,271 249,150 289,74 249,211 289,271 289,98 289,28 26,190 104,74 26,98 26,145 26,98 143,28 59,74 59,98 59,145 59,205 59,28 46,89 91,74 46,98 46,145 46,28 289,98 266,74 289,154 59,145 289,134 104,28 67,98 67,145 67,205 104,205 67,28 266,116 91,171 289,74 266,205 165,98 91,145 266,205 266,28 91,74 91,145 91,205 91,28 143,74 143,145 143,116 67,73 42,205 143,28 165,74 43,89 43,145 222,190 289,129 43,134 43,171 43,74 48,190 48,234 38,89 48,129 48,145 165,134 48,171 48,129 249,74 104,89 104,150 104,171 104,129 38,190 249,116 104,89 249,134 249,154 67,171 249,74 140,190 140,154 222,129 140,28 93,134 140,171 140,154 91,74 222,190 222,154 26,89 289,89 222,129 222,171 222,129 289,134 289,116 59,205 38,129 59,89 59,73 59,205 93,234 59,116 26,129 26,89 26,89 42,73 26,234 26,73 38,154 38,145 38,28 222,129 42,205 42,154 42,234 42,145 42,129 67,234 67,129 91,73 91,73 93,234 91,129 93,154 93,145 93,28 104,154 104,145 104,116 165,129 165,89 165,73 165,154 165,234 165,116 222,73 222,205 222,234 222
5000
58 - Query 58
while while; variable variable; if if; stmt stmt; 
Select <if, if>  pattern if(_, _, _)  pattern while(_, _)  pattern while(_, _)  such that Next(stmt, 196)  such that Parent(while, _)  pattern if(variable, _, _)  pattern while(_, _)  pattern while(variable, _)  pattern while(_, _)  pattern if(_, _, _) 
30 30,203 203,42 42,143 143,43 43,178 178,48 48,140 140,212 212,249 249,289 289,26 26,59 59,46 46,67 67,266 266,91 91,104 104,222 222,38 38,93 93,165 165
5000
59 - Query 59
while while; variable variable; procedure procedure; if if; 
Select <if, procedure>  pattern while(_, _)  pattern while(variable, _)  pattern while(variable, _)  pattern if(variable, _, _)  pattern while(_, _)  pattern while(_, _)  pattern while(variable, _)  pattern if(variable, _, _)  such that Calls*("if", procedure)  such that Calls(_, procedure) 
30 else,203 else,42 else,143 else,43 else,178 else,48 else,140 else,212 else,249 else,289 else,26 else,59 else,46 else,67 else,266 else,91 else,104 else,222 else,38 else,93 else,165 else,30 then,203 then,42 then,143 then,43 then,178 then,48 then,140 then,212 then,249 then,289 then,26 then,59 then,46 then,67 then,266 then,91 then,104 then,222 then,38 then,93 then,165 then
5000
60 - Query 60
while while; print print; variable variable; if if; 
Select <while, variable> with variable.varName=variable.varName  pattern while(_, _)  pattern if(_, _, _)  pattern if(_, _, _)  such that Modifies(129, variable)  pattern if(_, _, _) with while.stmt#=while.stmt#  pattern if(variable, _, _) with "while"=print.varName with print.varName=variable.varName 
190 while,145 while,28 while,205 while,89 while,73 while,271 while,234 while,74 while,98 while,116 while,129 while,134 while,150 while,154 while,171 while,211 while
5000
61 - Query 61
print print; assign assign; variable variable; if if; 
Select <print, assign>  such that Affects(_, assign)  such that Parent(_, assign)  pattern if(_, _, _)  pattern if(variable, _, _)  such that Uses(assign, variable)  such that Modifies(105, variable)  pattern assign(_, _)  pattern assign(_, _)  such that Next*(print, 137)  such that Affects(_, assign) 
137 31,137 32,137 36,137 39,137 40,137 58,137 76,137 180,137 88,137 181,137 102,137 113,137 117,137 118,137 119,137 276,137 177,137 223,137 277,94 31,94 32,94 36,94 39,94 40,94 58,94 76,94 180,94 88,94 181,94 102,94 113,94 117,94 118,94 119,94 276,94 177,94 223,94 277,25 31,25 32,25 36,25 39,25 40,25 58,25 76,25 180,25 88,25 181,25 102,25 113,25 117,25 118,25 119,25 276,25 177,25 223,25 277,132 31,132 32,132 36,132 39,132 40,132 58,132 76,132 180,132 88,132 181,132 102,132 113,132 117,132 118,132 119,132 276,132 177,132 223,132 277,161 31,161 32,161 36,161 39,161 40,161 58,161 76,161 180,161 88,161 181,161 102,161 113,161 117,161 118,161 119,161 276,161 177,161 223,161 277,126 31,126 32,126 36,126 39,126 40,126 58,126 76,126 180,126 88,126 181,126 102,126 113,126 117,126 118,126 119,126 276,126 177,126 223,126 277,157 31,157 32,157 36,157 39,157 40,157 58,157 76,157 180,157 88,157 181,157 102,157 113,157 117,157 118,157 119,157 276,157 177,157 223,157 277,166 31,166 32,166 36,166 39,166 40,166 58,166 76,166 180,166 88,166 181,166 102,166 113,166 117,166 118,166 119,166 276,166 177,166 223,166 277,179 31,179 32,179 36,179 39,179 40,179 58,179 76,179 180,179 88,179 181,179 102,179 113,179 117,179 118,179 119,179 276,179 177,179 223,179 277,194 31,194 32,194 36,194 39,194 40,194 58,194 76,194 180,194 88,194 181,194 102,194 113,194 117,194 118,194 119,194 276,194 177,194 223,194 277,175 31,175 32,175 36,175 39,175 40,175 58,175 76,175 180,175 88,175 181,175 102,175 113,175 117,175 118,175 119,175 276,175 177,175 223,175 277,167 31,167 32,167 36,167 39,167 40,167 58,167 76,167 180,167 88,167 181,167 102,167 113,167 117,167 118,167 119,167 276,167 177,167 223,167 277,66 31,66 32,66 36,66 39,66 40,66 58,66 76,66 180,66 88,66 181,66 102,66 113,66 117,66 118,66 119,66 276,66 177,66 223,66 277,125 31,125 32,125 36,125 39,125 40,125 58,125 76,125 180,125 88,125 181,125 102,125 113,125 117,125 118,125 119,125 276,125 177,125 223,125 277,183 31,183 32,183 36,183 39,183 40,183 58,183 76,183 180,183 88,183 181,183 102,183 113,183 117,183 118,183 119,183 276,183 177,183 223,183 277,182 31,182 32,182 36,182 39,182 40,182 58,182 76,182 180,182 88,182 181,182 102,182 113,182 117,182 118,182 119,182 276,182 177,182 223,182 277,185 31,185 32,185 36,185 39,185 40,185 58,185 76,185 180,185 88,185 181,185 102,185 113,185 117,185 118,185 119,185 276,185 177,185 223,185 277,106 31,106 32,106 36,106 39,106 40,106 58,106 76,106 180,106 88,106 181,106 102,106 113,106 117,106 118,106 119,106 276,106 177,106 223,106 277,41 31,41 32,41 36,41 39,41 40,41 58,41 76,41 180,41 88,41 181,41 102,41 113,41 117,41 118,41 119,41 276,41 177,41 223,41 277,37 31,37 32,37 36,37 39,37 40,37 58,37 76,37 180,37 88,37 181,37 102,37 113,37 117,37 118,37 119,37 276,37 177,37 223,37 277,120 31,120 32,120 36,120 39,120 40,120 58,120 76,120 180,120 88,120 181,120 102,120 113,120 117,120 118,120 119,120 276,120 177,120 223,120 277,97 31,97 32,97 36,97 39,97 40,97 58,97 76,97 180,97 88,97 181,97 102,97 113,97 117,97 118,97 119,97 276,97 177,97 223,97 277,114 31,114 32,114 36,114 39,114 40,114 58,114 76,114 180,114 88,114 181,114 102,114 113,114 117,114 118,114 119,114 276,114 177,114 223,114 277,70 31,70 32,70 36,70 39,70 40,70 58,70 76,70 180,70 88,70 181,70 102,70 113,70 117,70 118,70 119,70 276,70 177,70 223,70 277,23 31,23 32,23 36,23 39,23 40,23 58,23 76,23 180,23 88,23 181,23 102,23 113,23 117,23 118,23 119,23 276,23 177,23 223,23 277,33 31,33 32,33 36,33 39,33 40,33 58,33 76,33 180,33 88,33 181,33 102,33 113,33 117,33 118,33 119,33 276,33 177,33 223,33 277,110 31,110 32,110 36,110 39,110 40,110 58,110 76,110 180,110 88,110 181,110 102,110 113,110 117,110 118,110 119,110 276,110 177,110 223,110 277,22 31,22 32,22 36,22 39,22 40,22 58,22 76,22 180,22 88,22 181,22 102,22 113,22 117,22 118,22 119,22 276,22 177,22 223,22 277,107 31,107 32,107 36,107 39,107 40,107 58,107 76,107 180,107 88,107 181,107 102,107 113,107 117,107 118,107 119,107 276,107 177,107 223,107 277,82 31,82 32,82 36,82 39,82 40,82 58,82 76,82 180,82 88,82 181,82 102,82 113,82 117,82 118,82 119,82 276,82 177,82 223,82 277,44 31,44 32,44 36,44 39,44 40,44 58,44 76,44 180,44 88,44 181,44 102,44 113,44 117,44 118,44 119,44 276,44 177,44 223,44 277,61 31,61 32,61 36,61 39,61 40,61 58,61 76,61 180,61 88,61 181,61 102,61 113,61 117,61 118,61 119,61 276,61 177,61 223,61 277,56 31,56 32,56 36,56 39,56 40,56 58,56 76,56 180,56 88,56 181,56 102,56 113,56 117,56 118,56 119,56 276,56 177,56 223,56 277,51 31,51 32,51 36,51 39,51 40,51 58,51 76,51 180,51 88,51 181,51 102,51 113,51 117,51 118,51 119,51 276,51 177,51 223,51 277,57 31,57 32,57 36,57 39,57 40,57 58,57 76,57 180,57 88,57 181,57 102,57 113,57 117,57 118,57 119,57 276,57 177,57 223,57 277,78 31,78 32,78 36,78 39,78 40,78 58,78 76,78 180,78 88,78 181,78 102,78 113,78 117,78 118,78 119,78 276,78 177,78 223,78 277,133 31,133 32,133 36,133 39,133 40,133 58,133 76,133 180,133 88,133 181,133 102,133 113,133 117,133 118,133 119,133 276,133 177,133 223,133 277
5000
62 - Query 62
while while; print print; variable variable; if if; 
Select <if, variable>  pattern while(_, _)  pattern if(variable, _, _)  pattern while(_, _)  pattern while(_, _) with print.varName=variable.varName  pattern while(_, _) with "while"=print.varName  pattern while(_, _)  pattern if(variable, _, _)  pattern if(variable, _, _) 
30 while,203 while,42 while,143 while,43 while,178 while,48 while,140 while,212 while,249 while,289 while
5000
63 - Query 63
while while; variable variable; assign assign; if if; 
Select <assign, if>  pattern while(_, _)  pattern while(variable, _)  pattern while(variable, _)  such that Uses(assign, _)  pattern while(_, _)  pattern if(_, _, _)  pattern if(_, _, _)  pattern if(_, _, _)  pattern while(variable, _)  pattern if(variable, _, _) 
9 30,9 203,9 42,9 143,9 43,9 178,9 48,9 140,9 212,9 249,9 289,9 26,9 59,9 46,9 67,9 266,9 91,9 104,9 222,9 38,9 93,9 165,286 30,286 203,286 42,286 143,286 43,286 178,286 48,286 140,286 212,286 249,286 289,286 26,286 59,286 46,286 67,286 266,286 91,286 104,286 222,286 38,286 93,286 165,254 30,254 203,254 42,254 143,254 43,254 178,254 48,254 140,254 212,254 249,254 289,254 26,254 59,254 46,254 67,254 266,254 91,254 104,254 222,254 38,254 93,254 165,100 30,100 203,100 42,100 143,100 43,100 178,100 48,100 140,100 212,100 249,100 289,100 26,100 59,100 46,100 67,100 266,100 91,100 104,100 222,100 38,100 93,100 165,36 30,36 203,36 42,36 143,36 43,36 178,36 48,36 140,36 212,36 249,36 289,36 26,36 59,36 46,36 67,36 266,36 91,36 104,36 222,36 38,36 93,36 165,1 30,1 203,1 42,1 143,1 43,1 178,1 48,1 140,1 212,1 249,1 289,1 26,1 59,1 46,1 67,1 266,1 91,1 104,1 222,1 38,1 93,1 165,17 30,17 203,17 42,17 143,17 43,17 178,17 48,17 140,17 212,17 249,17 289,17 26,17 59,17 46,17 67,17 266,17 91,17 104,17 222,17 38,17 93,17 165,136 30,136 203,136 42,136 143,136 43,136 178,136 48,136 140,136 212,136 249,136 289,136 26,136 59,136 46,136 67,136 266,136 91,136 104,136 222,136 38,136 93,136 165,40 30,40 203,40 42,40 143,40 43,40 178,40 48,40 140,40 212,40 249,40 289,40 26,40 59,40 46,40 67,40 266,40 91,40 104,40 222,40 38,40 93,40 165,31 30,31 203,31 42,31 143,31 43,31 178,31 48,31 140,31 212,31 249,31 289,31 26,31 59,31 46,31 67,31 266,31 91,31 104,31 222,31 38,31 93,31 165,6 30,6 203,6 42,6 143,6 43,6 178,6 48,6 140,6 212,6 249,6 289,6 26,6 59,6 46,6 67,6 266,6 91,6 104,6 222,6 38,6 93,6 165,181 30,181 203,181 42,181 143,181 43,181 178,181 48,181 140,181 212,181 249,181 289,181 26,181 59,181 46,181 67,181 266,181 91,181 104,181 222,181 38,181 93,181 165,156 30,156 203,156 42,156 143,156 43,156 178,156 48,156 140,156 212,156 249,156 289,156 26,156 59,156 46,156 67,156 266,156 91,156 104,156 222,156 38,156 93,156 165,20 30,20 203,20 42,20 143,20 43,20 178,20 48,20 140,20 212,20 249,20 289,20 26,20 59,20 46,20 67,20 266,20 91,20 104,20 222,20 38,20 93,20 165,113 30,113 203,113 42,113 143,113 43,113 178,113 48,113 140,113 212,113 249,113 289,113 26,113 59,113 46,113 67,113 266,113 91,113 104,113 222,113 38,113 93,113 165,72 30,72 203,72 42,72 143,72 43,72 178,72 48,72 140,72 212,72 249,72 289,72 26,72 59,72 46,72 67,72 266,72 91,72 104,72 222,72 38,72 93,72 165,172 30,172 203,172 42,172 143,172 43,172 178,172 48,172 140,172 212,172 249,172 289,172 26,172 59,172 46,172 67,172 266,172 91,172 104,172 222,172 38,172 93,172 165,53 30,53 203,53 42,53 143,53 43,53 178,53 48,53 140,53 212,53 249,53 289,53 26,53 59,53 46,53 67,53 266,53 91,53 104,53 222,53 38,53 93,53 165,32 30,32 203,32 42,32 143,32 43,32 178,32 48,32 140,32 212,32 249,32 289,32 26,32 59,32 46,32 67,32 266,32 91,32 104,32 222,32 38,32 93,32 165,241 30,241 203,241 42,241 143,241 43,241 178,241 48,241 140,241 212,241 249,241 289,241 26,241 59,241 46,241 67,241 266,241 91,241 104,241 222,241 38,241 93,241 165,187 30,187 203,187 42,187 143,187 43,187 178,187 48,187 140,187 212,187 249,187 289,187 26,187 59,187 46,187 67,187 266,187 91,187 104,187 222,187 38,187 93,187 165,121 30,121 203,121 42,121 143,121 43,121 178,121 48,121 140,121 212,121 249,121 289,121 26,121 59,121 46,121 67,121 266,121 91,121 104,121 222,121 38,121 93,121 165,62 30,62 203,62 42,62 143,62 43,62 178,62 48,62 140,62 212,62 249,62 289,62 26,62 59,62 46,62 67,62 266,62 91,62 104,62 222,62 38,62 93,62 165,39 30,39 203,39 42,39 143,39 43,39 178,39 48,39 140,39 212,39 249,39 289,39 26,39 59,39 46,39 67,39 266,39 91,39 104,39 222,39 38,39 93,39 165,49 30,49 203,49 42,49 143,49 43,49 178,49 48,49 140,49 212,49 249,49 289,49 26,49 59,49 46,49 67,49 266,49 91,49 104,49 222,49 38,49 93,49 165,58 30,58 203,58 42,58 143,58 43,58 178,58 48,58 140,58 212,58 249,58 289,58 26,58 59,58 46,58 67,58 266,58 91,58 104,58 222,58 38,58 93,58 165,71 30,71 203,71 42,71 143,71 43,71 178,71 48,71 140,71 212,71 249,71 289,71 26,71 59,71 46,71 67,71 266,71 91,71 104,71 222,71 38,71 93,71 165,243 30,243 203,243 42,243 143,243 43,243 178,243 48,243 140,243 212,243 249,243 289,243 26,243 59,243 46,243 67,243 266,243 91,243 104,243 222,243 38,243 93,243 165,117 30,117 203,117 42,117 143,117 43,117 178,117 48,117 140,117 212,117 249,117 289,117 26,117 59,117 46,117 67,117 266,117 91,117 104,117 222,117 38,117 93,117 165,76 30,76 203,76 42,76 143,76 43,76 178,76 48,76 140,76 212,76 249,76 289,76 26,76 59,76 46,76 67,76 266,76 91,76 104,76 222,76 38,76 93,76 165,229 30,229 203,229 42,229 143,229 43,229 178,229 48,229 140,229 212,229 249,229 289,229 26,229 59,229 46,229 67,229 266,229 91,229 104,229 222,229 38,229 93,229 165,180 30,180 203,180 42,180 143,180 43,180 178,180 48,180 140,180 212,180 249,180 289,180 26,180 59,180 46,180 67,180 266,180 91,180 104,180 222,180 38,180 93,180 165,88 30,88 203,88 42,88 143,88 43,88 178,88 48,88 140,88 212,88 249,88 289,88 26,88 59,88 46,88 67,88 266,88 91,88 104,88 222,88 38,88 93,88 165,102 30,102 203,102 42,102 143,102 43,102 178,102 48,102 140,102 212,102 249,102 289,102 26,102 59,102 46,102 67,102 266,102 91,102 104,102 222,102 38,102 93,102 165,103 30,103 203,103 42,103 143,103 43,103 178,103 48,103 140,103 212,103 249,103 289,103 26,103 59,103 46,103 67,103 266,103 91,103 104,103 222,103 38,103 93,103 165,118 30,118 203,118 42,118 143,118 43,118 178,118 48,118 140,118 212,118 249,118 289,118 26,118 59,118 46,118 67,118 266,118 91,118 104,118 222,118 38,118 93,118 165,119 30,119 203,119 42,119 143,119 43,119 178,119 48,119 140,119 212,119 249,119 289,119 26,119 59,119 46,119 67,119 266,119 91,119 104,119 222,119 38,119 93,119 165,123 30,123 203,123 42,123 143,123 43,123 178,123 48,123 140,123 212,123 249,123 289,123 26,123 59,123 46,123 67,123 266,123 91,123 104,123 222,123 38,123 93,123 165,207 30,207 203,207 42,207 143,207 43,207 178,207 48,207 140,207 212,207 249,207 289,207 26,207 59,207 46,207 67,207 266,207 91,207 104,207 222,207 38,207 93,207 165,258 30,258 203,258 42,258 143,258 43,258 178,258 48,258 140,258 212,258 249,258 289,258 26,258 59,258 46,258 67,258 266,258 91,258 104,258 222,258 38,258 93,258 165,142 30,142 203,142 42,142 143,142 43,142 178,142 48,142 140,142 212,142 249,142 289,142 26,142 59,142 46,142 67,142 266,142 91,142 104,142 222,142 38,142 93,142 165,273 30,273 203,273 42,273 143,273 43,273 178,273 48,273 140,273 212,273 249,273 289,273 26,273 59,273 46,273 67,273 266,273 91,273 104,273 222,273 38,273 93,273 165,189 30,189 203,189 42,189 143,189 43,189 178,189 48,189 140,189 212,189 249,189 289,189 26,189 59,189 46,189 67,189 266,189 91,189 104,189 222,189 38,189 93,189 165,276 30,276 203,276 42,276 143,276 43,276 178,276 48,276 140,276 212,276 249,276 289,276 26,276 59,276 46,276 67,276 266,276 91,276 104,276 222,276 38,276 93,276 165,158 30,158 203,158 42,158 143,158 43,158 178,158 48,158 140,158 212,158 249,158 289,158 26,158 59,158 46,158 67,158 266,158 91,158 104,158 222,158 38,158 93,158 165,272 30,272 203,272 42,272 143,272 43,272 178,272 48,272 140,272 212,272 249,272 289,272 26,272 59,272 46,272 67,272 266,272 91,272 104,272 222,272 38,272 93,272 165,164 30,164 203,164 42,164 143,164 43,164 178,164 48,164 140,164 212,164 249,164 289,164 26,164 59,164 46,164 67,164 266,164 91,164 104,164 222,164 38,164 93,164 165,288 30,288 203,288 42,288 143,288 43,288 178,288 48,288 140,288 212,288 249,288 289,288 26,288 59,288 46,288 67,288 266,288 91,288 104,288 222,288 38,288 93,288 165,177 30,177 203,177 42,177 143,177 43,177 178,177 48,177 140,177 212,177 249,177 289,177 26,177 59,177 46,177 67,177 266,177 91,177 104,177 222,177 38,177 93,177 165,198 30,198 203,198 42,198 143,198 43,198 178,198 48,198 140,198 212,198 249,198 289,198 26,198 59,198 46,198 67,198 266,198 91,198 104,198 222,198 38,198 93,198 165,223 30,223 203,223 42,223 143,223 43,223 178,223 48,223 140,223 212,223 249,223 289,223 26,223 59,223 46,223 67,223 266,223 91,223 104,223 222,223 38,223 93,223 165,277 30,277 203,277 42,277 143,277 43,277 178,277 48,277 140,277 212,277 249,277 289,277 26,277 59,277 46,277 67,277 266,277 91,277 104,277 222,277 38,277 93,277 165
5000
64 - Query 64
procedure procedure; while while; variable variable; if if; 
Select <procedure, variable>  pattern if(_, _, _)  pattern if(variable, _, _)  pattern while(variable, _)  pattern while(_, _)  pattern while(variable, _)  pattern if(_, _, _) with procedure.procName=procedure.procName  pattern while(variable, _)  such that Uses(143, variable)  pattern while(variable, _) 
while while,while if,while then,while else,then while,then if,then then,then else,if while,if if,if then,if else,else while,else if,else then,else else
5000
65 - Query 65
print print; while while; variable variable; if if; 
Select <variable, while>  such that Follows(print, _)  pattern while(_, _)  such that Follows(_, print)  such that Follows(_, while)  pattern if(variable, _, _)  pattern while(_, _)  pattern while(variable, _)  such that Modifies(if, "while")  pattern if(variable, _, _) with variable.varName="then" 
then 190,then 89,then 129,then 134
5000
66 - Query 66
variable variable; assign assign; if if; stmt stmt; 
Select <stmt, variable>  pattern if(variable, _, _)  pattern if(_, _, _)  pattern if(variable, _, _)  such that Follows*(stmt, assign)  pattern if(variable, _, _)  such that Follows*(if, _) with stmt.stmt#=5  pattern assign(variable, _) with "while"=variable.varName with "while"=variable.varName 
5 while
5000
67 - Query 67
while while; variable variable; if if; 
Select <if, variable> with variable.varName=variable.varName  pattern if(variable, _, _)  pattern while(variable, _)  such that Modifies(if, _)  pattern while(_, _) with variable.varName="else"  such that Uses(if, "while")  such that Follows(while, _)  pattern while(variable, _)  pattern if(variable, _, _) 
59 else,26 else,38 else,42 else,67 else,91 else,93 else,104 else,165 else,222 else
5000
68 - Query 68
while while; variable variable; constant constant; if if; 
Select <if, if>  pattern if(variable, _, _) with 1=constant.value  pattern while(_, _)  pattern if(_, _, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern while(variable, _)  pattern while(_, _)  such that Next(_, if)  pattern if(_, _, _) 
30 30,203 203,42 42,143 143,43 43,178 178,48 48,140 140,212 212,249 249,289 289,26 26,59 59,46 46,67 67,266 266,91 91,104 104,222 222,38 38,93 93,165 165
5000
69 - Query 69
while while; variable variable; if if; 
Select <if, if>  pattern if(_, _, _)  pattern while(variable, _)  pattern while(variable, _)  pattern if(_, _, _)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern while(_, _)  pattern while(variable, _)  pattern if(variable, _, _) with "while"=variable.varName 
30 30,203 203,42 42,143 143,43 43,178 178,48 48,140 140,212 212,249 249,289 289
5000
70 - Query 70
read read; variable variable; assign assign; if if; 
Select <read, if>  such that Next*(if, _)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern if(variable, _, _)  such that Parent(_, assign)  pattern if(_, _, _) with variable.varName=read.varName  pattern if(_, _, _) with "else"=variable.varName  such that Modifies(read, _) 
173 26,4 59,4 26,197 222,4 38,197 91,4 42,264 104,4 67,4 91,226 67,226 42,4 93,4 104,4 165,4 222,226 59,235 91,34 104,34 67,226 26,245 67,226 38,226 91,226 93,264 59,34 26,226 104,226 165,226 222,139 93,162 59,163 42,162 26,162 38,162 42,139 59,162 93,162 67,235 59,162 91,163 38,127 26,162 104,197 38,162 165,162 222,34 59,139 26,34 38,197 93,264 91,34 42,34 91,34 93,34 165,34 222,264 222,127 59,264 26,139 222,127 38,127 42,127 67,127 91,197 165,127 93,139 91,173 165,127 104,173 104,127 165,139 165,127 222,245 59,163 222,245 26,245 38,264 38,245 42,245 91,197 42,245 93,245 104,245 165,245 222,173 59,173 38,173 42,235 38,163 165,173 93,173 67,173 91,173 222,139 38,139 42,139 67,139 104,264 42,235 222,264 67,264 93,264 165,163 59,163 26,163 67,163 91,163 93,163 104,197 67,197 59,197 26,197 104,235 26,235 42,235 67,235 93,235 104,235 165
5000
71 - Query 71
procedure procedure; while while; variable variable; if if; 
Select <if, if>  pattern if(variable, _, _)  pattern while(_, _)  pattern if(variable, _, _)  such that Parent*(while, _)  pattern while(_, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern while(variable, _) with "if"=variable.varName with variable.varName=procedure.procName 
26 26,59 59,46 46,289 289,67 67,266 266,91 91,143 143
5000
72 - Query 72
procedure procedure; while while; variable variable; if if; 
Select <procedure, if>  pattern if(_, _, _)  pattern if(variable, _, _)  such that Modifies(223, variable)  pattern if(_, _, _)  pattern if(variable, _, _)  pattern while(_, _)  such that Calls*(_, procedure) with variable.varName=variable.varName  such that Calls(procedure, _)  pattern while(variable, _) 
then 26,then 59,then 46,then 289,then 67,then 266,then 91,then 143,if 26,if 59,if 46,if 289,if 67,if 266,if 91,if 143
5000
73 - Query 73
print print; while while; variable variable; if if; 
Select <print, if> with print.stmt#=print.stmt#  pattern while(_, _)  pattern if(variable, _, _)  pattern while(variable, _)  pattern if(_, _, _)  pattern while(variable, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern while(_, _)  pattern while(variable, _) 
185 30,185 203,185 42,185 143,185 43,185 178,185 48,185 140,185 212,185 249,185 289,185 26,185 59,185 46,185 67,185 266,185 91,185 104,185 222,185 38,185 93,185 165,57 30,57 203,57 42,57 143,57 43,57 178,57 48,57 140,57 212,57 249,57 289,57 26,57 59,57 46,57 67,57 266,57 91,57 104,57 222,57 38,57 93,57 165,209 30,209 203,209 42,209 143,209 43,209 178,209 48,209 140,209 212,209 249,209 289,209 26,209 59,209 46,209 67,209 266,209 91,209 104,209 222,209 38,209 93,209 165,70 30,70 203,70 42,70 143,70 43,70 178,70 48,70 140,70 212,70 249,70 289,70 26,70 59,70 46,70 67,70 266,70 91,70 104,70 222,70 38,70 93,70 165,23 30,23 203,23 42,23 143,23 43,23 178,23 48,23 140,23 212,23 249,23 289,23 26,23 59,23 46,23 67,23 266,23 91,23 104,23 222,23 38,23 93,23 165,106 30,106 203,106 42,106 143,106 43,106 178,106 48,106 140,106 212,106 249,106 289,106 26,106 59,106 46,106 67,106 266,106 91,106 104,106 222,106 38,106 93,106 165,41 30,41 203,41 42,41 143,41 43,41 178,41 48,41 140,41 212,41 249,41 289,41 26,41 59,41 46,41 67,41 266,41 91,41 104,41 222,41 38,41 93,41 165,7 30,7 203,7 42,7 143,7 43,7 178,7 48,7 140,7 212,7 249,7 289,7 26,7 59,7 46,7 67,7 266,7 91,7 104,7 222,7 38,7 93,7 165,268 30,268 203,268 42,268 143,268 43,268 178,268 48,268 140,268 212,268 249,268 289,268 26,268 59,268 46,268 67,268 266,268 91,268 104,268 222,268 38,268 93,268 165,51 30,51 203,51 42,51 143,51 43,51 178,51 48,51 140,51 212,51 249,51 289,51 26,51 59,51 46,51 67,51 266,51 91,51 104,51 222,51 38,51 93,51 165,261 30,261 203,261 42,261 143,261 43,261 178,261 48,261 140,261 212,261 249,261 289,261 26,261 59,261 46,261 67,261 266,261 91,261 104,261 222,261 38,261 93,261 165,166 30,166 203,166 42,166 143,166 43,166 178,166 48,166 140,166 212,166 249,166 289,166 26,166 59,166 46,166 67,166 266,166 91,166 104,166 222,166 38,166 93,166 165,179 30,179 203,179 42,179 143,179 43,179 178,179 48,179 140,179 212,179 249,179 289,179 26,179 59,179 46,179 67,179 266,179 91,179 104,179 222,179 38,179 93,179 165,11 30,11 203,11 42,11 143,11 43,11 178,11 48,11 140,11 212,11 249,11 289,11 26,11 59,11 46,11 67,11 266,11 91,11 104,11 222,11 38,11 93,11 165,133 30,133 203,133 42,133 143,133 43,133 178,133 48,133 140,133 212,133 249,133 289,133 26,133 59,133 46,133 67,133 266,133 91,133 104,133 222,133 38,133 93,133 165,12 30,12 203,12 42,12 143,12 43,12 178,12 48,12 140,12 212,12 249,12 289,12 26,12 59,12 46,12 67,12 266,12 91,12 104,12 222,12 38,12 93,12 165,244 30,244 203,244 42,244 143,244 43,244 178,244 48,244 140,244 212,244 249,244 289,244 26,244 59,244 46,244 67,244 266,244 91,244 104,244 222,244 38,244 93,244 165,110 30,110 203,110 42,110 143,110 43,110 178,110 48,110 140,110 212,110 249,110 289,110 26,110 59,110 46,110 67,110 266,110 91,110 104,110 222,110 38,110 93,110 165,22 30,22 203,22 42,22 143,22 43,22 178,22 48,22 140,22 212,22 249,22 289,22 26,22 59,22 46,22 67,22 266,22 91,22 104,22 222,22 38,22 93,22 165,132 30,132 203,132 42,132 143,132 43,132 178,132 48,132 140,132 212,132 249,132 289,132 26,132 59,132 46,132 67,132 266,132 91,132 104,132 222,132 38,132 93,132 165,161 30,161 203,161 42,161 143,161 43,161 178,161 48,161 140,161 212,161 249,161 289,161 26,161 59,161 46,161 67,161 266,161 91,161 104,161 222,161 38,161 93,161 165,240 30,240 203,240 42,240 143,240 43,240 178,240 48,240 140,240 212,240 249,240 289,240 26,240 59,240 46,240 67,240 266,240 91,240 104,240 222,240 38,240 93,240 165,114 30,114 203,114 42,114 143,114 43,114 178,114 48,114 140,114 212,114 249,114 289,114 26,114 59,114 46,114 67,114 266,114 91,114 104,114 222,114 38,114 93,114 165,97 30,97 203,97 42,97 143,97 43,97 178,97 48,97 140,97 212,97 249,97 289,97 26,97 59,97 46,97 67,97 266,97 91,97 104,97 222,97 38,97 93,97 165,33 30,33 203,33 42,33 143,33 43,33 178,33 48,33 140,33 212,33 249,33 289,33 26,33 59,33 46,33 67,33 266,33 91,33 104,33 222,33 38,33 93,33 165,232 30,232 203,232 42,232 143,232 43,232 178,232 48,232 140,232 212,232 249,232 289,232 26,232 59,232 46,232 67,232 266,232 91,232 104,232 222,232 38,232 93,232 165,94 30,94 203,94 42,94 143,94 43,94 178,94 48,94 140,94 212,94 249,94 289,94 26,94 59,94 46,94 67,94 266,94 91,94 104,94 222,94 38,94 93,94 165,25 30,25 203,25 42,25 143,25 43,25 178,25 48,25 140,25 212,25 249,25 289,25 26,25 59,25 46,25 67,25 266,25 91,25 104,25 222,25 38,25 93,25 165,183 30,183 203,183 42,183 143,183 43,183 178,183 48,183 140,183 212,183 249,183 289,183 26,183 59,183 46,183 67,183 266,183 91,183 104,183 222,183 38,183 93,183 165,66 30,66 203,66 42,66 143,66 43,66 178,66 48,66 140,66 212,66 249,66 289,66 26,66 59,66 46,66 67,66 266,66 91,66 104,66 222,66 38,66 93,66 165,125 30,125 203,125 42,125 143,125 43,125 178,125 48,125 140,125 212,125 249,125 289,125 26,125 59,125 46,125 67,125 266,125 91,125 104,125 222,125 38,125 93,125 165,61 30,61 203,61 42,61 143,61 43,61 178,61 48,61 140,61 212,61 249,61 289,61 26,61 59,61 46,61 67,61 266,61 91,61 104,61 222,61 38,61 93,61 165,137 30,137 203,137 42,137 143,137 43,137 178,137 48,137 140,137 212,137 249,137 289,137 26,137 59,137 46,137 67,137 266,137 91,137 104,137 222,137 38,137 93,137 165,263 30,263 203,263 42,263 143,263 43,263 178,263 48,263 140,263 212,263 249,263 289,263 26,263 59,263 46,263 67,263 266,263 91,263 104,263 222,263 38,263 93,263 165,120 30,120 203,120 42,120 143,120 43,120 178,120 48,120 140,120 212,120 249,120 289,120 26,120 59,120 46,120 67,120 266,120 91,120 104,120 222,120 38,120 93,120 165,56 30,56 203,56 42,56 143,56 43,56 178,56 48,56 140,56 212,56 249,56 289,56 26,56 59,56 46,56 67,56 266,56 91,56 104,56 222,56 38,56 93,56 165,255 30,255 203,255 42,255 143,255 43,255 178,255 48,255 140,255 212,255 249,255 289,255 26,255 59,255 46,255 67,255 266,255 91,255 104,255 222,255 38,255 93,255 165,219 30,219 203,219 42,219 143,219 43,219 178,219 48,219 140,219 212,219 249,219 289,219 26,219 59,219 46,219 67,219 266,219 91,219 104,219 222,219 38,219 93,219 165,37 30,37 203,37 42,37 143,37 43,37 178,37 48,37 140,37 212,37 249,37 289,37 26,37 59,37 46,37 67,37 266,37 91,37 104,37 222,37 38,37 93,37 165,290 30,290 203,290 42,290 143,290 43,290 178,290 48,290 140,290 212,290 249,290 289,290 26,290 59,290 46,290 67,290 266,290 91,290 104,290 222,290 38,290 93,290 165,44 30,44 203,44 42,44 143,44 43,44 178,44 48,44 140,44 212,44 249,44 289,44 26,44 59,44 46,44 67,44 266,44 91,44 104,44 222,44 38,44 93,44 165,262 30,262 203,262 42,262 143,262 43,262 178,262 48,262 140,262 212,262 249,262 289,262 26,262 59,262 46,262 67,262 266,262 91,262 104,262 222,262 38,262 93,262 165,194 30,194 203,194 42,194 143,194 43,194 178,194 48,194 140,194 212,194 249,194 289,194 26,194 59,194 46,194 67,194 266,194 91,194 104,194 222,194 38,194 93,194 165,206 30,206 203,206 42,206 143,206 43,206 178,206 48,206 140,206 212,206 249,206 289,206 26,206 59,206 46,206 67,206 266,206 91,206 104,206 222,206 38,206 93,206 165,78 30,78 203,78 42,78 143,78 43,78 178,78 48,78 140,78 212,78 249,78 289,78 26,78 59,78 46,78 67,78 266,78 91,78 104,78 222,78 38,78 93,78 165,82 30,82 203,82 42,82 143,82 43,82 178,82 48,82 140,82 212,82 249,82 289,82 26,82 59,82 46,82 67,82 266,82 91,82 104,82 222,82 38,82 93,82 165,238 30,238 203,238 42,238 143,238 43,238 178,238 48,238 140,238 212,238 249,238 289,238 26,238 59,238 46,238 67,238 266,238 91,238 104,238 222,238 38,238 93,238 165,107 30,107 203,107 42,107 143,107 43,107 178,107 48,107 140,107 212,107 249,107 289,107 26,107 59,107 46,107 67,107 266,107 91,107 104,107 222,107 38,107 93,107 165,157 30,157 203,157 42,157 143,157 43,157 178,157 48,157 140,157 212,157 249,157 289,157 26,157 59,157 46,157 67,157 266,157 91,157 104,157 222,157 38,157 93,157 165,126 30,126 203,126 42,126 143,126 43,126 178,126 48,126 140,126 212,126 249,126 289,126 26,126 59,126 46,126 67,126 266,126 91,126 104,126 222,126 38,126 93,126 165,167 30,167 203,167 42,167 143,167 43,167 178,167 48,167 140,167 212,167 249,167 289,167 26,167 59,167 46,167 67,167 266,167 91,167 104,167 222,167 38,167 93,167 165,260 30,260 203,260 42,260 143,260 43,260 178,260 48,260 140,260 212,260 249,260 289,260 26,260 59,260 46,260 67,260 266,260 91,260 104,260 222,260 38,260 93,260 165,292 30,292 203,292 42,292 143,292 43,292 178,292 48,292 140,292 212,292 249,292 289,292 26,292 59,292 46,292 67,292 266,292 91,292 104,292 222,292 38,292 93,292 165,283 30,283 203,283 42,283 143,283 43,283 178,283 48,283 140,283 212,283 249,283 289,283 26,283 59,283 46,283 67,283 266,283 91,283 104,283 222,283 38,283 93,283 165,175 30,175 203,175 42,175 143,175 43,175 178,175 48,175 140,175 212,175 249,175 289,175 26,175 59,175 46,175 67,175 266,175 91,175 104,175 222,175 38,175 93,175 165,246 30,246 203,246 42,246 143,246 43,246 178,246 48,246 140,246 212,246 249,246 289,246 26,246 59,246 46,246 67,246 266,246 91,246 104,246 222,246 38,246 93,246 165,182 30,182 203,182 42,182 143,182 43,182 178,182 48,182 140,182 212,182 249,182 289,182 26,182 59,182 46,182 67,182 266,182 91,182 104,182 222,182 38,182 93,182 165,224 30,224 203,224 42,224 143,224 43,224 178,224 48,224 140,224 212,224 249,224 289,224 26,224 59,224 46,224 67,224 266,224 91,224 104,224 222,224 38,224 93,224 165,275 30,275 203,275 42,275 143,275 43,275 178,275 48,275 140,275 212,275 249,275 289,275 26,275 59,275 46,275 67,275 266,275 91,275 104,275 222,275 38,275 93,275 165
5000
74 - Query 74
variable variable; constant constant; assign assign; if if; 
Select <assign, assign>  pattern if(_, _, _)  pattern if(_, _, _)  such that Affects*(assign, assign) with 1=constant.value with "if"=variable.varName  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern assign(variable, _)  pattern if(variable, _, _) 
117 117
5000
75 - Query 75
while while; call call; variable variable; if if; 
Select <while, while>  such that Next*(_, while)  pattern while(_, _)  pattern while(_, _) with call.procName="then" with variable.varName=variable.varName  such that Next*(while, _)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern if(_, _, _)  pattern while(variable, _) 
150 150,211 211,271 271,28 28,74 74,205 205,98 98,145 145,89 89,129 129,134 134,171 171,190 190,116 116,73 73,154 154,234 234
5000
76 - Query 76
while while; assign assign; variable variable; if if; 
Select <while, if>  such that Next*(while, 31)  pattern while(_, _)  pattern while(_, _)  pattern while(_, _)  pattern while(_, _)  pattern if(variable, _, _)  pattern while(_, _)  such that Next*(if, 84)  such that Follows(assign, 252)  pattern while(variable, _) 
28 38,28 26,28 67,28 46,28 59,28 42
5000
77 - Query 77
while while; variable variable; if if; stmt stmt; 
Select <if, if>  pattern while(variable, _)  pattern if(variable, _, _)  pattern if(_, _, _)  such that Uses(while, _)  pattern while(_, _)  pattern while(_, _) with stmt.stmt#=3  pattern while(_, _)  pattern while(_, _)  pattern while(variable, _) 
30 30,143 143,48 48,42 42,43 43,203 203,140 140,178 178,212 212,249 249,289 289,26 26,67 67,46 46,59 59,91 91,266 266,104 104,222 222,38 38,93 93,165 165
5000
78 - Query 78
call call; while while; variable variable; if if; 
Select <call, variable> with call.procName="then"  pattern if(_, _, _)  pattern while(_, _)  such that Uses(if, "else")  pattern if(variable, _, _)  pattern if(_, _, _)  pattern if(_, _, _)  pattern if(_, _, _)  such that Uses(call, _)  pattern if(_, _, _) 
95 while,95 if,95 then,95 else,105 while,105 if,105 then,105 else,13 while,13 if,13 then,13 else,50 while,50 if,50 then,50 else,186 while,186 if,186 then,186 else,63 while,63 if,63 then,63 else,130 while,130 if,130 then,130 else,99 while,99 if,99 then,99 else,64 while,64 if,64 then,64 else,115 while,115 if,115 then,115 else,153 while,153 if,153 then,153 else,160 while,160 if,160 then,160 else
5000
79 - Query 79
procedure procedure; variable variable; if if; stmt stmt; 
Select <stmt, if>  such that Calls*(procedure, "then") with 1=stmt.stmt#  such that Calls*(procedure, _)  such that Calls*(procedure, _)  such that Next*(_, if)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern if(variable, _, _)  such that Parent*(if, _)  pattern if(_, _, _) 
1 30,1 143,1 48,1 42,1 104,1 43,1 203,1 140,1 59,1 178,1 212,1 249,1 289,1 26,1 67,1 46,1 91,1 266,1 222,1 38,1 93,1 165
5000
80 - Query 80
while while; variable variable; constant constant; if if; 
Select <constant, while>  pattern while(variable, _)  pattern while(variable, _)  pattern while(variable, _)  pattern if(_, _, _) with constant.value=5  such that Next*(217, while)  pattern if(variable, _, _)  pattern while(variable, _)  pattern while(_, _)  such that Modifies(289, variable) 
5 211
5000
81 - Query 81
while while; assign assign; variable variable; if if; 
Select <if, assign>  pattern assign(_, _)  pattern while(variable, _) with 2=assign.stmt#  such that Modifies(while, variable)  pattern assign(_, _)  pattern if(variable, _, _) with variable.varName=variable.varName  pattern while(variable, _)  pattern if(_, _, _)  pattern while(variable, _) 
30 2,143 2,48 2,42 2,43 2,203 2,140 2,178 2,212 2,249 2,289 2,26 2,67 2,46 2,59 2,91 2,266 2,104 2,222 2,38 2,93 2,165 2
5000
82 - Query 82
while while; call call; variable variable; if if; 
Select <if, variable>  pattern while(_, _)  such that Next*(_, call)  pattern while(variable, _)  pattern if(_, _, _)  pattern if(variable, _, _)  pattern if(variable, _, _) with variable.varName="if"  pattern while(variable, _)  pattern if(_, _, _)  pattern if(variable, _, _) 
26 if,67 if,46 if,59 if,91 if,266 if,289 if,143 if
5000
83 - Query 83
while while; variable variable; assign assign; if if; 
Select <while, while>  pattern while(_, _)  pattern if(_, _, _)  such that Modifies(if, "else")  pattern if(_, _, _)  pattern while(variable, _)  pattern while(variable, _)  pattern if(_, _, _)  pattern assign(variable, _) with variable.varName="else"  pattern if(_, _, _) 
28 28,116 116,73 73,89 89,129 129,145 145,205 205,154 154,234 234
5000
84 - Query 84
procedure procedure; variable variable; assign assign; if if; 
Select <variable, assign>  such that Modifies(170, variable)  pattern if(variable, _, _)  pattern assign(_, _) with procedure.procName=procedure.procName  pattern if(variable, _, _)  pattern if(_, _, _) with procedure.procName=procedure.procName with variable.varName="then"  pattern if(_, _, _) with "while"=procedure.procName 
then 282,then 174,then 24,then 254,then 36,then 158,then 100,then 1,then 6,then 103,then 2,then 102,then 3,then 210,then 9,then 265,then 10,then 14,then 237,then 20,then 17,then 258,then 35,then 81,then 223,then 270,then 241,then 230,then 27,then 123,then 152,then 29,then 40,then 31,then 250,then 32,then 39,then 49,then 54,then 53,then 192,then 138,then 55,then 58,then 151,then 62,then 195,then 164,then 71,then 247,then 72,then 231,then 75,then 276,then 87,then 243,then 76,then 80,then 221,then 272,then 83,then 277,then 86,then 207,then 279,then 88,then 92,then 248,then 239,then 112,then 113,then 177,then 117,then 118,then 146,then 119,then 187,then 121,then 122,then 136,then 193,then 141,then 142,then 256,then 149,then 181,then 156,then 286,then 170,then 172,then 288,then 180,then 273,then 291,then 189,then 191,then 198,then 202,then 229,then 251,then 252
5000
85 - Query 85
while while; read read; variable variable; if if; 
Select <while, read>  pattern if(variable, _, _)  pattern while(variable, _)  pattern while(variable, _)  pattern while(_, _)  pattern if(_, _, _)  pattern while(variable, _)  such that Modifies(187, variable) with "then"=read.varName  pattern while(_, _)  pattern while(_, _) 
74 60,150 60,89 60,129 60,134 60,171 60,190 60,74 259,150 259,89 259,129 259,134 259,171 259,190 259,74 77,150 77,89 77,129 77,134 77,171 77,190 77,74 281,150 281,89 281,129 281,134 281,171 281,190 281,74 47,150 47,89 47,129 47,134 47,171 47,190 47,74 147,150 147,89 147,129 147,134 147,171 147,190 147,74 79,150 79,89 79,129 79,134 79,171 79,190 79,74 84,150 84,89 84,129 84,134 84,171 84,190 84,74 96,150 96,89 96,129 96,134 96,171 96,190 96,74 220,150 220,89 220,129 220,134 220,171 220,190 220,74 176,150 176,89 176,129 176,134 176,171 176,190 176,74 228,150 228,89 228,129 228,134 228,171 228,190 228
5000
86 - Query 86
while while; variable variable; if if; stmt stmt; 
Select <if, while>  pattern if(variable, _, _)  pattern if(_, _, _)  pattern if(_, _, _)  pattern while(variable, _)  such that Modifies(stmt, _)  such that Uses(while, _)  pattern while(_, _)  pattern if(variable, _, _)  pattern while(_, _)  pattern if(variable, _, _) 
30 150,93 89,104 234,30 211,140 89,30 271,143 150,143 211,143 271,48 150,48 211,38 28,48 271,43 150,42 150,42 211,42 271,43 211,222 134,26 205,43 271,93 234,67 89,203 150,38 116,249 211,203 211,67 74,203 271,140 150,140 211,38 89,104 73,222 150,140 271,178 150,104 129,178 211,42 28,178 271,93 116,212 150,42 116,67 73,212 211,43 190,46 205,212 271,249 150,289 205,249 271,289 150,249 74,289 211,289 271,289 98,26 28,104 190,26 74,26 98,26 145,104 134,67 28,104 205,67 205,67 98,67 145,46 28,91 89,46 74,46 98,46 145,143 98,59 28,59 74,59 205,59 98,59 145,91 28,91 74,91 205,165 205,266 145,91 98,91 145,266 28,91 116,289 171,266 74,266 205,289 74,266 98,289 28,59 154,289 145,143 28,143 74,42 73,67 116,143 205,143 145,165 28,43 74,43 89,222 145,289 190,43 129,43 134,43 171,48 74,38 234,48 89,48 129,165 145,48 134,48 171,48 190,104 116,249 89,104 74,249 129,249 134,67 154,249 171,38 129,249 190,104 150,104 89,104 171,140 74,222 154,140 129,93 28,140 134,140 171,140 190,26 154,222 89,289 89,289 129,289 134,91 154,222 74,222 129,222 171,222 190,67 129,67 234,26 116,42 89,26 73,26 89,26 129,26 234,104 28,104 145,104 154,38 73,38 145,59 129,38 205,38 154,222 28,42 129,42 145,42 205,42 154,42 234,59 116,59 73,59 89,93 205,59 234,91 73,91 129,93 73,91 234,93 129,93 145,93 154,165 116,165 73,165 89,165 129,165 154,165 234,222 116,222 73,222 205,222 234
5000
87 - Query 87
print print; variable variable; assign assign; if if; 
Select <assign, assign>  pattern if(variable, _, _) with print.varName="while"  such that Follows*(_, print)  pattern assign(_, _)  pattern if(variable, _, _) with "else"=variable.varName  pattern if(variable, _, _)  pattern assign(_, _)  pattern if(_, _, _)  pattern assign(_, _) 
282 282,174 174,24 24,254 254,36 36,158 158,100 100,1 1,6 6,103 103,2 2,102 102,3 3,210 210,9 9,265 265,10 10,14 14,237 237,20 20,17 17,258 258,35 35,81 81,223 223,270 270,241 241,230 230,27 27,123 123,152 152,29 29,40 40,31 31,250 250,32 32,39 39,49 49,54 54,53 53,192 192,138 138,55 55,58 58,151 151,62 62,195 195,164 164,71 71,247 247,72 72,231 231,75 75,276 276,87 87,243 243,76 76,80 80,221 221,272 272,83 83,277 277,86 86,207 207,279 279,88 88,92 92,248 248,239 239,112 112,113 113,177 177,117 117,118 118,146 146,119 119,187 187,121 121,122 122,136 136,193 193,141 141,142 142,256 256,149 149,181 181,156 156,286 286,170 170,172 172,288 288,180 180,273 273,291 291,189 189,191 191,198 198,202 202,229 229,251 251,252 252
5000
88 - Query 88
while while; variable variable; if if; stmt stmt; 
Select <stmt, while>  pattern if(variable, _, _)  such that Uses(while, _) with while.stmt#=stmt.stmt#  pattern while(variable, _)  such that Modifies(if, _)  pattern while(_, _)  such that Modifies(217, variable)  pattern while(variable, _)  pattern while(_, _)  pattern while(_, _) 
150 150,211 211,271 271
5000
89 - Query 89
while while; assign assign; variable variable; if if; 
Select <while, variable> with variable.varName=variable.varName with if.stmt#=if.stmt# with 3=assign.stmt#  pattern if(_, _, _)  pattern if(variable, _, _)  pattern while(_, _)  pattern if(_, _, _)  pattern while(variable, _)  pattern if(variable, _, _)  such that Modifies(while, "else") 
211 while,28 if,98 if,89 then,129 then,134 then,28 else,89 else,129 else,154 else,234 else
5000
90 - Query 90
while while; variable variable; assign assign; if if; 
Select <assign, while>  pattern while(variable, _)  pattern if(_, _, _)  pattern if(variable, _, _)  pattern while(_, _)  pattern if(_, _, _)  such that Follows*(assign, _)  such that Next*(assign, _)  pattern if(variable, _, _)  pattern while(_, _)  pattern assign(_, _) 
282 150,174 150,24 150,158 150,100 150,1 150,6 150,2 150,3 150,9 150,265 150,10 150,14 150,17 150,35 150,223 150,270 150,123 150,152 150,29 150,40 150,31 150,49 150,54 150,53 150,192 150,138 150,55 150,58 150,164 150,247 150,72 150,231 150,75 150,87 150,243 150,76 150,272 150,83 150,86 150,207 150,279 150,88 150,92 150,248 150,239 150,112 150,177 150,117 150,187 150,121 150,122 150,136 150,193 150,141 150,256 150,146 150,181 150,156 150,288 150,180 150,189 150,191 150,202 150,286 150,241 150,230 150,251 150,254 150,273 150,282 211,174 211,24 211,158 211,100 211,1 211,6 211,2 211,3 211,9 211,265 211,10 211,14 211,17 211,35 211,223 211,270 211,123 211,152 211,29 211,40 211,31 211,49 211,54 211,53 211,192 211,138 211,55 211,58 211,164 211,247 211,72 211,231 211,75 211,87 211,243 211,76 211,272 211,83 211,86 211,207 211,279 211,88 211,92 211,248 211,239 211,112 211,177 211,117 211,187 211,121 211,122 211,136 211,193 211,141 211,256 211,146 211,181 211,156 211,288 211,180 211,189 211,191 211,202 211,286 211,241 211,230 211,251 211,254 211,273 211,282 271,174 271,24 271,158 271,100 271,1 271,6 271,2 271,3 271,9 271,265 271,10 271,14 271,17 271,35 271,223 271,270 271,123 271,152 271,29 271,40 271,31 271,49 271,54 271,53 271,192 271,138 271,55 271,58 271,164 271,247 271,72 271,231 271,75 271,87 271,243 271,76 271,272 271,83 271,86 271,207 271,279 271,88 271,92 271,248 271,239 271,112 271,177 271,117 271,187 271,121 271,122 271,136 271,193 271,141 271,256 271,146 271,181 271,156 271,288 271,180 271,189 271,191 271,202 271,286 271,241 271,230 271,251 271,254 271,273 271,282 28,174 28,24 28,158 28,100 28,1 28,6 28,2 28,3 28,9 28,265 28,10 28,14 28,17 28,35 28,223 28,270 28,123 28,152 28,29 28,40 28,31 28,49 28,54 28,53 28,192 28,138 28,55 28,58 28,164 28,247 28,72 28,231 28,75 28,87 28,243 28,76 28,272 28,83 28,86 28,207 28,279 28,88 28,92 28,248 28,239 28,112 28,177 28,117 28,187 28,121 28,122 28,136 28,193 28,141 28,256 28,146 28,181 28,156 28,288 28,180 28,189 28,191 28,202 28,286 28,241 28,230 28,251 28,254 28,273 28,282 74,174 74,24 74,158 74,100 74,1 74,6 74,2 74,3 74,9 74,265 74,10 74,14 74,17 74,35 74,223 74,270 74,123 74,152 74,29 74,40 74,31 74,49 74,54 74,53 74,192 74,138 74,55 74,58 74,164 74,247 74,72 74,231 74,75 74,87 74,243 74,76 74,272 74,83 74,86 74,207 74,279 74,88 74,92 74,248 74,239 74,112 74,177 74,117 74,187 74,121 74,122 74,136 74,193 74,141 74,256 74,146 74,181 74,156 74,288 74,180 74,189 74,191 74,202 74,286 74,241 74,230 74,251 74,254 74,273 74,282 205,174 205,24 205,158 205,100 205,1 205,6 205,2 205,3 205,9 205,265 205,10 205,14 205,17 205,35 205,223 205,270 205,123 205,152 205,29 205,40 205,31 205,49 205,54 205,53 205,192 205,138 205,55 205,58 205,164 205,247 205,72 205,231 205,75 205,87 205,243 205,76 205,272 205,83 205,86 205,207 205,279 205,88 205,92 205,248 205,239 205,112 205,177 205,117 205,187 205,121 205,122 205,136 205,193 205,141 205,256 205,146 205,181 205,156 205,288 205,180 205,189 205,191 205,202 205,286 205,241 205,230 205,251 205,254 205,273 205,282 98,174 98,24 98,158 98,100 98,1 98,6 98,2 98,3 98,9 98,265 98,10 98,14 98,17 98,35 98,223 98,270 98,123 98,152 98,29 98,40 98,31 98,49 98,54 98,53 98,192 98,138 98,55 98,58 98,164 98,247 98,72 98,231 98,75 98,87 98,243 98,76 98,272 98,83 98,86 98,207 98,279 98,88 98,92 98,248 98,239 98,112 98,177 98,117 98,187 98,121 98,122 98,136 98,193 98,141 98,256 98,146 98,181 98,156 98,288 98,180 98,189 98,191 98,202 98,286 98,241 98,230 98,251 98,254 98,273 98,282 145,174 145,24 145,158 145,100 145,1 145,6 145,2 145,3 145,9 145,265 145,10 145,14 145,17 145,35 145,223 145,270 145,123 145,152 145,29 145,40 145,31 145,49 145,54 145,53 145,192 145,138 145,55 145,58 145,164 145,247 145,72 145,231 145,75 145,87 145,243 145,76 145,272 145,83 145,86 145,207 145,279 145,88 145,92 145,248 145,239 145,112 145,177 145,117 145,187 145,121 145,122 145,136 145,193 145,141 145,256 145,146 145,181 145,156 145,288 145,180 145,189 145,191 145,202 145,286 145,241 145,230 145,251 145,254 145,273 145,282 89,174 89,24 89,158 89,100 89,1 89,6 89,2 89,3 89,9 89,265 89,10 89,14 89,17 89,35 89,223 89,270 89,123 89,152 89,29 89,40 89,31 89,49 89,54 89,53 89,192 89,138 89,55 89,58 89,164 89,247 89,72 89,231 89,75 89,87 89,243 89,76 89,272 89,83 89,86 89,207 89,279 89,88 89,92 89,248 89,239 89,112 89,177 89,117 89,187 89,121 89,122 89,136 89,193 89,141 89,256 89,146 89,181 89,156 89,288 89,180 89,189 89,191 89,202 89,286 89,241 89,230 89,251 89,254 89,273 89,282 129,174 129,24 129,158 129,100 129,1 129,6 129,2 129,3 129,9 129,265 129,10 129,14 129,17 129,35 129,223 129,270 129,123 129,152 129,29 129,40 129,31 129,49 129,54 129,53 129,192 129,138 129,55 129,58 129,164 129,247 129,72 129,231 129,75 129,87 129,243 129,76 129,272 129,83 129,86 129,207 129,279 129,88 129,92 129,248 129,239 129,112 129,177 129,117 129,187 129,121 129,122 129,136 129,193 129,141 129,256 129,146 129,181 129,156 129,288 129,180 129,189 129,191 129,202 129,286 129,241 129,230 129,251 129,254 129,273 129,282 134,174 134,24 134,158 134,100 134,1 134,6 134,2 134,3 134,9 134,265 134,10 134,14 134,17 134,35 134,223 134,270 134,123 134,152 134,29 134,40 134,31 134,49 134,54 134,53 134,192 134,138 134,55 134,58 134,164 134,247 134,72 134,231 134,75 134,87 134,243 134,76 134,272 134,83 134,86 134,207 134,279 134,88 134,92 134,248 134,239 134,112 134,177 134,117 134,187 134,121 134,122 134,136 134,193 134,141 134,256 134,146 134,181 134,156 134,288 134,180 134,189 134,191 134,202 134,286 134,241 134,230 134,251 134,254 134,273 134,282 171,174 171,24 171,158 171,100 171,1 171,6 171,2 171,3 171,9 171,265 171,10 171,14 171,17 171,35 171,223 171,270 171,123 171,152 171,29 171,40 171,31 171,49 171,54 171,53 171,192 171,138 171,55 171,58 171,164 171,247 171,72 171,231 171,75 171,87 171,243 171,76 171,272 171,83 171,86 171,207 171,279 171,88 171,92 171,248 171,239 171,112 171,177 171,117 171,187 171,121 171,122 171,136 171,193 171,141 171,256 171,146 171,181 171,156 171,288 171,180 171,189 171,191 171,202 171,286 171,241 171,230 171,251 171,254 171,273 171,282 190,174 190,24 190,158 190,100 190,1 190,6 190,2 190,3 190,9 190,265 190,10 190,14 190,17 190,35 190,223 190,270 190,123 190,152 190,29 190,40 190,31 190,49 190,54 190,53 190,192 190,138 190,55 190,58 190,164 190,247 190,72 190,231 190,75 190,87 190,243 190,76 190,272 190,83 190,86 190,207 190,279 190,88 190,92 190,248 190,239 190,112 190,177 190,117 190,187 190,121 190,122 190,136 190,193 190,141 190,256 190,146 190,181 190,156 190,288 190,180 190,189 190,191 190,202 190,286 190,241 190,230 190,251 190,254 190,273 190,282 116,174 116,24 116,158 116,100 116,1 116,6 116,2 116,3 116,9 116,265 116,10 116,14 116,17 116,35 116,223 116,270 116,123 116,152 116,29 116,40 116,31 116,49 116,54 116,53 116,192 116,138 116,55 116,58 116,164 116,247 116,72 116,231 116,75 116,87 116,243 116,76 116,272 116,83 116,86 116,207 116,279 116,88 116,92 116,248 116,239 116,112 116,177 116,117 116,187 116,121 116,122 116,136 116,193 116,141 116,256 116,146 116,181 116,156 116,288 116,180 116,189 116,191 116,202 116,286 116,241 116,230 116,251 116,254 116,273 116,282 73,174 73,24 73,158 73,100 73,1 73,6 73,2 73,3 73,9 73,265 73,10 73,14 73,17 73,35 73,223 73,270 73,123 73,152 73,29 73,40 73,31 73,49 73,54 73,53 73,192 73,138 73,55 73,58 73,164 73,247 73,72 73,231 73,75 73,87 73,243 73,76 73,272 73,83 73,86 73,207 73,279 73,88 73,92 73,248 73,239 73,112 73,177 73,117 73,187 73,121 73,122 73,136 73,193 73,141 73,256 73,146 73,181 73,156 73,288 73,180 73,189 73,191 73,202 73,286 73,241 73,230 73,251 73,254 73,273 73,282 154,174 154,24 154,158 154,100 154,1 154,6 154,2 154,3 154,9 154,265 154,10 154,14 154,17 154,35 154,223 154,270 154,123 154,152 154,29 154,40 154,31 154,49 154,54 154,53 154,192 154,138 154,55 154,58 154,164 154,247 154,72 154,231 154,75 154,87 154,243 154,76 154,272 154,83 154,86 154,207 154,279 154,88 154,92 154,248 154,239 154,112 154,177 154,117 154,187 154,121 154,122 154,136 154,193 154,141 154,256 154,146 154,181 154,156 154,288 154,180 154,189 154,191 154,202 154,286 154,241 154,230 154,251 154,254 154,273 154,282 234,174 234,24 234,158 234,100 234,1 234,6 234,2 234,3 234,9 234,265 234,10 234,14 234,17 234,35 234,223 234,270 234,123 234,152 234,29 234,40 234,31 234,49 234,54 234,53 234,192 234,138 234,55 234,58 234,164 234,247 234,72 234,231 234,75 234,87 234,243 234,76 234,272 234,83 234,86 234,207 234,279 234,88 234,92 234,248 234,239 234,112 234,177 234,117 234,187 234,121 234,122 234,136 234,193 234,141 234,256 234,146 234,181 234,156 234,288 234,180 234,189 234,191 234,202 234,286 234,241 234,230 234,251 234,254 234,273 234
5000
91 - Query 91
print print; while while; variable variable; if if; 
Select <print, variable>  pattern if(_, _, _)  such that Parent*(_, print) with "then"=print.varName  pattern if(variable, _, _)  pattern if(_, _, _)  pattern while(_, _)  pattern if(variable, _, _)  pattern while(_, _)  pattern if(variable, _, _)  such that Parent(if, _) 
161 while,161 if,161 then,161 else,66 while,66 if,66 then,66 else,137 while,137 if,137 then,137 else,106 while,106 if,106 then,106 else,240 while,240 if,240 then,240 else,275 while,275 if,275 then,275 else,107 while,107 if,107 then,107 else,166 while,166 if,166 then,166 else,167 while,167 if,167 then,167 else,182 while,182 if,182 then,182 else,219 while,219 if,219 then,219 else,232 while,232 if,232 then,232 else
5000
