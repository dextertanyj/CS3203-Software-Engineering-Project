0 - Query 0
assign assign; variable variable; constant constant; print print; stmt stmt; read read; procedure procedure; while while; if if; call call; 
Select <assign, variable, constant, print, stmt, read, procedure, while, if, call>  pattern while(while, _)  such that Next*(read, 4) with constant.value=9000  such that Next*(call, 27) with assign.stmt#=stmt.stmt#  such that Calls*(procedure, "else") with assign.stmt#=3900  pattern while(variable, _) with print.varName=call.procName  pattern while(variable, _)  pattern while(then, _)  such that Calls*(procedure, "print") with 5100=call.stmt#  pattern while(_, _)  such that Modifies(26, variable)  such that Calls*(procedure, _) with 9800=if.stmt# with "constant"=call.procName  such that Affects(stmt, 28)  pattern assign(read, "9400+800")  pattern if(read, _, _)  such that Uses(call, "print")  pattern while(if, _)  pattern while(if, _)  such that Follows*(print, _) with 1900=print.stmt# with "variable"=variable.varName  pattern while(variable, _)  pattern assign(print, _)  pattern assign(variable, "(8000+2200)/8500")  such that Parent(_, stmt)  such that Modifies(20, variable) with 1300=call.stmt#  such that Follows(25, if) with "constant"=procedure.procName with call.procName=variable.varName  pattern assign(_, _) with read.varName="else"  pattern assign(_, "9700/900")  pattern while(_, _) with 200=assign.stmt#  such that Affects(_, stmt)  such that Uses(print, variable)  pattern assign(_, _) with "constant"=print.varName  pattern assign(variable, _)  pattern while(print, _) with procedure.procName=call.procName  such that Calls*("variable", procedure)  pattern while(variable, _)  pattern assign(_, _)  such that Calls(procedure, "procedure")  pattern while(variable, _)  such that Follows(print, _)  pattern assign(variable, _)  such that Calls(procedure, procedure)  pattern if(variable, _, _)  pattern if(variable, _, _)  such that Next(10, if)  such that Follows*(16, if)  pattern if(_, _, _)  pattern while(variable, _) with assign.stmt#=stmt.stmt#  such that Follows*(_, assign)  such that Calls(procedure, _) with while.stmt#=9100  pattern if(_, _, _)  such that Calls(procedure, procedure)  pattern if(variable, _, _) with procedure.procName="while"  pattern while(_, _) with variable.varName="if" with 4500=stmt.stmt#  such that Next*(_, read)  such that Modifies(call, "constant")  such that Follows(8, if) with variable.varName=read.varName  pattern assign(variable, _"4300+4800"_) with "if"=procedure.procName  pattern if(variable, _, _)  pattern if(_, _, _)  such that Calls(procedure, procedure)  pattern if(variable, _, _)  pattern while(variable, _)  pattern if(variable, _, _)  pattern if(else, _, _)  pattern assign(_, "3600+5800")  pattern assign(_, "3700*5900") with 1900=print.stmt#  pattern if(then, _, _)  pattern assign(variable, "3300/1300") with print.stmt#=call.stmt#  pattern if(_, _, _)  such that Affects*(14, stmt)  pattern while(_, _)  such that Parent*(6, read) with while.stmt#=if.stmt#  pattern while(_, _) with variable.varName="variable"  pattern while(variable, _) with constant.value=assign.stmt#  such that Next(stmt, _)  pattern if(assign, _, _)  pattern if(_, _, _)  such that Uses(print, variable)  such that Calls*(procedure, "variable") with 6400=stmt.stmt#  such that Uses(print, _) with 2500=if.stmt# with "procedure"=call.procName  pattern while(variable, _) with read.stmt#=9100 with if.stmt#=4600  pattern while(variable, _) with "call"=procedure.procName  pattern while(while, _) with if.stmt#=stmt.stmt# with 1600=if.stmt#  pattern while(constant, _) with 3100=constant.value  pattern assign(_, _)  pattern assign(_, _"5000+8100"_)  pattern assign(variable, _"8200+6400"_)  pattern assign(while, _)  pattern assign(read, _)  pattern while(variable, _)  pattern assign(variable, "7400*7200")  pattern while(_, _)  such that Affects(11, assign) with constant.value=if.stmt#  such that Next*(read, 8)  pattern assign(_, "6400-5400")  pattern if(variable, _, _) with 7100=if.stmt# with constant.value=6800  such that Parent(while, _)  pattern assign(else, "2800/call") with call.procName="print"  pattern assign(variable, _)  pattern assign(variable, _"1500/3500"_)  pattern if(variable, _, _) with procedure.procName=variable.varName with "variable"=read.varName  such that Calls(procedure, procedure)  pattern assign(while, _"8100+6800"_)  pattern if(_, _, _)  pattern assign(_, _)  pattern while(variable, _)  pattern while(variable, _)  such that Uses(call, variable)  pattern if(_, _, _) with "assign"=variable.varName  such that Modifies(call, "assign") with print.varName=call.procName  pattern if(procedure, _, _)  pattern while(_, _)  pattern assign(_, _)  such that Parent(_, while)  pattern while(variable, _)  such that Uses(14, variable)  such that Calls("else", procedure)  pattern assign(then, "1100*3600")  pattern while(constant, _)  pattern while(while, _)  pattern if(_, _, _)  such that Next(read, _) with "else"=call.procName  such that Calls*("else", procedure) with read.stmt#=6300  pattern assign(variable, _"(5600*2200)+4900"_)  pattern while(_, _)  pattern assign(assign, _"6400+4200"_) with 9800=call.stmt#  such that Parent(_, assign) with assign.stmt#=read.stmt# with 6300=read.stmt# with read.varName="variable"  such that Uses(if, "assign")  such that Follows(call, assign) with print.stmt#=700  pattern while(variable, _)  such that Uses(print, _)  pattern assign(_, "300/procedure")  pattern if(then, _, _)  pattern assign(_, "9600+800")  pattern assign(constant, _)  pattern assign(variable, "4800/9100")  pattern assign(else, _)  pattern if(print, _, _)  such that Affects(assign, stmt)  such that Affects*(assign, 24)  such that Affects(stmt, 19)  pattern while(variable, _)  such that Affects*(stmt, assign) with variable.varName=read.varName with if.stmt#=4000  such that Affects(stmt, _)  pattern assign(variable, _)  such that Uses(if, _)  pattern assign(variable, "assign+4900")  such that Parent*(if, _) with if.stmt#=print.stmt#  pattern if(variable, _, _) with print.varName="constant" with "assign"=procedure.procName  such that Follows(read, _)  pattern while(_, _) with "read"=print.varName with print.varName=print.varName with procedure.procName="then"  pattern assign(variable, _"(4700/2600)*4000"_)  pattern if(variable, _, _) with read.varName=read.varName  pattern if(constant, _, _) with print.varName=call.procName  pattern if(variable, _, _) with call.procName="if"  such that Affects(_, stmt)  pattern while(variable, _)  pattern assign(variable, _"6200+6200"_) with call.procName=call.procName  pattern while(assign, _) with print.stmt#=5500  pattern assign(_, _)  pattern while(variable, _)  pattern assign(variable, _)  such that Calls("variable", procedure)  pattern if(variable, _, _) with assign.stmt#=print.stmt#  pattern assign(variable, _)  pattern assign(_, "7300*5000")  pattern assign(assign, _)  pattern while(variable, _)  pattern if(variable, _, _)  pattern if(else, _, _) with assign.stmt#=read.stmt#  pattern if(_, _, _)  such that Next(if, 27) with "else"=print.varName with 8200=call.stmt#  pattern if(variable, _, _) with if.stmt#=while.stmt# with read.stmt#=constant.value  pattern while(else, _)  pattern if(variable, _, _)  such that Uses(read, "assign")  pattern while(then, _)  such that Modifies(18, variable) with print.stmt#=8500  pattern if(_, _, _) with "then"=read.varName with 500=while.stmt#  pattern assign(variable, _)  pattern assign(call, _"1000-4600"_)  pattern assign(read, _)  such that Affects(_, stmt)  such that Modifies(print, variable)  such that Modifies(read, "procedure") with "assign"=call.procName with print.stmt#=1400  pattern assign(procedure, _"3400-4400"_) with print.stmt#=stmt.stmt#  pattern assign(variable, _) with "call"=call.procName with procedure.procName="call"  such that Next(3, while)  pattern if(print, _, _)  such that Parent*(print, 20)  pattern if(_, _, _) with "while"=variable.varName with call.stmt#=assign.stmt#  pattern assign(variable, "2600-2200")  such that Affects*(assign, stmt)  such that Modifies(stmt, _) with stmt.stmt#=3200  such that Follows(7, if) with call.stmt#=assign.stmt#  such that Follows(read, stmt) with print.varName="print"  pattern if(_, _, _) with while.stmt#=read.stmt#  pattern if(assign, _, _) with read.varName="read" with variable.varName=variable.varName  pattern while(variable, _)  pattern if(_, _, _)  such that Next*(read, _)  pattern if(_, _, _) with if.stmt#=7100  pattern assign(constant, _)  such that Follows*(call, while)  pattern while(variable, _)  such that Parent(stmt, _)  pattern assign(assign, "1400*2000")  pattern if(if, _, _)  such that Parent(stmt, 20) with 2500=while.stmt#  such that Affects(_, stmt) with assign.stmt#=5000 with call.procName=read.varName with "print"=procedure.procName  pattern assign(variable, "1300/6000") with read.stmt#=print.stmt# with "constant"=call.procName  such that Next*(call, _)  pattern while(variable, _)  pattern while(_, _)  such that Calls("then", procedure)  pattern if(variable, _, _) with "procedure"=procedure.procName  such that Calls*(procedure, _)  such that Parent(_, call)  pattern assign(_, _)  pattern if(_, _, _) with variable.varName="print"  pattern while(while, _)  such that Parent*(stmt, _)  such that Affects(4, assign) with read.stmt#=if.stmt#  pattern assign(read, _"1600+3800"_)  pattern if(_, _, _)  such that Modifies(call, _)  pattern while(variable, _)  pattern assign(_, _"2800-600"_)  pattern assign(variable, _"8500/5200"_)  pattern while(variable, _)  pattern if(procedure, _, _) with stmt.stmt#=if.stmt# with 8500=assign.stmt#  pattern while(then, _) with call.procName="constant" with 4200=while.stmt# with 3000=stmt.stmt#  such that Calls("call", procedure) with while.stmt#=assign.stmt#  pattern assign(_, "9200-6100") with while.stmt#=2300  such that Next*(read, if) with read.stmt#=9500 with 8900=assign.stmt#  pattern assign(_, "3200-6900")  pattern assign(variable, "3700+5200")  pattern if(if, _, _) with 9800=stmt.stmt#  such that Parent*(print, 17)  pattern if(print, _, _)  such that Follows*(_, call) with print.varName="else"  such that Calls(procedure, "else") with "while"=print.varName  pattern assign(_, "9400+4700") with call.stmt#=while.stmt# with constant.value=9500 with call.procName="then"  pattern if(_, _, _)  such that Calls(procedure, "assign") with print.varName=read.varName with procedure.procName=print.varName with call.procName="constant"  such that Follows(read, _)  pattern if(variable, _, _)  pattern assign(_, "6600+7200")  such that Follows(call, _)  such that Next(_, print) with variable.varName=call.procName with 2100=assign.stmt#  pattern while(procedure, _)  pattern while(_, _)  pattern if(_, _, _)  pattern if(_, _, _) with stmt.stmt#=assign.stmt# with read.varName="read"  pattern while(_, _)  pattern assign(variable, _) with read.varName=call.procName with 2100=call.stmt#  pattern assign(variable, _) with assign.stmt#=7700  pattern while(_, _)  pattern assign(while, _"100*6800"_)  such that Follows(_, read)  pattern if(else, _, _)  pattern assign(_, _)  pattern while(constant, _) with print.varName="if"  such that Parent(_, if)  such that Follows*(call, _)  such that Uses(if, _)  such that Follows*(_, if)  pattern assign(variable, _"then+7000"_) with constant.value=9400 with assign.stmt#=4000  pattern if(_, _, _)  pattern assign(if, _)  pattern while(_, _)  pattern assign(then, _"variable+6500"_)  such that Follows(28, read) with procedure.procName="call"  pattern if(variable, _, _)  pattern while(variable, _) with read.varName=print.varName  such that Next*(if, _) with call.procName="procedure" with call.procName="while" with call.procName="procedure" with "assign"=call.procName  pattern assign(variable, _) with call.stmt#=while.stmt#  such that Affects*(assign, 18) with "while"=print.varName with read.stmt#=5600  pattern if(_, _, _)  pattern if(_, _, _)  pattern if(if, _, _)  pattern assign(_, _) with call.procName="call"  such that Parent(print, _) with 2400=print.stmt#  such that Parent*(_, while) with variable.varName=print.varName  such that Calls("constant", procedure) with read.varName="read" with stmt.stmt#=stmt.stmt#  pattern assign(_, _)  pattern while(variable, _)  pattern while(variable, _) with call.stmt#=constant.value  pattern while(variable, _)  pattern if(variable, _, _) with if.stmt#=constant.value  such that Uses(if, _)  such that Uses(read, "then")  such that Parent(while, _) with "then"=call.procName with "variable"=variable.varName  pattern while(constant, _)  pattern assign(_, "700-7600")  pattern assign(variable, _)  pattern while(variable, _)  such that Parent(if, _)  pattern while(variable, _) with assign.stmt#=call.stmt# with "if"=procedure.procName with "read"=variable.varName  pattern assign(_, "5800+2900") with procedure.procName="while" with "else"=procedure.procName  such that Affects*(stmt, 18)  pattern while(_, _)  pattern assign(then, "4600*8200")  pattern while(variable, _) with "constant"=print.varName  such that Parent(_, while) with read.stmt#=200  pattern assign(_, _)  pattern while(_, _) with if.stmt#=2000  such that Next(if, 17)  pattern assign(variable, _"1000+7500"_)  pattern if(variable, _, _)  pattern assign(variable, _)  pattern while(print, _) with procedure.procName="variable"  such that Modifies(print, _)  pattern assign(variable, _"9000-9000"_)  pattern assign(variable, _) with call.stmt#=2400  pattern assign(variable, "if+9500")  such that Follows*(assign, _)  pattern assign(_, _)  such that Affects*(assign, _)  pattern if(variable, _, _)  such that Follows*(_, assign)  pattern assign(variable, _)  such that Next*(assign, print)  pattern while(while, _) with read.varName="assign"  such that Modifies(read, _)  such that Uses(assign, variable)  pattern assign(variable, _"7900/9000"_)  such that Uses(print, variable)  such that Modifies(read, variable)  pattern while(_, _)  such that Parent(14, call) with assign.stmt#=3000  pattern if(else, _, _)  pattern assign(_, _"5300-while"_)  pattern while(call, _)  such that Modifies(call, "then")  such that Next(print, while) with "call"=variable.varName with print.stmt#=call.stmt# with print.varName=call.procName  such that Next(call, 5) with print.stmt#=700 with assign.stmt#=7000  such that Calls*(procedure, procedure) with read.varName="while"  pattern while(call, _)  pattern if(variable, _, _) 

5000
1 - Query 1
assign assign; variable variable; call call; print print; constant constant; stmt stmt; read read; if if; while while; procedure procedure; 
Select <assign, variable, call, print, constant, stmt, read, if, while, procedure>  pattern assign(call, _)  pattern if(variable, _, _)  such that Affects(assign, 13)  pattern while(_, _)  pattern while(_, _) with 5400=read.stmt# with procedure.procName=procedure.procName  pattern if(print, _, _)  such that Calls(_, procedure)  such that Affects(7, assign)  pattern if(variable, _, _)  pattern if(_, _, _)  such that Affects*(stmt, 29)  such that Next(read, 1)  such that Modifies(call, _)  pattern if(variable, _, _)  such that Next*(assign, _) with assign.stmt#=700 with 800=read.stmt#  pattern assign(_, _) with print.stmt#=while.stmt#  such that Calls*(procedure, procedure) with 800=print.stmt#  pattern if(variable, _, _)  pattern assign(print, "constant/call") with variable.varName=call.procName with variable.varName=print.varName  such that Modifies(while, _) with while.stmt#=constant.value with read.stmt#=print.stmt#  pattern assign(variable, "8700-6200")  such that Calls*(procedure, "constant")  such that Calls*(procedure, _)  pattern assign(_, _"2800+7700"_)  pattern while(variable, _) with print.varName="procedure" with 6600=print.stmt#  pattern if(call, _, _)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern assign(_, _"7300+5700"_) with 200=stmt.stmt# with "then"=variable.varName  pattern assign(variable, _"3600*1000"_)  such that Calls*(procedure, _)  such that Affects(stmt, _) with 5100=assign.stmt# with "if"=variable.varName with print.varName=call.procName  such that Follows(_, call)  pattern assign(read, "7500+7300")  pattern if(_, _, _)  pattern if(assign, _, _)  pattern if(_, _, _) with 8500=print.stmt#  pattern if(else, _, _) with print.varName=read.varName with stmt.stmt#=2900  pattern while(print, _)  such that Modifies(23, variable) with call.procName=call.procName  pattern if(variable, _, _)  such that Parent*(14, assign)  pattern while(then, _)  such that Next(if, 24) with call.stmt#=assign.stmt#  pattern assign(read, _"9200*1000"_)  pattern while(_, _)  pattern if(_, _, _) with "procedure"=print.varName  pattern assign(_, "2100/7500")  pattern if(variable, _, _) with print.varName="print" with variable.varName=print.varName  such that Next(_, stmt) with variable.varName="read" with read.varName="then"  pattern if(print, _, _)  pattern while(_, _)  such that Next(if, call)  pattern while(variable, _)  such that Uses(print, "call")  pattern assign(_, _)  pattern if(variable, _, _) with if.stmt#=8300  such that Parent*(if, 1)  pattern if(procedure, _, _)  such that Modifies(if, "then") with print.varName=print.varName  such that Follows*(read, read) with call.procName=procedure.procName  pattern assign(procedure, _)  such that Parent(stmt, read)  pattern while(variable, _)  pattern while(_, _)  pattern while(variable, _) with procedure.procName="print"  such that Modifies(5, variable)  such that Follows(2, read)  pattern assign(read, "3500/6200")  pattern assign(read, _"400/5900"_) with call.stmt#=call.stmt#  pattern while(_, _)  pattern while(constant, _)  pattern assign(variable, _)  such that Uses(while, "call") with "read"=read.varName  such that Follows(21, assign)  pattern assign(_, _"700/700"_) with read.stmt#=print.stmt#  such that Modifies(procedure, _)  pattern assign(then, "6900-3400") with while.stmt#=if.stmt#  pattern assign(_, _)  pattern assign(variable, "3400*4700") with procedure.procName="assign"  pattern assign(variable, _) with "assign"=print.varName  pattern assign(variable, _)  pattern assign(_, _"2800+600"_) with assign.stmt#=7900 with call.stmt#=8700  such that Uses(print, variable)  such that Modifies(print, "then") with call.stmt#=assign.stmt#  pattern assign(variable, _)  pattern assign(variable, "4100-variable")  such that Affects(14, stmt)  such that Next(_, call)  pattern while(constant, _)  such that Uses(5, variable)  pattern while(_, _)  such that Calls*(_, procedure)  pattern if(read, _, _)  pattern if(constant, _, _)  such that Calls(_, procedure) with "else"=call.procName  such that Modifies(print, "print")  such that Affects*(assign, stmt)  such that Follows*(14, if)  pattern assign(if, "6700/8300") with "constant"=print.varName with assign.stmt#=700  pattern if(_, _, _)  pattern assign(variable, _) with "then"=print.varName  pattern assign(while, _"8400*2000"_)  pattern if(variable, _, _) with print.varName=procedure.procName with 8200=constant.value  pattern assign(print, _"6100*400"_)  such that Next(_, assign) with read.varName=call.procName  pattern while(variable, _)  pattern while(variable, _)  such that Uses(print, "call")  such that Follows*(19, read) with if.stmt#=5400  pattern while(variable, _)  such that Next(_, while)  such that Follows(27, call)  pattern while(_, _)  pattern assign(_, _) with print.stmt#=constant.value with while.stmt#=print.stmt# with "else"=read.varName with constant.value=3700  pattern while(variable, _) with read.varName=print.varName with "procedure"=procedure.procName  pattern assign(_, "6100+4000")  pattern while(_, _)  such that Calls(_, procedure) with "then"=print.varName  pattern if(assign, _, _)  such that Calls(_, procedure)  pattern if(call, _, _)  pattern if(variable, _, _)  pattern if(_, _, _) with 1500=if.stmt#  pattern while(variable, _) with "assign"=procedure.procName  such that Next(28, stmt)  pattern if(_, _, _)  pattern assign(variable, _"2700*2600"_)  pattern assign(variable, "5700*5600") with read.stmt#=stmt.stmt#  pattern while(_, _) with constant.value=print.stmt#  such that Modifies(if, "then")  pattern if(_, _, _)  pattern while(variable, _) with variable.varName="read"  pattern assign(print, _) with print.varName=procedure.procName with call.procName=call.procName  pattern while(_, _) with read.varName=variable.varName  pattern if(_, _, _)  pattern if(variable, _, _)  pattern while(_, _) with 9000=constant.value  such that Next(if, _)  pattern if(if, _, _)  such that Parent(stmt, _)  pattern if(if, _, _) with "if"=read.varName  pattern if(_, _, _)  pattern if(variable, _, _) with print.varName=call.procName  such that Uses(while, "if") with "call"=print.varName with 4700=read.stmt# with print.varName="else" with read.stmt#=stmt.stmt# with 3500=read.stmt#  such that Affects(22, stmt)  pattern while(else, _) with "else"=call.procName with "assign"=variable.varName  pattern assign(variable, "3900+8400") with print.varName="then"  pattern while(constant, _) with variable.varName="constant"  pattern if(constant, _, _)  pattern while(variable, _)  such that Affects*(assign, _)  such that Uses(print, "variable")  pattern assign(variable, "((7900*9800)+7000)-8700")  pattern if(procedure, _, _)  such that Follows(stmt, _) with procedure.procName=read.varName  pattern while(_, _)  pattern if(variable, _, _) with "constant"=procedure.procName with variable.varName="print"  pattern assign(variable, "1600+else")  pattern if(_, _, _) with call.stmt#=stmt.stmt#  pattern if(variable, _, _) with 9400=print.stmt#  pattern while(read, _) with 6800=stmt.stmt#  such that Affects(20, stmt)  pattern if(variable, _, _)  such that Next(while, call) with if.stmt#=stmt.stmt#  such that Uses(read, variable)  pattern if(_, _, _)  such that Calls("then", procedure)  pattern while(_, _) with assign.stmt#=constant.value  pattern while(_, _)  pattern if(if, _, _)  pattern assign(variable, _)  such that Modifies(read, variable)  such that Follows(_, print)  such that Affects*(_, assign)  such that Parent(_, read) with "constant"=procedure.procName  pattern assign(variable, "9600*2500")  pattern if(constant, _, _)  such that Affects*(10, assign)  pattern while(variable, _)  such that Next(_, assign)  pattern assign(variable, "9900-2800")  pattern assign(variable, _"1800+900"_) with call.stmt#=4700 with "print"=print.varName  pattern assign(assign, _"7200-3100"_)  such that Parent(_, assign) with stmt.stmt#=print.stmt#  such that Parent(stmt, 25)  such that Follows*(call, while)  pattern if(variable, _, _)  pattern assign(variable, _"300*8000"_)  pattern if(_, _, _)  such that Next(read, call)  such that Next*(read, read)  pattern if(variable, _, _) with procedure.procName=call.procName  such that Parent(if, read)  pattern if(variable, _, _) with call.stmt#=assign.stmt# with read.varName=call.procName  pattern if(_, _, _)  such that Next(_, while)  such that Uses(stmt, "assign") with "read"=read.varName  pattern if(if, _, _)  such that Parent*(_, assign) with assign.stmt#=call.stmt# with while.stmt#=if.stmt#  pattern while(variable, _)  pattern while(assign, _)  such that Affects*(stmt, assign)  pattern assign(variable, "8000*else") with call.procName="if" with print.varName="call" with constant.value=assign.stmt#  pattern assign(_, _) with read.varName=variable.varName  pattern assign(read, _"8000*8800"_)  pattern if(if, _, _)  such that Calls(procedure, "procedure")  pattern while(then, _)  such that Follows(while, 21) with read.varName="variable"  such that Follows*(_, call)  pattern while(procedure, _)  pattern assign(variable, _"5500-print"_) with "procedure"=print.varName with constant.value=while.stmt# with stmt.stmt#=read.stmt# with "print"=variable.varName  pattern if(_, _, _)  pattern if(print, _, _)  pattern while(print, _)  such that Modifies(print, variable)  pattern assign(_, _"8800-8800"_) with "else"=call.procName  pattern if(constant, _, _)  pattern assign(_, _"7000+7100"_)  such that Follows(8, assign)  such that Affects(stmt, 7) with call.stmt#=8000  such that Parent*(stmt, _) with variable.varName=print.varName  such that Calls(procedure, _)  pattern assign(_, "4300+else")  pattern assign(_, _)  pattern assign(_, "900/4000") with print.varName=print.varName  such that Affects*(assign, stmt)  pattern while(constant, _)  such that Calls*("call", procedure)  pattern while(then, _)  such that Follows(assign, 13)  pattern while(variable, _)  pattern while(while, _) with call.procName="assign" with print.stmt#=call.stmt#  pattern if(_, _, _)  pattern if(variable, _, _)  pattern while(print, _)  pattern if(constant, _, _)  such that Calls*("while", procedure)  pattern if(variable, _, _)  pattern if(variable, _, _) with "else"=variable.varName  pattern if(_, _, _) with procedure.procName="procedure"  such that Calls*(procedure, "if")  pattern while(while, _) with call.stmt#=2500  such that Next(_, call)  pattern while(_, _) with "read"=read.varName with print.varName="procedure" with stmt.stmt#=print.stmt#  pattern assign(variable, "6300*3800")  pattern while(variable, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern assign(print, _)  pattern while(_, _) with procedure.procName="call" with variable.varName=print.varName  such that Follows*(29, while) with 3000=read.stmt# with read.varName=call.procName with constant.value=print.stmt# with print.varName="assign"  pattern while(then, _) with "procedure"=print.varName with "else"=variable.varName  pattern while(_, _)  pattern while(_, _) with if.stmt#=stmt.stmt#  pattern if(variable, _, _) with "call"=call.procName  pattern if(print, _, _)  pattern while(variable, _) with call.procName=call.procName  such that Uses(call, "constant")  pattern assign(variable, "1100+1700")  pattern assign(_, _"5000+3800"_) with procedure.procName="if"  such that Affects(1, assign)  pattern if(print, _, _)  pattern assign(variable, _)  such that Next(2, read)  such that Follows(23, stmt)  such that Affects*(7, assign) with call.procName="print" with 5000=print.stmt#  pattern while(variable, _)  such that Modifies(procedure, _) with 8400=while.stmt#  such that Calls*("constant", procedure)  pattern while(_, _)  such that Parent(stmt, _) with stmt.stmt#=9900 with 2200=read.stmt#  pattern if(procedure, _, _)  pattern assign(variable, "6200*3600")  pattern assign(_, _)  such that Modifies(16, variable)  pattern while(variable, _)  pattern if(if, _, _)  pattern if(while, _, _) with call.stmt#=2400  pattern assign(variable, _"3400+5200"_)  pattern assign(variable, _)  pattern assign(_, _) with "constant"=read.varName with "while"=call.procName with procedure.procName="read" with assign.stmt#=call.stmt#  such that Uses(call, "while")  pattern assign(_, _"100*9500"_) with if.stmt#=stmt.stmt#  such that Parent(_, print)  such that Next*(read, stmt)  pattern if(_, _, _)  pattern while(if, _)  pattern assign(_, _)  pattern assign(constant, _)  such that Calls(procedure, procedure) with print.varName="read"  such that Affects(stmt, assign)  pattern assign(else, _"7100*6200"_)  such that Calls*(procedure, procedure) with read.varName=procedure.procName with call.procName="else"  pattern assign(_, "1400-3900")  pattern while(variable, _)  such that Parent(assign, stmt) with procedure.procName=call.procName  pattern if(else, _, _) with "assign"=call.procName  such that Parent*(22, if) with 9300=constant.value with call.stmt#=call.stmt#  pattern while(read, _)  pattern while(_, _)  such that Calls("call", procedure)  pattern while(_, _) with read.stmt#=while.stmt#  pattern while(_, _)  pattern while(variable, _)  pattern if(_, _, _)  pattern if(_, _, _)  such that Follows(assign, while)  pattern while(variable, _)  pattern assign(_, "6500+7500")  such that Next*(stmt, _)  such that Parent(read, _) with "variable"=read.varName  pattern while(_, _)  such that Uses(read, "procedure")  such that Calls(procedure, procedure)  pattern if(variable, _, _)  pattern assign(_, _)  pattern assign(else, _"read*2000"_)  pattern if(_, _, _)  pattern while(variable, _)  pattern while(_, _)  pattern if(variable, _, _)  pattern while(print, _) with call.stmt#=print.stmt#  pattern while(variable, _) with if.stmt#=stmt.stmt#  pattern if(_, _, _) with read.varName="if"  such that Affects*(assign, _)  pattern if(variable, _, _)  pattern assign(variable, _) with stmt.stmt#=8600 with "while"=read.varName  pattern assign(_, _)  such that Parent*(assign, assign) with 300=stmt.stmt#  pattern while(procedure, _) with procedure.procName="variable"  pattern if(variable, _, _)  pattern assign(_, _"700*6100"_) with 800=assign.stmt# with assign.stmt#=2600  pattern while(variable, _)  pattern if(read, _, _)  pattern if(read, _, _)  pattern assign(if, _)  pattern assign(variable, "(600-4400)+900") with stmt.stmt#=7200  such that Uses(13, variable)  such that Next(read, stmt)  such that Modifies(call, "read")  such that Next(read, 10) 

5000
2 - Query 2
assign assign; print print; variable variable; call call; constant constant; stmt stmt; read read; while while; if if; procedure procedure; 
Select <assign, print, variable, call, constant, stmt, read, while, if, procedure>  pattern assign(else, _) with read.varName="procedure" with procedure.procName=print.varName with variable.varName="variable"  pattern while(_, _)  such that Uses(assign, "call") with procedure.procName="read" with print.varName="then"  pattern if(assign, _, _) with stmt.stmt#=2100 with procedure.procName="while" with read.varName="assign"  pattern assign(variable, "7700-4100") with assign.stmt#=7500  pattern assign(else, _) with "if"=variable.varName  pattern assign(procedure, "6200+600") with print.varName="constant"  such that Uses(while, "call")  pattern assign(variable, _"1800-1900"_)  pattern while(variable, _)  pattern assign(_, _) with call.procName="variable"  such that Parent*(print, 1)  such that Affects(27, assign) with call.procName="assign"  pattern assign(_, _)  pattern while(call, _) with constant.value=assign.stmt#  pattern if(variable, _, _)  such that Affects*(assign, _)  pattern while(variable, _)  pattern assign(if, _"4700*7700"_) with print.varName="read" with assign.stmt#=200  such that Parent(stmt, _)  pattern if(_, _, _) with 9300=print.stmt# with while.stmt#=4700 with call.procName=print.varName  pattern if(variable, _, _)  such that Affects(_, assign)  pattern assign(variable, "print-7200")  pattern while(variable, _)  pattern assign(_, "4700*9300") with assign.stmt#=3600  pattern assign(_, _)  such that Affects*(stmt, stmt)  pattern if(print, _, _)  pattern if(assign, _, _)  pattern assign(read, _) with "procedure"=call.procName  pattern while(_, _)  pattern while(variable, _)  pattern if(_, _, _)  such that Next(while, read)  pattern while(variable, _) with "print"=print.varName  pattern if(_, _, _)  pattern while(variable, _)  pattern while(variable, _)  pattern assign(_, _) with variable.varName="print"  pattern if(variable, _, _) with call.stmt#=print.stmt# with read.stmt#=9000 with read.varName=procedure.procName  pattern if(if, _, _)  pattern while(_, _)  pattern assign(variable, _"4300*7400"_) with call.procName="then" with assign.stmt#=stmt.stmt# with read.stmt#=constant.value  pattern while(assign, _)  pattern assign(else, _) with if.stmt#=3600  such that Affects(_, assign)  pattern if(read, _, _) with 4300=print.stmt# with stmt.stmt#=1100  such that Follows*(if, read)  such that Modifies(assign, variable) with "assign"=print.varName  pattern assign(read, _"6400-7100"_)  pattern while(variable, _)  pattern while(print, _) with call.procName="call"  pattern while(if, _) with procedure.procName=read.varName with procedure.procName=print.varName  such that Follows(assign, _)  such that Parent(_, stmt)  pattern if(variable, _, _)  such that Affects*(stmt, 8)  pattern assign(procedure, _)  pattern assign(print, "(6600+700)+5100")  pattern assign(constant, _"7800*1900"_)  pattern while(_, _)  pattern assign(variable, _)  pattern while(variable, _) with if.stmt#=if.stmt# with read.stmt#=read.stmt#  pattern while(_, _)  pattern if(_, _, _)  such that Next*(21, stmt)  pattern assign(_, "5700-5400")  pattern while(variable, _)  pattern while(variable, _)  such that Next*(call, _)  such that Parent(25, assign)  such that Follows(print, 5)  such that Follows(_, print)  pattern if(variable, _, _)  such that Follows*(call, 1)  pattern if(_, _, _)  pattern assign(constant, _)  such that Uses(22, variable)  pattern if(call, _, _)  pattern assign(_, _)  such that Modifies(call, variable) with call.procName="read"  pattern assign(call, "9700*3700")  pattern while(variable, _) with print.stmt#=400  pattern while(_, _)  such that Follows*(stmt, 24)  pattern while(while, _) with "else"=variable.varName with procedure.procName=read.varName  such that Calls(procedure, _) with print.stmt#=if.stmt#  pattern assign(variable, _"9300*while"_)  pattern assign(_, "8800*3900") with "call"=print.varName  pattern if(variable, _, _)  such that Next*(26, while)  such that Calls*(_, procedure)  pattern if(_, _, _)  pattern assign(_, _"3200-6000"_) with 1700=if.stmt#  pattern assign(variable, _) with read.varName=print.varName with 6400=assign.stmt#  such that Next*(print, if) with print.varName="constant" with assign.stmt#=200 with variable.varName=print.varName with stmt.stmt#=if.stmt# with read.stmt#=4100 with read.varName="read"  such that Uses(print, variable)  pattern if(variable, _, _) with 7100=if.stmt# with call.stmt#=8900  such that Next*(_, call) with call.stmt#=constant.value  such that Next(assign, call)  such that Modifies(assign, "while") with while.stmt#=6300 with stmt.stmt#=while.stmt# with constant.value=call.stmt# with read.varName=print.varName  pattern if(variable, _, _)  pattern assign(call, _"9800-read"_) with if.stmt#=stmt.stmt#  such that Affects(stmt, _)  pattern while(call, _) with constant.value=5700  pattern while(else, _)  pattern while(_, _)  pattern assign(_, _"1000*5600"_) with 4100=print.stmt#  pattern assign(_, "9100+700") with "variable"=variable.varName  pattern while(_, _)  pattern while(_, _)  pattern while(_, _)  pattern if(_, _, _)  pattern if(_, _, _) with assign.stmt#=while.stmt# with read.stmt#=8600  such that Calls*(_, procedure) with 6400=stmt.stmt#  pattern if(while, _, _)  such that Follows(if, 19)  pattern if(variable, _, _)  such that Calls*(procedure, procedure) with 7000=while.stmt#  pattern while(variable, _) with constant.value=6300  such that Parent*(_, if)  such that Calls*("call", procedure)  such that Uses(call, "call")  such that Parent*(print, while)  pattern while(variable, _)  such that Uses(procedure, _) with "procedure"=print.varName with 6700=stmt.stmt#  pattern if(variable, _, _)  such that Follows*(20, assign)  such that Affects(stmt, _) with call.stmt#=400 with print.varName="while"  such that Calls(_, procedure) with read.varName="while"  pattern if(if, _, _)  pattern while(call, _) with 4600=print.stmt#  pattern assign(variable, "5800/5800")  pattern if(procedure, _, _) with call.procName="if"  pattern assign(_, "(3900*6800)-100") with assign.stmt#=3200 with 2800=while.stmt#  pattern assign(_, "3900*9100") with read.stmt#=if.stmt#  pattern while(variable, _) with read.varName="if" with print.stmt#=constant.value  such that Follows*(stmt, stmt)  such that Next*(assign, if) with 3000=print.stmt#  pattern while(while, _)  pattern assign(_, "1700*4900")  pattern assign(while, _"400/3900"_)  pattern if(_, _, _)  pattern if(variable, _, _)  such that Uses(2, variable)  pattern if(_, _, _)  such that Calls(procedure, _)  pattern assign(variable, _"4200/while"_)  pattern assign(read, "2200+6800")  such that Next*(read, _)  pattern while(read, _)  pattern assign(variable, _)  such that Calls(procedure, procedure)  such that Parent*(assign, 4) with read.stmt#=while.stmt#  pattern while(_, _)  pattern while(variable, _) with read.varName=procedure.procName  pattern assign(call, "2000-900")  pattern if(variable, _, _)  such that Follows*(print, 17)  pattern if(variable, _, _) with print.varName=call.procName  pattern if(variable, _, _)  such that Calls(procedure, procedure) with print.varName="print"  pattern if(_, _, _)  pattern assign(if, "1800*6500")  pattern if(while, _, _)  pattern while(if, _) with call.procName=print.varName  pattern while(then, _)  pattern while(variable, _)  pattern while(while, _)  such that Parent(read, 26)  such that Parent*(read, _)  such that Follows(26, while)  such that Uses(print, variable)  pattern assign(_, "7300-2700")  pattern assign(_, _"1900+3700"_) with print.varName="read"  pattern if(_, _, _) with stmt.stmt#=print.stmt#  such that Next(6, stmt) with procedure.procName="print" with while.stmt#=constant.value with "call"=call.procName  pattern while(_, _)  pattern while(variable, _) with "procedure"=read.varName  such that Affects*(11, stmt)  pattern while(_, _) with call.procName="call"  such that Calls*(procedure, procedure)  such that Next(_, call)  pattern while(variable, _)  pattern while(_, _)  pattern if(variable, _, _)  such that Calls*(procedure, _)  pattern while(variable, _)  such that Affects(_, stmt) with assign.stmt#=read.stmt#  such that Follows*(call, 17) with assign.stmt#=300  pattern if(assign, _, _)  pattern assign(variable, "6600/procedure")  pattern if(_, _, _)  pattern if(variable, _, _) with if.stmt#=9000 with call.procName=procedure.procName with while.stmt#=print.stmt# with 6600=stmt.stmt#  such that Calls*(_, procedure)  pattern if(variable, _, _)  pattern while(variable, _)  such that Calls*(_, procedure)  pattern assign(_, _"5000/8500"_)  such that Calls(_, procedure)  pattern if(variable, _, _)  pattern while(print, _)  pattern assign(read, "variable*6300")  pattern if(variable, _, _) with while.stmt#=3300 with stmt.stmt#=print.stmt#  pattern assign(while, _)  pattern if(variable, _, _)  pattern if(_, _, _) with 3800=constant.value  pattern assign(_, _)  such that Affects*(stmt, 17) with call.stmt#=call.stmt# with "procedure"=print.varName  such that Affects(23, assign) with call.procName=variable.varName with "variable"=variable.varName with read.stmt#=read.stmt# with variable.varName="else" with "else"=procedure.procName  such that Next*(_, print) with variable.varName="then" with print.varName=call.procName  pattern if(variable, _, _)  pattern assign(variable, _"3400*9700"_)  pattern if(while, _, _)  pattern if(print, _, _) with 8800=read.stmt#  pattern assign(variable, "4500*4000") with procedure.procName="then"  pattern if(variable, _, _)  such that Affects(stmt, _) with "variable"=print.varName  pattern while(assign, _)  such that Modifies(26, variable)  such that Affects(20, assign) with print.stmt#=4900  pattern assign(variable, _)  such that Parent(print, _)  pattern if(variable, _, _) with variable.varName=procedure.procName  such that Follows*(read, _)  such that Parent*(while, _) with 9700=if.stmt#  pattern if(variable, _, _)  pattern if(variable, _, _) with "while"=procedure.procName  such that Parent(_, if)  such that Calls(procedure, procedure)  pattern assign(_, _) with 3500=if.stmt#  pattern assign(while, "2700*9800")  pattern if(variable, _, _)  such that Next*(23, read)  pattern if(_, _, _)  pattern if(variable, _, _) with while.stmt#=call.stmt# with call.procName=variable.varName with read.stmt#=2900  pattern if(variable, _, _)  such that Parent(_, stmt)  pattern if(_, _, _)  such that Follows(call, _) with call.procName=read.varName  such that Follows*(if, while)  such that Calls*(procedure, _) with print.varName="assign"  such that Next*(call, 19)  such that Next*(if, _)  pattern if(_, _, _)  pattern while(variable, _) with "variable"=print.varName  such that Follows(_, stmt) with read.varName=print.varName  pattern if(variable, _, _)  such that Calls*(procedure, _)  pattern while(variable, _)  pattern while(_, _)  pattern while(_, _)  pattern if(variable, _, _)  pattern assign(while, _)  pattern assign(_, "8900+4000")  such that Affects(stmt, _) with constant.value=call.stmt#  such that Follows(_, read) with "call"=read.varName  such that Affects(assign, _)  pattern assign(_, _) with procedure.procName="read"  such that Calls("procedure", procedure)  pattern while(_, _) with stmt.stmt#=8600  pattern if(_, _, _)  pattern assign(if, _)  pattern while(while, _)  pattern while(variable, _) with 4800=stmt.stmt# with assign.stmt#=3100  such that Uses(call, variable)  pattern while(_, _) with "procedure"=print.varName  pattern while(variable, _) with 5900=if.stmt#  pattern assign(variable, _"(7200-5800)-9300"_)  pattern assign(variable, "8500/2800")  pattern while(variable, _) with if.stmt#=5800 with "print"=procedure.procName  such that Modifies(stmt, _)  pattern assign(variable, _)  pattern while(_, _) with read.stmt#=while.stmt#  pattern if(variable, _, _)  pattern assign(variable, _"3200-300"_)  such that Next*(assign, 15)  pattern while(then, _) with constant.value=constant.value with "then"=procedure.procName with call.stmt#=stmt.stmt#  such that Parent(_, if)  pattern if(variable, _, _)  such that Modifies(2, variable)  pattern while(variable, _)  such that Next(_, assign)  pattern assign(_, _"3800*4500"_)  pattern if(while, _, _)  pattern assign(variable, _) with print.varName="print"  pattern while(_, _) with read.varName=print.varName  such that Calls("constant", procedure)  such that Affects*(assign, _) with read.varName="while"  such that Modifies(call, variable)  pattern if(variable, _, _) with constant.value=7400  pattern while(variable, _) with 4100=assign.stmt# with "while"=variable.varName  such that Next(16, if)  such that Affects*(_, assign) with constant.value=while.stmt#  such that Parent(stmt, 9)  such that Affects*(stmt, _)  pattern while(while, _)  such that Follows(16, while)  pattern if(variable, _, _) with read.stmt#=stmt.stmt#  pattern while(constant, _)  pattern if(read, _, _) with "if"=call.procName with print.varName=print.varName  such that Follows(_, print)  such that Affects(stmt, 20)  pattern if(_, _, _)  pattern assign(variable, "variable+5600") with 5200=while.stmt#  such that Next(call, _)  pattern assign(_, _)  such that Parent*(while, _) with procedure.procName=call.procName  pattern if(print, _, _) with print.stmt#=read.stmt# with read.stmt#=stmt.stmt# with "while"=variable.varName  pattern while(else, _)  such that Next*(while, assign)  such that Next(call, print)  such that Follows*(read, 14)  such that Calls(procedure, _) with if.stmt#=print.stmt# with "variable"=variable.varName  pattern if(variable, _, _) with constant.value=call.stmt#  pattern assign(while, "3100+9700")  pattern while(constant, _)  pattern while(variable, _) with if.stmt#=print.stmt#  such that Calls("variable", procedure)  pattern while(constant, _)  such that Follows(stmt, _)  such that Next(print, stmt)  pattern assign(_, _"3500+5400"_)  pattern assign(variable, "2800/4100") with while.stmt#=call.stmt#  such that Modifies(print, "if")  such that Next(21, while)  such that Calls(procedure, procedure)  pattern assign(variable, _)  such that Uses(while, "then")  pattern if(procedure, _, _)  such that Next(_, stmt)  pattern assign(constant, _)  such that Follows(assign, stmt)  such that Next(if, _) with call.stmt#=1400  such that Affects(assign, _)  such that Parent(_, read)  such that Follows*(print, 16) 

5000
3 - Query 3
variable variable; assign assign; print print; constant constant; stmt stmt; read read; procedure procedure; while while; if if; call call; 
Select <variable, assign, print, constant, stmt, read, procedure, while, if, call>  pattern assign(variable, _)  such that Parent*(27, stmt) with 3200=call.stmt#  pattern while(procedure, _) with while.stmt#=6200  such that Calls*(procedure, "constant") with procedure.procName="procedure"  such that Calls*(procedure, _)  such that Calls(procedure, "else") with variable.varName="then"  pattern while(constant, _) with read.varName=procedure.procName with "call"=read.varName with variable.varName="procedure" with "then"=read.varName  pattern assign(variable, _"800/6000"_) with 3900=if.stmt#  pattern if(_, _, _)  pattern if(read, _, _)  such that Next*(while, _) with while.stmt#=call.stmt#  such that Next*(print, 26)  pattern assign(procedure, _)  such that Next(14, assign)  pattern if(variable, _, _)  pattern assign(_, _)  pattern assign(variable, _"9600/4800"_)  pattern assign(_, _)  pattern while(_, _)  pattern assign(_, "3300/1200") with read.varName=read.varName  pattern if(variable, _, _) with variable.varName=procedure.procName  pattern assign(_, _"2900*4800"_) with procedure.procName="while" with call.procName=print.varName  pattern if(variable, _, _)  pattern if(if, _, _) with while.stmt#=if.stmt#  pattern while(_, _) with stmt.stmt#=1800  such that Follows(while, _)  such that Next(_, stmt)  such that Next*(_, call)  such that Next(stmt, _)  pattern assign(_, _"2300-6000"_)  such that Modifies(while, "procedure")  pattern assign(_, "1600+6300")  pattern while(variable, _) with variable.varName=read.varName  such that Affects*(23, stmt) with "variable"=print.varName with if.stmt#=8600  such that Affects*(_, stmt)  pattern while(_, _)  such that Parent*(if, 6) with "while"=call.procName  pattern assign(_, _)  pattern while(constant, _) with read.varName="variable"  pattern if(variable, _, _)  such that Affects*(stmt, stmt)  pattern while(variable, _)  such that Calls(_, procedure)  such that Parent(_, call) with variable.varName="if" with constant.value=if.stmt#  pattern if(variable, _, _)  pattern while(variable, _)  pattern assign(_, "5100/8500") with stmt.stmt#=1600 with if.stmt#=assign.stmt# with call.stmt#=2600  such that Uses(stmt, _) with procedure.procName="if"  pattern if(else, _, _) with 5100=assign.stmt#  pattern if(_, _, _) with print.stmt#=print.stmt#  such that Calls(procedure, "assign")  pattern assign(_, "6300+4700")  such that Next(assign, 27)  pattern if(procedure, _, _)  pattern while(constant, _)  pattern if(variable, _, _) with call.procName=variable.varName  pattern assign(_, "6500+6200")  pattern if(procedure, _, _) with call.stmt#=8100 with read.stmt#=5800  pattern while(then, _)  pattern while(print, _)  such that Parent(call, 24) with if.stmt#=6800  pattern assign(_, _)  such that Parent(_, if)  such that Next(if, 28)  pattern while(variable, _)  pattern if(variable, _, _)  such that Affects(26, assign) with call.procName="call"  such that Parent*(11, read)  pattern assign(variable, "2300*if")  pattern if(variable, _, _) with 2000=stmt.stmt#  pattern assign(_, _)  pattern if(_, _, _) with procedure.procName=print.varName with print.stmt#=7500  pattern if(variable, _, _)  pattern assign(variable, _)  pattern assign(assign, _"(2600-call)-500"_) with while.stmt#=5200 with "if"=print.varName with call.procName=read.varName  pattern assign(while, _)  such that Calls*(procedure, "if")  pattern while(_, _)  pattern while(_, _) with print.stmt#=print.stmt#  pattern while(if, _)  such that Parent(_, call)  pattern assign(variable, _"9200*2400"_)  pattern assign(_, _"assign/1500"_) with constant.value=7000 with "procedure"=call.procName  such that Calls(procedure, procedure)  pattern while(variable, _)  pattern if(call, _, _)  pattern assign(_, _"if*8300"_)  pattern while(while, _)  such that Next*(read, call) with read.varName=procedure.procName  pattern assign(variable, _) with 6600=while.stmt# with print.stmt#=800 with print.varName=print.varName  such that Uses(print, "assign") with procedure.procName=read.varName  pattern assign(then, _) with variable.varName="assign"  pattern assign(then, _) with "read"=read.varName  pattern if(variable, _, _)  such that Modifies(while, "if")  pattern while(_, _) with read.varName=variable.varName  pattern assign(variable, _"5100/call"_)  pattern while(_, _) with print.stmt#=constant.value  pattern assign(_, "1800/600") with procedure.procName=variable.varName  pattern if(_, _, _)  such that Follows(assign, 20) with 5900=assign.stmt# with print.varName=print.varName  pattern if(_, _, _)  pattern if(procedure, _, _)  pattern if(_, _, _)  pattern if(variable, _, _)  such that Parent(_, read)  pattern if(_, _, _) with 400=constant.value with procedure.procName=read.varName with variable.varName="else" with "while"=print.varName with print.varName=procedure.procName  pattern if(variable, _, _) with assign.stmt#=read.stmt#  pattern assign(_, _)  pattern assign(else, _) with 7200=call.stmt# with procedure.procName="print" with call.procName="assign" with 900=stmt.stmt#  such that Calls("variable", procedure)  pattern if(variable, _, _)  pattern assign(variable, "9400*then")  pattern while(variable, _)  pattern assign(_, _) with call.stmt#=constant.value  pattern while(_, _)  pattern assign(_, _)  such that Uses(print, variable)  pattern assign(_, "3100+6100") with while.stmt#=9600  pattern assign(variable, "3500+600")  such that Follows*(_, stmt) with "constant"=variable.varName with procedure.procName=print.varName  pattern if(variable, _, _)  such that Calls(procedure, "constant")  such that Next(call, read)  pattern assign(_, _"8500*procedure"_)  such that Affects(26, stmt)  such that Affects*(24, assign)  such that Affects(stmt, assign)  pattern while(_, _)  pattern if(call, _, _)  pattern assign(constant, "(4400/2900)+3500") with call.procName="call"  such that Affects(assign, _)  such that Follows(assign, _)  pattern assign(_, _"1700+7000"_)  pattern if(variable, _, _) with 2100=assign.stmt#  pattern if(_, _, _)  pattern assign(_, _) with print.varName=procedure.procName  pattern assign(_, _)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern while(variable, _) with variable.varName="variable"  pattern while(_, _)  pattern while(while, _)  pattern if(_, _, _) with call.procName=read.varName  such that Affects*(_, assign)  pattern while(print, _)  such that Follows(read, 22)  such that Affects*(stmt, stmt)  such that Calls(procedure, procedure)  pattern if(else, _, _)  pattern if(then, _, _) with print.varName="print"  pattern assign(variable, "2600+if")  such that Parent(print, _)  such that Calls(procedure, procedure)  pattern assign(call, _"3500*5600"_)  pattern while(variable, _)  pattern assign(variable, _"1100/4400"_)  pattern while(procedure, _)  pattern if(variable, _, _)  such that Affects*(stmt, assign)  pattern if(_, _, _)  pattern while(_, _)  pattern if(_, _, _)  pattern if(_, _, _) with while.stmt#=2200  pattern while(variable, _)  such that Affects(18, assign) with call.stmt#=6100 with 1400=if.stmt#  pattern if(variable, _, _)  such that Next*(if, 5) with assign.stmt#=7900  such that Follows(stmt, call)  pattern assign(variable, "6200/5400")  pattern if(_, _, _)  such that Affects(_, assign)  pattern while(_, _)  pattern if(constant, _, _)  pattern while(variable, _) with print.stmt#=1800 with 7300=constant.value with procedure.procName=read.varName with stmt.stmt#=3100  such that Parent*(stmt, 15)  pattern while(variable, _) with read.varName=read.varName  pattern assign(_, "3800/read")  pattern if(variable, _, _) with read.varName="constant"  pattern if(variable, _, _) with variable.varName=procedure.procName  pattern if(variable, _, _) with 4600=call.stmt# with variable.varName=variable.varName with "if"=variable.varName  such that Next*(while, _)  pattern while(variable, _)  pattern if(variable, _, _) with "assign"=variable.varName  pattern while(if, _)  pattern assign(variable, _)  pattern assign(_, _)  such that Parent(assign, if) with assign.stmt#=print.stmt#  pattern assign(variable, "8400/3400")  pattern while(variable, _) with print.stmt#=3700  pattern assign(read, _"if+2600"_) with procedure.procName=call.procName with constant.value=while.stmt#  pattern assign(variable, "7800/2800") with procedure.procName="then" with "while"=call.procName with print.stmt#=5900  pattern while(_, _)  such that Parent(read, if)  pattern assign(variable, _"300*6600"_) with read.varName=call.procName with stmt.stmt#=while.stmt# with 8200=print.stmt#  pattern if(call, _, _)  pattern while(while, _) with if.stmt#=call.stmt#  pattern if(_, _, _) with call.stmt#=while.stmt#  such that Parent*(while, stmt) with procedure.procName=print.varName  such that Affects*(13, assign)  such that Modifies(procedure, _)  pattern assign(variable, "5900/2000")  such that Follows(call, 14)  pattern if(variable, _, _) with while.stmt#=9500 with read.stmt#=5800 with call.procName="if"  pattern if(read, _, _)  such that Calls*(procedure, _) with print.varName=print.varName  pattern if(_, _, _) with procedure.procName=print.varName with call.procName=variable.varName  pattern if(variable, _, _)  such that Parent(_, if)  pattern if(_, _, _) with call.procName="then"  pattern if(call, _, _) with 4400=assign.stmt#  pattern while(variable, _)  such that Affects(_, stmt) with stmt.stmt#=9700 with print.varName=procedure.procName with 8800=constant.value  pattern while(print, _)  such that Follows(while, 16)  such that Follows(print, 4)  pattern assign(while, _)  pattern assign(variable, _) with variable.varName=procedure.procName  such that Next(_, print)  such that Follows*(read, 14) with "procedure"=read.varName  pattern assign(constant, _)  pattern while(read, _) with call.procName=call.procName with procedure.procName="assign" with if.stmt#=call.stmt#  such that Affects(stmt, 23)  pattern while(_, _) with "procedure"=variable.varName  such that Calls(_, procedure)  pattern assign(variable, _)  pattern assign(while, "3300*9900")  pattern if(read, _, _)  pattern while(variable, _)  such that Calls(_, procedure)  pattern assign(else, _"7300/1600"_)  pattern while(variable, _)  pattern while(_, _)  such that Affects(stmt, 17)  pattern while(call, _)  pattern if(variable, _, _)  pattern assign(variable, _"(9500*1000)/6800"_)  pattern assign(variable, "if/4600")  pattern while(variable, _)  pattern assign(else, _)  pattern assign(variable, "7100/9000")  pattern assign(variable, _)  such that Affects*(stmt, _) with if.stmt#=stmt.stmt# with print.stmt#=6200  pattern while(constant, _) with variable.varName="then"  such that Calls(procedure, procedure)  pattern assign(_, _"3100-6800"_)  pattern assign(constant, _) with procedure.procName=print.varName  pattern while(variable, _)  pattern while(while, _) with variable.varName="if" with if.stmt#=9600 with 2900=print.stmt#  pattern assign(constant, "7300*7700") with constant.value=if.stmt# with call.procName=read.varName  such that Follows(call, _)  pattern assign(_, _"9800-3300"_)  such that Affects(assign, stmt)  such that Uses(if, _)  such that Modifies(read, "else")  pattern assign(_, _)  such that Affects*(assign, _)  such that Parent*(29, call)  pattern while(variable, _)  pattern if(_, _, _)  such that Affects(assign, _) with print.stmt#=5200  pattern assign(variable, _"8600*4000"_)  pattern while(read, _)  such that Calls(procedure, procedure)  pattern assign(variable, "5200/else") with stmt.stmt#=read.stmt#  pattern while(variable, _)  such that Affects(stmt, _)  pattern assign(_, _)  pattern while(procedure, _) with "else"=call.procName with "else"=procedure.procName  pattern if(constant, _, _)  pattern while(variable, _)  pattern if(_, _, _)  pattern if(variable, _, _)  pattern assign(assign, _"4900/8500"_) with assign.stmt#=3200  pattern if(then, _, _)  pattern assign(while, _"3100-7300"_)  such that Parent*(22, if) with call.procName="else"  such that Next*(if, _)  such that Next*(assign, 18) with assign.stmt#=7800  such that Parent*(print, if)  pattern assign(variable, "5200*call")  such that Follows*(read, while)  pattern assign(_, _) with "call"=variable.varName  pattern if(else, _, _)  pattern while(assign, _)  such that Calls*(procedure, _) with read.varName="read"  pattern while(variable, _)  such that Next(_, while)  pattern assign(call, _"(1400+7100)/1600"_)  pattern if(if, _, _) with read.varName="print" with call.procName="assign" with read.stmt#=9700  pattern while(_, _)  pattern while(variable, _) with call.procName="if"  pattern if(variable, _, _)  pattern assign(call, _)  pattern assign(variable, "8800*5800") with if.stmt#=if.stmt#  pattern assign(variable, _)  such that Parent(stmt, 13) with variable.varName=print.varName  pattern assign(print, _"7800+8000"_)  pattern while(else, _)  such that Parent(stmt, _) with "print"=variable.varName  pattern if(then, _, _) with call.procName="else"  pattern assign(variable, "7200+5600") with variable.varName=variable.varName  pattern while(then, _)  pattern while(variable, _)  such that Calls(procedure, _)  such that Parent(read, print) with 1700=print.stmt#  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern if(_, _, _) with 6200=while.stmt#  pattern while(variable, _)  pattern assign(procedure, "8400*8500")  such that Follows(while, 12)  such that Modifies(if, _)  pattern while(variable, _)  such that Next*(while, 12)  pattern while(procedure, _) with "assign"=read.varName  pattern assign(_, "7400/400") with procedure.procName=call.procName  pattern assign(variable, _)  such that Follows(if, _)  such that Next(_, call)  pattern while(variable, _) with "procedure"=read.varName with "assign"=call.procName with stmt.stmt#=6200 with "call"=print.varName with stmt.stmt#=4400 with variable.varName=variable.varName with variable.varName=variable.varName  such that Affects*(stmt, stmt) with procedure.procName="constant"  such that Parent*(assign, 7) with assign.stmt#=print.stmt#  such that Modifies(5, variable)  pattern assign(assign, _"7400-4600"_) with print.stmt#=call.stmt#  pattern if(procedure, _, _)  such that Next*(call, _)  pattern assign(_, _) with stmt.stmt#=6900 with 500=while.stmt#  pattern assign(variable, _"9400-6300"_) with "call"=procedure.procName with "read"=call.procName  pattern if(call, _, _)  pattern assign(read, _"1000*1700"_) with 700=constant.value  pattern while(_, _)  pattern if(_, _, _) 

5000
4 - Query 4
assign assign; variable variable; constant constant; call call; print print; stmt stmt; read read; if if; while while; procedure procedure; 
Select <assign, variable, constant, call, print, stmt, read, if, while, procedure>  such that Follows(if, _) with procedure.procName="constant"  pattern if(if, _, _)  pattern assign(_, _"5700/while"_)  such that Follows(28, if)  such that Next*(5, while) with procedure.procName="assign"  such that Parent*(_, assign)  such that Follows(while, _)  pattern if(assign, _, _)  pattern while(variable, _)  pattern while(variable, _) with variable.varName="call"  pattern if(_, _, _)  pattern while(while, _)  pattern assign(_, "1600*3500")  pattern assign(_, "(4200*2300)-6300")  pattern while(print, _)  pattern while(variable, _)  pattern assign(_, _) with 6500=constant.value with variable.varName=procedure.procName  such that Follows*(stmt, _)  pattern if(variable, _, _) with call.stmt#=constant.value with print.stmt#=6200  such that Follows(assign, 16)  pattern if(_, _, _)  pattern if(_, _, _)  pattern while(read, _)  pattern assign(variable, _"(300+4000)*5500"_)  pattern while(_, _)  such that Follows*(_, while)  pattern assign(call, _"6200-5500"_)  such that Follows*(print, if)  pattern if(variable, _, _)  pattern while(variable, _)  pattern if(constant, _, _)  pattern while(read, _)  such that Follows*(assign, while)  such that Affects*(stmt, _)  pattern while(_, _)  pattern while(_, _) with call.procName="constant"  pattern if(variable, _, _) with print.varName="if" with call.procName=variable.varName with "while"=call.procName  pattern assign(constant, _)  such that Next(assign, 6)  such that Modifies(print, "call")  such that Parent*(if, _)  pattern assign(_, _"if*8400"_)  pattern assign(variable, _) with read.stmt#=while.stmt#  pattern if(variable, _, _)  such that Uses(stmt, _)  pattern while(variable, _)  such that Affects(_, stmt)  such that Next*(while, print)  pattern while(_, _)  pattern while(if, _) with call.procName=print.varName  such that Affects*(assign, assign) with stmt.stmt#=call.stmt#  such that Uses(26, variable)  pattern assign(print, _) with read.stmt#=2500  such that Calls("call", procedure)  pattern while(_, _)  pattern if(variable, _, _)  pattern assign(_, _"9700-100"_)  such that Calls*(procedure, "print") with call.stmt#=print.stmt#  pattern while(_, _)  such that Affects*(_, assign)  such that Uses(27, variable)  such that Follows(call, _) with call.procName="read" with call.stmt#=100  such that Calls(_, procedure) with 4200=call.stmt#  pattern while(_, _) with print.varName="else"  such that Modifies(assign, variable)  pattern if(_, _, _) with variable.varName="variable"  pattern if(_, _, _) with 8200=read.stmt#  pattern assign(_, _"(2300*constant)+1200"_)  such that Calls(procedure, _) with 200=if.stmt#  such that Parent*(_, assign) with if.stmt#=call.stmt# with constant.value=200 with stmt.stmt#=5100 with print.stmt#=2000  such that Parent*(read, 2)  such that Follows(print, 13)  such that Uses(if, variable)  pattern while(variable, _)  such that Next*(_, read)  pattern while(_, _) with if.stmt#=8400 with "assign"=procedure.procName  pattern assign(variable, "(then*4500)*then") with 600=constant.value with "constant"=read.varName  such that Modifies(if, variable)  pattern assign(_, _)  pattern assign(read, _) with procedure.procName=read.varName with "else"=call.procName with "then"=variable.varName  such that Modifies(procedure, "else") with 5500=if.stmt#  pattern while(assign, _)  pattern assign(assign, _)  pattern if(_, _, _)  such that Affects*(assign, 10)  such that Follows(stmt, while)  such that Affects(assign, stmt)  such that Next*(6, while) with while.stmt#=400  pattern assign(_, _)  pattern if(_, _, _)  such that Next*(_, call)  pattern assign(print, "5500/8300")  pattern while(_, _)  such that Follows*(if, _)  such that Affects(26, assign)  such that Follows(while, assign) with procedure.procName="print" with "if"=variable.varName  pattern while(read, _) with call.procName=read.varName  pattern assign(_, "6400-9900")  pattern while(variable, _)  pattern assign(then, _) with print.varName="while" with variable.varName="then"  pattern while(constant, _)  pattern assign(_, _"8700/7800"_) with 5200=read.stmt#  such that Parent*(_, print)  pattern assign(variable, _"assign/4400"_)  pattern while(variable, _)  such that Calls(_, procedure)  such that Follows(7, while)  pattern if(_, _, _) with "then"=call.procName  such that Modifies(assign, "procedure") with read.varName="else"  pattern while(while, _) with procedure.procName="procedure"  pattern while(variable, _)  pattern while(variable, _)  such that Affects(stmt, _)  such that Follows(while, 10)  such that Uses(procedure, "variable")  pattern while(_, _) with assign.stmt#=constant.value  such that Uses(procedure, variable) with procedure.procName=read.varName  pattern while(variable, _) with procedure.procName=procedure.procName  such that Parent*(28, stmt)  pattern while(variable, _)  pattern while(_, _)  pattern if(call, _, _)  pattern assign(_, _"3800/2800"_)  pattern assign(variable, _"(1400*5700)/500"_)  pattern if(variable, _, _)  such that Modifies(assign, variable) with read.stmt#=assign.stmt#  pattern while(variable, _)  pattern if(variable, _, _)  such that Next*(assign, _)  pattern assign(variable, _"1600+8400"_)  pattern if(variable, _, _)  pattern while(_, _) with "then"=call.procName with call.stmt#=read.stmt# with constant.value=constant.value  pattern if(variable, _, _)  such that Affects(stmt, 2)  pattern assign(variable, "1300+5500")  such that Affects*(_, stmt) with print.varName=print.varName  pattern assign(constant, _"5800*9300"_)  pattern assign(_, _"assign*procedure"_)  pattern if(variable, _, _)  such that Modifies(stmt, _) with stmt.stmt#=9900  pattern assign(constant, "5200*9100")  such that Uses(if, "if")  pattern while(variable, _) with while.stmt#=while.stmt#  pattern while(while, _) with read.stmt#=while.stmt#  such that Parent(stmt, 7) with variable.varName="variable"  such that Uses(if, "else") with assign.stmt#=8400  such that Next*(assign, while)  pattern if(_, _, _)  pattern if(constant, _, _) with 9500=call.stmt# with "assign"=read.varName  such that Next(stmt, 21)  such that Modifies(while, _)  pattern if(call, _, _)  such that Follows(assign, while)  such that Calls(procedure, _) with "variable"=call.procName with print.stmt#=4300 with assign.stmt#=constant.value  such that Follows(while, 21)  pattern while(_, _)  such that Affects(9, assign)  such that Affects*(assign, assign) with "while"=call.procName  pattern while(_, _)  such that Modifies(while, _)  pattern assign(then, "8900-800")  such that Affects(_, assign) with variable.varName=variable.varName  pattern while(_, _)  such that Affects(assign, 14)  pattern if(then, _, _)  pattern while(procedure, _)  such that Calls*(_, procedure)  pattern assign(variable, _"8400-1800"_)  pattern while(_, _)  pattern if(read, _, _) with procedure.procName="procedure"  pattern while(_, _)  pattern if(variable, _, _)  pattern assign(variable, _)  pattern assign(if, _) with variable.varName=read.varName  such that Follows(read, 9)  pattern assign(variable, _"2400/700"_)  pattern if(variable, _, _) with "if"=variable.varName with while.stmt#=call.stmt#  pattern if(assign, _, _) with constant.value=2900  pattern while(variable, _)  such that Follows(_, call) with "while"=read.varName  such that Uses(10, variable)  pattern if(print, _, _)  such that Next(call, _)  pattern assign(variable, _) with constant.value=while.stmt#  pattern assign(_, _)  pattern assign(variable, _"variable-8700"_)  pattern while(variable, _)  pattern while(variable, _)  pattern while(_, _) with print.varName=read.varName  pattern if(if, _, _)  such that Calls(procedure, "then")  pattern assign(variable, "3500-4200")  pattern if(procedure, _, _) with read.varName="if"  pattern while(_, _)  pattern if(variable, _, _)  pattern assign(read, _)  pattern while(_, _)  pattern assign(print, _"(constant+8600)/6500"_) with print.varName=print.varName  such that Follows(read, _) with while.stmt#=stmt.stmt# with "if"=call.procName  such that Calls(procedure, "read") with print.varName=call.procName with print.stmt#=assign.stmt#  such that Affects(13, stmt) with 9900=if.stmt#  pattern if(variable, _, _) with stmt.stmt#=1200  such that Follows*(assign, _)  such that Follows*(print, _)  such that Next(_, if) with assign.stmt#=8900 with print.stmt#=read.stmt# with call.procName="variable"  pattern while(_, _) with 8300=print.stmt# with call.stmt#=8700 with if.stmt#=assign.stmt#  pattern while(assign, _) with "else"=procedure.procName  pattern assign(call, _)  pattern while(variable, _)  pattern while(variable, _) with call.stmt#=2100 with print.varName="else"  pattern assign(_, _) with call.procName="while"  pattern assign(variable, _)  pattern if(call, _, _)  pattern assign(call, _) with call.procName="while"  such that Next*(_, while) with "read"=print.varName with call.procName="print" with stmt.stmt#=5200  pattern assign(variable, "5500/900")  pattern if(print, _, _)  pattern assign(while, "6300-4300")  pattern while(_, _) with 3400=while.stmt#  pattern while(variable, _)  such that Affects*(stmt, _)  such that Affects*(_, stmt)  pattern assign(_, "2100+else")  pattern if(_, _, _)  pattern assign(_, _"2000+4900"_)  pattern if(variable, _, _)  such that Parent*(_, if)  pattern if(print, _, _) with read.varName=read.varName  pattern if(_, _, _) with 7000=while.stmt#  pattern assign(print, _)  pattern while(variable, _) with "call"=variable.varName  such that Calls*(procedure, _)  pattern assign(else, "(1800*2100)+9500")  pattern assign(else, "8900-1800")  pattern assign(_, "(9500+700)-8000")  such that Affects(_, assign) with 600=while.stmt#  pattern assign(assign, _"8800*4600"_) with "while"=print.varName with "print"=procedure.procName  such that Uses(procedure, variable) with variable.varName=print.varName  pattern while(variable, _)  pattern if(_, _, _)  pattern assign(variable, "9200*5500")  pattern if(_, _, _)  such that Follows*(_, assign)  such that Parent*(1, print) with procedure.procName=read.varName with print.varName=procedure.procName  such that Calls*("while", procedure)  pattern if(print, _, _)  pattern while(constant, _) with 5000=call.stmt#  pattern while(call, _)  such that Parent*(read, _)  pattern while(variable, _)  pattern if(_, _, _) with call.stmt#=8900  pattern assign(procedure, "3200*4900") with 2900=print.stmt# with variable.varName="else"  such that Affects(stmt, _) with procedure.procName="assign"  such that Calls(procedure, "procedure")  pattern while(variable, _)  pattern assign(variable, _) with while.stmt#=8000  such that Calls(procedure, _)  such that Parent(assign, 11)  pattern assign(variable, "9600-4500")  such that Affects*(assign, _)  such that Affects(27, stmt)  pattern while(_, _) with constant.value=1400  pattern assign(_, "4300-4400")  such that Uses(procedure, variable) with call.stmt#=read.stmt#  pattern assign(_, "500*3800") with read.varName=print.varName with variable.varName="read"  such that Affects(stmt, assign)  pattern if(_, _, _)  pattern assign(_, _) with read.varName=read.varName  such that Next(while, stmt)  such that Modifies(call, variable)  pattern while(_, _) with while.stmt#=print.stmt# with while.stmt#=read.stmt# with 6900=assign.stmt# with "while"=variable.varName with call.procName=read.varName  such that Affects*(5, assign) with "procedure"=print.varName with assign.stmt#=stmt.stmt#  such that Parent(if, 15)  such that Follows(10, read)  pattern assign(_, _)  such that Calls*("assign", procedure)  pattern assign(_, _"900-5500"_)  such that Parent(assign, _)  pattern assign(constant, "7500*3200")  such that Next(stmt, _)  such that Parent(while, 7)  pattern if(then, _, _)  such that Follows(if, assign)  pattern while(variable, _)  such that Follows(if, call) with read.varName=variable.varName  such that Next(19, call)  pattern assign(call, "2600/5200")  pattern while(variable, _)  pattern assign(_, _"2700/500"_)  such that Uses(4, variable) with print.stmt#=call.stmt#  pattern assign(procedure, "4400*3500")  pattern if(read, _, _)  such that Parent*(read, while)  such that Follows(while, read)  pattern if(call, _, _) with procedure.procName="constant"  such that Uses(read, _)  pattern while(variable, _) with 4000=if.stmt# with 4000=call.stmt#  pattern while(procedure, _)  such that Calls*(_, procedure)  pattern while(variable, _)  pattern while(read, _)  such that Next*(assign, if) with constant.value=3800  such that Calls(_, procedure)  such that Uses(assign, "procedure") with "variable"=variable.varName  pattern assign(_, "7900*7500")  such that Affects(stmt, stmt)  such that Next*(call, 5)  such that Follows*(assign, 6) with "then"=read.varName with constant.value=9400  such that Modifies(if, "read")  pattern while(variable, _)  such that Calls(procedure, _) with constant.value=assign.stmt#  pattern assign(variable, _"800-2300"_)  pattern while(variable, _)  such that Follows(read, 7) with assign.stmt#=2300  pattern assign(_, _) with "while"=read.varName  pattern assign(read, "5800+100")  pattern while(variable, _) with print.varName="procedure"  pattern while(_, _) with read.varName=read.varName with "read"=procedure.procName  such that Next*(25, assign) with call.procName="else"  pattern while(_, _)  such that Parent(20, read)  such that Follows*(assign, 25) with procedure.procName="constant"  pattern if(variable, _, _) with stmt.stmt#=if.stmt#  such that Next(22, read) with stmt.stmt#=4500 with "else"=read.varName with variable.varName="print" with call.procName=print.varName  pattern assign(variable, "8900-200")  pattern assign(variable, "4300*2800")  pattern assign(variable, _"2200*6000"_)  pattern while(_, _) with stmt.stmt#=print.stmt# with constant.value=constant.value with procedure.procName="print"  pattern while(print, _)  pattern assign(_, _"2000-7600"_)  pattern if(assign, _, _)  pattern if(_, _, _) with 5700=constant.value  such that Calls(procedure, "if")  pattern if(variable, _, _)  pattern assign(while, _)  pattern if(constant, _, _)  such that Modifies(stmt, "assign")  such that Follows(_, while) with while.stmt#=assign.stmt# with print.varName=variable.varName with constant.value=6200  pattern assign(variable, _"4600*1100"_)  pattern while(constant, _)  such that Calls(procedure, _) with call.stmt#=4800  such that Affects(_, assign) with 7000=print.stmt# with while.stmt#=stmt.stmt#  pattern assign(_, _)  pattern assign(read, "4400-7200")  such that Follows(_, call) 

5000
5 - Query 5
variable variable; assign assign; print print; constant constant; stmt stmt; read read; procedure procedure; if if; while while; call call; 
Select <variable, assign, print, constant, stmt, read, procedure, if, while, call>  pattern if(variable, _, _)  pattern while(while, _)  such that Next*(if, _)  such that Parent*(assign, if)  pattern while(while, _) with call.procName=read.varName  such that Modifies(while, "then")  such that Uses(read, _)  pattern assign(variable, "8000-4000") with assign.stmt#=3100  such that Parent*(stmt, 4) with variable.varName=procedure.procName  such that Modifies(1, variable) with 9000=stmt.stmt#  pattern if(variable, _, _) with "while"=procedure.procName  such that Next*(19, call)  such that Parent*(call, call) with while.stmt#=stmt.stmt#  pattern if(call, _, _) with assign.stmt#=call.stmt#  pattern while(then, _) with variable.varName=call.procName with "if"=read.varName with assign.stmt#=3900  pattern while(variable, _)  pattern assign(variable, _"500+4500"_)  pattern while(variable, _)  pattern if(_, _, _) with 7200=assign.stmt#  pattern while(variable, _)  pattern while(variable, _) with "while"=print.varName with 4900=read.stmt#  such that Calls(procedure, _)  pattern if(variable, _, _)  such that Calls*(procedure, procedure)  pattern if(variable, _, _) with assign.stmt#=8100  pattern assign(_, "8000*3800") with 7500=while.stmt# with if.stmt#=7000 with read.varName=call.procName with "constant"=procedure.procName  pattern while(_, _)  such that Next(while, 18) with if.stmt#=print.stmt#  such that Parent*(read, call)  pattern if(variable, _, _) with stmt.stmt#=8500  pattern while(read, _)  pattern if(_, _, _) with variable.varName=variable.varName  such that Calls*("call", procedure)  such that Calls*(procedure, _)  pattern if(then, _, _)  such that Parent*(assign, print) with "procedure"=variable.varName  pattern while(variable, _)  pattern if(variable, _, _)  pattern while(variable, _)  pattern assign(_, _"1200+2600"_)  such that Parent(read, _)  pattern if(_, _, _)  such that Parent*(while, 6)  pattern while(_, _)  pattern assign(_, _)  pattern assign(variable, _)  pattern while(variable, _)  pattern while(_, _) with print.varName="assign"  such that Follows(_, if) with 1300=stmt.stmt#  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern if(_, _, _)  such that Uses(call, "procedure")  pattern if(constant, _, _) with "print"=read.varName  such that Follows*(_, stmt) with assign.stmt#=stmt.stmt# with 2300=while.stmt#  pattern if(variable, _, _)  pattern while(_, _)  pattern while(_, _)  pattern while(_, _)  pattern assign(_, _"6400/4800"_)  such that Parent*(13, print)  pattern assign(variable, "6800/4700")  pattern assign(_, _) with assign.stmt#=print.stmt# with read.stmt#=500 with "constant"=read.varName  pattern while(then, _)  pattern if(variable, _, _)  such that Follows*(if, 11)  such that Calls*(procedure, _)  pattern if(procedure, _, _) with read.varName="then" with 6100=read.stmt#  pattern assign(variable, _"3800/1100"_) with print.varName="read"  pattern assign(_, _"1700/5400"_)  pattern if(assign, _, _)  such that Modifies(assign, variable)  pattern if(variable, _, _) with print.varName="variable"  pattern assign(_, _"1000-3000"_)  pattern assign(_, _"4900+5800"_)  such that Next(call, assign)  pattern assign(_, _) with print.stmt#=if.stmt#  such that Next*(_, call)  pattern assign(variable, _)  pattern if(variable, _, _) with 5600=constant.value  pattern if(constant, _, _) with stmt.stmt#=200  such that Parent*(_, print)  pattern while(_, _)  pattern while(else, _) with procedure.procName="procedure" with call.procName=read.varName with 8300=read.stmt# with print.stmt#=7400  pattern assign(_, _)  such that Affects*(_, assign)  pattern assign(_, "5000*4000") with read.varName="else"  such that Affects*(stmt, assign) with read.stmt#=call.stmt# with read.stmt#=print.stmt#  such that Follows(while, _) with print.stmt#=1500  pattern assign(_, _"4100-6800"_) with stmt.stmt#=read.stmt#  such that Follows*(read, _) with 3300=constant.value with call.procName=variable.varName with call.procName="else"  pattern while(_, _)  pattern if(_, _, _)  pattern while(variable, _) with variable.varName=procedure.procName with constant.value=stmt.stmt# with while.stmt#=5900  such that Calls(procedure, _)  pattern while(variable, _) with variable.varName=call.procName  pattern while(variable, _)  such that Follows*(_, while) with constant.value=9200  such that Follows*(_, while)  pattern while(variable, _)  pattern while(print, _)  such that Parent(assign, _) with 6500=while.stmt#  such that Affects*(stmt, 6) with procedure.procName=print.varName  such that Modifies(15, variable)  pattern assign(_, "5100*3300")  pattern assign(assign, "3900/6500") with 2600=stmt.stmt#  pattern if(else, _, _)  such that Calls*(_, procedure) with "else"=procedure.procName  pattern while(while, _)  pattern while(then, _) with "read"=procedure.procName with call.procName="then" with read.varName=variable.varName  pattern assign(_, _)  pattern if(_, _, _)  pattern while(_, _)  such that Next(read, _)  such that Modifies(print, _)  such that Uses(2, variable)  such that Calls*("else", procedure)  pattern assign(then, _"6200+7500"_)  such that Parent*(read, while) with 9500=stmt.stmt#  pattern if(constant, _, _)  such that Parent*(print, 6) with assign.stmt#=4700  such that Modifies(while, "assign")  such that Calls("while", procedure)  pattern while(variable, _)  pattern assign(_, "1800*2800")  pattern assign(variable, "4000-4600")  such that Parent(2, if)  such that Uses(while, _)  such that Uses(while, variable)  pattern if(_, _, _)  such that Follows(print, _) with "constant"=variable.varName  pattern if(_, _, _) with "assign"=print.varName  pattern while(_, _)  such that Parent(read, _)  such that Calls(procedure, "constant") with "print"=call.procName  pattern while(_, _) with while.stmt#=300  pattern assign(print, "8200+4200") with 2700=call.stmt#  pattern if(variable, _, _)  such that Follows*(14, if)  such that Next(print, if)  pattern while(while, _)  such that Parent*(22, while)  such that Affects(_, stmt)  pattern if(while, _, _)  such that Follows(stmt, 15) with "variable"=call.procName with call.procName="assign" with while.stmt#=call.stmt# with procedure.procName=variable.varName with "read"=read.varName with print.varName=print.varName  pattern if(_, _, _) with constant.value=print.stmt#  pattern if(_, _, _) with "constant"=variable.varName with assign.stmt#=8400 with 7500=assign.stmt#  such that Follows*(while, while) with print.stmt#=600  pattern if(variable, _, _)  such that Follows(assign, _)  pattern while(variable, _)  pattern assign(variable, _)  pattern while(print, _) with stmt.stmt#=read.stmt#  pattern assign(variable, _"2200/3600"_)  such that Calls(procedure, "while")  pattern while(_, _) with variable.varName=variable.varName with "then"=print.varName  such that Follows(print, _) with while.stmt#=6900 with assign.stmt#=6600  pattern while(variable, _)  such that Modifies(9, variable)  pattern while(then, _)  such that Next(read, if)  pattern while(print, _) with "else"=procedure.procName with "assign"=print.varName  pattern while(_, _) with constant.value=1100  pattern while(variable, _) with read.stmt#=read.stmt#  pattern if(call, _, _)  such that Modifies(assign, "variable")  such that Next*(while, read)  pattern while(_, _)  pattern assign(then, "3300-9600") with assign.stmt#=4900  such that Parent(call, _) with print.varName=read.varName  pattern assign(_, _)  pattern if(_, _, _) with read.varName="else"  such that Next(14, assign)  pattern if(variable, _, _) with if.stmt#=2600  such that Affects(_, assign)  pattern assign(if, "9300/8900") with print.varName="assign" with variable.varName="procedure"  pattern assign(_, _"assign/5900"_)  pattern if(print, _, _)  pattern while(variable, _)  such that Uses(stmt, _) with "variable"=read.varName  pattern while(constant, _)  pattern while(variable, _)  such that Next(1, if)  pattern if(_, _, _)  such that Calls*(procedure, _) with if.stmt#=2300 with read.varName=variable.varName  pattern if(_, _, _) with "procedure"=read.varName  pattern while(assign, _)  pattern assign(_, _"7900/6000"_) with 600=call.stmt#  pattern while(while, _)  pattern if(variable, _, _)  such that Parent*(assign, 11) with print.stmt#=6000  pattern while(variable, _)  such that Affects*(assign, _)  such that Next*(6, assign)  pattern while(_, _) with 4600=assign.stmt#  pattern if(variable, _, _) with "call"=read.varName  pattern if(_, _, _)  pattern assign(read, _"5800-9300"_)  pattern while(_, _) with "variable"=call.procName with read.varName=read.varName  pattern if(_, _, _) with while.stmt#=call.stmt#  pattern assign(variable, _)  such that Follows(_, assign)  pattern assign(read, _) with while.stmt#=9300  pattern while(procedure, _) with procedure.procName=procedure.procName  pattern assign(constant, _)  such that Uses(10, variable)  such that Parent(stmt, call) with call.procName=procedure.procName  pattern assign(variable, _)  such that Follows(read, call)  pattern assign(if, _)  pattern while(procedure, _)  pattern if(variable, _, _) with 500=print.stmt#  pattern if(variable, _, _)  pattern while(_, _) with call.stmt#=read.stmt#  pattern assign(else, "6100/4200") with 4900=print.stmt# with print.stmt#=2400 with read.varName="if" with 8400=print.stmt# with call.procName=read.varName with stmt.stmt#=assign.stmt# with procedure.procName="if"  such that Uses(print, _)  pattern assign(_, _"8400+procedure"_)  such that Modifies(assign, variable)  pattern while(then, _)  such that Follows*(_, assign)  such that Follows*(assign, 18) with constant.value=8000  pattern while(read, _)  such that Follows(19, stmt) with 5100=if.stmt# with while.stmt#=if.stmt# with print.varName=call.procName  pattern while(variable, _)  pattern if(variable, _, _) with call.procName=procedure.procName  pattern assign(variable, _)  pattern assign(if, _)  pattern assign(constant, "9600-3300")  pattern if(constant, _, _)  pattern while(print, _)  such that Affects*(12, assign)  pattern if(variable, _, _)  pattern if(variable, _, _)  such that Uses(while, variable)  such that Modifies(print, _) with "constant"=variable.varName  such that Parent*(_, stmt)  such that Calls*("call", procedure)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern assign(procedure, _"9600-1900"_)  such that Affects*(assign, _)  pattern assign(_, _) with call.procName=variable.varName with print.varName=call.procName  such that Follows*(assign, while) with call.stmt#=stmt.stmt#  pattern assign(variable, _"5500*2700"_)  pattern if(_, _, _) with read.stmt#=9400  such that Follows(assign, 26)  such that Affects*(assign, stmt)  such that Modifies(stmt, _) with assign.stmt#=assign.stmt#  pattern if(assign, _, _)  such that Calls*(_, procedure)  pattern while(_, _) with print.stmt#=read.stmt# with print.stmt#=call.stmt# with call.procName=variable.varName  such that Follows*(if, if)  such that Affects(stmt, _) with print.varName=procedure.procName  such that Next*(call, _) with read.varName="print" with procedure.procName="then"  such that Parent*(read, 6)  such that Parent*(while, while) with print.varName=variable.varName with print.varName=variable.varName  pattern assign(_, "9100/4000")  pattern assign(constant, _) with 6600=if.stmt#  pattern while(variable, _)  pattern while(variable, _)  pattern if(variable, _, _) with call.procName=variable.varName with procedure.procName="variable"  pattern if(variable, _, _)  such that Parent*(_, print)  such that Parent(_, assign)  such that Calls*("variable", procedure) with print.varName="procedure"  pattern while(variable, _)  pattern assign(variable, _)  pattern while(_, _)  pattern if(constant, _, _) with "while"=read.varName  such that Affects*(stmt, _)  such that Next(stmt, stmt)  pattern assign(variable, _) with 3300=call.stmt#  pattern if(_, _, _) with procedure.procName="else"  pattern while(_, _)  such that Affects*(_, assign) with variable.varName=variable.varName  pattern if(_, _, _) with call.stmt#=print.stmt#  pattern if(variable, _, _)  pattern if(if, _, _) with call.procName="while"  such that Affects*(stmt, assign)  pattern if(_, _, _)  pattern while(_, _) with 1800=if.stmt# with procedure.procName="then" with 9600=while.stmt# with stmt.stmt#=read.stmt#  pattern assign(variable, _"5700+7300"_) with read.varName=print.varName  pattern while(_, _)  such that Follows(assign, 8)  pattern if(assign, _, _)  such that Parent*(print, 1) with call.procName=print.varName  pattern while(_, _)  pattern if(assign, _, _) with stmt.stmt#=stmt.stmt# with variable.varName=procedure.procName  pattern while(variable, _) with "assign"=procedure.procName  such that Uses(16, variable)  such that Calls(procedure, procedure)  pattern while(variable, _)  pattern while(variable, _)  pattern if(variable, _, _)  pattern if(_, _, _) with "variable"=call.procName with 7200=call.stmt# with if.stmt#=1900  such that Follows*(_, call) with procedure.procName=variable.varName  such that Affects*(11, assign) with 7400=call.stmt#  pattern while(variable, _)  such that Follows*(if, call)  pattern assign(_, _)  pattern while(procedure, _)  pattern while(_, _)  pattern if(procedure, _, _)  pattern if(variable, _, _)  pattern assign(variable, "400/procedure")  pattern assign(variable, "5300/9100") with print.stmt#=3200 with if.stmt#=read.stmt#  pattern while(_, _)  pattern while(procedure, _)  pattern while(variable, _)  pattern assign(variable, _"9100-6200"_) with print.varName="constant"  such that Parent(while, _)  such that Affects*(assign, _) with 4800=print.stmt# with 4800=while.stmt#  pattern assign(_, "200+8900")  such that Uses(if, variable)  such that Affects(assign, assign)  pattern while(variable, _)  pattern assign(variable, _"4600+6400"_)  pattern if(variable, _, _)  pattern assign(variable, _"1300*while"_)  such that Parent*(16, stmt)  pattern while(variable, _) with 4200=while.stmt# with print.varName=variable.varName  such that Affects(stmt, 1)  pattern if(_, _, _)  pattern if(if, _, _)  such that Affects(stmt, stmt) with call.stmt#=4100 with call.procName=variable.varName with "while"=call.procName  pattern if(_, _, _) with read.varName=variable.varName with "constant"=read.varName  such that Modifies(read, _) 

5000
6 - Query 6
variable variable; assign assign; print print; constant constant; stmt stmt; read read; procedure procedure; while while; if if; call call; 
Select <variable, assign, print, constant, stmt, read, procedure, while, if, call>  such that Calls(procedure, "constant")  pattern assign(_, "6400*4200")  pattern assign(variable, _"6000+6400"_)  such that Calls("if", procedure)  pattern while(_, _)  such that Calls("if", procedure)  pattern while(while, _)  such that Affects*(assign, stmt)  such that Next*(_, call)  such that Next(_, call) with call.procName=variable.varName with "read"=procedure.procName with read.varName=read.varName  such that Next(_, if) with "constant"=call.procName with assign.stmt#=5900  such that Follows(3, if) with procedure.procName=call.procName  such that Next*(22, assign) with 9300=if.stmt#  such that Next(_, if)  pattern assign(variable, _"3000/2700"_)  such that Uses(print, variable) with stmt.stmt#=9200 with stmt.stmt#=read.stmt#  pattern assign(variable, _)  pattern assign(_, _)  pattern while(print, _)  such that Modifies(if, variable)  such that Follows*(_, assign)  pattern while(_, _)  pattern assign(variable, _) with variable.varName=print.varName  such that Calls(procedure, procedure)  pattern assign(variable, "9400/2400")  such that Affects(stmt, _)  pattern while(constant, _)  such that Next*(22, read)  such that Next*(_, if)  pattern while(print, _)  pattern while(if, _)  pattern assign(variable, "print+8100")  pattern while(_, _)  pattern assign(_, _) with print.varName=procedure.procName with read.varName=call.procName  such that Calls(procedure, "print") with 4900=stmt.stmt#  pattern while(constant, _) with "constant"=read.varName  such that Calls(procedure, _)  such that Next*(assign, 11)  pattern assign(variable, _"(5600*700)/9900"_)  such that Calls(procedure, _) with constant.value=while.stmt# with assign.stmt#=stmt.stmt# with variable.varName=print.varName with "assign"=print.varName  such that Parent(read, 26) with "print"=call.procName  such that Calls(procedure, procedure)  pattern while(_, _)  pattern while(variable, _) with read.stmt#=stmt.stmt#  pattern assign(variable, _)  pattern assign(call, _"4100*9700"_)  pattern assign(_, _)  such that Uses(26, variable)  such that Uses(21, variable)  pattern if(variable, _, _)  such that Affects*(assign, 19)  pattern assign(variable, _) with while.stmt#=8800 with 1000=call.stmt# with constant.value=print.stmt#  pattern while(_, _) with procedure.procName="call" with constant.value=7700 with call.procName="print"  pattern if(_, _, _)  such that Next(stmt, _)  such that Affects*(assign, _)  pattern if(variable, _, _) with variable.varName="variable"  pattern while(procedure, _)  pattern if(_, _, _)  such that Follows(read, 26)  pattern while(call, _)  pattern assign(variable, "2100-4100")  such that Parent*(print, 21)  pattern while(if, _)  pattern while(if, _)  pattern while(_, _)  pattern while(then, _) with 2900=assign.stmt# with read.varName=call.procName with read.stmt#=while.stmt#  pattern assign(_, _"6200/2300"_)  pattern while(print, _)  pattern assign(then, _) with read.varName=variable.varName with call.procName=call.procName with assign.stmt#=call.stmt#  pattern assign(variable, _"3000*4500"_) with print.varName=variable.varName  pattern while(assign, _)  pattern if(_, _, _)  pattern if(assign, _, _)  such that Follows(if, assign)  pattern if(while, _, _)  pattern if(_, _, _) with 2200=while.stmt# with read.stmt#=if.stmt# with 9000=print.stmt#  such that Modifies(read, _) with read.varName="procedure"  pattern assign(variable, "7900-5300") with while.stmt#=7200  pattern while(variable, _)  pattern while(call, _) with read.varName="while" with constant.value=print.stmt#  pattern if(variable, _, _)  pattern while(variable, _)  pattern while(_, _)  such that Affects*(stmt, stmt)  such that Parent(print, _)  pattern if(read, _, _) with procedure.procName="variable"  pattern while(variable, _) with constant.value=while.stmt#  such that Next*(stmt, if) with read.varName="then" with while.stmt#=200  pattern assign(procedure, "100+6200")  such that Calls(procedure, procedure)  pattern if(variable, _, _)  pattern assign(_, _"9800*call"_)  pattern assign(variable, "(9700*7800)/9100")  pattern assign(_, _)  such that Follows(read, assign) with "assign"=print.varName with 5000=if.stmt# with 3900=while.stmt#  pattern assign(variable, _"6200*9100"_)  such that Follows(call, _)  such that Parent(read, _)  such that Follows(13, read)  such that Uses(21, variable)  pattern while(variable, _)  such that Affects(assign, _) with "assign"=variable.varName  pattern assign(variable, "2300+5800") with constant.value=3800  pattern while(_, _)  such that Affects*(assign, assign)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern while(_, _) with variable.varName=procedure.procName  such that Calls(procedure, "print")  pattern while(_, _)  pattern while(variable, _)  pattern if(variable, _, _)  pattern while(variable, _)  pattern while(_, _)  pattern assign(variable, _"4800+8700"_)  such that Modifies(19, variable)  pattern while(_, _)  pattern while(constant, _) with "constant"=call.procName  pattern if(variable, _, _)  pattern while(variable, _) with 2600=if.stmt# with 5700=constant.value  such that Next*(if, _)  pattern if(variable, _, _)  pattern while(_, _) with variable.varName=print.varName  pattern while(variable, _)  pattern assign(variable, _) with print.stmt#=read.stmt#  pattern assign(_, _) with call.stmt#=call.stmt#  such that Uses(29, variable)  pattern while(_, _)  pattern assign(variable, _)  pattern assign(variable, "read-8700") with print.varName=call.procName  pattern while(while, _)  pattern assign(variable, _"2400*4000"_)  such that Next*(stmt, 12)  pattern while(assign, _)  such that Affects*(stmt, assign)  pattern while(_, _)  such that Affects*(stmt, assign) with "then"=read.varName with "then"=print.varName  pattern assign(print, _)  such that Parent*(stmt, _)  pattern if(_, _, _)  pattern if(_, _, _) with read.stmt#=2500  such that Modifies(19, variable)  such that Calls(procedure, procedure)  such that Follows(read, _)  pattern assign(_, _"6400+7300"_)  pattern while(else, _) with call.stmt#=7200 with read.stmt#=1400  pattern assign(_, "2000/2400") with stmt.stmt#=6000 with call.procName=read.varName  pattern if(variable, _, _)  pattern while(procedure, _)  pattern if(variable, _, _)  pattern if(_, _, _)  such that Uses(read, _)  such that Calls*(procedure, "then") with 7500=stmt.stmt#  pattern assign(call, "1300+then")  pattern assign(_, _)  such that Modifies(stmt, variable)  such that Affects*(19, stmt) with assign.stmt#=print.stmt#  pattern while(procedure, _)  pattern while(if, _)  pattern while(_, _) with read.varName="procedure"  pattern assign(while, "print-4600")  pattern while(while, _)  pattern if(variable, _, _)  pattern if(_, _, _) with 7900=call.stmt#  pattern if(_, _, _)  such that Modifies(stmt, "assign") with constant.value=constant.value  pattern while(variable, _) with procedure.procName="else"  pattern if(_, _, _)  such that Calls*("assign", procedure) with call.procName="assign"  pattern assign(variable, _"700/9200"_)  pattern if(_, _, _)  pattern assign(assign, "4300*else")  such that Modifies(read, "constant")  such that Uses(procedure, "while")  such that Affects(3, stmt)  pattern while(_, _)  pattern if(_, _, _)  such that Parent*(10, assign)  such that Affects(stmt, _)  pattern assign(else, "(5700+100)-2500")  pattern assign(if, "4600*3800")  pattern while(then, _)  such that Parent*(12, print)  pattern assign(variable, _"5500*9700"_)  such that Calls*(procedure, "print")  such that Calls(procedure, "print")  such that Next*(print, 13) with read.varName="procedure"  pattern assign(_, "600*8100")  such that Parent(stmt, 3)  pattern assign(_, "(800/2800)*8800")  such that Affects*(26, stmt)  pattern assign(_, _)  pattern if(while, _, _) with constant.value=read.stmt#  pattern if(variable, _, _)  pattern assign(variable, "200/5100")  such that Modifies(if, "read") with "print"=print.varName  such that Uses(if, "read")  such that Affects*(16, assign) with read.stmt#=5400  such that Next(if, read)  pattern assign(variable, "9600-8900")  such that Next(while, _)  pattern while(print, _) with procedure.procName=print.varName  such that Next(if, call) with "if"=procedure.procName  such that Parent(call, _) with "if"=call.procName  pattern assign(variable, "7700*4600")  pattern while(then, _) with stmt.stmt#=while.stmt#  pattern if(_, _, _) with 4400=print.stmt# with 7200=if.stmt#  pattern while(_, _)  pattern assign(procedure, _"4500+5700"_) with read.varName="else"  such that Follows*(if, 27) with call.stmt#=6500 with 5400=call.stmt# with variable.varName=procedure.procName  pattern assign(variable, _"1900+400"_) with "while"=call.procName  pattern if(variable, _, _)  such that Next(11, print) with if.stmt#=if.stmt# with read.varName="variable"  pattern while(call, _) with variable.varName="call" with "read"=read.varName  such that Uses(call, _)  such that Affects*(17, assign)  pattern while(variable, _) with variable.varName="procedure"  pattern assign(while, _)  pattern while(_, _)  pattern while(while, _) with call.procName=procedure.procName with call.stmt#=read.stmt#  pattern if(variable, _, _) with while.stmt#=4900  pattern if(_, _, _)  pattern if(then, _, _)  pattern while(variable, _) with constant.value=while.stmt# with stmt.stmt#=1000  pattern assign(while, _)  pattern while(variable, _)  such that Next(_, if)  such that Next(while, 16) with procedure.procName="read"  pattern while(variable, _)  such that Calls(_, procedure)  such that Next(1, call)  pattern assign(variable, _"1000-3100"_) with "constant"=print.varName with while.stmt#=while.stmt#  pattern assign(variable, _"7000+9300"_) with print.stmt#=8400 with if.stmt#=8100 with while.stmt#=9700 with variable.varName=variable.varName with print.stmt#=1400 with 2400=read.stmt#  such that Uses(while, "variable") with print.stmt#=read.stmt#  pattern if(else, _, _)  pattern assign(call, _"8000/8500"_)  such that Calls*(procedure, _)  pattern if(assign, _, _)  such that Next(read, if)  pattern if(variable, _, _) with 3100=constant.value with print.varName="if"  such that Next*(_, if)  pattern if(variable, _, _)  pattern if(read, _, _)  pattern while(then, _) with 5900=if.stmt#  pattern while(else, _) with procedure.procName=variable.varName  such that Affects(stmt, 1)  pattern while(_, _)  pattern while(_, _) with "else"=call.procName  pattern if(else, _, _)  pattern while(_, _)  pattern assign(read, "procedure*7000")  pattern assign(_, _)  such that Calls(procedure, procedure) with 1400=stmt.stmt# with 2600=while.stmt# with call.procName="variable"  pattern if(variable, _, _)  pattern if(variable, _, _)  such that Next(25, if) with "else"=variable.varName  pattern if(print, _, _)  such that Parent(_, print) with if.stmt#=6800 with procedure.procName="while" with 5200=if.stmt#  pattern assign(_, _"variable/9200"_)  pattern if(assign, _, _)  such that Calls*(procedure, procedure)  pattern while(variable, _) with 7100=read.stmt# with call.stmt#=4900  such that Uses(20, variable)  pattern assign(variable, _)  pattern while(assign, _)  pattern assign(constant, _) with 9600=if.stmt# with print.varName="assign" with procedure.procName=call.procName  pattern assign(variable, "1000*3400") with "else"=print.varName  such that Next*(_, call)  pattern while(variable, _)  pattern while(_, _) with stmt.stmt#=5400  pattern assign(variable, "else-9300")  such that Next(while, stmt)  pattern if(_, _, _)  such that Affects*(assign, stmt)  pattern while(_, _) with print.stmt#=read.stmt#  pattern assign(if, "2000+print")  pattern if(variable, _, _)  such that Uses(22, variable)  pattern assign(variable, _)  pattern assign(_, "assign-2500")  pattern if(_, _, _) with call.procName=call.procName with variable.varName="else" with 9900=read.stmt#  such that Follows*(assign, 13)  pattern assign(variable, "1500-2200")  pattern if(assign, _, _) with constant.value=assign.stmt#  such that Next(28, print) with 6300=assign.stmt#  such that Parent*(read, assign)  pattern while(_, _) with call.stmt#=constant.value with call.procName="read"  pattern assign(print, _)  such that Calls("else", procedure) with stmt.stmt#=constant.value  pattern if(variable, _, _)  pattern assign(variable, _)  pattern if(_, _, _)  pattern if(_, _, _) with print.stmt#=print.stmt#  pattern assign(_, "5200*700")  pattern if(_, _, _)  such that Modifies(while, _) with call.procName=variable.varName  pattern if(variable, _, _)  pattern assign(variable, _)  pattern if(constant, _, _)  pattern assign(read, "3800+assign") with stmt.stmt#=600  pattern assign(variable, _"4300+9100"_)  pattern assign(constant, "2400+2400") with read.varName=procedure.procName  pattern if(variable, _, _) with call.stmt#=6700  pattern assign(assign, _"2000-4300"_)  pattern assign(_, _)  pattern assign(variable, _)  pattern assign(else, _"800-1800"_) with assign.stmt#=100  pattern while(_, _)  pattern if(variable, _, _)  such that Affects*(9, stmt)  such that Modifies(if, variable) with "call"=procedure.procName  pattern while(_, _) with stmt.stmt#=if.stmt#  pattern while(_, _) with if.stmt#=read.stmt#  such that Uses(while, _) with print.varName="while"  pattern while(then, _)  such that Follows(_, while)  pattern while(if, _)  such that Affects(stmt, 26)  such that Parent*(read, _)  such that Parent*(print, assign) with assign.stmt#=7200  pattern if(variable, _, _)  pattern while(else, _)  such that Calls(_, procedure)  pattern while(_, _) with print.varName="while"  such that Next*(27, read) with 6300=read.stmt#  such that Next*(_, if)  pattern while(read, _)  pattern if(variable, _, _) with "assign"=read.varName with if.stmt#=assign.stmt# with read.varName=read.varName  pattern while(while, _)  pattern while(_, _)  pattern assign(print, _) with call.procName=variable.varName with print.varName="if"  pattern if(variable, _, _)  pattern assign(_, _)  such that Affects*(assign, 18) with print.stmt#=6600  pattern if(_, _, _)  pattern assign(if, "400+4500") with if.stmt#=2500  such that Uses(3, variable)  such that Next*(21, stmt) with 6600=stmt.stmt#  such that Uses(19, variable) with 1300=if.stmt#  pattern if(if, _, _)  pattern if(_, _, _)  pattern while(print, _) 

5000
7 - Query 7
variable variable; assign assign; print print; constant constant; stmt stmt; read read; procedure procedure; if if; while while; call call; 
Select <variable, assign, print, constant, stmt, read, procedure, if, while, call>  pattern if(_, _, _)  such that Next*(call, read) with 3800=while.stmt#  pattern if(variable, _, _)  pattern assign(then, "400+while")  pattern while(_, _)  such that Parent(call, _)  pattern while(_, _)  such that Calls(procedure, procedure)  pattern if(variable, _, _)  pattern while(_, _)  such that Calls(procedure, "assign")  pattern if(call, _, _) with variable.varName="constant"  pattern assign(_, _"1300-2300"_) with call.procName="procedure"  pattern while(_, _)  such that Affects(_, assign)  pattern while(variable, _)  pattern if(variable, _, _)  pattern assign(_, _)  pattern while(constant, _)  pattern while(_, _)  pattern assign(if, "(1400-8000)*5200")  such that Uses(assign, _)  pattern if(print, _, _)  such that Calls*(procedure, _) with read.varName="assign"  pattern if(else, _, _)  pattern assign(call, _)  pattern while(variable, _)  such that Parent(17, assign) with print.varName=print.varName with 6100=call.stmt#  pattern if(_, _, _)  such that Follows*(while, _)  such that Affects(assign, _)  pattern while(_, _)  pattern if(variable, _, _) with 2300=while.stmt# with call.procName="else" with "else"=procedure.procName with read.varName="read"  such that Follows(23, print)  such that Affects(stmt, 25)  such that Parent*(26, print) with "read"=procedure.procName  pattern assign(variable, _"8100-200"_)  pattern while(print, _)  pattern assign(_, _)  pattern if(variable, _, _)  such that Affects*(_, stmt)  pattern assign(_, _"6800+5800"_)  such that Next*(_, if)  pattern if(read, _, _)  pattern assign(variable, "while*6300")  pattern while(_, _)  pattern while(_, _) with read.varName=procedure.procName  such that Uses(read, variable)  such that Calls("else", procedure)  such that Affects(assign, 27)  pattern assign(variable, _)  such that Parent(if, _)  pattern assign(_, _)  pattern assign(_, _"8300/4100"_)  pattern if(_, _, _)  such that Calls("call", procedure) with while.stmt#=2700  pattern assign(_, _)  pattern if(variable, _, _) with read.stmt#=1100  pattern assign(print, "6400/2900")  pattern assign(variable, _"1900*9200"_)  such that Uses(call, variable)  pattern assign(variable, "6200/2400") with variable.varName="constant"  pattern if(then, _, _)  pattern if(variable, _, _)  pattern while(variable, _)  pattern if(variable, _, _)  such that Calls*(_, procedure)  pattern if(variable, _, _)  pattern while(variable, _)  pattern assign(variable, _"else-1500"_)  pattern if(read, _, _)  such that Next(27, stmt)  such that Uses(assign, "variable")  pattern assign(_, _)  such that Parent*(stmt, 29) with stmt.stmt#=3600  pattern while(_, _)  pattern if(_, _, _)  such that Affects*(assign, _) with print.varName="procedure"  pattern assign(variable, _"4000+5200"_) with 9300=read.stmt#  pattern if(variable, _, _)  pattern assign(variable, _)  such that Calls*(procedure, "while") with 4900=read.stmt#  pattern assign(variable, _)  pattern while(_, _)  pattern while(while, _)  such that Uses(stmt, variable) with 5300=read.stmt#  pattern if(variable, _, _) with 3900=read.stmt# with 6600=print.stmt#  pattern assign(procedure, _) with 4700=if.stmt#  pattern assign(constant, "(6800/4500)-8800") with assign.stmt#=6400 with "constant"=read.varName  pattern if(variable, _, _) with while.stmt#=800  pattern if(variable, _, _)  pattern if(_, _, _)  pattern if(_, _, _)  such that Parent*(_, stmt)  pattern assign(call, "8800/9600") with procedure.procName="then"  pattern assign(if, _) with 1900=read.stmt#  pattern while(if, _)  such that Next*(while, _)  such that Follows*(while, 20)  such that Parent(if, while) with 3800=assign.stmt#  pattern if(variable, _, _) with assign.stmt#=read.stmt#  pattern assign(read, _)  pattern while(variable, _) with 3800=print.stmt#  pattern assign(else, "400-3100")  such that Parent(stmt, 20)  such that Next*(call, read)  pattern assign(assign, _)  pattern assign(_, _) with read.varName=variable.varName with print.varName=variable.varName  such that Next*(while, _) with read.stmt#=5300  pattern if(_, _, _)  pattern if(_, _, _)  such that Affects(1, stmt)  pattern assign(_, "9500*5400")  pattern assign(_, "1900-8700")  pattern if(_, _, _)  such that Affects(assign, stmt)  pattern if(while, _, _) with stmt.stmt#=5100  pattern if(read, _, _)  pattern assign(variable, _"2100*3700"_) with variable.varName="variable" with call.stmt#=if.stmt#  such that Affects(assign, assign)  pattern if(variable, _, _)  such that Calls(procedure, procedure)  pattern while(variable, _)  such that Follows*(_, call)  such that Modifies(assign, "read")  pattern assign(_, _) with "if"=procedure.procName with if.stmt#=2700 with "read"=call.procName  pattern while(constant, _) with read.stmt#=8900  pattern while(variable, _)  such that Next(call, 20) with 8500=print.stmt#  pattern while(variable, _)  pattern assign(variable, _)  such that Uses(16, variable) with print.stmt#=4700  such that Follows(while, 28) with call.stmt#=4700  pattern while(_, _)  pattern if(then, _, _)  such that Affects(stmt, _)  pattern if(_, _, _)  pattern if(while, _, _) with procedure.procName="if"  such that Calls(procedure, procedure)  pattern assign(_, _"if/1300"_)  such that Follows(if, 23) with procedure.procName=variable.varName with "else"=call.procName with call.procName=procedure.procName with 9500=if.stmt#  pattern if(_, _, _) with call.procName="constant"  such that Follows*(call, while)  such that Affects*(21, stmt) with 4400=call.stmt#  such that Uses(26, variable)  such that Calls*(_, procedure)  pattern while(variable, _)  such that Follows(assign, assign) with print.varName="constant"  pattern while(read, _)  pattern assign(else, _"2800+9700"_)  pattern assign(call, _"1700*then"_)  pattern while(_, _)  pattern while(_, _)  such that Affects(_, stmt) with read.varName=read.varName with call.stmt#=while.stmt#  such that Next(while, 14)  pattern if(_, _, _)  such that Uses(4, variable) with 8600=print.stmt#  pattern if(variable, _, _)  such that Parent*(7, stmt) with 8600=stmt.stmt#  pattern assign(_, _"6300+7700"_) with call.procName=call.procName  pattern assign(assign, "7300-3400") with while.stmt#=call.stmt#  pattern assign(assign, _"7000/2100"_)  pattern if(variable, _, _)  such that Parent(6, call) with assign.stmt#=1300  pattern while(constant, _)  such that Modifies(23, variable)  pattern assign(while, "6900-500")  such that Follows*(19, print)  such that Modifies(read, variable)  such that Next(while, 7)  pattern if(variable, _, _)  pattern assign(variable, "3300-300") with procedure.procName="if" with print.stmt#=while.stmt# with while.stmt#=print.stmt#  pattern while(print, _) with 1300=if.stmt#  pattern while(if, _) with constant.value=6500 with 7900=call.stmt#  pattern assign(_, _)  such that Modifies(1, variable)  pattern assign(variable, _"6400+while"_) with variable.varName=procedure.procName  pattern while(while, _) with call.procName=procedure.procName with "if"=procedure.procName  such that Follows*(_, print)  such that Affects*(_, assign)  pattern assign(variable, _)  pattern assign(variable, _"4300-9100"_)  pattern while(call, _) with "then"=call.procName with if.stmt#=read.stmt# with print.stmt#=4800 with "while"=call.procName  pattern while(_, _) with "else"=print.varName  pattern assign(read, _"5100/1000"_)  pattern while(variable, _) with while.stmt#=3100  pattern while(_, _) with call.procName=variable.varName  pattern while(_, _)  pattern while(_, _) with 2400=constant.value  pattern while(variable, _) with read.stmt#=9400 with call.procName="variable" with variable.varName="assign"  such that Affects(stmt, stmt) with variable.varName="else"  pattern assign(while, "8100-8200") with "read"=print.varName  such that Parent*(assign, stmt) with read.stmt#=4100  pattern assign(then, "4000/5000")  such that Modifies(28, variable) with read.varName="assign"  pattern assign(_, _)  pattern if(variable, _, _)  pattern assign(_, _"6300/8800"_)  such that Next(call, stmt)  such that Modifies(assign, "call") with variable.varName=read.varName  such that Affects*(_, stmt) with "assign"=print.varName  such that Affects*(_, stmt) with if.stmt#=stmt.stmt# with call.stmt#=constant.value  such that Uses(read, "constant") with call.procName="if"  pattern if(_, _, _) with call.stmt#=while.stmt#  pattern while(_, _)  pattern while(_, _)  such that Modifies(procedure, "else") with 500=read.stmt#  pattern assign(variable, _"2200+2100"_)  pattern if(print, _, _) with 5100=assign.stmt#  pattern while(_, _)  pattern if(procedure, _, _)  such that Parent(12, if)  pattern if(_, _, _)  pattern assign(variable, "1200/1500")  pattern while(variable, _)  pattern if(variable, _, _)  pattern if(variable, _, _) with "if"=print.varName with "assign"=variable.varName  pattern if(constant, _, _)  pattern while(while, _)  such that Affects(stmt, _) with variable.varName=variable.varName with stmt.stmt#=call.stmt#  such that Modifies(print, variable) with constant.value=4500 with print.varName="read" with if.stmt#=2600  pattern assign(else, _)  pattern if(while, _, _)  such that Next*(_, assign) with constant.value=2100  pattern assign(_, _"8100*4400"_) with print.varName=read.varName  pattern assign(variable, "procedure+6100")  such that Calls*(_, procedure)  pattern if(variable, _, _)  pattern if(_, _, _)  such that Follows*(call, 2)  such that Uses(procedure, variable) with 300=read.stmt#  pattern if(_, _, _)  pattern if(read, _, _)  pattern while(else, _)  pattern if(_, _, _) with stmt.stmt#=while.stmt#  pattern assign(_, _"9700*4700"_)  such that Next(stmt, 13)  pattern if(_, _, _) with call.procName="else"  pattern assign(while, _)  such that Calls("else", procedure) with procedure.procName=read.varName with "if"=print.varName with variable.varName="constant"  pattern while(_, _)  pattern while(variable, _)  pattern if(call, _, _) with 9700=if.stmt#  pattern assign(variable, "1900*5100")  pattern while(_, _)  pattern if(_, _, _) with while.stmt#=1000  such that Affects(_, stmt)  such that Next(while, 28) with print.varName=call.procName  pattern if(variable, _, _) with read.varName=variable.varName with stmt.stmt#=if.stmt# with print.varName=procedure.procName  pattern while(variable, _)  pattern if(_, _, _)  such that Next*(print, _)  pattern assign(while, "6100-9200")  pattern assign(read, _"5200+300"_)  pattern while(_, _)  pattern while(_, _)  such that Calls*(procedure, procedure)  pattern while(_, _) with print.varName=variable.varName  pattern if(then, _, _)  pattern if(variable, _, _)  such that Affects*(assign, 16)  pattern while(variable, _)  such that Affects*(_, stmt)  pattern while(_, _) with variable.varName=print.varName with variable.varName="while" with call.stmt#=800  such that Affects*(assign, 26)  pattern assign(_, _"900*2200"_) with "else"=procedure.procName with 7800=call.stmt# with print.stmt#=8400 with constant.value=4000  pattern assign(variable, "1200/1800") with if.stmt#=while.stmt#  such that Parent(_, read) with procedure.procName=procedure.procName  pattern if(else, _, _) with "print"=read.varName  pattern assign(_, "7000/500") with 3700=constant.value with 1300=constant.value  pattern assign(variable, "3400-200")  such that Affects(assign, _)  such that Calls(procedure, _)  such that Next*(while, _)  pattern assign(variable, _)  such that Affects*(assign, 5) with 2200=read.stmt#  pattern assign(variable, _"9900*6200"_)  pattern while(variable, _) with 400=if.stmt#  such that Affects(stmt, stmt) with 200=if.stmt#  such that Calls*(procedure, procedure)  pattern assign(variable, _)  such that Parent(while, _)  such that Modifies(call, _)  pattern assign(variable, _) with "if"=print.varName  pattern while(_, _)  pattern while(variable, _) with "procedure"=call.procName  pattern if(variable, _, _)  such that Parent*(while, 5)  such that Uses(procedure, _) with "procedure"=procedure.procName with variable.varName=print.varName  pattern if(variable, _, _) with 5600=assign.stmt# with "print"=print.varName  pattern while(_, _)  such that Parent(stmt, _)  such that Calls(_, procedure) with 4200=print.stmt# with while.stmt#=while.stmt#  pattern assign(variable, _)  pattern while(if, _) with "variable"=print.varName with call.procName=call.procName with assign.stmt#=1800  pattern while(variable, _)  pattern if(_, _, _) with read.stmt#=read.stmt#  pattern if(variable, _, _)  pattern if(_, _, _)  such that Parent*(while, 24)  such that Calls*(_, procedure)  pattern while(assign, _) with while.stmt#=read.stmt#  such that Next(_, print)  pattern if(variable, _, _)  pattern while(read, _) with variable.varName="assign"  pattern while(_, _) with print.stmt#=8900 with while.stmt#=1900  such that Next(read, while) with print.varName=variable.varName  pattern assign(variable, "4300-print") with variable.varName=read.varName with 2000=assign.stmt#  such that Parent*(call, _) with 8700=while.stmt#  such that Next*(12, read)  such that Follows*(stmt, _) with stmt.stmt#=while.stmt# with print.varName="else"  such that Parent(print, 7) with 9400=stmt.stmt#  such that Follows(call, 11) with call.procName=call.procName  pattern assign(constant, _) with "variable"=read.varName  pattern if(_, _, _) with procedure.procName=read.varName with print.stmt#=4600  pattern assign(_, "1500*3600") with read.stmt#=2300 with print.varName="constant" with "then"=call.procName  such that Calls(_, procedure) with "constant"=read.varName with 2300=while.stmt# with 500=read.stmt# with variable.varName=call.procName  such that Affects*(stmt, stmt) with variable.varName="procedure"  pattern while(_, _)  pattern assign(variable, "6200*2200") with call.procName=procedure.procName  pattern if(variable, _, _) with stmt.stmt#=print.stmt#  pattern if(_, _, _)  pattern assign(print, _"1700*1100"_) with call.procName="call"  such that Follows*(print, 22)  pattern while(variable, _)  pattern assign(variable, _)  pattern if(_, _, _) with 6700=read.stmt#  pattern assign(_, "3100*1800")  pattern if(assign, _, _)  pattern assign(constant, _"2100/9000"_)  such that Follows*(assign, 19)  such that Parent(13, if)  such that Modifies(10, variable) 

5000
8 - Query 8
variable variable; print print; constant constant; assign assign; stmt stmt; read read; procedure procedure; while while; if if; call call; 
Select <variable, print, constant, assign, stmt, read, procedure, while, if, call> with read.varName=read.varName  such that Follows(15, call) with read.stmt#=7700  pattern while(variable, _) with constant.value=while.stmt#  pattern if(constant, _, _) with call.procName=variable.varName  pattern if(_, _, _) with print.varName="assign"  pattern if(variable, _, _)  such that Parent*(while, 8) with variable.varName=variable.varName with "while"=variable.varName  pattern assign(_, _)  such that Affects*(_, stmt)  pattern while(_, _)  pattern assign(call, _) with variable.varName=read.varName  such that Calls*(procedure, "constant") with print.varName="variable"  pattern assign(_, "5800*7000")  pattern if(constant, _, _) with 6900=if.stmt# with constant.value=7100 with if.stmt#=500  pattern assign(variable, "2800-500")  such that Affects*(stmt, assign)  pattern while(_, _)  pattern while(while, _) with 6300=while.stmt#  such that Affects(stmt, _)  pattern assign(_, "1500*2100")  pattern while(then, _)  such that Parent*(12, read) with 4900=assign.stmt#  such that Parent*(read, read) with procedure.procName=variable.varName  such that Follows(while, 26)  such that Affects(10, stmt)  such that Calls(procedure, "procedure")  such that Calls*(procedure, _)  pattern if(variable, _, _)  such that Modifies(while, _)  pattern assign(_, "print-5100")  such that Calls("then", procedure)  pattern assign(variable, _)  pattern while(variable, _)  pattern if(then, _, _)  such that Parent*(call, _) with if.stmt#=4600 with variable.varName=variable.varName with constant.value=6400  such that Calls*(procedure, "read")  such that Uses(if, "print")  pattern while(print, _)  such that Calls(procedure, procedure)  pattern while(call, _)  pattern if(variable, _, _)  such that Parent(while, 26)  pattern assign(constant, _"8000-else"_)  pattern if(variable, _, _) with 8900=call.stmt#  such that Calls*(procedure, procedure) with variable.varName=print.varName  such that Modifies(if, variable) with call.procName=print.varName  pattern while(variable, _)  pattern assign(_, "800+7400") with procedure.procName=print.varName  pattern if(variable, _, _)  such that Follows(call, 18)  such that Follows*(stmt, while) with assign.stmt#=if.stmt# with 4200=if.stmt#  pattern if(while, _, _)  pattern if(print, _, _)  pattern while(_, _) with call.stmt#=if.stmt#  such that Follows(18, stmt)  pattern assign(print, "1300*2700")  pattern if(procedure, _, _) with "print"=read.varName  pattern assign(_, _)  pattern if(read, _, _)  pattern if(_, _, _) with procedure.procName="call"  such that Uses(8, variable) with 600=print.stmt# with "call"=procedure.procName  such that Next(print, 13) with if.stmt#=constant.value with "else"=read.varName  pattern assign(_, _"6800/3900"_) with read.varName="while" with print.varName="constant" with read.varName=read.varName  pattern while(variable, _)  such that Next*(stmt, print)  pattern while(_, _) with 1700=if.stmt#  such that Next(stmt, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  such that Affects(26, stmt)  such that Modifies(16, variable) with stmt.stmt#=constant.value with 4400=constant.value  such that Follows*(1, print) with "constant"=procedure.procName  pattern while(variable, _)  such that Parent*(call, 11)  such that Uses(25, variable)  pattern assign(_, _)  pattern if(variable, _, _) with call.procName="call"  such that Affects*(stmt, stmt)  pattern assign(_, _"9200-5300"_) with call.procName=print.varName  pattern while(_, _)  such that Follows(_, print)  such that Calls(procedure, _) with call.procName="else"  pattern assign(print, "7100+8000")  such that Parent*(if, _) with 8200=print.stmt#  such that Modifies(print, _)  pattern while(variable, _)  such that Follows*(while, assign)  pattern assign(print, _) with 5100=if.stmt# with assign.stmt#=if.stmt#  pattern if(_, _, _)  such that Follows*(while, 24)  such that Parent(_, read)  such that Parent*(14, while)  such that Follows*(_, print)  pattern while(_, _)  such that Affects*(_, assign) with read.varName=variable.varName with constant.value=read.stmt#  pattern assign(constant, _"1900*7200"_)  pattern if(_, _, _)  pattern if(_, _, _) with call.procName=call.procName  pattern if(variable, _, _)  such that Calls(procedure, procedure)  pattern assign(_, _)  pattern while(_, _) with read.stmt#=call.stmt#  pattern if(_, _, _)  pattern while(_, _) with assign.stmt#=7700  such that Next(print, 27) with read.stmt#=7100  such that Uses(print, "procedure")  pattern while(_, _)  pattern while(_, _)  such that Affects*(stmt, _) with constant.value=while.stmt#  pattern if(variable, _, _)  pattern while(then, _)  such that Parent*(stmt, 21)  pattern while(call, _)  pattern while(_, _)  pattern if(variable, _, _)  pattern assign(variable, _)  pattern while(variable, _) with call.procName=procedure.procName  pattern if(variable, _, _)  such that Calls*("then", procedure)  pattern assign(call, _) with stmt.stmt#=while.stmt#  pattern assign(variable, "3700/7300")  such that Affects(24, assign)  pattern assign(constant, _"(7500*6700)-7500"_)  pattern if(_, _, _) with "while"=variable.varName  such that Modifies(assign, "if")  pattern assign(variable, _"4700+5600"_)  pattern while(_, _) with stmt.stmt#=400 with print.varName=procedure.procName  pattern while(variable, _) with if.stmt#=constant.value  pattern if(print, _, _)  pattern while(else, _) with 6400=print.stmt#  such that Uses(procedure, _)  such that Calls*(procedure, procedure)  such that Follows*(24, assign)  such that Modifies(assign, _)  pattern while(variable, _)  pattern while(if, _)  such that Next*(_, print)  pattern while(variable, _)  such that Next*(_, assign) with while.stmt#=constant.value  pattern assign(variable, _)  pattern while(print, _) with call.stmt#=assign.stmt# with "assign"=print.varName  such that Parent*(3, read) with "else"=read.varName with assign.stmt#=stmt.stmt#  pattern if(assign, _, _)  such that Follows(if, read) with print.varName="then"  pattern if(variable, _, _) with 3500=while.stmt#  such that Modifies(17, variable)  pattern if(read, _, _)  pattern while(variable, _) with stmt.stmt#=stmt.stmt#  such that Follows*(20, print)  pattern while(procedure, _)  such that Follows*(assign, call)  such that Modifies(call, "while") with "constant"=procedure.procName  pattern if(variable, _, _)  pattern while(variable, _)  such that Modifies(procedure, "while") with assign.stmt#=call.stmt#  such that Affects*(_, stmt) with "read"=procedure.procName  pattern assign(variable, _)  such that Affects*(_, stmt)  pattern while(assign, _)  such that Follows(7, stmt)  pattern while(variable, _)  such that Follows(read, 22)  such that Follows(print, 9)  pattern assign(_, _) with call.stmt#=stmt.stmt# with "variable"=read.varName  such that Next*(read, _)  pattern assign(call, _"7200/9700"_)  pattern while(variable, _)  pattern assign(variable, _"9000-900"_)  pattern assign(variable, "3900/7600")  pattern while(variable, _) with if.stmt#=stmt.stmt#  pattern if(_, _, _) with 9500=call.stmt# with while.stmt#=call.stmt# with "then"=procedure.procName with call.procName=print.varName with call.stmt#=900  pattern assign(_, "6200/7400")  such that Parent*(2, while)  pattern assign(_, _"6900+6400"_) with stmt.stmt#=if.stmt# with 1900=assign.stmt#  pattern while(if, _) with if.stmt#=if.stmt#  such that Uses(while, "then")  such that Affects(stmt, _)  pattern while(if, _) with 1500=constant.value  pattern assign(_, _)  such that Calls(procedure, "then")  such that Parent(print, print) with call.stmt#=1100 with 200=print.stmt#  pattern assign(if, "8700+while")  such that Modifies(4, variable) with "while"=print.varName  pattern assign(variable, _"5500-3300"_)  pattern assign(_, "4400-8400") with read.stmt#=7800 with "else"=print.varName  such that Follows(20, stmt) with print.stmt#=4700 with while.stmt#=call.stmt# with variable.varName=call.procName  such that Follows(15, stmt)  such that Next*(call, _)  pattern if(variable, _, _)  pattern assign(_, "if+else")  such that Calls(_, procedure)  pattern if(_, _, _)  pattern assign(_, _"9000-5700"_)  pattern if(print, _, _)  pattern if(variable, _, _)  such that Parent*(17, if)  pattern if(variable, _, _)  such that Calls("assign", procedure) with print.stmt#=8100  pattern if(_, _, _)  pattern assign(_, _"9000*7000"_) with 2400=call.stmt# with procedure.procName="constant"  such that Affects*(assign, 6)  pattern assign(_, "5100-8800")  pattern if(read, _, _) with call.procName="while"  pattern while(if, _)  pattern while(_, _)  such that Calls*("then", procedure)  pattern if(variable, _, _)  pattern if(_, _, _) with stmt.stmt#=8200  pattern while(_, _)  such that Next*(_, assign)  pattern assign(variable, _"6600+3800"_)  such that Uses(while, "print")  pattern if(_, _, _)  such that Modifies(if, variable) with print.varName=print.varName  such that Next(call, _)  such that Parent(assign, 8)  pattern assign(variable, _"(9300+if)*2600"_)  pattern if(procedure, _, _)  such that Follows*(read, 1)  pattern if(else, _, _)  such that Uses(16, variable) with call.procName=call.procName  pattern if(procedure, _, _)  such that Next(assign, print)  pattern while(assign, _)  such that Affects(assign, _) with 400=if.stmt# with call.procName=read.varName  pattern if(variable, _, _)  such that Calls(procedure, procedure) with read.varName="procedure"  such that Calls*(procedure, "read")  pattern assign(read, _)  such that Modifies(stmt, variable)  pattern assign(while, _"1100-7000"_)  pattern while(while, _)  such that Uses(8, variable)  pattern assign(_, _)  pattern if(print, _, _)  pattern while(variable, _)  pattern assign(_, "8500*1600")  pattern assign(call, "4400*2100")  pattern while(procedure, _)  pattern while(_, _)  pattern assign(else, _)  such that Next(29, assign)  pattern if(assign, _, _)  such that Uses(procedure, "procedure")  such that Parent(stmt, _) with 500=stmt.stmt#  such that Follows*(if, while)  such that Affects*(assign, 2) with 2400=print.stmt# with call.stmt#=700  pattern assign(variable, _"9700*9300"_)  pattern if(_, _, _)  pattern while(if, _)  such that Parent*(print, read)  pattern if(else, _, _) with stmt.stmt#=8800 with variable.varName=variable.varName with read.varName=variable.varName  pattern while(else, _)  such that Next*(7, print)  pattern while(print, _) with 300=stmt.stmt# with read.varName=variable.varName with if.stmt#=5100 with call.stmt#=3200  pattern assign(variable, _"(1000+6400)/2400"_)  such that Follows(19, read)  such that Next*(22, call)  pattern if(variable, _, _)  pattern while(variable, _)  pattern while(_, _)  pattern assign(variable, _) with "assign"=print.varName with variable.varName=variable.varName  pattern while(read, _) with while.stmt#=2700  pattern assign(variable, _)  pattern assign(call, _"8400+3500"_)  pattern if(else, _, _)  such that Calls("else", procedure)  pattern while(variable, _)  such that Follows(stmt, while) with print.varName=variable.varName  such that Follows*(print, _)  such that Next(read, _)  pattern while(variable, _) with 1300=assign.stmt#  pattern assign(_, _)  pattern while(variable, _)  such that Affects*(_, stmt)  pattern if(variable, _, _)  pattern assign(variable, "3200/8100")  such that Calls(procedure, procedure) with read.stmt#=5100  pattern while(variable, _)  pattern if(if, _, _) with read.varName="then"  such that Follows*(stmt, 26)  pattern assign(variable, "9500*constant")  such that Uses(7, variable)  pattern while(variable, _)  pattern assign(_, _)  pattern if(variable, _, _)  such that Next*(14, stmt)  such that Follows*(while, 24) with print.varName="else" with call.procName=call.procName  such that Modifies(assign, _)  pattern while(_, _)  pattern if(variable, _, _)  pattern if(_, _, _) with call.stmt#=3400 with 1400=assign.stmt# with print.varName=read.varName  pattern while(while, _) with 9600=read.stmt#  such that Affects*(_, assign) with 6300=print.stmt# with 6100=if.stmt#  such that Modifies(14, variable)  pattern while(variable, _)  such that Follows*(_, while)  pattern if(_, _, _)  pattern if(variable, _, _) with read.stmt#=7200  such that Calls(procedure, procedure)  such that Parent*(read, read)  pattern while(_, _)  such that Parent*(17, print)  such that Next(while, read)  pattern assign(variable, _)  such that Calls*(procedure, "constant")  pattern while(variable, _)  such that Follows(_, if)  such that Next(_, read) with procedure.procName=procedure.procName with constant.value=stmt.stmt#  pattern if(procedure, _, _)  pattern assign(variable, _) with print.varName="read" with assign.stmt#=7100  such that Affects(assign, stmt)  pattern assign(_, _"6600-200"_)  pattern assign(variable, _"(8900/1600)+7800"_)  such that Calls(procedure, procedure)  pattern assign(_, _"5300/3700"_) with "constant"=print.varName  pattern while(variable, _)  pattern while(variable, _)  pattern if(then, _, _)  such that Calls(procedure, _)  pattern while(_, _)  pattern while(_, _)  such that Parent*(stmt, while) with while.stmt#=7000  such that Next(13, call) with 5000=if.stmt# with variable.varName=call.procName  pattern if(then, _, _)  such that Parent(stmt, _) with "variable"=call.procName  pattern if(_, _, _)  pattern while(variable, _) with procedure.procName="procedure" with print.varName=variable.varName with read.stmt#=7300  pattern while(_, _) with "while"=print.varName  pattern assign(variable, "if+6400")  pattern if(print, _, _) with call.procName="variable"  pattern assign(variable, _"1500*5400"_) with "if"=print.varName with stmt.stmt#=assign.stmt# with print.varName="then"  pattern if(_, _, _)  such that Affects*(assign, assign)  pattern assign(if, _"then+100"_) with read.varName="call"  pattern assign(_, "(900+6100)+9200") with "print"=call.procName  pattern while(_, _)  pattern assign(_, _"6300*8400"_)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern while(_, _)  pattern assign(variable, "7400*assign") with print.stmt#=7400  such that Parent(call, 14)  pattern assign(variable, "(8000-if)*9300") with constant.value=stmt.stmt#  pattern while(assign, _)  pattern while(_, _)  pattern if(_, _, _)  such that Modifies(7, variable)  such that Next*(_, read) with assign.stmt#=300  such that Follows*(read, _) with variable.varName="constant" with assign.stmt#=if.stmt#  pattern while(if, _) with print.varName="print" 

5000
9 - Query 9
variable variable; print print; constant constant; assign assign; call call; stmt stmt; read read; if if; while while; procedure procedure; 
Select <variable, print, constant, assign, call, stmt, read, if, while, procedure>  such that Modifies(19, variable) with 2100=stmt.stmt#  such that Next(_, stmt) with print.varName="if" with procedure.procName="print"  pattern if(while, _, _)  such that Calls*(procedure, procedure) with print.stmt#=if.stmt#  pattern assign(_, _)  pattern assign(_, _"5600+4000"_)  pattern if(variable, _, _)  pattern assign(variable, "9300/1000") with "then"=procedure.procName with print.varName=procedure.procName  such that Calls*(_, procedure) with 100=while.stmt#  pattern if(_, _, _)  pattern while(variable, _)  pattern if(variable, _, _)  pattern while(variable, _) with "if"=procedure.procName  pattern while(_, _) with variable.varName="assign"  such that Calls*(_, procedure)  such that Affects(stmt, _) with assign.stmt#=3300  such that Uses(print, "while") with constant.value=6400  pattern while(while, _) with constant.value=while.stmt#  pattern if(_, _, _)  pattern while(read, _)  such that Follows(while, _)  pattern assign(_, _"3400+6700"_)  pattern while(if, _)  such that Calls*("procedure", procedure)  pattern assign(assign, _"7600*else"_)  such that Follows(while, _)  such that Calls*(procedure, "while") with read.stmt#=7600  such that Next(11, while)  pattern while(variable, _)  pattern while(variable, _) with read.varName="read"  pattern while(_, _) with read.stmt#=if.stmt#  pattern assign(if, _"3600/8600"_)  pattern while(variable, _)  pattern if(read, _, _)  such that Affects*(assign, 3)  pattern while(variable, _)  such that Next(22, stmt)  such that Modifies(print, variable)  pattern if(variable, _, _)  such that Modifies(if, variable) with 5700=call.stmt# with call.procName="procedure"  pattern while(variable, _)  pattern while(_, _) with "else"=procedure.procName with call.procName="else"  pattern if(_, _, _) with read.stmt#=call.stmt#  such that Parent(assign, if)  pattern assign(constant, _)  pattern if(else, _, _)  pattern assign(read, _)  pattern assign(_, _)  pattern if(_, _, _)  pattern assign(variable, "1100*7900")  pattern while(_, _)  pattern assign(variable, _) with "if"=print.varName  such that Follows(while, _) with "variable"=procedure.procName  pattern if(_, _, _) with 4800=if.stmt#  pattern if(variable, _, _) with procedure.procName="read"  pattern while(procedure, _)  such that Affects*(assign, 19)  such that Follows*(_, call) with 5700=read.stmt# with if.stmt#=read.stmt#  such that Next(_, print)  pattern if(_, _, _) with variable.varName="assign" with "call"=variable.varName  pattern assign(variable, _"9200/7600"_)  such that Next(27, call)  pattern if(else, _, _)  pattern if(variable, _, _) with stmt.stmt#=8200  pattern assign(then, _)  pattern while(variable, _)  such that Affects(_, assign) with if.stmt#=3600 with "else"=call.procName  such that Calls*(_, procedure) with 9300=constant.value  such that Next*(_, print)  such that Modifies(18, variable)  such that Modifies(call, _) with call.procName="then" with variable.varName=print.varName with print.varName=variable.varName with call.procName=procedure.procName  pattern if(_, _, _)  pattern while(variable, _)  such that Parent*(10, call)  pattern if(call, _, _)  pattern while(_, _)  such that Next*(print, _)  pattern assign(variable, _"3100-8400"_) with read.stmt#=print.stmt#  pattern while(if, _) with if.stmt#=2600 with while.stmt#=2600 with stmt.stmt#=if.stmt#  such that Next*(_, if)  such that Follows*(stmt, 2) with variable.varName=read.varName  pattern if(if, _, _)  pattern while(read, _)  pattern assign(if, "variable-1900")  such that Follows*(_, while)  such that Calls*(procedure, procedure)  such that Parent(_, stmt)  such that Modifies(call, variable)  pattern assign(constant, _) with while.stmt#=400  such that Affects(22, stmt) with read.varName=call.procName with if.stmt#=4100  pattern assign(procedure, _) with 8700=call.stmt#  such that Affects(stmt, stmt)  such that Calls("else", procedure)  such that Modifies(assign, "procedure")  pattern if(variable, _, _)  pattern assign(while, "(7200+600)-4700")  pattern if(_, _, _)  pattern if(_, _, _) with read.varName="while"  pattern assign(else, "7600/5600")  pattern if(_, _, _) with call.procName=procedure.procName  such that Modifies(call, "read")  such that Affects*(_, stmt) with "variable"=print.varName  such that Next*(call, _)  pattern if(variable, _, _)  pattern assign(variable, "1000-6200") with stmt.stmt#=4400 with constant.value=5000  such that Next(stmt, _)  such that Follows(_, stmt)  such that Next(assign, 9) with variable.varName="while"  pattern if(_, _, _)  pattern assign(_, _"8200*1100"_)  pattern if(variable, _, _) with "then"=read.varName  such that Parent*(print, _) with print.varName="procedure"  pattern assign(variable, _)  pattern assign(assign, _)  pattern assign(variable, _"print-7800"_)  pattern if(variable, _, _)  pattern while(variable, _) with 800=print.stmt# with read.varName=variable.varName with call.stmt#=7900  pattern if(_, _, _) with call.procName="constant"  pattern assign(_, _)  pattern assign(else, _"constant-5100"_)  such that Modifies(29, variable)  pattern assign(_, _) with procedure.procName=read.varName  pattern assign(variable, _"8600/2000"_) with procedure.procName="print"  pattern assign(else, _"9500+7700"_)  pattern assign(call, _)  pattern assign(variable, _"7600-8200"_)  such that Affects*(2, assign) with "assign"=procedure.procName  pattern while(variable, _)  such that Parent*(_, print) with if.stmt#=8700 with call.procName="variable" with print.stmt#=read.stmt#  such that Parent(stmt, 17)  such that Next(18, read) with read.varName="read"  pattern assign(variable, _"200+1000"_) with "read"=call.procName with call.procName="print"  such that Follows*(print, _)  pattern while(_, _) with 5200=print.stmt# with stmt.stmt#=call.stmt#  such that Parent*(4, stmt)  pattern if(else, _, _) with if.stmt#=6000 with if.stmt#=assign.stmt#  such that Parent*(while, print)  pattern while(variable, _)  such that Parent*(stmt, 17)  such that Affects*(_, assign)  pattern assign(then, "6800*2300")  such that Calls*("while", procedure)  pattern if(variable, _, _) with 1000=call.stmt#  pattern while(variable, _)  pattern if(_, _, _)  such that Follows*(print, _) with read.varName=procedure.procName with call.stmt#=if.stmt#  such that Calls*(procedure, _)  such that Next(_, call)  pattern while(_, _)  pattern assign(variable, _)  pattern while(_, _) with if.stmt#=while.stmt#  such that Modifies(while, variable)  pattern while(variable, _)  such that Uses(while, "then") with read.varName=print.varName with stmt.stmt#=9600  such that Calls(procedure, "then") with procedure.procName="print"  such that Follows*(assign, _) with assign.stmt#=assign.stmt#  such that Next*(_, read) with print.varName="read" with stmt.stmt#=while.stmt#  such that Parent*(7, call) with while.stmt#=9300  pattern assign(while, "500-if")  such that Parent*(print, 1) with "variable"=call.procName with while.stmt#=6200  pattern while(while, _)  pattern assign(call, "4500*1300")  pattern if(_, _, _)  pattern assign(variable, "1700-6600") with "if"=read.varName  pattern assign(if, _) with "read"=variable.varName  such that Parent(_, print) with read.varName=call.procName  such that Follows*(9, print)  pattern if(variable, _, _) with procedure.procName="while"  pattern while(call, _)  pattern assign(then, "2100/8700") with call.stmt#=5200 with stmt.stmt#=assign.stmt#  such that Next*(assign, assign)  such that Modifies(print, variable) with constant.value=while.stmt#  such that Affects(stmt, assign)  pattern if(_, _, _) with "assign"=call.procName  pattern while(_, _)  pattern while(variable, _) with procedure.procName=variable.varName with 7200=stmt.stmt#  pattern assign(call, _) with read.stmt#=5700 with read.varName="else"  such that Affects*(stmt, 4)  pattern if(if, _, _)  such that Next(call, 2)  such that Uses(7, variable) with print.stmt#=9000 with read.varName=print.varName  such that Calls*("if", procedure)  pattern assign(print, "3900*3400") with call.stmt#=4200  such that Parent*(read, print) with read.varName="procedure" with 7600=stmt.stmt# with if.stmt#=if.stmt#  such that Next(15, while)  pattern while(_, _)  such that Next*(_, print) with 6300=call.stmt# with read.stmt#=while.stmt#  pattern assign(_, _) with print.stmt#=print.stmt#  pattern if(variable, _, _)  pattern assign(variable, _"2200*4400"_)  such that Follows(while, if) with while.stmt#=6000  such that Next*(call, 19)  such that Parent(stmt, _) with "procedure"=variable.varName  pattern assign(_, "constant*7900") with read.varName="while"  such that Affects*(_, assign)  pattern while(_, _) with variable.varName=procedure.procName with read.stmt#=print.stmt#  such that Modifies(13, variable) with "call"=call.procName  pattern if(else, _, _) with 8600=stmt.stmt# with print.stmt#=6700  pattern assign(constant, "(2700/3500)+8600")  pattern if(_, _, _) with 4400=if.stmt#  pattern if(call, _, _)  pattern assign(_, "4200+5900")  pattern if(else, _, _) with call.procName=print.varName  pattern while(if, _) with call.procName=procedure.procName  pattern assign(assign, _"read*7000"_)  such that Parent(27, call) with "else"=procedure.procName  such that Affects(stmt, 11)  pattern assign(_, "6000+8000")  such that Next(_, read) with 7800=while.stmt# with "assign"=procedure.procName  such that Calls*(procedure, _)  such that Parent*(_, assign) with print.varName=print.varName  pattern assign(variable, "1300-5700")  pattern if(_, _, _)  pattern assign(print, "3900/1100")  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern assign(variable, _)  pattern while(_, _) with read.varName="if" with constant.value=3100  such that Calls(procedure, procedure)  pattern while(variable, _) with procedure.procName=print.varName  pattern if(variable, _, _)  pattern while(if, _)  pattern assign(variable, _"6900/procedure"_)  such that Calls(_, procedure)  such that Modifies(13, variable)  pattern assign(while, _) with "assign"=read.varName with while.stmt#=8200 with "else"=variable.varName  pattern assign(variable, _) with constant.value=8500  pattern if(variable, _, _)  pattern while(variable, _)  pattern while(variable, _)  such that Modifies(stmt, "assign") with if.stmt#=while.stmt#  pattern assign(if, _"8700+4500"_)  such that Calls("call", procedure)  such that Parent*(6, read)  such that Calls*(procedure, _)  pattern assign(call, _)  pattern while(_, _)  pattern while(variable, _)  pattern while(variable, _)  such that Affects*(assign, 29)  pattern if(variable, _, _)  pattern while(_, _)  such that Affects*(assign, stmt) with stmt.stmt#=call.stmt# with while.stmt#=4800  such that Parent*(read, print) with call.procName="variable"  such that Affects*(22, stmt)  pattern assign(_, _)  such that Follows(_, stmt)  such that Follows*(7, print)  such that Affects*(_, stmt)  pattern if(variable, _, _)  such that Uses(print, _)  pattern while(_, _)  pattern assign(variable, "1600/700")  pattern while(_, _) with call.procName=print.varName with call.procName=procedure.procName with procedure.procName="if"  pattern assign(_, _"600*2300"_)  pattern assign(_, "4200*2100")  pattern assign(variable, _)  pattern assign(variable, "7100*2100")  pattern assign(_, _"7900*8500"_) with stmt.stmt#=900  pattern assign(_, _)  such that Uses(read, "assign") with stmt.stmt#=stmt.stmt# with stmt.stmt#=700  pattern while(assign, _) with call.procName=read.varName with 6600=if.stmt#  pattern assign(while, _"4600*1900"_)  such that Affects(_, stmt)  pattern assign(_, "5000/5800")  pattern if(_, _, _)  such that Follows*(call, 18)  pattern if(_, _, _) with 6800=while.stmt# with "assign"=call.procName  pattern if(procedure, _, _)  pattern if(assign, _, _)  pattern if(print, _, _)  pattern while(variable, _)  pattern while(variable, _)  such that Parent*(while, 22)  such that Next(21, assign)  such that Affects(stmt, _)  pattern while(variable, _)  pattern assign(call, _) with print.varName="if"  such that Follows*(24, read)  pattern while(variable, _) with "constant"=print.varName  pattern if(call, _, _) with "constant"=procedure.procName  pattern while(constant, _) with constant.value=6200  pattern while(constant, _) with read.stmt#=assign.stmt# with 100=assign.stmt# with variable.varName=read.varName  pattern if(variable, _, _) with "while"=procedure.procName with "while"=read.varName with stmt.stmt#=call.stmt#  pattern assign(variable, _"2800+8100"_) with variable.varName="call" with call.procName=variable.varName with call.procName="read" with "assign"=call.procName  pattern while(read, _) with call.stmt#=800  pattern assign(assign, _)  such that Parent*(10, read)  pattern while(if, _)  pattern while(_, _)  such that Parent(assign, assign)  pattern if(else, _, _)  pattern if(variable, _, _)  such that Affects(_, stmt)  such that Parent(while, stmt)  such that Next(_, assign)  pattern if(variable, _, _)  pattern if(variable, _, _) with while.stmt#=8700  pattern assign(variable, "7400*200")  such that Modifies(25, variable)  pattern assign(variable, _)  pattern if(assign, _, _) with 1200=assign.stmt#  pattern assign(variable, "(400*4100)-9700")  pattern if(variable, _, _) with procedure.procName="print"  pattern if(_, _, _)  such that Follows(read, 26)  pattern if(_, _, _)  pattern while(variable, _)  pattern while(_, _) with procedure.procName="else" with read.varName="then"  such that Follows(_, stmt) with read.stmt#=read.stmt#  pattern while(variable, _)  pattern while(variable, _)  pattern assign(call, "(3800/5800)/1300")  pattern assign(variable, _)  pattern assign(constant, _"8500+2900"_)  pattern assign(_, _"9000-800"_)  pattern assign(_, _)  such that Calls("if", procedure) with 7500=if.stmt# with read.stmt#=print.stmt#  pattern assign(_, _"4800/7700"_) with procedure.procName="else"  such that Calls(procedure, "variable") with 8200=assign.stmt# with read.varName=variable.varName  pattern assign(then, _)  such that Follows(12, if) with "assign"=print.varName with print.varName=read.varName with "print"=variable.varName  pattern assign(_, "200*5400") with "if"=read.varName with read.stmt#=9900  pattern if(variable, _, _)  such that Follows(_, while)  such that Affects(stmt, _)  pattern while(_, _)  pattern if(if, _, _) with assign.stmt#=print.stmt# 

5000
10 - Query 10
variable variable; assign assign; print print; call call; constant constant; stmt stmt; read read; while while; if if; procedure procedure; 
Select <variable, assign, print, call, constant, stmt, read, while, if, procedure>  such that Parent(while, 5) with "assign"=procedure.procName  such that Modifies(20, variable)  pattern while(print, _)  pattern assign(constant, _"3200+8700"_)  such that Next*(read, 27)  pattern while(variable, _) with read.varName="while" with read.varName="procedure"  pattern while(_, _)  pattern assign(constant, "4100+5100")  pattern assign(assign, _"4100/5100"_) with print.varName=procedure.procName  such that Parent(29, read)  pattern if(variable, _, _)  such that Next*(_, assign) with procedure.procName=print.varName with variable.varName="else"  pattern assign(if, _"8200*1300"_)  such that Calls("then", procedure) with stmt.stmt#=9500  pattern if(procedure, _, _)  such that Follows*(assign, _)  such that Follows*(if, _) with print.varName="variable"  pattern while(variable, _)  pattern while(_, _)  such that Follows*(if, 14)  such that Affects(assign, _)  pattern assign(read, _"300*1400"_)  pattern while(variable, _)  such that Next*(if, call)  such that Follows(assign, _)  pattern if(variable, _, _) with read.varName="if" with constant.value=8100  pattern while(procedure, _) with call.stmt#=if.stmt#  pattern if(variable, _, _)  pattern while(variable, _)  such that Next*(17, print)  pattern if(_, _, _) with "while"=read.varName  pattern while(procedure, _)  pattern assign(_, _"2100/then"_)  pattern while(variable, _)  pattern if(_, _, _)  pattern assign(_, _)  pattern while(then, _)  such that Follows*(read, read)  pattern while(variable, _)  pattern if(variable, _, _)  pattern assign(constant, _"7300*3400"_) with print.stmt#=if.stmt#  pattern if(assign, _, _)  such that Next(call, assign)  pattern while(variable, _) with procedure.procName="while"  pattern while(variable, _) with print.varName=print.varName  such that Modifies(while, variable)  such that Affects*(_, stmt)  pattern while(procedure, _)  pattern if(_, _, _)  pattern assign(print, "9300+7000")  pattern assign(_, _"3800*6200"_)  pattern if(_, _, _) with print.varName="if"  pattern if(_, _, _)  pattern while(_, _)  such that Affects(25, stmt) with if.stmt#=call.stmt# with constant.value=read.stmt#  pattern assign(variable, _"200/5600"_)  pattern assign(_, _) with print.varName=variable.varName  pattern assign(_, _) with "print"=read.varName with 5900=if.stmt#  pattern while(variable, _) with "print"=print.varName with call.stmt#=7300  such that Next(9, if)  such that Follows*(25, call)  such that Affects(assign, assign)  pattern while(assign, _)  pattern assign(print, _)  such that Affects*(stmt, stmt) with variable.varName=variable.varName  such that Calls(_, procedure)  such that Calls*(_, procedure)  such that Next*(_, assign)  pattern assign(variable, _)  pattern assign(variable, "(9800+9300)/3400") with 6500=print.stmt#  pattern while(variable, _)  such that Calls(procedure, "read")  pattern if(else, _, _)  pattern assign(read, _"9300/9600"_) with constant.value=if.stmt#  pattern if(variable, _, _)  pattern while(variable, _) with if.stmt#=1500 with print.varName="read"  pattern assign(else, _)  pattern if(variable, _, _)  such that Uses(while, _) with "print"=procedure.procName  such that Affects*(18, assign)  such that Follows(18, read) with if.stmt#=print.stmt# with if.stmt#=if.stmt#  such that Parent*(call, call)  pattern if(assign, _, _)  pattern assign(call, "2500-7200")  pattern assign(read, _) with 400=read.stmt#  pattern assign(variable, "procedure/7900") with 2100=assign.stmt#  such that Affects(18, assign)  such that Follows*(4, assign)  pattern assign(while, _)  pattern if(variable, _, _)  such that Next(_, call) with procedure.procName=read.varName  such that Uses(read, variable) with "while"=variable.varName  pattern assign(call, _"1400*2700"_)  pattern while(then, _)  pattern assign(if, _)  such that Parent*(_, read) with call.procName=print.varName  pattern while(_, _)  pattern if(variable, _, _)  pattern while(_, _) with call.procName="then" with call.procName=procedure.procName with read.stmt#=read.stmt# with read.stmt#=assign.stmt#  pattern assign(variable, _"(500/6400)-5700"_) with 700=call.stmt# with 4300=print.stmt#  such that Modifies(print, variable) with call.procName=procedure.procName with print.stmt#=5300 with "print"=variable.varName with if.stmt#=3300  such that Uses(print, variable)  pattern while(read, _)  such that Affects(stmt, _)  such that Modifies(assign, variable) with print.varName="assign"  such that Uses(print, variable) with 2200=constant.value  such that Uses(procedure, _)  such that Next*(print, _)  such that Calls*(_, procedure) with read.varName="else"  pattern if(variable, _, _)  pattern if(variable, _, _) with variable.varName="assign" with print.stmt#=while.stmt#  such that Parent*(3, read)  pattern while(variable, _)  pattern assign(variable, _"4100*call"_)  pattern assign(variable, "8500+4600") with read.stmt#=print.stmt# with if.stmt#=while.stmt#  pattern while(_, _)  pattern if(variable, _, _) with while.stmt#=4400  such that Parent(print, _) with read.stmt#=constant.value  such that Uses(14, variable) with print.stmt#=9600  such that Uses(stmt, "read")  pattern assign(_, "(4700*9900)/4500")  such that Parent(read, 16)  such that Calls(procedure, "then")  pattern if(while, _, _) with constant.value=4200  pattern while(_, _)  such that Follows*(10, read) with call.procName=read.varName  such that Next(print, 14) with 7000=call.stmt# with 9300=stmt.stmt# with 5800=assign.stmt#  such that Follows(21, stmt)  pattern if(_, _, _)  pattern while(_, _)  such that Calls*(_, procedure) with print.stmt#=if.stmt#  pattern if(call, _, _)  such that Modifies(procedure, "then") with "if"=print.varName with call.procName=call.procName  pattern while(variable, _)  such that Calls*(procedure, "variable") with if.stmt#=9300  pattern if(_, _, _)  such that Affects(21, assign)  pattern assign(assign, "4600+8700")  pattern if(variable, _, _)  pattern if(_, _, _) with variable.varName=variable.varName  pattern while(_, _)  pattern while(_, _)  pattern assign(while, "400/7900") with "variable"=procedure.procName with stmt.stmt#=700  pattern assign(while, _"5900/3200"_)  pattern while(_, _)  pattern while(_, _)  pattern if(_, _, _)  pattern if(else, _, _)  such that Calls*(_, procedure)  pattern assign(variable, _"3000+8100"_) with call.stmt#=2600  such that Calls*("then", procedure) with assign.stmt#=constant.value  pattern while(variable, _)  pattern if(variable, _, _) with print.stmt#=7400  pattern if(_, _, _) with constant.value=1700  pattern while(variable, _)  pattern while(_, _) with procedure.procName=procedure.procName  pattern while(call, _) with read.stmt#=read.stmt# with 7900=stmt.stmt#  pattern if(else, _, _) with "constant"=read.varName  pattern while(variable, _)  such that Affects*(assign, _)  such that Parent*(_, while)  pattern while(_, _)  pattern if(variable, _, _)  such that Next(11, if)  pattern if(_, _, _)  pattern assign(call, _"5100/700"_)  pattern while(read, _) with read.varName="variable"  pattern if(_, _, _)  pattern while(constant, _)  such that Calls(_, procedure)  such that Next(read, _)  pattern if(_, _, _)  pattern assign(_, "7700+900") with assign.stmt#=assign.stmt# with procedure.procName=print.varName with assign.stmt#=print.stmt#  pattern assign(_, _)  pattern if(constant, _, _)  pattern while(variable, _)  pattern if(_, _, _)  pattern assign(variable, "(7700+7200)+8100")  pattern if(if, _, _)  pattern if(variable, _, _)  such that Parent(assign, 29)  such that Affects(assign, stmt)  pattern while(constant, _)  pattern assign(procedure, _"1100+6600"_)  pattern if(_, _, _)  such that Modifies(while, _)  pattern if(_, _, _)  pattern while(_, _)  such that Affects(stmt, assign)  pattern assign(_, _"6900+5200"_)  such that Follows*(print, _)  such that Parent(if, call)  pattern assign(while, "6500+9400")  pattern assign(_, _)  pattern assign(_, _)  pattern assign(_, _) with variable.varName="then"  pattern if(variable, _, _)  pattern while(assign, _)  pattern if(_, _, _)  such that Affects(_, stmt) with if.stmt#=print.stmt#  pattern if(variable, _, _)  pattern while(_, _)  such that Next(stmt, 10)  pattern assign(variable, _"4500/3600"_)  such that Uses(call, "variable") with stmt.stmt#=6200 with print.varName=print.varName with call.stmt#=900 with "if"=procedure.procName  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern assign(_, _)  pattern while(variable, _) with "while"=print.varName with call.procName="read" with "assign"=read.varName with while.stmt#=3000  pattern if(variable, _, _)  such that Next*(_, call)  pattern while(_, _) with assign.stmt#=while.stmt#  pattern while(variable, _) with while.stmt#=700  such that Next*(read, _)  such that Next*(22, stmt)  pattern if(assign, _, _)  pattern while(variable, _)  such that Affects*(assign, _)  such that Parent(_, if) with 1900=print.stmt#  pattern assign(_, _"5800*3800"_) with read.stmt#=1000  such that Uses(print, "if")  pattern while(_, _) with while.stmt#=assign.stmt# with if.stmt#=6300  pattern if(variable, _, _) with variable.varName="constant" with read.varName="variable"  pattern if(else, _, _)  pattern if(read, _, _)  pattern while(if, _) with 4900=stmt.stmt#  pattern if(variable, _, _)  pattern if(variable, _, _) with call.procName=print.varName  pattern while(variable, _)  pattern while(constant, _)  such that Affects*(assign, assign)  pattern if(if, _, _)  pattern while(variable, _) with constant.value=stmt.stmt# with variable.varName="then"  such that Affects(22, stmt) with variable.varName="procedure" with 1800=assign.stmt#  pattern assign(call, _) with if.stmt#=assign.stmt# with procedure.procName=print.varName  pattern while(variable, _) with read.varName=variable.varName  pattern while(_, _)  pattern assign(variable, _)  pattern if(_, _, _)  such that Affects(25, assign)  pattern assign(_, _) with call.stmt#=800  pattern assign(variable, _"5200/4000"_) with "call"=variable.varName  such that Parent(print, print) with read.varName="then"  pattern if(_, _, _)  such that Modifies(if, _)  pattern assign(procedure, _"3300/procedure"_) with while.stmt#=4200  pattern if(_, _, _) with constant.value=while.stmt#  pattern assign(variable, _)  pattern while(variable, _)  such that Calls*(procedure, "then")  pattern assign(_, _) with if.stmt#=3000  pattern while(else, _) with 3400=print.stmt#  pattern while(variable, _)  pattern if(call, _, _)  pattern assign(_, _) with 4300=call.stmt#  such that Next*(if, 28)  pattern while(call, _)  pattern if(variable, _, _) with 200=assign.stmt# with 2000=stmt.stmt# with print.varName=variable.varName with "if"=print.varName  pattern while(assign, _)  such that Parent(while, _)  pattern while(variable, _) with call.procName="procedure"  pattern while(assign, _)  such that Calls(_, procedure)  pattern while(variable, _)  pattern if(_, _, _)  pattern if(assign, _, _)  such that Parent*(call, 16) with while.stmt#=read.stmt#  such that Uses(2, variable)  such that Calls*(_, procedure) with 8000=print.stmt#  pattern if(variable, _, _)  pattern while(constant, _)  such that Next(print, 14) with 9000=call.stmt#  such that Next(while, _)  pattern assign(_, "1300*1200")  such that Next(_, call)  pattern if(_, _, _) with read.varName=print.varName  pattern while(print, _)  pattern if(variable, _, _)  such that Follows(read, _)  pattern while(variable, _)  such that Calls(_, procedure)  pattern while(read, _) with assign.stmt#=read.stmt#  such that Uses(stmt, _)  pattern while(_, _)  pattern assign(while, _)  such that Affects*(stmt, stmt)  pattern while(_, _)  such that Uses(print, "read") with print.varName=call.procName  such that Modifies(9, variable) with 2700=constant.value with stmt.stmt#=stmt.stmt# with 4000=print.stmt#  pattern if(assign, _, _)  such that Affects*(_, stmt)  pattern if(_, _, _)  such that Calls(procedure, "if")  pattern if(_, _, _)  such that Affects*(assign, _)  pattern while(_, _)  pattern if(read, _, _)  pattern assign(_, _"else-2000"_)  pattern while(_, _) with print.stmt#=8200  pattern if(read, _, _) with call.procName=procedure.procName  such that Calls("read", procedure)  pattern while(procedure, _)  such that Uses(assign, variable)  pattern assign(_, _)  pattern while(read, _) with print.varName=variable.varName  such that Parent(read, 24)  pattern assign(call, _) with 5500=while.stmt#  such that Parent*(while, 18) with print.stmt#=6500  such that Parent*(10, stmt)  pattern while(procedure, _) with procedure.procName=call.procName  pattern while(variable, _) with read.varName=variable.varName  pattern if(variable, _, _) with read.varName=print.varName  pattern if(procedure, _, _)  pattern while(constant, _)  such that Calls(procedure, "procedure")  pattern while(call, _)  pattern if(procedure, _, _)  pattern while(_, _)  such that Modifies(assign, variable)  pattern assign(variable, _)  pattern if(_, _, _)  pattern while(then, _)  pattern if(assign, _, _)  such that Modifies(while, _)  pattern assign(procedure, _)  pattern assign(variable, _"2400*2700"_)  pattern if(read, _, _)  such that Modifies(procedure, "print")  such that Modifies(16, variable)  such that Parent(_, while) with 3000=read.stmt#  pattern while(_, _)  pattern while(_, _)  such that Affects*(_, stmt)  such that Affects(_, assign)  pattern assign(_, _"while+1800"_)  pattern assign(variable, "(5300-5500)/6600") with procedure.procName=procedure.procName  pattern assign(else, _"4800-3700"_)  pattern if(read, _, _)  pattern assign(assign, _"2100*3400"_)  pattern while(call, _)  such that Calls(procedure, "assign")  such that Affects*(assign, 6) with call.stmt#=constant.value  pattern if(while, _, _)  pattern assign(variable, _"5000/5100"_) with procedure.procName="then"  such that Next*(assign, while) with 5500=call.stmt#  pattern if(_, _, _)  pattern if(variable, _, _)  pattern if(procedure, _, _)  pattern assign(read, _)  pattern assign(variable, _"9900*8500"_)  pattern while(_, _) with if.stmt#=stmt.stmt#  pattern if(variable, _, _) with 9800=while.stmt#  such that Parent*(while, 9)  pattern assign(_, "(6300+8200)*8600")  such that Affects*(assign, _) 

5000
11 - Query 11
assign assign; variable variable; constant constant; print print; call call; stmt stmt; read read; while while; if if; procedure procedure; 
Select <assign, variable, constant, print, call, stmt, read, while, if, procedure>  such that Calls*(procedure, "print")  such that Affects*(stmt, _)  pattern while(else, _)  pattern assign(then, _"(6300/2600)/9600"_)  pattern if(variable, _, _) with constant.value=9600 with constant.value=7300 with "assign"=variable.varName  pattern while(variable, _) with procedure.procName="variable"  such that Parent*(read, _) with while.stmt#=read.stmt# with "procedure"=variable.varName  such that Uses(assign, _) with print.varName="assign"  pattern while(while, _)  pattern while(_, _)  pattern while(variable, _)  pattern while(variable, _)  pattern while(_, _) with call.stmt#=read.stmt#  such that Parent(_, read)  pattern if(print, _, _)  such that Uses(4, variable)  such that Calls*(procedure, "assign")  such that Next*(_, print)  pattern assign(_, "call+7300") with 6900=assign.stmt#  pattern assign(assign, _)  pattern while(assign, _) with if.stmt#=call.stmt#  such that Modifies(while, _)  pattern assign(assign, _) with constant.value=9100 with print.stmt#=constant.value  pattern while(variable, _) with read.varName=print.varName  such that Uses(print, _)  pattern while(variable, _)  such that Uses(assign, variable) with constant.value=9600  pattern while(variable, _)  such that Parent*(_, read)  such that Calls*(procedure, procedure)  pattern if(_, _, _) with procedure.procName=call.procName with read.stmt#=9500  such that Affects*(4, stmt)  such that Follows*(1, while)  such that Follows(print, 12)  pattern if(while, _, _)  pattern while(_, _)  such that Parent(_, while) with "constant"=call.procName  pattern while(variable, _)  pattern assign(_, _"4200/2700"_)  such that Next*(print, stmt)  pattern if(variable, _, _)  such that Uses(29, variable) with 3500=stmt.stmt#  pattern if(read, _, _)  pattern assign(variable, _) with 8200=stmt.stmt#  such that Parent*(while, 2) with 8800=assign.stmt#  pattern assign(_, _)  pattern while(print, _) with "call"=print.varName  pattern if(if, _, _)  pattern while(_, _)  such that Modifies(print, "print")  such that Parent*(while, call) with "call"=print.varName with procedure.procName=call.procName with print.varName="constant" with call.procName="while"  such that Parent*(while, 4)  pattern if(_, _, _)  such that Follows(assign, 2)  pattern if(read, _, _)  such that Parent(assign, _)  pattern assign(variable, _)  such that Calls("constant", procedure)  such that Follows(call, _) with while.stmt#=assign.stmt#  such that Modifies(call, _)  pattern while(_, _) with "assign"=call.procName with stmt.stmt#=constant.value  pattern assign(_, _"8900*3700"_)  pattern if(variable, _, _)  pattern while(_, _) with read.stmt#=while.stmt# with print.stmt#=7400  pattern if(variable, _, _)  pattern assign(call, "1000*400") with call.stmt#=if.stmt# with "read"=procedure.procName  pattern while(_, _)  pattern if(variable, _, _) with assign.stmt#=while.stmt# with procedure.procName=call.procName  pattern assign(variable, _)  pattern assign(read, _)  pattern if(variable, _, _)  such that Calls*(procedure, procedure)  such that Uses(call, "read") with 2100=call.stmt#  such that Affects*(assign, 12)  pattern if(_, _, _)  pattern while(_, _)  such that Parent(_, stmt)  such that Calls("else", procedure) with call.procName=procedure.procName  pattern while(_, _)  such that Calls(procedure, "variable")  pattern while(then, _) with while.stmt#=while.stmt#  such that Next(22, assign)  such that Uses(stmt, variable) with 500=call.stmt# with procedure.procName=call.procName with print.stmt#=5200 with "if"=read.varName  such that Uses(call, "call")  such that Affects*(24, stmt) with variable.varName="while" with 2700=read.stmt#  pattern if(variable, _, _)  pattern if(procedure, _, _)  pattern if(assign, _, _)  pattern assign(_, _)  pattern assign(_, _"300+3400"_) with procedure.procName="if"  such that Follows*(_, if)  such that Uses(16, variable)  pattern assign(variable, _"9900-3200"_) with 3500=while.stmt#  such that Follows(_, print)  pattern assign(variable, _)  such that Calls("then", procedure) with print.varName=read.varName  such that Follows*(read, call)  such that Uses(stmt, variable)  pattern while(else, _)  pattern while(variable, _)  pattern while(_, _) with "constant"=variable.varName  pattern while(variable, _)  such that Parent(assign, _) with "then"=procedure.procName  such that Follows(if, _) with "variable"=call.procName  pattern assign(_, _)  pattern while(then, _) with 5300=while.stmt# with 6600=if.stmt#  such that Calls(procedure, procedure)  pattern assign(_, "(7000/5400)/4000")  pattern if(variable, _, _)  pattern if(_, _, _) with print.varName="else" with if.stmt#=6200  pattern assign(variable, _"6700-500"_)  pattern assign(while, "5300*8600")  pattern while(variable, _) with "read"=print.varName  such that Affects*(assign, stmt) with call.procName="print" with call.stmt#=5700 with "else"=call.procName  pattern while(if, _) with read.varName=procedure.procName  pattern while(_, _)  pattern if(_, _, _) with assign.stmt#=4100 with read.varName=read.varName with call.procName="else"  pattern assign(if, _"((2000-5400)*200)*4700"_)  such that Next(read, 8)  pattern while(_, _) with 1500=if.stmt#  pattern assign(variable, _"1200*9600"_) with "call"=call.procName with read.stmt#=3500 with 7500=read.stmt# with print.stmt#=8000  such that Affects(assign, assign)  pattern while(call, _)  such that Follows(print, 24) with "else"=procedure.procName with while.stmt#=if.stmt#  pattern if(_, _, _)  such that Calls(procedure, "assign") with call.procName="variable" with "if"=variable.varName  such that Affects(stmt, _)  pattern while(then, _)  pattern if(_, _, _) with procedure.procName="read"  pattern assign(while, "500-5400")  pattern while(while, _)  pattern assign(variable, _"300/700"_)  pattern if(variable, _, _) with print.stmt#=2000  such that Calls(_, procedure)  pattern if(variable, _, _) with procedure.procName=procedure.procName  pattern assign(variable, _"7400+9400"_)  such that Calls*(_, procedure)  such that Follows(if, while)  pattern while(_, _) with while.stmt#=6200 with 4400=if.stmt#  pattern while(_, _)  such that Next(if, stmt)  such that Next*(assign, _)  pattern if(_, _, _)  pattern if(_, _, _)  such that Follows(assign, call)  such that Follows(print, assign) with 3600=stmt.stmt#  pattern assign(_, _"1900/5200"_) with print.varName=call.procName  pattern if(call, _, _)  pattern while(if, _) with 5800=print.stmt#  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern assign(variable, "300+7800")  such that Modifies(8, variable)  such that Calls(procedure, _)  pattern assign(then, _"6200+8900"_)  pattern while(_, _)  such that Next*(12, print) with while.stmt#=7400  pattern while(call, _) with call.procName="variable" with print.varName=read.varName with procedure.procName=procedure.procName  such that Calls(procedure, "then") with "variable"=call.procName  such that Modifies(procedure, "while")  pattern while(_, _)  such that Follows*(print, read) with read.varName="call"  pattern if(assign, _, _)  such that Next(18, stmt)  pattern while(_, _)  pattern while(_, _)  such that Calls("if", procedure)  pattern while(read, _)  such that Modifies(17, variable)  pattern if(_, _, _)  pattern if(read, _, _) with constant.value=while.stmt#  such that Parent(call, if) with "read"=print.varName  pattern assign(variable, _"7500*1200"_)  pattern while(_, _)  pattern if(variable, _, _) with read.varName="call"  pattern while(read, _) with call.procName=call.procName  pattern assign(if, "7900*3400") with stmt.stmt#=if.stmt# with "procedure"=procedure.procName  such that Next(assign, if) with while.stmt#=5200  pattern while(variable, _)  such that Calls(procedure, "print") with "then"=call.procName  such that Parent*(_, assign) with "procedure"=read.varName with call.procName=call.procName with "then"=procedure.procName with stmt.stmt#=stmt.stmt#  pattern if(variable, _, _)  pattern assign(then, "(4600/7600)/4000")  pattern while(else, _)  pattern if(_, _, _)  pattern if(variable, _, _) with constant.value=while.stmt#  pattern while(_, _)  pattern assign(variable, _)  such that Calls(_, procedure)  pattern assign(variable, _"2700+8600"_)  pattern if(variable, _, _) with "variable"=read.varName with variable.varName="assign"  pattern if(variable, _, _)  such that Affects(assign, assign)  pattern assign(_, "200-5700")  pattern if(_, _, _)  pattern while(constant, _)  such that Modifies(if, _)  pattern assign(_, _)  pattern while(print, _)  such that Next(while, _) with "if"=read.varName  pattern assign(_, _)  such that Parent(_, read)  such that Calls*(_, procedure) with call.stmt#=3500  such that Next*(_, while)  pattern if(variable, _, _)  such that Follows(6, while) with constant.value=700 with variable.varName=read.varName with read.varName=print.varName with call.procName="call" with stmt.stmt#=7500  pattern while(if, _)  pattern if(_, _, _) with constant.value=3300 with 9500=stmt.stmt# with read.varName=call.procName  pattern assign(else, "6400/5100") with print.stmt#=9600 with if.stmt#=read.stmt#  pattern while(_, _) with 6900=print.stmt#  such that Calls*(_, procedure)  pattern assign(print, "9600/8500")  pattern if(_, _, _)  pattern if(assign, _, _)  pattern while(variable, _)  pattern if(_, _, _) with read.varName=procedure.procName  pattern assign(then, "3300+3000")  pattern assign(variable, _"1000+9400"_) with stmt.stmt#=2600  pattern if(call, _, _)  such that Uses(while, "print")  pattern assign(_, _) with call.procName="else"  pattern assign(_, _"7500-1900"_)  such that Follows*(while, assign)  pattern assign(read, _"8900+9500"_)  such that Modifies(if, "print")  pattern while(constant, _) with "if"=read.varName  such that Follows*(if, _) with call.stmt#=constant.value with print.varName=procedure.procName with "procedure"=print.varName  pattern if(variable, _, _)  such that Parent*(read, _)  pattern assign(variable, "9500*7900")  such that Affects(assign, 28)  such that Calls(procedure, _)  such that Next(stmt, 9) with print.varName="print"  pattern if(variable, _, _)  pattern while(variable, _) with print.varName=call.procName  such that Affects(assign, _) with stmt.stmt#=stmt.stmt#  pattern if(_, _, _)  pattern if(call, _, _)  such that Next*(if, _)  pattern assign(variable, _) with call.procName="assign"  such that Parent*(_, stmt) with if.stmt#=4400  such that Next(call, _)  such that Next(read, 3)  pattern assign(then, _) with 9900=stmt.stmt#  pattern while(print, _)  pattern if(variable, _, _)  pattern while(_, _)  such that Affects*(stmt, 8)  such that Affects*(assign, stmt)  such that Next(4, call) with procedure.procName="print"  pattern while(call, _)  pattern assign(variable, _"6800-variable"_)  such that Next*(stmt, read) with "while"=variable.varName  such that Modifies(if, variable)  such that Follows(call, stmt)  pattern assign(variable, _) with stmt.stmt#=3600  such that Calls(procedure, _)  such that Calls*(_, procedure)  such that Affects(_, stmt)  pattern if(variable, _, _)  pattern while(variable, _)  such that Affects(4, assign)  pattern assign(procedure, "1500/1600")  pattern while(variable, _) with read.varName="then" with variable.varName=print.varName  pattern while(variable, _) with assign.stmt#=5600  pattern while(variable, _) with 9300=constant.value  such that Next(5, assign) with 5800=while.stmt#  such that Calls(procedure, "then")  such that Parent*(_, call) with 9200=print.stmt#  pattern if(while, _, _)  such that Calls*("else", procedure)  pattern assign(_, "1800+7600")  pattern while(_, _)  pattern while(variable, _)  pattern assign(variable, "1800+call")  such that Next*(if, 13)  pattern assign(_, _"2400+5200"_)  pattern while(assign, _)  such that Follows*(if, 17)  pattern while(variable, _)  pattern assign(then, "(8000-2900)/9300")  pattern if(_, _, _) with 600=if.stmt#  such that Affects*(stmt, _)  such that Modifies(if, "if")  pattern assign(variable, _)  pattern assign(_, _"6900-6900"_)  such that Next(while, _) with "constant"=print.varName with procedure.procName=call.procName  pattern if(print, _, _)  pattern if(if, _, _) with "else"=call.procName  pattern while(_, _)  pattern if(else, _, _)  pattern assign(else, _)  such that Parent*(_, print)  pattern assign(_, _"2100/5100"_)  pattern if(variable, _, _)  pattern assign(_, _) with read.varName=variable.varName with 4900=if.stmt# with print.varName=procedure.procName  such that Follows(16, assign) with 5200=stmt.stmt#  pattern while(while, _) with 5200=assign.stmt#  such that Calls*(_, procedure)  such that Next(if, _)  such that Follows(print, 24)  pattern while(variable, _) with call.stmt#=read.stmt# with variable.varName="while"  pattern assign(variable, _)  pattern while(_, _) with call.procName="if"  such that Affects(15, stmt)  pattern assign(if, _) with 1500=print.stmt#  pattern while(variable, _)  pattern while(constant, _) with constant.value=4900 with constant.value=7700  pattern while(_, _)  pattern while(variable, _) with 8300=read.stmt#  pattern if(if, _, _)  pattern if(_, _, _)  pattern while(variable, _)  pattern if(variable, _, _) with read.varName=read.varName  pattern if(variable, _, _)  such that Next*(read, 12) with read.varName=procedure.procName with call.procName=procedure.procName with print.varName="procedure"  pattern while(_, _)  pattern assign(variable, _"7100-call"_)  such that Affects*(10, stmt)  pattern assign(variable, _)  such that Uses(assign, _)  such that Calls("constant", procedure)  such that Parent(while, 17) with print.varName=print.varName with "else"=call.procName  such that Uses(read, "procedure")  such that Calls(procedure, _)  such that Next(6, read)  such that Follows*(_, call)  pattern assign(_, _) with call.procName="read"  pattern while(variable, _) with call.stmt#=if.stmt# with 4600=stmt.stmt# with print.stmt#=while.stmt#  pattern assign(assign, _)  pattern assign(variable, _"7900+7700"_) with "variable"=variable.varName  pattern if(call, _, _)  pattern assign(_, _) with procedure.procName="then" with 300=print.stmt#  pattern while(_, _)  pattern if(variable, _, _)  pattern if(variable, _, _) 

5000
12 - Query 12
variable variable; assign assign; print print; constant constant; stmt stmt; read read; procedure procedure; if if; while while; call call; 
Select <variable, assign, print, constant, stmt, read, procedure, if, while, call> with variable.varName="print"  pattern if(_, _, _)  such that Affects*(assign, _)  pattern if(procedure, _, _)  pattern assign(_, _"7700/3800"_) with if.stmt#=while.stmt#  pattern while(_, _)  pattern assign(_, _) with assign.stmt#=8100 with assign.stmt#=1800  such that Parent(_, print)  pattern assign(variable, _)  pattern if(call, _, _)  pattern if(variable, _, _) with variable.varName=procedure.procName  pattern if(constant, _, _) with 5400=print.stmt# with read.varName="else"  such that Affects(assign, _)  pattern if(variable, _, _) with "else"=call.procName with "else"=procedure.procName with read.varName="else" with procedure.procName="constant"  such that Parent*(5, if)  such that Affects*(stmt, stmt)  pattern if(if, _, _)  such that Next(17, stmt) with call.procName=print.varName with 4500=constant.value with print.varName=read.varName  pattern assign(then, _) with "else"=variable.varName  pattern if(variable, _, _)  such that Calls(procedure, "while")  pattern assign(procedure, _"4100*5300"_) with "if"=procedure.procName with variable.varName="if" with 3200=if.stmt#  such that Uses(read, "variable")  pattern assign(variable, _)  pattern assign(variable, _"1700*5300"_) with 1600=print.stmt#  such that Affects(assign, stmt) with "else"=variable.varName with read.varName="print" with "procedure"=print.varName  pattern assign(call, _)  pattern while(_, _)  such that Modifies(9, variable)  such that Calls*(procedure, "then")  such that Calls*(procedure, "else")  pattern while(_, _)  pattern if(_, _, _) with 4900=if.stmt#  pattern assign(while, _"8600*7500"_)  pattern if(read, _, _) with read.varName="if" with print.stmt#=3000 with call.procName=procedure.procName  pattern while(_, _)  such that Modifies(28, variable)  pattern assign(then, _"1600-6600"_)  such that Uses(call, "constant")  pattern assign(_, "3300/100")  such that Next*(call, print) with procedure.procName=variable.varName  pattern assign(variable, _)  pattern if(variable, _, _) with assign.stmt#=call.stmt# with while.stmt#=print.stmt# with procedure.procName=print.varName with 4000=assign.stmt#  pattern assign(variable, _) with call.procName=call.procName  pattern if(_, _, _)  such that Next(2, stmt)  pattern assign(variable, _"9200-5400"_) with "read"=print.varName  such that Follows(call, 9) with read.varName="constant" with 9900=assign.stmt#  pattern if(read, _, _) with if.stmt#=9500  pattern while(_, _)  pattern if(_, _, _)  pattern while(variable, _)  pattern if(variable, _, _) with stmt.stmt#=constant.value  pattern while(assign, _) with "variable"=print.varName  pattern assign(print, "6900+8500")  pattern assign(variable, _)  such that Uses(call, variable) with 1300=constant.value  such that Uses(25, variable)  such that Modifies(while, _) with 300=print.stmt#  such that Uses(assign, _) with call.procName=procedure.procName  pattern if(read, _, _)  pattern while(_, _) with read.stmt#=8500  pattern while(then, _)  pattern if(_, _, _)  such that Next(if, stmt)  such that Uses(3, variable)  such that Affects(_, assign)  such that Uses(3, variable)  pattern assign(call, _"1000/8100"_)  pattern while(variable, _)  such that Follows(read, 14) with variable.varName="while" with while.stmt#=500  pattern if(read, _, _)  pattern assign(variable, _"7100*800"_)  pattern if(variable, _, _)  pattern while(constant, _)  pattern assign(variable, _)  such that Affects(21, assign)  pattern assign(procedure, _)  pattern assign(_, _)  such that Affects(21, assign)  pattern assign(_, "1100/3300")  pattern while(variable, _)  such that Follows(stmt, 17)  such that Modifies(1, variable) with procedure.procName=procedure.procName with constant.value=if.stmt#  such that Modifies(call, variable) with stmt.stmt#=8200 with procedure.procName="read"  pattern if(_, _, _) with variable.varName=print.varName  pattern while(variable, _)  pattern if(print, _, _)  pattern assign(variable, _"((6900-7200)+2800)/4200"_)  pattern if(_, _, _)  such that Uses(read, variable)  such that Modifies(stmt, variable)  pattern assign(if, "(4700/7500)-5100")  such that Parent*(while, _)  pattern if(variable, _, _)  pattern while(variable, _) with call.procName=procedure.procName  pattern if(_, _, _)  pattern assign(variable, _"4200/900"_)  pattern if(variable, _, _)  such that Affects(19, stmt)  pattern if(variable, _, _) with "if"=procedure.procName  pattern assign(read, "(2200/4100)*5400") with 4700=while.stmt#  pattern while(variable, _) with 8300=call.stmt#  pattern while(_, _) with call.stmt#=call.stmt#  such that Follows(_, call)  such that Parent(stmt, 10) with call.procName="if"  such that Affects(stmt, _) with print.stmt#=constant.value  pattern while(then, _) with call.stmt#=1700  such that Modifies(assign, "call")  pattern assign(else, _)  such that Parent*(8, if)  such that Uses(15, variable) with read.varName=variable.varName  such that Follows(read, 29)  such that Parent*(while, 29) with "print"=procedure.procName with read.varName=call.procName with 6900=call.stmt# with "if"=read.varName  such that Affects*(stmt, 28)  such that Next*(if, 8) with procedure.procName="call"  pattern if(variable, _, _) with read.stmt#=assign.stmt#  pattern if(read, _, _)  such that Uses(read, "print")  pattern assign(_, "while+1300")  pattern while(variable, _)  pattern assign(constant, "(7200-600)+4300") with read.stmt#=stmt.stmt#  pattern assign(_, "(5000*3400)/1400")  pattern assign(_, _)  such that Calls*(procedure, _)  such that Affects*(assign, assign) with constant.value=stmt.stmt# with 9100=read.stmt#  pattern if(variable, _, _)  such that Next*(27, print)  such that Affects*(stmt, assign)  such that Parent*(read, 1) with stmt.stmt#=6900  pattern if(else, _, _)  pattern assign(_, "5100-3600")  such that Uses(print, _) with 6500=call.stmt#  pattern if(variable, _, _) with assign.stmt#=read.stmt# with call.stmt#=constant.value  pattern if(_, _, _)  pattern if(_, _, _)  such that Uses(print, _) with stmt.stmt#=print.stmt#  pattern if(variable, _, _) with assign.stmt#=2300  pattern assign(variable, _)  such that Uses(print, "procedure") with variable.varName="while"  pattern while(_, _)  such that Next*(call, read)  such that Parent(7, if)  such that Affects(assign, _)  such that Calls*(_, procedure)  pattern assign(variable, _)  such that Next(23, stmt)  pattern while(_, _) with procedure.procName="assign" with 4700=constant.value  pattern if(_, _, _)  pattern while(variable, _)  such that Next*(3, assign) with stmt.stmt#=stmt.stmt#  such that Modifies(read, _)  such that Calls*(procedure, _)  pattern if(_, _, _)  such that Follows*(read, 7)  such that Affects*(stmt, assign)  pattern if(variable, _, _)  pattern while(assign, _)  such that Parent(assign, while) with procedure.procName=print.varName  pattern assign(print, _"1200*2500"_) with assign.stmt#=7400  pattern if(variable, _, _)  such that Next(call, while) with "variable"=print.varName with "call"=call.procName  such that Uses(procedure, _) with if.stmt#=7000 with 6600=if.stmt#  such that Parent*(print, 13)  pattern if(assign, _, _) with assign.stmt#=1300  pattern while(_, _) with assign.stmt#=7800  such that Affects(assign, 20) with procedure.procName=call.procName  such that Next*(assign, 1)  such that Affects(18, assign)  pattern if(call, _, _)  pattern while(_, _) with read.stmt#=call.stmt# with "if"=procedure.procName with if.stmt#=4000 with 7800=assign.stmt# with call.stmt#=constant.value  such that Follows(assign, _)  such that Parent*(if, _)  such that Calls*(_, procedure)  pattern while(while, _)  such that Follows(read, if)  pattern assign(_, _) with call.stmt#=2900  pattern if(then, _, _)  pattern if(_, _, _) with print.varName=procedure.procName with "print"=call.procName with print.stmt#=read.stmt#  such that Affects*(stmt, 14)  such that Next*(if, assign)  such that Calls*(procedure, _) with print.stmt#=stmt.stmt#  pattern while(_, _)  such that Parent(read, while)  such that Calls*(procedure, "constant")  such that Uses(3, variable) with procedure.procName=variable.varName  pattern if(_, _, _)  pattern while(call, _)  pattern while(variable, _)  pattern while(variable, _)  pattern if(_, _, _)  pattern while(variable, _)  pattern assign(_, _"(3400/5900)+8700"_)  such that Next*(stmt, if) with "constant"=print.varName  pattern while(variable, _)  pattern while(_, _)  pattern while(then, _)  such that Next*(_, print)  pattern if(_, _, _) with call.stmt#=constant.value with assign.stmt#=call.stmt#  pattern assign(print, _)  such that Parent(if, 21) with call.stmt#=5600  such that Next*(stmt, _)  such that Modifies(12, variable)  such that Uses(8, variable)  pattern assign(_, _)  such that Affects(stmt, _) with "variable"=print.varName  pattern while(assign, _)  pattern if(_, _, _) with 8900=print.stmt#  pattern assign(_, "1500+6500")  pattern while(_, _)  pattern while(variable, _)  such that Next*(11, read) with print.varName=procedure.procName with print.varName="else"  such that Calls*(procedure, procedure) with while.stmt#=9500  pattern assign(variable, "3400-700")  pattern while(_, _) with procedure.procName="constant"  pattern if(read, _, _)  such that Uses(if, _) with call.stmt#=6000  pattern if(variable, _, _) with read.varName="variable"  such that Follows(stmt, print) with 3300=call.stmt#  such that Parent*(_, read)  pattern assign(variable, "then/3600") with "if"=print.varName  pattern assign(variable, _"1400-variable"_)  pattern if(_, _, _)  pattern while(if, _)  such that Parent(assign, 21) with "print"=read.varName with 7500=read.stmt#  pattern assign(variable, "9400*9000")  such that Modifies(stmt, variable)  pattern assign(_, _)  such that Uses(assign, variable) with variable.varName="else" with read.varName="constant" with variable.varName=read.varName  pattern if(variable, _, _)  such that Affects(assign, stmt)  such that Calls*(procedure, _)  pattern assign(variable, "6100-3900") with procedure.procName="then" with variable.varName="assign"  pattern assign(_, _"9800+variable"_) with "call"=print.varName  pattern if(variable, _, _)  such that Follows*(read, 11)  such that Modifies(25, variable)  pattern while(_, _)  such that Modifies(assign, variable)  pattern while(else, _)  pattern while(variable, _) with procedure.procName=read.varName with procedure.procName=call.procName  such that Affects*(stmt, _)  pattern while(variable, _)  pattern if(constant, _, _) with stmt.stmt#=if.stmt#  such that Calls*("print", procedure)  such that Calls*(procedure, "if")  pattern assign(_, _) with "else"=read.varName  pattern while(_, _)  such that Follows*(27, call) with read.varName=read.varName  such that Calls(procedure, procedure)  pattern assign(_, "5700*6900")  pattern assign(else, "5100*300")  such that Calls("else", procedure)  such that Next*(_, while) with 4500=print.stmt# with while.stmt#=7700  pattern while(variable, _)  pattern assign(_, "3500/3000") with read.varName=print.varName  such that Follows*(_, read)  such that Calls*(procedure, procedure)  such that Next(if, 23)  pattern assign(else, _"200/1000"_)  pattern assign(variable, _) with procedure.procName=variable.varName  pattern assign(else, "(6700/1800)-9800")  such that Parent*(25, while)  such that Uses(assign, variable) with if.stmt#=if.stmt#  pattern while(assign, _)  pattern while(variable, _)  pattern assign(while, _"4100+then"_) with while.stmt#=stmt.stmt#  pattern assign(variable, _"constant-5500"_)  pattern while(variable, _)  such that Uses(assign, "print")  such that Affects(_, assign)  pattern while(procedure, _)  pattern while(variable, _) with stmt.stmt#=print.stmt#  such that Follows*(_, print)  such that Calls*("print", procedure)  such that Uses(call, "while")  pattern if(_, _, _) with 4100=if.stmt#  pattern if(_, _, _) with 8300=if.stmt#  such that Affects*(assign, _)  such that Uses(if, variable)  pattern if(print, _, _)  pattern while(variable, _)  such that Affects(23, stmt)  pattern assign(variable, _)  such that Affects*(_, assign) with procedure.procName=print.varName with read.varName="while"  pattern assign(_, "3100/2800")  pattern assign(else, "1400+then")  such that Next*(assign, _)  such that Affects(assign, 8)  pattern if(if, _, _) with stmt.stmt#=9200  pattern assign(variable, _) with stmt.stmt#=stmt.stmt#  pattern if(then, _, _)  pattern assign(print, "4400+5300") with stmt.stmt#=print.stmt#  pattern assign(variable, _"read*7800"_)  such that Parent(call, _)  pattern if(variable, _, _) with print.stmt#=if.stmt#  such that Next(3, call) with "constant"=procedure.procName  such that Calls*(_, procedure) with "variable"=variable.varName  pattern assign(variable, _)  pattern if(if, _, _)  such that Parent(stmt, 16)  pattern if(call, _, _) with call.procName="if" with read.stmt#=6800  such that Uses(if, "while")  pattern if(call, _, _)  such that Parent(call, while) with 8100=stmt.stmt# with read.varName=variable.varName  pattern while(_, _)  pattern if(_, _, _)  such that Follows*(_, call) with if.stmt#=while.stmt#  pattern if(variable, _, _)  such that Parent(stmt, _)  such that Modifies(stmt, _)  such that Follows*(print, _) with variable.varName="while" with 9900=call.stmt#  pattern assign(print, "4100-500") with read.varName=print.varName with variable.varName=print.varName  such that Affects(stmt, assign) with read.stmt#=assign.stmt#  pattern if(_, _, _)  pattern assign(_, _"1600+7200"_) with "print"=procedure.procName  pattern while(_, _)  pattern if(variable, _, _) with call.procName=print.varName  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern if(print, _, _)  pattern if(_, _, _) with "read"=procedure.procName with constant.value=1100 with "constant"=print.varName with print.varName=procedure.procName  pattern while(read, _)  pattern if(while, _, _)  pattern if(procedure, _, _)  pattern while(variable, _)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern while(read, _)  pattern assign(_, _) with assign.stmt#=8500 with "call"=procedure.procName with 5200=stmt.stmt# with 4400=constant.value with print.varName=call.procName with assign.stmt#=5700  pattern assign(read, _"1100/variable"_) with "while"=variable.varName with call.procName=variable.varName with print.varName="call"  pattern assign(_, "(8200-2200)*4600")  pattern if(constant, _, _)  pattern if(while, _, _)  pattern while(variable, _) 

5000
13 - Query 13
variable variable; assign assign; constant constant; print print; stmt stmt; read read; procedure procedure; while while; if if; call call; 
Select <variable, assign, constant, print, stmt, read, procedure, while, if, call>  such that Modifies(call, variable)  pattern assign(variable, _"9600*7800"_)  such that Uses(24, variable)  such that Next(18, call)  pattern assign(variable, "2200/while")  pattern while(_, _)  pattern if(constant, _, _)  pattern assign(else, _"4200-400"_)  such that Affects*(27, stmt)  pattern if(variable, _, _)  such that Parent(if, _)  such that Affects(_, stmt) with "if"=procedure.procName  pattern if(variable, _, _)  such that Parent*(stmt, if)  pattern while(_, _) with constant.value=2800  such that Parent(_, if) with procedure.procName=print.varName  pattern if(variable, _, _)  pattern assign(variable, "3200+600")  such that Follows(while, if)  such that Uses(while, _)  pattern if(if, _, _)  pattern if(constant, _, _) with call.procName="procedure"  such that Follows*(while, _)  pattern while(procedure, _) with print.varName="else" with procedure.procName=print.varName with "while"=print.varName with print.varName="procedure"  pattern if(_, _, _)  such that Calls(procedure, procedure)  such that Parent*(15, print)  pattern if(else, _, _) with 7700=constant.value  such that Modifies(while, _) with 300=while.stmt# with 4900=read.stmt#  such that Parent(27, if)  pattern assign(variable, "1500/5500")  such that Affects(18, assign)  pattern assign(while, _)  pattern if(_, _, _)  pattern while(_, _)  pattern if(variable, _, _) with stmt.stmt#=read.stmt# with print.stmt#=700 with call.procName=print.varName with call.stmt#=if.stmt#  pattern while(variable, _) with "then"=variable.varName with procedure.procName=call.procName  pattern assign(else, _)  pattern assign(_, _"4200/9400"_) with procedure.procName=procedure.procName with if.stmt#=9200 with procedure.procName="read" with assign.stmt#=while.stmt#  such that Calls*("then", procedure)  pattern assign(else, _"3700*4100"_) with read.stmt#=constant.value  pattern assign(_, _"3400/3600"_)  pattern while(_, _) with "constant"=read.varName  pattern assign(_, _)  pattern while(variable, _) with while.stmt#=6300  such that Uses(assign, "call") with call.stmt#=read.stmt# with 6600=stmt.stmt#  pattern assign(variable, _"(1800*2300)*100"_)  pattern while(_, _) with if.stmt#=9700  such that Modifies(read, variable)  such that Next(5, while)  pattern while(_, _) with print.stmt#=3600 with call.procName="print"  pattern assign(_, _"6300-7300"_)  pattern assign(variable, _) with read.stmt#=2700  pattern assign(variable, "5500+4500")  pattern if(variable, _, _)  pattern assign(_, _"6200+9800"_)  such that Calls(procedure, "if")  pattern while(variable, _) with assign.stmt#=100  pattern while(_, _)  pattern if(call, _, _)  such that Follows*(assign, assign) with while.stmt#=3300  such that Calls("read", procedure)  such that Next(print, _)  pattern assign(variable, "1000-6400") with 2500=print.stmt# with procedure.procName="variable"  pattern assign(variable, "1100+9600")  such that Affects*(assign, _)  such that Parent(_, call)  pattern if(print, _, _)  such that Calls(_, procedure)  such that Next*(stmt, 29) with variable.varName=print.varName  pattern while(variable, _) with read.varName=print.varName  such that Calls*(procedure, _) with read.varName="call"  pattern if(call, _, _)  pattern assign(variable, _"(3400*2800)-1100"_) with print.varName=read.varName  pattern assign(then, _)  such that Affects*(stmt, _)  pattern while(_, _)  pattern assign(variable, _) with 4500=constant.value  pattern if(variable, _, _)  pattern if(constant, _, _) with procedure.procName="if"  pattern assign(variable, "2700-5200") with 5600=stmt.stmt#  pattern while(_, _)  pattern if(procedure, _, _)  pattern assign(_, "2100-1900")  pattern while(else, _) with read.varName=print.varName  pattern assign(else, _"1700-7500"_) with 2400=stmt.stmt#  such that Calls*(_, procedure)  such that Next(_, print) with procedure.procName="assign"  such that Affects*(_, assign)  pattern while(while, _)  pattern if(variable, _, _)  pattern while(variable, _)  such that Uses(while, _) with print.varName="else" with 1600=assign.stmt# with while.stmt#=read.stmt#  pattern if(if, _, _)  pattern if(call, _, _)  such that Next*(call, 4)  such that Follows*(21, print)  pattern assign(_, "6200+1800")  pattern while(_, _)  such that Calls*(procedure, "procedure") with stmt.stmt#=9100 with "while"=read.varName with stmt.stmt#=print.stmt#  such that Next*(_, if) with "if"=procedure.procName  such that Next(10, if) with "else"=read.varName  pattern if(variable, _, _)  such that Parent*(_, assign)  pattern assign(read, "8900-4300")  such that Affects*(stmt, _)  pattern if(variable, _, _) with procedure.procName="call"  such that Next*(if, _)  pattern while(variable, _)  such that Modifies(read, variable)  such that Affects*(27, assign)  such that Calls*("read", procedure) with read.stmt#=call.stmt#  such that Modifies(call, variable) with call.stmt#=9900  pattern assign(constant, "variable/1000")  pattern while(_, _)  such that Follows(assign, assign)  pattern assign(read, _) with if.stmt#=while.stmt#  pattern if(_, _, _)  pattern while(then, _) with stmt.stmt#=3200  pattern if(else, _, _)  pattern if(then, _, _)  such that Uses(23, variable) with call.stmt#=5800 with assign.stmt#=stmt.stmt#  such that Follows*(print, call)  pattern assign(variable, _"5400+7600"_)  pattern while(_, _)  pattern assign(variable, "6400*7700")  pattern while(print, _)  such that Parent(29, stmt)  pattern while(variable, _)  pattern assign(call, "8400*else")  such that Calls*(procedure, "else")  such that Parent(_, assign)  pattern while(variable, _)  pattern while(variable, _) with call.procName="procedure"  pattern while(else, _) with procedure.procName=print.varName  pattern assign(else, _"5000/7900"_)  pattern assign(_, _"4300+procedure"_)  pattern if(_, _, _)  pattern if(procedure, _, _)  such that Modifies(procedure, "call") with "constant"=read.varName with 2600=read.stmt#  such that Follows*(call, 13)  such that Affects*(assign, _)  pattern if(print, _, _)  such that Parent(21, read)  such that Calls*("procedure", procedure)  pattern assign(_, _)  such that Next(11, print)  such that Next(_, print)  such that Next*(print, 16)  pattern while(_, _)  such that Follows*(stmt, print)  pattern while(variable, _)  pattern if(read, _, _)  pattern assign(variable, _"((else-5300)+2900)/400"_)  such that Calls(procedure, procedure)  such that Next*(while, _) with if.stmt#=6500 with variable.varName=print.varName  such that Affects*(stmt, _)  such that Follows(print, _)  pattern assign(_, "7500*2600")  such that Follows*(_, print)  pattern if(variable, _, _)  pattern assign(variable, "7900/9000")  such that Uses(print, variable)  pattern while(variable, _)  such that Next(read, print) with procedure.procName="read" with read.varName="variable" with "if"=variable.varName with variable.varName=read.varName  pattern while(variable, _)  pattern if(variable, _, _)  pattern while(assign, _)  such that Modifies(print, "while")  pattern assign(_, _)  such that Next(_, while)  such that Follows*(read, 14) with procedure.procName=procedure.procName  such that Calls*(procedure, procedure)  pattern assign(_, "assign-1700") with "variable"=read.varName  such that Follows*(print, _)  pattern while(_, _) with while.stmt#=while.stmt#  such that Calls(procedure, _)  such that Calls(procedure, procedure) with print.varName=read.varName  pattern if(_, _, _)  pattern assign(_, _"5300/else"_)  pattern if(constant, _, _)  such that Modifies(read, "if")  such that Follows(15, assign)  pattern if(if, _, _) with read.stmt#=call.stmt#  pattern assign(variable, "8700+6700")  pattern if(print, _, _)  pattern while(print, _)  pattern if(procedure, _, _) with variable.varName=call.procName with "print"=call.procName with if.stmt#=while.stmt#  pattern while(_, _)  pattern assign(print, _"5600*3400"_) with variable.varName="variable"  pattern while(variable, _)  pattern assign(while, _)  pattern while(variable, _) with call.stmt#=while.stmt#  such that Follows(call, 12)  pattern assign(assign, _) with 600=if.stmt#  pattern while(variable, _)  pattern if(else, _, _)  pattern assign(call, _"6300/read"_)  such that Follows*(_, read)  pattern if(variable, _, _) with "then"=procedure.procName  pattern while(variable, _)  pattern assign(variable, "3000-9000")  pattern while(variable, _) with if.stmt#=7500  such that Follows*(8, while) with while.stmt#=call.stmt#  pattern while(variable, _) with variable.varName="constant"  pattern while(variable, _)  such that Next*(print, assign)  pattern assign(variable, _"(5300/8300)/4100"_)  pattern while(variable, _)  pattern assign(call, _) with procedure.procName=call.procName  pattern if(variable, _, _)  pattern while(_, _)  pattern while(variable, _)  pattern assign(read, _"2800/9000"_) with 8300=if.stmt#  pattern assign(_, "800/1400")  such that Uses(call, _)  pattern assign(_, _"8500*9300"_)  pattern assign(read, _"9200+read"_)  pattern while(call, _)  pattern if(while, _, _)  pattern while(then, _)  such that Follows(23, read)  pattern if(variable, _, _)  such that Uses(procedure, _)  pattern if(variable, _, _) with call.procName=call.procName  such that Next*(11, call)  pattern while(while, _)  pattern assign(variable, _"300-6600"_)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern if(else, _, _)  such that Affects(8, assign)  such that Follows(read, 5)  pattern assign(if, _"(6800/8600)/4000"_)  such that Calls*(_, procedure)  such that Follows(read, while)  such that Uses(21, variable)  pattern while(call, _)  such that Affects(stmt, stmt)  pattern assign(_, _"9300-procedure"_) with variable.varName=call.procName  such that Affects(stmt, 13) with 4500=while.stmt#  pattern while(call, _)  pattern if(variable, _, _)  such that Follows(2, stmt)  pattern if(variable, _, _)  pattern while(read, _)  pattern assign(variable, _)  pattern if(_, _, _)  such that Follows(assign, 25)  pattern assign(call, _"9900*700"_) with 9700=if.stmt#  pattern while(variable, _) with call.procName="call" with 9100=stmt.stmt# with if.stmt#=call.stmt#  pattern while(call, _) with "print"=variable.varName  pattern if(procedure, _, _)  pattern assign(_, _"1500*7400"_)  pattern while(variable, _) with if.stmt#=8200  pattern while(variable, _)  such that Calls*(procedure, "while") with call.procName=procedure.procName with read.varName="assign"  pattern assign(if, _) with if.stmt#=assign.stmt# with 1500=call.stmt#  pattern while(variable, _)  pattern while(variable, _)  such that Modifies(print, _)  pattern assign(else, _"1700+8800"_)  pattern if(print, _, _)  such that Affects(_, stmt)  pattern while(variable, _) with assign.stmt#=constant.value  such that Modifies(if, "call")  such that Calls(procedure, _)  such that Modifies(procedure, variable)  pattern while(variable, _) with procedure.procName="then" with read.stmt#=3800  pattern assign(_, _"8100*9600"_) with 8900=assign.stmt# with 2700=assign.stmt#  pattern if(variable, _, _) with procedure.procName=procedure.procName  pattern assign(_, _"7900/700"_) with assign.stmt#=5200 with if.stmt#=9400  such that Parent*(read, _) with read.stmt#=while.stmt#  such that Next*(while, _) with call.procName="else"  pattern assign(_, "6900-1800") with 4500=stmt.stmt# with "then"=read.varName  pattern while(else, _)  pattern if(_, _, _) with read.stmt#=if.stmt#  such that Calls(procedure, "read")  pattern assign(variable, "3700/800")  such that Follows*(while, 22)  such that Uses(assign, "constant")  pattern assign(_, "(9200*4000)*500") with while.stmt#=9900  pattern if(if, _, _) with constant.value=print.stmt# with print.stmt#=call.stmt#  such that Follows*(if, _) with if.stmt#=7900 with 3200=call.stmt# with read.varName="then"  pattern while(procedure, _)  such that Modifies(stmt, _) with "procedure"=call.procName  such that Follows(_, print) with read.varName=procedure.procName  pattern if(variable, _, _) with 500=read.stmt#  such that Affects*(25, assign) with "procedure"=print.varName  pattern assign(_, _)  pattern assign(if, _"2700*constant"_)  pattern assign(_, "7400-7200") with print.varName="if"  pattern if(variable, _, _) with print.stmt#=7600 with call.stmt#=4000  pattern assign(_, _"2500*6200"_)  pattern if(_, _, _)  pattern assign(variable, _"4700/read"_) with 8000=print.stmt#  pattern if(variable, _, _) with 3400=assign.stmt#  such that Affects(8, assign)  such that Follows*(read, _)  pattern while(_, _)  pattern while(constant, _)  pattern if(call, _, _) with print.stmt#=stmt.stmt#  such that Uses(7, variable)  such that Follows*(assign, _)  pattern assign(variable, "3300-7500")  such that Follows(call, _) with print.varName="if"  pattern while(assign, _)  pattern assign(variable, _)  such that Follows*(while, print)  such that Affects(_, assign) with 7900=assign.stmt#  pattern if(_, _, _)  pattern if(_, _, _)  such that Calls*(_, procedure)  such that Calls(procedure, procedure)  pattern if(_, _, _) with print.varName=procedure.procName with while.stmt#=5500 with read.varName=print.varName  pattern assign(if, _"5800-8300"_)  pattern while(_, _)  such that Calls*(procedure, "else")  pattern assign(_, _"5300/1300"_) with read.stmt#=3900  pattern if(variable, _, _) with "print"=read.varName  such that Parent*(_, stmt)  pattern if(call, _, _)  pattern while(else, _) with call.stmt#=if.stmt#  pattern while(variable, _)  such that Next*(22, print)  such that Affects(stmt, _)  pattern if(while, _, _)  pattern assign(_, _"8100+4200"_)  pattern if(variable, _, _)  pattern assign(_, _)  pattern assign(then, _"200*2500"_) with procedure.procName=variable.varName  pattern if(constant, _, _) with while.stmt#=call.stmt# with print.varName="if"  such that Parent(_, assign) with stmt.stmt#=7500 with "while"=procedure.procName  pattern assign(_, "7800-6300")  pattern if(then, _, _)  pattern while(_, _)  pattern assign(variable, _)  such that Calls*("call", procedure)  pattern while(read, _) with print.varName="read"  such that Next*(call, _)  pattern if(then, _, _)  such that Uses(call, variable)  such that Affects*(assign, 22) with "assign"=call.procName  such that Follows(print, _)  such that Calls*(procedure, procedure) with variable.varName=print.varName  such that Follows*(call, 8)  pattern while(variable, _)  pattern assign(variable, _"9900*300"_)  such that Parent*(_, if)  pattern while(variable, _)  such that Parent(print, read)  pattern assign(_, "8300+2500")  pattern assign(variable, _"9100/9500"_)  pattern while(_, _) with stmt.stmt#=5900  pattern while(_, _) 

5000
14 - Query 14
variable variable; assign assign; print print; constant constant; stmt stmt; read read; procedure procedure; if if; while while; call call; 
Select <variable, assign, print, constant, stmt, read, procedure, if, while, call>  pattern assign(variable, "7400+900") with print.varName="else"  pattern assign(print, _)  such that Calls*(procedure, _)  pattern if(_, _, _) with call.procName="call"  pattern assign(_, _)  such that Next*(call, 22)  pattern if(variable, _, _)  pattern if(_, _, _) with 7600=while.stmt#  such that Next*(call, 18) with call.procName=read.varName with read.varName="procedure" with if.stmt#=if.stmt# with 200=constant.value with call.stmt#=assign.stmt# with while.stmt#=4800  such that Uses(27, variable) with "call"=print.varName  such that Follows*(_, read)  such that Parent*(while, if)  pattern assign(variable, _"(6400*700)/if"_)  pattern assign(_, _)  pattern if(variable, _, _) with print.stmt#=while.stmt#  pattern if(_, _, _)  such that Follows*(read, _) with read.varName="assign"  pattern while(variable, _)  such that Uses(if, _) with "print"=read.varName  pattern while(_, _)  pattern while(_, _)  pattern assign(procedure, "200-6400")  pattern while(variable, _)  pattern while(variable, _)  pattern assign(_, "(1800+5500)/7000")  such that Parent(assign, _) with constant.value=if.stmt# with variable.varName="call" with read.varName="print"  pattern if(variable, _, _) with procedure.procName="constant" with procedure.procName=print.varName  pattern while(procedure, _)  pattern while(variable, _)  pattern if(_, _, _)  such that Affects*(stmt, _)  pattern assign(_, "5400-9900")  pattern assign(call, _"(6000-7300)*3100"_)  such that Modifies(if, _)  pattern if(variable, _, _)  such that Parent*(27, call)  pattern while(procedure, _) with read.varName=print.varName  pattern while(variable, _) with procedure.procName="while"  such that Follows(if, read) with procedure.procName="assign"  such that Parent*(while, _)  such that Next*(26, if) with read.stmt#=if.stmt#  pattern assign(assign, _"3500*6100"_) with 9800=if.stmt# with 5000=constant.value with read.varName="read" with 3500=print.stmt#  such that Follows*(read, call) with variable.varName="variable" with read.varName=procedure.procName with read.varName=procedure.procName  pattern if(variable, _, _)  such that Parent(_, while)  pattern while(_, _)  such that Calls(procedure, "read") with "assign"=print.varName  pattern assign(_, _"100/9200"_) with "procedure"=call.procName  such that Follows(while, while)  such that Parent(12, assign)  pattern if(_, _, _)  pattern if(then, _, _)  pattern assign(constant, "procedure*variable")  pattern assign(_, _)  pattern while(if, _) with 5100=call.stmt# with call.stmt#=assign.stmt#  such that Calls("read", procedure) with assign.stmt#=5500  pattern if(variable, _, _)  such that Affects*(_, stmt) with 6100=while.stmt# with print.stmt#=stmt.stmt#  such that Affects(15, assign)  such that Follows*(stmt, read)  pattern while(variable, _)  pattern if(_, _, _)  such that Next(call, _)  such that Parent*(12, read) with variable.varName=procedure.procName  such that Follows(read, 29) with "read"=procedure.procName  pattern while(variable, _) with read.varName="if"  pattern while(_, _)  pattern while(read, _)  such that Next(read, _)  such that Modifies(stmt, "while")  pattern while(_, _)  pattern while(_, _)  pattern assign(while, _)  such that Modifies(21, variable)  such that Calls(procedure, "constant")  such that Modifies(call, variable)  pattern while(variable, _) with while.stmt#=constant.value  such that Uses(procedure, variable)  pattern assign(assign, "600-4900")  pattern if(variable, _, _) with assign.stmt#=4900  such that Next*(call, while)  pattern while(if, _) with while.stmt#=call.stmt#  such that Uses(read, "variable")  pattern assign(variable, "8100*constant") with "procedure"=print.varName  pattern assign(variable, "2000+5500") with while.stmt#=3900 with call.procName=read.varName  pattern assign(print, _)  pattern assign(_, _)  such that Uses(27, variable)  such that Modifies(25, variable)  pattern if(variable, _, _)  pattern while(_, _)  such that Affects*(assign, 9)  such that Uses(8, variable)  pattern assign(variable, "8800-200") with "else"=variable.varName  such that Calls("read", procedure) with stmt.stmt#=3700  such that Next*(25, call) with call.procName="assign"  pattern while(call, _)  pattern assign(_, _) with while.stmt#=1900 with while.stmt#=while.stmt# with "read"=procedure.procName  such that Calls("read", procedure)  pattern assign(variable, "(8500/1300)/6600")  such that Affects*(assign, stmt)  pattern if(procedure, _, _) with read.varName=call.procName  pattern if(while, _, _)  pattern if(variable, _, _)  such that Affects*(_, stmt) with if.stmt#=1300 with variable.varName=variable.varName  such that Modifies(3, variable)  pattern while(_, _)  pattern while(constant, _) with "else"=print.varName  pattern assign(variable, "8200/900") with if.stmt#=3400  such that Calls*("then", procedure) with call.stmt#=read.stmt#  pattern if(while, _, _)  such that Follows*(_, print)  pattern assign(variable, "4700+6200")  pattern if(procedure, _, _) with 4800=call.stmt#  pattern if(constant, _, _) with print.varName=procedure.procName  such that Uses(stmt, _)  pattern assign(while, _) with variable.varName=read.varName with print.stmt#=700 with 1400=if.stmt#  pattern if(read, _, _)  pattern if(_, _, _) with call.stmt#=2700 with variable.varName=variable.varName with read.stmt#=7000  such that Affects*(_, assign) with read.stmt#=1600  pattern assign(else, _"400*6400"_)  pattern while(variable, _) with 500=read.stmt#  pattern if(while, _, _)  such that Parent*(if, read) with "else"=print.varName with read.stmt#=call.stmt#  such that Uses(print, variable)  pattern assign(then, _"procedure/6500"_) with print.varName=print.varName  pattern if(_, _, _)  such that Parent(print, _)  pattern while(else, _)  pattern while(assign, _) with 2900=while.stmt#  pattern if(variable, _, _)  such that Next(16, read)  pattern if(_, _, _)  pattern assign(variable, "2200/9800")  pattern while(_, _) with print.stmt#=8700  such that Follows*(_, if) with procedure.procName="if" with call.procName=procedure.procName with "variable"=variable.varName with call.stmt#=2600  pattern assign(variable, _)  such that Follows(_, while)  pattern while(_, _)  such that Parent(_, while)  pattern while(variable, _)  such that Uses(read, "variable")  pattern assign(constant, _"if+6500"_)  such that Uses(while, variable)  pattern if(variable, _, _) with print.varName=print.varName with "constant"=procedure.procName  such that Affects*(assign, assign) with 6600=print.stmt#  pattern if(variable, _, _)  such that Uses(read, _)  pattern assign(_, _) with 800=while.stmt# with variable.varName="while"  pattern if(else, _, _) with variable.varName=procedure.procName  pattern assign(print, "7500+5900")  such that Calls*(procedure, "if") with "then"=variable.varName  pattern if(variable, _, _)  such that Affects(stmt, 28) with read.stmt#=print.stmt#  pattern assign(_, _)  pattern if(read, _, _)  such that Uses(assign, _)  pattern assign(variable, _)  pattern while(variable, _)  such that Uses(procedure, "call")  pattern if(_, _, _) with "then"=print.varName  such that Follows(while, 11) with call.stmt#=constant.value  pattern assign(variable, "5400/1200")  pattern assign(variable, "2800*8800")  pattern while(_, _) with constant.value=constant.value with 500=if.stmt# with call.procName="if" with read.stmt#=2800  such that Follows(_, stmt) with "then"=print.varName with procedure.procName=procedure.procName with "else"=print.varName  pattern assign(while, _"else/5500"_)  pattern if(variable, _, _) with "if"=print.varName with 8500=assign.stmt# with "while"=procedure.procName  pattern if(assign, _, _)  such that Modifies(print, "else")  pattern assign(_, _) with variable.varName=call.procName with 5200=read.stmt#  pattern while(variable, _)  pattern while(variable, _) with procedure.procName=call.procName  pattern while(else, _)  pattern while(procedure, _)  pattern if(while, _, _)  pattern while(_, _)  pattern assign(else, _"1300*2100"_)  such that Uses(3, variable)  such that Affects*(16, assign)  such that Follows(read, 9)  pattern assign(variable, "8600*5500") with call.procName=variable.varName  pattern assign(variable, _"5600-4900"_)  pattern if(_, _, _)  pattern while(variable, _)  pattern if(variable, _, _)  pattern while(_, _)  pattern assign(variable, "(2800-7900)-4000")  pattern if(variable, _, _) with 900=call.stmt#  pattern assign(call, _"(variable/600)/3100"_)  such that Affects(assign, _)  pattern assign(_, _"2900-5900"_)  pattern assign(then, "2000-while") with while.stmt#=read.stmt# with 6700=stmt.stmt#  such that Affects(stmt, 5)  pattern assign(variable, _) with print.varName="then"  pattern assign(_, _)  pattern if(else, _, _)  such that Uses(while, "while")  such that Calls(procedure, procedure) with "print"=print.varName  such that Uses(8, variable)  pattern while(_, _)  pattern assign(variable, _)  pattern while(assign, _)  such that Affects(_, assign)  pattern while(variable, _)  pattern assign(call, "9300+assign")  pattern if(call, _, _)  pattern if(variable, _, _) with "call"=procedure.procName with constant.value=if.stmt#  pattern while(variable, _)  pattern assign(_, _) with 2400=if.stmt#  pattern while(variable, _)  pattern while(variable, _) with read.stmt#=8700  pattern if(constant, _, _)  pattern assign(else, _"7000-assign"_)  pattern while(while, _) with read.varName=procedure.procName  such that Parent(10, read) with read.varName=call.procName with "print"=procedure.procName  pattern while(variable, _) with 5000=while.stmt#  such that Parent(while, assign)  pattern while(variable, _)  pattern while(while, _)  pattern if(_, _, _) with call.procName="constant"  such that Follows(call, while) with "assign"=procedure.procName  such that Modifies(2, variable)  pattern if(variable, _, _)  pattern assign(variable, "(8400-5600)+7700")  pattern assign(variable, _"2500+constant"_)  pattern if(variable, _, _)  pattern while(variable, _) with assign.stmt#=5400 with if.stmt#=assign.stmt# with read.stmt#=6300  pattern assign(variable, _"9200*8800"_)  pattern if(variable, _, _)  such that Uses(15, variable) with stmt.stmt#=if.stmt# with call.stmt#=while.stmt#  pattern assign(_, "2300-3800")  such that Calls(_, procedure)  pattern if(if, _, _) with "variable"=call.procName with print.varName=call.procName  pattern if(_, _, _)  pattern assign(_, _)  such that Follows*(stmt, _)  such that Affects(_, assign)  pattern while(variable, _)  pattern if(_, _, _)  pattern assign(print, "3700-6200")  such that Next*(assign, while) with read.varName="read" with constant.value=8400  such that Next*(print, _) with procedure.procName=variable.varName with read.varName=print.varName  such that Uses(if, variable)  pattern assign(variable, _)  pattern while(_, _)  pattern while(variable, _)  pattern while(_, _)  such that Next(if, 25) with read.stmt#=read.stmt#  pattern assign(_, _"read-200"_)  pattern assign(variable, _"5800/2800"_)  pattern if(variable, _, _)  such that Modifies(call, "while")  pattern while(_, _)  pattern while(_, _)  pattern while(read, _)  pattern assign(_, _"2500/5900"_)  such that Next*(if, 9)  pattern assign(while, _"8300*4800"_)  pattern while(assign, _) with print.stmt#=9000 with call.procName="variable"  such that Follows(7, assign) with 6000=if.stmt#  pattern if(variable, _, _)  pattern assign(variable, _)  pattern while(variable, _)  such that Calls*(procedure, "variable")  pattern if(variable, _, _)  pattern assign(print, "300/8200") with read.stmt#=call.stmt#  such that Uses(call, _) with constant.value=3200  such that Modifies(11, variable)  pattern if(variable, _, _)  pattern assign(variable, _"6200*6600"_) with 6500=call.stmt# with 200=while.stmt#  such that Affects*(stmt, 24) with "read"=variable.varName with "read"=procedure.procName  pattern if(variable, _, _)  such that Uses(assign, "then")  pattern while(variable, _)  such that Next(stmt, 22)  pattern assign(_, _)  such that Parent(if, _)  such that Parent*(print, _) with variable.varName=read.varName with variable.varName=read.varName with "call"=read.varName  pattern if(variable, _, _) with print.varName=procedure.procName with stmt.stmt#=9700  pattern assign(_, "700*1800")  pattern assign(variable, _"7100*7600"_) with while.stmt#=stmt.stmt#  pattern while(_, _) with 6200=if.stmt#  pattern while(if, _)  such that Parent(while, while)  pattern while(variable, _) with while.stmt#=6400 with variable.varName="call"  such that Next*(while, print)  such that Next(assign, _) with "variable"=read.varName with "else"=call.procName  pattern if(_, _, _)  such that Follows*(read, 5) with print.varName=print.varName with call.stmt#=8700 with constant.value=stmt.stmt# with constant.value=8100  pattern while(_, _)  pattern assign(if, _"9800-1500"_) with print.stmt#=6600 with 1900=constant.value  pattern while(variable, _)  pattern assign(then, _"9800*300"_) with call.procName=read.varName  such that Parent*(call, _)  pattern if(_, _, _)  pattern if(variable, _, _)  pattern while(variable, _) with stmt.stmt#=2100  pattern assign(then, _)  pattern assign(variable, _"read+if"_) with procedure.procName="if"  pattern while(variable, _)  pattern while(variable, _)  pattern if(_, _, _)  such that Uses(assign, _)  pattern while(procedure, _)  pattern assign(variable, "5000/6600") with call.procName=procedure.procName  pattern while(variable, _)  pattern if(constant, _, _)  pattern if(variable, _, _)  such that Affects(_, stmt) with "if"=procedure.procName  such that Follows(1, if) with "print"=procedure.procName with if.stmt#=5600 with "then"=read.varName  such that Modifies(procedure, variable)  pattern assign(while, _) with if.stmt#=assign.stmt#  pattern assign(_, _"if/9400"_)  pattern assign(variable, _"8000+2700"_)  pattern if(variable, _, _)  pattern if(variable, _, _) with if.stmt#=if.stmt#  such that Modifies(procedure, "while") with call.stmt#=700  such that Next(read, _)  pattern assign(variable, "9800-8500")  pattern if(variable, _, _)  pattern if(constant, _, _)  pattern if(procedure, _, _)  pattern assign(variable, "8800-200")  pattern assign(print, _) with procedure.procName=procedure.procName with procedure.procName="print"  pattern if(_, _, _)  such that Parent(2, while)  pattern assign(constant, _)  pattern while(_, _)  such that Next(while, assign)  such that Next*(_, call) with read.varName=procedure.procName with while.stmt#=300  such that Affects*(stmt, 11) 

5000
15 - Query 15
variable variable; print print; assign assign; constant constant; stmt stmt; read read; procedure procedure; if if; while while; call call; 
Select <variable, print, assign, constant, stmt, read, procedure, if, while, call>  pattern if(_, _, _)  such that Calls("assign", procedure)  pattern if(print, _, _) with variable.varName="procedure"  such that Next*(stmt, 26)  such that Parent*(_, print)  pattern while(_, _)  such that Follows*(assign, _) with assign.stmt#=200  pattern while(variable, _)  such that Next*(call, _) with call.stmt#=print.stmt#  pattern while(variable, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  such that Follows*(_, if)  such that Modifies(while, _)  pattern assign(procedure, _)  pattern if(variable, _, _)  such that Affects*(9, assign)  such that Follows(_, if)  pattern while(variable, _)  such that Modifies(print, _)  pattern if(then, _, _) with variable.varName="variable"  pattern assign(variable, _) with variable.varName=variable.varName  pattern if(while, _, _) with 2400=read.stmt#  such that Next*(20, print)  pattern if(variable, _, _)  such that Affects*(_, stmt)  pattern while(variable, _)  pattern while(_, _)  pattern if(variable, _, _)  such that Uses(if, variable)  such that Modifies(print, variable)  such that Parent*(assign, _) with print.stmt#=constant.value with assign.stmt#=constant.value with read.varName=procedure.procName with while.stmt#=read.stmt#  such that Uses(19, variable)  pattern assign(variable, "assign/7100")  pattern assign(_, _"4600-3900"_)  pattern assign(variable, "4500/2800") with read.varName=call.procName  such that Affects*(assign, assign) with read.varName=procedure.procName  pattern while(_, _)  such that Parent(print, print) with constant.value=call.stmt#  pattern assign(_, _"2900*2000"_) with 7100=while.stmt#  such that Calls(procedure, "call") with 1300=read.stmt# with constant.value=constant.value  pattern assign(if, _)  such that Next(_, read)  pattern if(else, _, _)  such that Calls(procedure, _) with "variable"=procedure.procName  pattern if(_, _, _)  pattern assign(read, _"9800+9100"_) with 9700=constant.value with 1300=call.stmt#  such that Parent(print, call)  such that Affects(9, stmt)  such that Parent*(_, call)  pattern if(_, _, _)  such that Modifies(stmt, _) with "else"=variable.varName with 2400=while.stmt#  such that Next(_, stmt) with assign.stmt#=if.stmt# with if.stmt#=1000  such that Calls*(procedure, "constant")  pattern if(_, _, _)  such that Follows(read, print) with "procedure"=procedure.procName  pattern assign(variable, "6900+9300") with assign.stmt#=stmt.stmt# with procedure.procName=print.varName  pattern if(constant, _, _)  pattern if(_, _, _)  such that Follows*(_, if)  such that Parent*(while, 12)  pattern if(variable, _, _)  pattern while(variable, _)  pattern assign(variable, "5200*9900")  pattern assign(variable, "2100-3400") with read.stmt#=if.stmt# with assign.stmt#=6100  such that Affects*(21, assign)  pattern assign(_, _"6000*3500"_)  such that Parent(while, 15)  pattern while(variable, _) with 2000=call.stmt#  pattern assign(variable, "3800/700")  such that Calls*(procedure, _)  pattern if(variable, _, _) with call.procName=print.varName  pattern if(_, _, _)  pattern while(_, _)  such that Affects*(assign, 20)  such that Follows(_, assign)  pattern while(then, _) with "print"=read.varName with procedure.procName=call.procName  such that Follows(call, _) with 7600=assign.stmt#  such that Affects*(stmt, 24)  pattern if(constant, _, _) with call.procName=print.varName  pattern while(variable, _)  pattern if(variable, _, _) with read.stmt#=while.stmt# with print.stmt#=9100  pattern assign(call, "9400/3100")  such that Follows*(23, if) with print.varName=procedure.procName  such that Follows*(_, call)  such that Parent*(_, read)  pattern while(read, _)  pattern if(read, _, _) with 8800=call.stmt# with assign.stmt#=6500  such that Affects(5, stmt)  pattern assign(variable, _"4800+3900"_) with "if"=call.procName with read.stmt#=while.stmt#  such that Uses(9, variable)  pattern assign(procedure, _)  pattern if(_, _, _)  pattern assign(variable, "2300/3700")  pattern if(variable, _, _)  such that Affects(8, assign) with "while"=call.procName  pattern while(_, _)  pattern assign(variable, _) with read.varName="assign" with read.stmt#=assign.stmt# with constant.value=3400 with constant.value=7900  pattern if(_, _, _)  pattern assign(while, "4100/2500")  such that Next*(assign, 11) with procedure.procName=procedure.procName  pattern assign(_, _)  pattern assign(_, _)  pattern if(variable, _, _)  pattern if(_, _, _)  such that Next(19, print) with constant.value=200  pattern while(variable, _) with 7000=if.stmt#  such that Calls*(_, procedure)  pattern while(_, _)  such that Modifies(while, variable)  pattern if(_, _, _)  such that Affects(stmt, 12)  pattern assign(_, "3400-5900") with "variable"=variable.varName  such that Affects(14, assign) with print.stmt#=4700 with constant.value=if.stmt# with procedure.procName=read.varName  such that Parent*(assign, if) with "read"=variable.varName  pattern while(variable, _) with procedure.procName=variable.varName with variable.varName=procedure.procName with print.stmt#=constant.value  pattern if(variable, _, _) with 4100=print.stmt# with call.stmt#=stmt.stmt#  such that Follows(_, print)  pattern while(variable, _)  such that Calls(procedure, procedure)  pattern while(variable, _) with call.procName=procedure.procName with call.procName="read"  pattern assign(assign, _"5500+1700"_) with constant.value=stmt.stmt# with if.stmt#=8300  pattern while(_, _)  pattern assign(constant, _)  pattern if(variable, _, _)  pattern while(variable, _)  pattern assign(while, _"4800*3100"_)  pattern assign(_, _)  such that Follows*(if, _)  such that Follows(assign, 21)  such that Affects*(_, stmt) with print.stmt#=print.stmt#  such that Next(call, _) with read.varName="then" with call.stmt#=print.stmt#  pattern if(read, _, _)  pattern if(variable, _, _) with variable.varName="while" with 100=if.stmt# with print.varName="variable"  pattern while(variable, _) with 3300=if.stmt# with read.stmt#=constant.value  such that Affects*(assign, _) with assign.stmt#=assign.stmt#  pattern while(_, _)  pattern if(variable, _, _)  pattern if(then, _, _) with "if"=call.procName with 9800=constant.value  such that Next*(_, stmt) with print.varName="variable" with call.stmt#=3800  pattern if(variable, _, _) with "while"=print.varName  pattern assign(_, "600/6400") with 6600=stmt.stmt# with 6600=assign.stmt#  pattern if(_, _, _)  such that Next*(print, 2)  such that Calls*(procedure, _) with "assign"=print.varName with "then"=variable.varName  such that Follows(print, print)  pattern assign(assign, _"1200/700"_)  pattern while(variable, _)  pattern assign(variable, "(9400+call)/8500")  pattern assign(variable, "2500-4800")  such that Next(stmt, stmt)  such that Parent*(call, while) with read.varName="while"  pattern assign(variable, "5000+9700") with read.stmt#=stmt.stmt#  pattern while(variable, _) with assign.stmt#=8200  such that Follows(print, _)  pattern while(variable, _)  pattern assign(_, _) with print.stmt#=8300 with "procedure"=variable.varName with "while"=procedure.procName  pattern if(variable, _, _) with assign.stmt#=read.stmt# with read.varName="if" with variable.varName="then"  such that Uses(procedure, variable) with "else"=call.procName  such that Next(while, _)  pattern if(_, _, _)  pattern while(call, _)  such that Calls(procedure, procedure)  pattern while(else, _) with "assign"=print.varName with if.stmt#=while.stmt#  pattern assign(variable, "9500*2600")  such that Follows(if, _)  pattern while(variable, _)  such that Next(call, 12)  pattern while(_, _) with variable.varName="call"  such that Uses(24, variable)  pattern if(_, _, _) with call.procName="constant" with 1000=assign.stmt#  pattern if(_, _, _) with read.stmt#=6500  such that Follows(stmt, read)  pattern while(assign, _)  pattern assign(call, _"2800/8400"_)  such that Follows(while, while) with call.stmt#=while.stmt#  pattern assign(variable, _) with "else"=read.varName  pattern if(_, _, _) with "if"=read.varName  pattern if(variable, _, _)  pattern if(if, _, _) with procedure.procName="assign" with read.stmt#=constant.value with constant.value=6800  pattern assign(_, "while+2500")  such that Parent(read, 21) with read.stmt#=if.stmt#  pattern if(while, _, _)  pattern assign(constant, _)  such that Uses(stmt, _)  such that Uses(3, variable)  pattern assign(else, _"6700/4600"_) with constant.value=4700 with assign.stmt#=if.stmt#  pattern if(_, _, _) with variable.varName="call"  pattern if(_, _, _)  pattern while(variable, _)  pattern if(variable, _, _)  such that Parent(if, if)  pattern assign(if, "1400*5600") with "then"=print.varName  pattern assign(_, _"8200*2200"_)  pattern if(_, _, _) with call.procName=procedure.procName with while.stmt#=2500  such that Modifies(while, variable)  such that Parent(13, while) with procedure.procName="then" with read.varName=procedure.procName  pattern while(_, _) with stmt.stmt#=constant.value with print.varName="procedure"  such that Follows(while, _)  such that Parent*(read, _)  such that Uses(call, "constant") with print.varName=call.procName  such that Calls*(procedure, "procedure")  pattern while(variable, _)  pattern assign(_, _)  pattern assign(procedure, _"2500+8200"_)  pattern if(_, _, _)  such that Calls*(procedure, procedure) with procedure.procName="read"  pattern if(variable, _, _) with "call"=read.varName  such that Next*(call, 20)  pattern assign(_, _"(9700+3900)/8400"_)  pattern assign(_, "4700*4300")  pattern if(variable, _, _) with procedure.procName="then" with 7200=assign.stmt#  such that Affects(assign, _) with 8100=call.stmt#  such that Follows*(assign, _) with read.varName=procedure.procName with "procedure"=print.varName  pattern while(variable, _) with procedure.procName=print.varName with "read"=call.procName  such that Parent*(3, if)  pattern assign(_, "if/4600")  pattern assign(call, _"500/3100"_) with call.procName="else"  pattern if(read, _, _) with procedure.procName=procedure.procName with constant.value=stmt.stmt#  pattern assign(variable, _"8200-9500"_)  such that Calls*(procedure, "then")  pattern assign(variable, _"700+5400"_)  such that Next(stmt, 10)  pattern assign(_, _"9200-4800"_)  pattern if(variable, _, _)  such that Next(17, while) with read.stmt#=print.stmt#  such that Next*(print, while)  such that Parent*(if, stmt)  pattern assign(variable, "9100-9100")  pattern while(else, _)  pattern if(print, _, _)  pattern if(variable, _, _) with 9600=call.stmt# with constant.value=call.stmt#  pattern if(variable, _, _) with call.stmt#=stmt.stmt# with variable.varName="if"  pattern if(variable, _, _)  such that Calls(procedure, _)  such that Uses(while, "constant")  pattern while(assign, _)  pattern assign(assign, "1700/assign") with "read"=print.varName with call.stmt#=assign.stmt#  pattern while(variable, _)  pattern while(_, _)  such that Affects(assign, _)  such that Calls*(procedure, _)  pattern assign(_, "800*9900") with read.varName="print" with 7700=assign.stmt# with "procedure"=read.varName with procedure.procName="assign" with if.stmt#=read.stmt#  such that Parent(read, _) with call.procName="while"  pattern assign(variable, "8200+4300") with "else"=print.varName  such that Parent(assign, if)  pattern if(variable, _, _)  pattern while(variable, _)  pattern while(read, _)  pattern if(_, _, _) with "read"=print.varName  pattern if(variable, _, _) with variable.varName="read" with 9300=call.stmt# with variable.varName="print"  pattern assign(variable, "6100-7100") with call.procName=call.procName  pattern assign(call, _)  pattern while(variable, _) with call.stmt#=3500  pattern while(variable, _)  pattern if(assign, _, _) with while.stmt#=5500  such that Calls(procedure, _)  such that Next(_, while) with read.stmt#=call.stmt#  pattern if(then, _, _)  pattern if(else, _, _)  such that Calls*(procedure, "while") with 4900=if.stmt# with read.stmt#=assign.stmt# with variable.varName=read.varName  such that Calls(procedure, "procedure")  such that Uses(if, variable)  pattern while(if, _)  pattern assign(then, "5500*8700")  pattern if(constant, _, _)  pattern if(variable, _, _) with stmt.stmt#=7700  pattern assign(_, _"read/200"_)  pattern while(variable, _)  such that Modifies(15, variable)  pattern assign(variable, "3500*2800")  such that Parent*(16, call)  such that Follows(stmt, assign)  such that Parent*(29, print)  pattern assign(_, "2300*4600") with if.stmt#=900 with "else"=print.varName  pattern while(constant, _)  pattern if(if, _, _) with procedure.procName=procedure.procName  pattern while(_, _) with 5500=if.stmt#  pattern while(_, _) with 9000=stmt.stmt# with read.varName="call"  such that Affects(_, stmt)  pattern assign(read, _"(6000-3000)+4600"_)  pattern if(_, _, _) with 3900=read.stmt#  such that Affects*(24, assign) with assign.stmt#=9500 with 8400=stmt.stmt#  such that Follows(stmt, _)  such that Parent(20, read)  such that Follows*(print, 13) with call.procName="assign"  pattern assign(else, "(3600-2600)-6800") with print.stmt#=assign.stmt# with read.varName="variable"  pattern while(variable, _)  such that Affects(3, assign) with variable.varName="assign"  pattern if(constant, _, _)  pattern assign(_, "5000*5900") with read.varName="print" with constant.value=while.stmt# with 5600=if.stmt#  pattern while(_, _)  pattern assign(call, _"else+500"_)  pattern assign(_, _"3800-4700"_)  such that Affects*(_, stmt)  pattern if(while, _, _)  pattern if(variable, _, _)  pattern assign(variable, _)  pattern if(_, _, _)  pattern while(constant, _)  such that Affects*(_, assign) with 9100=if.stmt#  such that Uses(call, variable) with if.stmt#=9900  pattern while(variable, _)  pattern while(_, _)  pattern assign(_, _"6000-8600"_) with read.varName=call.procName with "constant"=read.varName with 2700=while.stmt#  such that Modifies(6, variable) with procedure.procName="variable" with variable.varName=read.varName  such that Modifies(assign, _)  such that Parent(19, read)  pattern if(variable, _, _)  pattern assign(variable, _) with 100=constant.value with assign.stmt#=assign.stmt# with stmt.stmt#=stmt.stmt# with print.varName=call.procName  such that Uses(if, variable)  pattern if(_, _, _)  such that Uses(assign, variable)  pattern if(_, _, _)  such that Parent(assign, 25)  pattern if(_, _, _)  such that Affects*(_, stmt)  pattern if(call, _, _) with 2300=constant.value with if.stmt#=call.stmt# 

5000
16 - Query 16
variable variable; assign assign; print print; constant constant; stmt stmt; read read; procedure procedure; if if; while while; call call; 
Select <variable, assign, print, constant, stmt, read, procedure, if, while, call>  pattern if(variable, _, _)  such that Affects(_, assign) with 3800=stmt.stmt#  pattern assign(if, _"4200+1100"_) with "read"=procedure.procName  pattern assign(print, "7100/2500")  pattern assign(_, _"3400+1900"_) with 4600=if.stmt#  pattern assign(_, _) with procedure.procName="while"  such that Modifies(call, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern if(_, _, _) with "if"=variable.varName with assign.stmt#=2300  pattern assign(variable, _)  pattern assign(print, "if+7700")  such that Follows*(stmt, _)  pattern if(variable, _, _) with call.procName="read"  such that Uses(if, "call")  such that Follows(read, _)  such that Affects*(_, stmt)  pattern while(_, _) with print.varName="else" with "else"=read.varName  such that Affects(assign, _)  such that Affects*(assign, _)  pattern assign(_, "7200*200") with call.stmt#=read.stmt#  such that Follows*(print, assign) with procedure.procName="if"  pattern while(_, _)  pattern assign(_, _"8000-8800"_)  such that Calls(procedure, procedure) with procedure.procName="else"  pattern while(_, _)  pattern if(_, _, _) with 5600=print.stmt#  pattern assign(variable, _"(8300-3000)-5800"_)  pattern assign(variable, "2100-1400")  pattern if(variable, _, _)  such that Affects*(stmt, stmt)  such that Next(assign, _) with 1400=print.stmt#  pattern if(variable, _, _)  such that Follows(print, _)  pattern if(_, _, _)  such that Affects*(stmt, assign)  such that Parent*(while, assign)  pattern assign(_, _)  such that Follows*(21, assign)  such that Modifies(read, _)  pattern while(_, _) with call.stmt#=8800 with if.stmt#=7900 with while.stmt#=print.stmt#  pattern while(variable, _) with stmt.stmt#=4900  pattern if(variable, _, _)  pattern while(variable, _) with call.stmt#=constant.value  pattern if(while, _, _) with 7000=constant.value  such that Calls(procedure, procedure)  such that Uses(procedure, "while")  pattern assign(procedure, _)  such that Next(stmt, 12)  pattern while(variable, _)  pattern while(assign, _)  pattern while(variable, _)  such that Affects*(stmt, _)  such that Follows(22, print) with 1000=constant.value with read.varName="procedure"  pattern if(variable, _, _)  pattern if(_, _, _) with 3500=while.stmt# with variable.varName=procedure.procName  such that Affects(stmt, _)  pattern assign(if, _) with if.stmt#=call.stmt# with 6900=stmt.stmt#  pattern while(variable, _)  such that Affects*(stmt, 22)  pattern if(_, _, _) with 4700=stmt.stmt#  such that Uses(if, variable)  such that Affects(11, assign)  pattern if(print, _, _)  pattern assign(constant, _"8100/400"_) with 7400=stmt.stmt# with constant.value=stmt.stmt#  such that Parent(15, if)  such that Calls(procedure, procedure) with "call"=call.procName  pattern while(_, _)  pattern if(constant, _, _) with 700=if.stmt#  pattern if(_, _, _)  pattern assign(_, _)  such that Parent(stmt, 2) with 8900=call.stmt#  pattern if(_, _, _)  pattern assign(_, _"9100+2800"_)  pattern while(read, _)  such that Calls(procedure, "constant") with assign.stmt#=900 with stmt.stmt#=3100  pattern assign(variable, _) with 4200=call.stmt#  pattern while(_, _)  pattern while(_, _)  such that Uses(1, variable)  pattern if(print, _, _)  pattern while(_, _)  pattern while(else, _)  such that Next(assign, 3)  pattern while(_, _)  pattern while(variable, _) with 6300=call.stmt# with stmt.stmt#=while.stmt# with read.stmt#=if.stmt#  such that Uses(1, variable)  pattern assign(_, "(4200-700)+4700") with procedure.procName="procedure" with call.procName=read.varName  pattern while(print, _)  pattern assign(while, "(2700*5200)/1800") with 2100=while.stmt#  pattern if(else, _, _)  pattern if(constant, _, _) with constant.value=5400 with if.stmt#=call.stmt# with print.stmt#=call.stmt#  such that Affects(stmt, 1) with "variable"=read.varName with variable.varName="procedure"  pattern assign(_, _"7300-9100"_)  pattern assign(_, _"3000+1800"_)  pattern while(constant, _)  pattern while(_, _)  pattern while(else, _)  pattern assign(print, _"5800*6700"_)  such that Calls*(procedure, procedure) with print.varName="variable"  pattern assign(_, "7400-400")  such that Parent(if, print)  such that Affects(assign, _)  pattern while(variable, _)  pattern while(then, _)  pattern assign(variable, _"7700/2600"_) with stmt.stmt#=6900  pattern while(variable, _) with call.procName="variable"  pattern while(assign, _)  such that Calls*(procedure, _)  pattern assign(variable, _)  such that Next*(_, stmt) with call.stmt#=while.stmt#  pattern while(_, _) with "assign"=procedure.procName  pattern assign(_, _)  pattern if(_, _, _) with read.stmt#=6100  pattern assign(call, "if/2100")  such that Next*(9, call)  pattern if(else, _, _)  such that Affects(stmt, _)  pattern while(else, _) with while.stmt#=read.stmt# with 3900=assign.stmt# with "variable"=print.varName  pattern if(variable, _, _)  such that Uses(9, variable)  such that Parent*(6, assign) with read.stmt#=assign.stmt# with assign.stmt#=if.stmt# with while.stmt#=read.stmt#  such that Calls*(procedure, "then")  pattern assign(variable, "6100+7100")  such that Next(3, call) with if.stmt#=7700  pattern assign(variable, _)  pattern while(_, _)  pattern while(print, _) with "constant"=print.varName with print.varName="procedure"  such that Affects*(22, stmt)  pattern if(variable, _, _) with print.varName="variable" with constant.value=stmt.stmt#  pattern assign(while, _"6500*7800"_)  such that Modifies(call, _)  such that Follows(while, _)  pattern if(else, _, _) with while.stmt#=3200  pattern assign(_, _"6500-4300"_)  pattern assign(_, _"((2700/8100)*2100)*3800"_)  pattern assign(_, _)  such that Modifies(if, variable) with procedure.procName=read.varName  such that Calls("then", procedure)  pattern if(constant, _, _)  pattern while(while, _)  pattern assign(variable, "100-1800")  pattern if(if, _, _)  such that Uses(procedure, variable)  pattern if(variable, _, _) with 3500=while.stmt#  pattern if(_, _, _)  pattern while(while, _)  pattern while(variable, _)  pattern if(variable, _, _)  such that Calls*(procedure, procedure) with assign.stmt#=print.stmt#  such that Affects(assign, _) with constant.value=9300  such that Follows(read, stmt)  such that Parent(_, read)  such that Calls(procedure, _) with print.varName="constant" with "print"=call.procName  such that Parent*(_, stmt) with assign.stmt#=9600  such that Calls(_, procedure)  pattern assign(then, "7700-7200") with read.varName=procedure.procName  such that Calls(procedure, procedure) with call.procName=read.varName with 200=while.stmt#  such that Next(read, if) with stmt.stmt#=print.stmt#  pattern if(variable, _, _)  pattern assign(_, _)  pattern assign(variable, _)  pattern assign(variable, "200+constant")  pattern while(read, _)  pattern if(read, _, _)  such that Next(assign, _)  such that Follows*(19, stmt)  pattern if(then, _, _)  such that Parent*(print, 7)  such that Affects(_, assign) with print.stmt#=constant.value  pattern if(variable, _, _)  pattern assign(procedure, _"7600+assign"_) with procedure.procName=variable.varName  pattern while(variable, _)  pattern if(variable, _, _)  pattern while(if, _) with procedure.procName="procedure"  such that Follows(_, call) with stmt.stmt#=print.stmt#  such that Parent(16, stmt)  such that Follows(assign, _)  such that Follows(21, while) with call.procName=procedure.procName  pattern while(variable, _)  pattern if(variable, _, _) with 5100=assign.stmt# with 2700=read.stmt#  pattern assign(_, _)  such that Next(3, if)  pattern if(else, _, _)  such that Next*(stmt, _)  such that Calls("variable", procedure)  such that Parent*(13, call) with "variable"=read.varName  pattern if(_, _, _)  pattern assign(variable, "9000*4000")  pattern if(variable, _, _)  pattern while(variable, _)  such that Next*(call, _)  pattern if(print, _, _)  such that Next(call, 7)  such that Next(assign, _) with stmt.stmt#=6200 with call.stmt#=1000  pattern while(then, _)  such that Parent(_, print)  pattern while(variable, _) with print.varName=call.procName  such that Next*(_, call) with "constant"=variable.varName with call.procName="assign"  such that Modifies(stmt, "print")  pattern assign(_, "(6200-read)*5800")  pattern if(_, _, _)  pattern if(then, _, _)  pattern while(variable, _)  pattern if(variable, _, _)  such that Next(call, 19)  pattern assign(then, _"1200/5000"_)  pattern if(_, _, _)  such that Uses(while, variable) with "then"=print.varName  pattern while(_, _)  pattern if(_, _, _)  pattern while(variable, _) with print.stmt#=3400  pattern assign(variable, "4500/3400") with 8900=constant.value  pattern if(read, _, _) with procedure.procName=read.varName  pattern assign(while, _"(6000+8100)-5600"_) with stmt.stmt#=stmt.stmt# with procedure.procName="procedure"  pattern while(procedure, _)  such that Affects*(stmt, _)  such that Modifies(assign, "read") with "read"=procedure.procName  pattern if(variable, _, _)  pattern while(variable, _) with "procedure"=call.procName  pattern while(variable, _)  such that Follows*(_, print)  pattern if(then, _, _) with variable.varName=procedure.procName  such that Affects*(assign, _)  such that Modifies(while, "else")  such that Follows(print, 8)  such that Parent*(print, _)  pattern assign(_, _"2600*900"_) with variable.varName="call"  pattern while(variable, _)  pattern if(variable, _, _)  such that Follows(while, print) with constant.value=assign.stmt#  pattern assign(_, "while-4200") with "call"=variable.varName  such that Next*(_, while)  pattern assign(_, _"(1300/4400)*2900"_) with stmt.stmt#=while.stmt# with read.stmt#=if.stmt#  pattern assign(assign, _)  pattern if(variable, _, _)  such that Parent*(28, while)  pattern if(_, _, _)  such that Affects(stmt, 10)  such that Parent*(call, 26)  pattern assign(variable, _"700-then"_) with read.varName=call.procName  pattern while(_, _)  pattern while(_, _)  pattern if(else, _, _)  pattern if(variable, _, _)  pattern while(else, _)  such that Affects(14, stmt)  such that Calls*(procedure, procedure)  such that Parent*(17, call)  pattern if(assign, _, _) with call.procName="constant"  such that Next(stmt, _)  such that Affects(assign, _)  pattern if(print, _, _)  pattern if(_, _, _)  such that Affects(stmt, _) with variable.varName=variable.varName with if.stmt#=2400  pattern if(variable, _, _) with constant.value=call.stmt#  such that Uses(2, variable)  pattern while(_, _)  pattern if(_, _, _)  pattern while(else, _)  such that Next*(if, 26)  such that Affects*(stmt, _)  pattern if(variable, _, _)  pattern assign(variable, _) with print.varName="read"  such that Follows(1, read)  pattern while(_, _) with constant.value=while.stmt#  such that Parent*(13, while)  pattern while(_, _) with if.stmt#=7700  pattern while(_, _)  such that Follows*(assign, _)  pattern if(procedure, _, _)  such that Follows(assign, if)  pattern if(_, _, _)  pattern if(variable, _, _) with while.stmt#=while.stmt#  pattern while(_, _)  pattern while(_, _)  such that Parent(assign, if)  such that Next(_, read) with 1200=while.stmt#  pattern assign(else, _"4000/8800"_)  such that Next(if, read)  pattern if(variable, _, _) with "else"=read.varName with call.stmt#=8900  such that Next*(if, _)  such that Parent(22, read)  pattern assign(constant, "3500+9000")  such that Uses(10, variable)  pattern while(variable, _) with stmt.stmt#=1900 with variable.varName=call.procName  pattern assign(_, _)  pattern while(_, _) with print.stmt#=read.stmt#  such that Affects(assign, _)  pattern if(while, _, _) with constant.value=print.stmt#  pattern assign(_, "9200-2500")  such that Follows*(assign, while) with print.varName="if"  pattern assign(procedure, "6100*3500")  pattern while(_, _)  pattern while(procedure, _)  pattern if(variable, _, _)  pattern while(constant, _)  such that Parent*(assign, if)  pattern while(_, _) with "read"=variable.varName  such that Parent*(if, print) with constant.value=700  such that Follows(_, read)  such that Affects*(stmt, 14) with "then"=variable.varName with variable.varName="call"  pattern assign(variable, "3900-5800")  pattern while(while, _)  such that Follows(while, stmt)  such that Uses(15, variable)  such that Modifies(1, variable)  pattern assign(procedure, "(9300+3700)-8000")  pattern while(if, _) with 9400=if.stmt#  pattern assign(_, _) with read.varName=print.varName with call.stmt#=3600 with "variable"=variable.varName with print.varName=read.varName with "print"=call.procName with assign.stmt#=while.stmt#  pattern while(_, _)  pattern while(variable, _)  pattern if(_, _, _) with assign.stmt#=if.stmt#  such that Parent(_, call)  such that Uses(stmt, _)  such that Calls*("if", procedure) with if.stmt#=while.stmt# with read.stmt#=call.stmt#  such that Affects*(stmt, 9)  pattern while(variable, _) with "variable"=procedure.procName  pattern assign(_, "8400*print") with constant.value=3900  pattern assign(_, _)  such that Affects*(stmt, 25) with print.varName=call.procName  pattern while(variable, _)  such that Uses(procedure, "constant") with 3900=if.stmt# with print.stmt#=call.stmt# with call.stmt#=assign.stmt# with if.stmt#=call.stmt#  such that Parent*(stmt, _)  pattern while(_, _)  pattern if(_, _, _)  such that Next*(_, print) with "then"=procedure.procName  pattern if(variable, _, _)  such that Next(call, print) with constant.value=if.stmt#  pattern if(variable, _, _)  such that Next(stmt, _)  pattern assign(variable, _) with "while"=call.procName with constant.value=700  pattern assign(variable, _"procedure-1400"_) with procedure.procName=procedure.procName with "read"=read.varName with variable.varName=print.varName  pattern assign(assign, _"700*read"_) with call.procName=procedure.procName  such that Next*(print, call) with read.varName="variable"  pattern while(variable, _)  such that Affects*(_, assign)  pattern while(procedure, _)  such that Affects(_, stmt) with print.varName=read.varName with print.varName=procedure.procName  such that Calls*("then", procedure) with read.stmt#=6200 with "print"=procedure.procName  pattern if(then, _, _)  pattern while(while, _)  pattern assign(variable, "7800/7200")  such that Next(_, read) with 8400=stmt.stmt#  such that Next(call, assign) with variable.varName=procedure.procName 

5000
17 - Query 17
variable variable; print print; assign assign; constant constant; call call; stmt stmt; read read; while while; if if; procedure procedure; 
Select <variable, print, assign, constant, call, stmt, read, while, if, procedure> with 2300=stmt.stmt#  pattern while(variable, _)  such that Next*(_, print)  pattern assign(variable, "6100+5200")  such that Affects(stmt, _)  such that Modifies(stmt, "call")  pattern while(variable, _) with "variable"=read.varName with procedure.procName=procedure.procName with read.varName=variable.varName with "read"=procedure.procName  such that Modifies(23, variable)  such that Parent*(_, if) with constant.value=if.stmt# with "read"=procedure.procName  such that Affects*(18, assign)  pattern while(_, _)  such that Follows(read, print) with if.stmt#=assign.stmt#  pattern while(variable, _)  such that Uses(8, variable) with variable.varName=variable.varName with procedure.procName="else"  pattern while(variable, _)  such that Uses(procedure, _)  pattern if(_, _, _)  such that Affects(stmt, _)  such that Calls*(_, procedure) with call.procName=variable.varName  pattern while(_, _)  pattern while(variable, _)  such that Affects*(4, stmt)  pattern assign(read, _)  such that Calls("read", procedure)  pattern if(while, _, _) with print.varName=procedure.procName  pattern while(if, _)  pattern if(variable, _, _)  pattern assign(if, _) with 6900=stmt.stmt#  pattern if(_, _, _)  such that Calls*(procedure, procedure)  pattern while(variable, _)  pattern while(read, _)  pattern if(variable, _, _) with variable.varName=read.varName  pattern while(variable, _)  such that Follows*(22, if) with "if"=read.varName with variable.varName=call.procName  pattern if(variable, _, _) with print.stmt#=3900 with "read"=procedure.procName with stmt.stmt#=read.stmt#  pattern assign(variable, _"1500+9300"_)  pattern while(print, _) with 6000=stmt.stmt#  pattern assign(print, _"4400/if"_)  such that Follows*(11, if) with 7400=print.stmt#  such that Next*(print, _) with 2600=print.stmt# with "call"=print.varName  such that Follows*(if, _)  pattern if(_, _, _)  pattern while(call, _) with while.stmt#=300  pattern while(print, _) with procedure.procName="if" with read.varName="else"  pattern assign(procedure, _"(5300+9200)/9700"_) with stmt.stmt#=6300 with call.procName=variable.varName with call.procName=print.varName with call.procName="print"  pattern if(_, _, _)  such that Calls*(procedure, procedure)  pattern if(_, _, _)  such that Calls*(_, procedure)  pattern while(_, _)  pattern while(_, _) with assign.stmt#=constant.value  pattern while(_, _)  pattern assign(variable, _)  pattern while(if, _) with 6100=constant.value  such that Follows(assign, _)  pattern if(variable, _, _)  such that Next(28, while) with call.procName=variable.varName  pattern while(variable, _) with call.procName=read.varName  pattern while(_, _) with call.stmt#=7100  such that Next(stmt, _)  such that Parent*(stmt, _) with 8200=print.stmt#  pattern assign(_, _)  pattern assign(_, "6900*1200")  such that Affects(14, assign)  pattern while(_, _)  pattern if(assign, _, _) with stmt.stmt#=assign.stmt# with read.varName="then"  pattern assign(print, _"3000/9700"_)  pattern if(variable, _, _) with call.stmt#=5700  pattern if(print, _, _) with read.stmt#=9000  pattern while(then, _)  such that Parent*(_, if)  such that Parent*(15, while) with stmt.stmt#=1700 with read.varName=call.procName with constant.value=7400  such that Follows(stmt, 15) with variable.varName="assign" with read.varName=read.varName  pattern while(read, _)  pattern if(variable, _, _) with 6400=if.stmt#  such that Parent(call, _)  pattern if(while, _, _) with "assign"=variable.varName  such that Parent*(while, 16) with variable.varName=procedure.procName  such that Affects*(_, stmt)  pattern assign(_, _) with 9300=if.stmt#  pattern assign(assign, "5100*1000") with 4900=assign.stmt#  such that Calls("variable", procedure)  such that Calls(_, procedure)  pattern while(then, _)  pattern assign(variable, _)  pattern assign(variable, "8300-5200") with "call"=call.procName  pattern while(variable, _)  such that Uses(if, "while")  such that Follows(stmt, call)  pattern if(variable, _, _)  such that Calls*(_, procedure) with "variable"=procedure.procName  pattern assign(_, _) with 5600=assign.stmt#  pattern if(variable, _, _)  pattern while(_, _)  pattern assign(assign, _"8300/4600"_)  pattern if(variable, _, _)  pattern while(variable, _) with "print"=read.varName  pattern assign(while, _)  such that Uses(13, variable)  pattern assign(_, _"(2500/6100)/4100"_) with "else"=call.procName with "print"=procedure.procName  pattern assign(_, _)  pattern while(_, _)  pattern if(_, _, _)  such that Affects(assign, _)  such that Calls*(procedure, "assign")  pattern while(print, _)  pattern assign(variable, _"4100-1600"_)  pattern while(_, _) with "call"=call.procName  pattern if(then, _, _)  pattern assign(_, _) with "procedure"=variable.varName with read.varName=variable.varName  pattern if(_, _, _)  pattern assign(variable, _"while*6000"_)  such that Follows(read, call)  pattern assign(call, _"variable*4600"_) with 5700=if.stmt# with print.varName="if"  such that Follows(stmt, _)  pattern if(variable, _, _)  such that Parent*(23, while)  such that Affects*(_, assign) with print.varName=print.varName  pattern if(then, _, _)  pattern assign(then, _"600-1100"_) with print.stmt#=5400 with read.varName="constant" with read.varName="assign"  pattern if(variable, _, _) with if.stmt#=2800  such that Follows(24, while) with 1300=print.stmt#  pattern assign(_, _"8300/5900"_) with read.varName="call" with 2200=constant.value with print.varName="call" with procedure.procName=print.varName with "constant"=variable.varName with constant.value=read.stmt#  pattern assign(else, _"7200-4300"_) with call.procName=variable.varName  pattern while(then, _)  such that Next(print, 16)  pattern while(variable, _) with call.stmt#=constant.value  such that Parent*(assign, 29)  such that Next(8, call)  pattern if(_, _, _)  pattern assign(_, _)  pattern if(if, _, _)  pattern if(variable, _, _)  pattern while(read, _) with read.varName="call"  pattern if(variable, _, _)  pattern if(if, _, _)  such that Next*(while, _) with read.stmt#=read.stmt# with while.stmt#=9600  pattern while(assign, _)  such that Follows*(print, _)  pattern assign(_, _"8000/9400"_)  such that Next*(read, print)  pattern while(variable, _) with "then"=procedure.procName  such that Affects*(stmt, 15)  pattern if(call, _, _)  pattern while(read, _)  pattern while(_, _)  such that Calls(_, procedure) with "print"=procedure.procName with if.stmt#=3400  pattern while(read, _)  such that Modifies(call, variable)  such that Calls(_, procedure) with if.stmt#=4500  such that Affects(_, stmt)  pattern if(_, _, _)  such that Next(stmt, 3)  pattern assign(variable, _"6400-3100"_)  such that Follows*(if, 9)  pattern assign(_, _"(1900/9300)+while"_)  pattern if(variable, _, _)  such that Follows(_, assign)  such that Follows*(assign, read)  pattern while(variable, _)  pattern if(_, _, _)  pattern while(variable, _)  pattern assign(while, _"200-7100"_)  pattern if(assign, _, _)  pattern assign(variable, "9700*9400")  such that Affects*(assign, assign)  pattern assign(variable, _)  pattern assign(variable, _) with variable.varName=print.varName  such that Calls*(procedure, "then")  pattern if(_, _, _) with 4700=if.stmt# with "assign"=print.varName  pattern while(then, _) with read.stmt#=2800  pattern assign(variable, "(3100/9000)+8100")  such that Calls*(_, procedure) with "assign"=call.procName  pattern while(then, _)  such that Follows*(assign, 17)  pattern assign(variable, _"6100*4700"_) with call.procName=variable.varName  pattern assign(call, _)  pattern while(_, _)  pattern while(constant, _)  pattern if(variable, _, _)  such that Modifies(22, variable) with print.varName="else"  pattern if(variable, _, _) with call.stmt#=8300  pattern assign(variable, _) with 6100=if.stmt#  pattern while(variable, _)  such that Follows*(stmt, if)  pattern if(variable, _, _)  such that Modifies(if, variable) with "if"=call.procName  pattern while(_, _) with "constant"=call.procName  such that Parent*(call, 1)  pattern while(_, _)  such that Uses(call, _)  pattern assign(variable, _) with print.varName=print.varName  pattern while(else, _) with call.procName="then" with call.stmt#=read.stmt#  pattern if(variable, _, _)  such that Calls(_, procedure) with procedure.procName=variable.varName  such that Calls*(_, procedure)  pattern if(then, _, _)  pattern if(_, _, _)  such that Uses(8, variable)  pattern while(variable, _)  pattern assign(_, "else-1200") with procedure.procName="while" with "then"=procedure.procName  pattern assign(_, _"8100*7300"_)  pattern if(_, _, _)  pattern while(read, _)  pattern while(_, _)  pattern while(while, _)  pattern assign(variable, _"600/1900"_)  such that Parent(_, if)  pattern while(variable, _)  such that Parent*(24, assign) with 8000=constant.value  such that Affects(1, stmt)  pattern if(variable, _, _) with read.stmt#=2800  such that Follows(_, print) with read.stmt#=2800 with variable.varName="then" with stmt.stmt#=constant.value with "variable"=procedure.procName with call.stmt#=9300  pattern assign(variable, _"print/300"_)  pattern assign(variable, _"3900/5600"_) with call.stmt#=print.stmt#  pattern assign(variable, _) with call.procName="call"  such that Next*(23, assign)  pattern assign(_, "9400-5500")  pattern while(variable, _)  pattern assign(assign, _) with "while"=call.procName  pattern if(variable, _, _)  such that Affects(stmt, assign)  pattern while(_, _)  pattern while(variable, _) with constant.value=read.stmt# with "else"=procedure.procName  such that Modifies(9, variable)  such that Uses(26, variable)  pattern assign(_, _"print-5600"_)  pattern if(_, _, _) with procedure.procName=read.varName with 2700=print.stmt# with variable.varName="call"  pattern while(_, _)  pattern assign(variable, "3400+if")  pattern while(variable, _)  pattern if(then, _, _)  such that Follows*(_, assign) with while.stmt#=500  pattern if(variable, _, _) with call.procName=call.procName with print.varName="print" with while.stmt#=8500 with 500=if.stmt#  pattern if(_, _, _)  pattern assign(print, _"6900+300"_)  pattern assign(_, _)  such that Affects(4, assign)  pattern if(_, _, _)  pattern while(variable, _)  such that Uses(if, _) with 2400=while.stmt#  such that Affects*(_, stmt) with 9000=stmt.stmt#  pattern assign(_, "else*3500")  pattern if(variable, _, _)  pattern if(variable, _, _) with 4200=call.stmt# with if.stmt#=if.stmt# with stmt.stmt#=print.stmt# with while.stmt#=2700  pattern if(variable, _, _)  pattern if(assign, _, _)  such that Next(_, read)  such that Affects*(assign, _) with print.stmt#=5200  pattern while(assign, _) with if.stmt#=read.stmt# with print.varName=read.varName  such that Calls*(procedure, procedure)  pattern assign(variable, "4400*5900")  pattern while(call, _)  such that Parent(read, _)  pattern assign(_, _"2300+4800"_)  pattern while(variable, _)  pattern if(variable, _, _) with call.stmt#=5800 with call.stmt#=4700  pattern while(_, _)  pattern if(read, _, _)  pattern while(_, _)  such that Affects*(assign, _)  such that Calls*("assign", procedure)  pattern assign(variable, "3000*5000") with 9800=stmt.stmt#  pattern while(variable, _)  pattern while(variable, _)  such that Follows*(read, _)  such that Parent*(_, stmt)  pattern if(_, _, _) with "assign"=read.varName  such that Parent(print, read) with while.stmt#=2600  such that Parent(stmt, if)  pattern while(variable, _)  such that Follows(_, print)  such that Parent(print, assign)  pattern if(variable, _, _)  such that Calls(procedure, procedure)  pattern while(procedure, _)  pattern while(_, _)  pattern if(print, _, _)  pattern while(read, _)  pattern if(variable, _, _)  pattern while(assign, _) with constant.value=while.stmt#  pattern if(variable, _, _) with print.stmt#=6800 with stmt.stmt#=stmt.stmt# with call.stmt#=5900 with print.varName="print" with procedure.procName=print.varName  such that Parent(while, 15)  pattern assign(variable, _"constant/4200"_) with call.procName=print.varName with read.varName="while" with "call"=procedure.procName  pattern while(_, _)  such that Modifies(read, variable) with 3200=call.stmt# with read.varName=read.varName  such that Follows*(_, assign)  pattern while(variable, _)  pattern if(procedure, _, _) with 1400=constant.value  pattern while(variable, _) with print.varName=read.varName  pattern while(_, _) with variable.varName="while"  pattern assign(variable, _)  pattern assign(if, _"call/3600"_)  pattern while(read, _)  such that Parent(_, if) with stmt.stmt#=read.stmt#  such that Calls(procedure, _)  pattern while(variable, _) with 400=assign.stmt#  such that Affects(assign, stmt) with variable.varName="procedure"  pattern while(_, _)  pattern assign(assign, _"9600-4900"_) with if.stmt#=3500  such that Follows*(print, 5)  pattern assign(_, "(8500/3300)/6000")  pattern if(variable, _, _)  pattern assign(_, "9600/7700")  such that Parent*(assign, _)  pattern if(variable, _, _)  such that Parent*(8, while) with "assign"=variable.varName  pattern if(_, _, _)  pattern if(constant, _, _) with procedure.procName=read.varName with variable.varName=variable.varName  such that Uses(while, _) with 7300=call.stmt#  such that Uses(stmt, _) with 6100=read.stmt# with "call"=read.varName  pattern assign(_, _"else*4000"_) with 800=print.stmt# with "then"=print.varName  pattern while(_, _)  such that Affects(assign, assign)  pattern assign(variable, _) with if.stmt#=1600  pattern while(variable, _)  such that Calls*(procedure, _) with if.stmt#=constant.value  such that Uses(9, variable)  pattern assign(variable, _)  such that Calls(procedure, "assign")  pattern while(_, _) with assign.stmt#=while.stmt#  pattern if(_, _, _)  pattern assign(variable, _"8500/500"_)  such that Follows*(_, while)  such that Follows*(_, while) with if.stmt#=if.stmt# with assign.stmt#=300  pattern if(variable, _, _)  pattern while(variable, _)  pattern if(variable, _, _)  pattern while(call, _)  such that Affects(assign, stmt)  pattern assign(variable, _) with "then"=call.procName  pattern assign(if, "2800+8600")  such that Parent*(while, while)  pattern while(_, _)  pattern assign(variable, "4800/7900") 

5000
18 - Query 18
assign assign; variable variable; constant constant; print print; stmt stmt; read read; procedure procedure; if if; while while; call call; 
Select <assign, variable, constant, print, stmt, read, procedure, if, while, call>  such that Affects(_, assign) with "procedure"=call.procName with if.stmt#=9400  pattern assign(else, "8100+6400") with assign.stmt#=8500 with stmt.stmt#=4600  pattern assign(_, _"4200*if"_)  such that Follows*(call, _) with procedure.procName="else"  pattern assign(variable, _"4500*if"_) with 8000=read.stmt#  pattern while(variable, _)  pattern assign(variable, _) with read.varName="while" with procedure.procName="read" with call.procName="read"  such that Parent*(_, while)  pattern while(_, _)  such that Uses(16, variable) with constant.value=call.stmt#  pattern assign(while, _"2500/400"_)  such that Next(stmt, 29)  pattern assign(variable, _"8800/4500"_) with "while"=call.procName with "read"=read.varName with stmt.stmt#=constant.value  pattern assign(assign, _"((400/1000)+1800)+5500"_)  pattern while(_, _)  pattern if(variable, _, _) with if.stmt#=while.stmt#  pattern assign(_, _)  such that Parent*(print, print)  such that Modifies(call, _) with 4700=print.stmt#  pattern if(variable, _, _) with read.varName="while" with print.stmt#=while.stmt# with print.varName="print"  such that Next(assign, 20)  pattern assign(then, "(2700/9200)/3900") with 2000=print.stmt#  pattern while(_, _)  pattern if(else, _, _) with 1600=if.stmt#  pattern if(procedure, _, _)  pattern while(constant, _)  pattern if(variable, _, _)  pattern while(variable, _)  such that Calls*("variable", procedure)  pattern assign(assign, _) with call.procName=read.varName with 6700=stmt.stmt#  such that Next*(call, 20)  pattern assign(_, _)  pattern while(constant, _) with read.varName="read"  such that Next(call, 17) with stmt.stmt#=read.stmt#  such that Next*(_, call)  pattern if(_, _, _)  pattern while(assign, _)  such that Affects*(stmt, assign)  such that Calls(procedure, _) with "call"=read.varName  pattern assign(_, _) with print.stmt#=2300 with "procedure"=variable.varName  pattern while(_, _)  pattern while(variable, _) with read.varName=read.varName  pattern if(print, _, _)  pattern if(procedure, _, _)  pattern if(variable, _, _) with print.varName=variable.varName  pattern assign(variable, _"100+then"_)  pattern assign(if, _)  such that Follows*(_, if) with print.varName=procedure.procName  such that Next*(stmt, assign) with assign.stmt#=8900  pattern assign(variable, "4100-assign")  pattern while(constant, _)  such that Modifies(23, variable)  pattern if(_, _, _) with while.stmt#=900  pattern assign(then, _) with "while"=print.varName with call.stmt#=1600  pattern if(variable, _, _)  pattern if(_, _, _) with variable.varName="assign" with print.varName="if" with procedure.procName=variable.varName with print.stmt#=if.stmt# with call.procName="if" with "assign"=variable.varName  such that Follows(12, call)  pattern assign(variable, _) with call.stmt#=7000 with while.stmt#=print.stmt# with 4700=constant.value  such that Uses(read, _)  pattern while(call, _) with while.stmt#=stmt.stmt# with call.stmt#=if.stmt#  pattern while(variable, _) with stmt.stmt#=constant.value  such that Affects(_, assign) with "then"=procedure.procName with while.stmt#=5100  pattern while(_, _)  pattern if(_, _, _)  pattern while(procedure, _)  such that Follows(print, while) with stmt.stmt#=while.stmt# with procedure.procName="read"  pattern if(variable, _, _)  pattern assign(_, _)  such that Follows*(print, 11)  such that Parent*(2, while) with variable.varName="assign"  such that Calls(procedure, procedure) with 2300=while.stmt#  pattern if(_, _, _) with "call"=print.varName  pattern if(_, _, _)  pattern if(variable, _, _)  pattern assign(variable, _"8500-7200"_)  such that Affects(_, assign)  pattern while(else, _)  pattern if(if, _, _) with procedure.procName="call"  pattern while(_, _)  pattern assign(_, _"7700/5500"_)  pattern while(_, _)  pattern assign(procedure, _)  such that Calls("procedure", procedure)  such that Next(call, _)  pattern if(_, _, _) with if.stmt#=call.stmt# with variable.varName="print"  pattern while(variable, _)  pattern while(_, _)  pattern if(call, _, _) with assign.stmt#=9900  pattern assign(_, "9900*2400") with while.stmt#=assign.stmt#  pattern while(variable, _)  pattern while(then, _)  pattern assign(_, _)  pattern if(read, _, _)  pattern while(assign, _)  such that Affects(25, stmt) with "assign"=print.varName  pattern assign(read, "4200/4200") with variable.varName="variable"  such that Parent(7, if)  pattern if(variable, _, _)  pattern if(_, _, _)  such that Uses(15, variable)  pattern assign(_, _"500/4600"_)  pattern if(_, _, _)  such that Uses(read, "print") with "read"=call.procName  pattern if(variable, _, _) with call.procName="procedure" with "if"=variable.varName  pattern assign(_, _)  pattern while(variable, _)  such that Uses(stmt, variable) with variable.varName="print"  such that Calls*("read", procedure)  pattern while(variable, _)  pattern assign(variable, _"2800+300"_)  pattern assign(variable, "2200+variable")  pattern if(_, _, _)  pattern if(variable, _, _) with read.varName=print.varName  pattern assign(call, _"read/4200"_)  such that Follows(if, _)  pattern while(else, _)  pattern if(variable, _, _)  such that Uses(call, "variable")  pattern if(then, _, _)  pattern assign(_, _) with "variable"=read.varName with 4000=print.stmt#  pattern if(procedure, _, _)  such that Calls("if", procedure)  pattern if(_, _, _) with procedure.procName="procedure"  pattern while(_, _)  such that Uses(if, _)  such that Modifies(procedure, "while")  pattern if(variable, _, _) with stmt.stmt#=2100  such that Next(_, read)  pattern if(else, _, _)  such that Calls*("then", procedure)  such that Parent*(28, call) with if.stmt#=call.stmt# with print.varName=variable.varName  such that Affects(assign, _) with 1900=constant.value with procedure.procName="call"  such that Modifies(procedure, _) with read.stmt#=read.stmt#  pattern assign(constant, "2600*9200")  pattern while(variable, _) with if.stmt#=4700  such that Affects*(assign, _)  such that Parent*(call, 27)  pattern if(procedure, _, _) with "while"=read.varName  pattern assign(then, _"1600/5600"_)  pattern if(_, _, _) with "else"=call.procName  such that Modifies(procedure, variable)  such that Next(_, call)  pattern if(_, _, _)  pattern if(procedure, _, _)  such that Next*(read, _)  pattern assign(_, _)  pattern while(call, _)  pattern if(variable, _, _)  such that Calls(procedure, "while")  such that Follows*(_, stmt) with "else"=read.varName with "assign"=read.varName  such that Follows(while, print)  pattern if(variable, _, _)  such that Next*(call, _) with read.varName=read.varName  pattern while(_, _)  pattern while(assign, _)  pattern if(variable, _, _)  pattern assign(if, _"(6700*1200)*1100"_) with read.varName="call" with "call"=read.varName  such that Affects(_, assign)  pattern assign(variable, _"4000-5900"_) with "print"=procedure.procName  pattern assign(call, _"3900+3300"_)  such that Parent*(call, _)  such that Follows(print, _) with read.varName="assign" with call.procName=print.varName  pattern assign(variable, _"7500+7600"_)  pattern while(variable, _)  such that Next*(3, assign)  pattern assign(variable, _"9000-9800"_)  such that Next*(_, stmt)  such that Calls*("if", procedure) with call.procName=read.varName  such that Modifies(call, _) with constant.value=5400 with call.procName="constant"  pattern while(variable, _)  pattern while(constant, _)  pattern while(variable, _)  such that Parent(_, read) with while.stmt#=2300  such that Uses(9, variable)  pattern while(constant, _)  pattern assign(variable, _)  such that Uses(read, _)  such that Uses(assign, "call")  pattern assign(assign, _"9900*5500"_)  such that Modifies(15, variable)  such that Calls(procedure, procedure)  pattern assign(variable, "7000+4800") with call.procName=print.varName with stmt.stmt#=7800 with 4400=read.stmt# with stmt.stmt#=3300  such that Next*(_, assign)  such that Modifies(17, variable)  pattern while(if, _)  pattern while(_, _)  pattern if(_, _, _)  pattern if(variable, _, _)  pattern assign(assign, "9900-4200") with call.procName="variable"  pattern while(print, _)  pattern if(variable, _, _)  pattern if(_, _, _)  such that Uses(print, "call")  such that Calls(procedure, _)  such that Parent*(_, call)  pattern assign(assign, "else+8800") with while.stmt#=assign.stmt#  pattern if(_, _, _)  pattern while(variable, _)  such that Uses(stmt, _) with 600=stmt.stmt#  such that Calls*(procedure, procedure)  such that Follows*(_, read) with variable.varName="then"  such that Calls(procedure, procedure) with "constant"=read.varName  pattern assign(_, "7800*7400")  pattern assign(variable, "5100/8100")  such that Affects*(stmt, stmt)  such that Parent(call, _) with while.stmt#=5600  pattern if(_, _, _) with procedure.procName=procedure.procName with while.stmt#=2700  such that Modifies(while, "else")  such that Calls(procedure, _)  pattern assign(_, _)  pattern assign(_, _"2400/8600"_)  pattern while(procedure, _)  pattern if(procedure, _, _) with call.procName="procedure"  such that Next(stmt, 12)  pattern assign(variable, _"900+1100"_)  pattern while(_, _) with call.procName=read.varName with "constant"=read.varName  pattern if(_, _, _) with constant.value=stmt.stmt#  such that Parent*(call, 5)  pattern assign(_, _"4300+800"_)  pattern assign(variable, _"2500-1900"_)  such that Uses(procedure, variable)  pattern while(variable, _) with print.varName="then"  pattern if(variable, _, _) with assign.stmt#=if.stmt# with 600=print.stmt#  pattern while(variable, _)  such that Follows*(_, read)  pattern while(_, _)  such that Follows*(3, print)  such that Affects(_, stmt)  pattern assign(then, "6000-2300") with 2500=call.stmt#  such that Follows(while, _)  pattern while(assign, _)  pattern while(_, _) with read.stmt#=3300  pattern while(_, _)  pattern while(variable, _)  pattern while(procedure, _)  pattern if(variable, _, _)  pattern if(print, _, _) with print.varName=read.varName  such that Calls*(procedure, "constant")  pattern if(_, _, _) with 9700=print.stmt# with assign.stmt#=6300  such that Next*(13, while)  pattern if(variable, _, _)  pattern while(_, _)  pattern while(variable, _) with 2300=print.stmt# with stmt.stmt#=5800  such that Uses(stmt, variable) with stmt.stmt#=3800  pattern while(variable, _) with variable.varName=print.varName  pattern while(_, _) with 9400=print.stmt#  pattern while(then, _)  pattern if(_, _, _) with while.stmt#=stmt.stmt#  pattern while(_, _)  pattern if(variable, _, _)  pattern while(variable, _)  pattern assign(_, "6900*read")  pattern assign(_, "2100+then") with 9900=if.stmt#  pattern while(_, _) with call.procName=read.varName  pattern assign(print, _"2200+6300"_)  such that Next(while, 26) with print.stmt#=assign.stmt#  pattern while(assign, _)  such that Calls(procedure, "variable")  pattern if(call, _, _) with "constant"=variable.varName  such that Calls*(procedure, procedure)  such that Affects(15, assign)  pattern assign(print, "3400+6500")  pattern while(then, _)  such that Affects(assign, stmt)  pattern assign(variable, _)  such that Next*(read, 6)  such that Affects*(stmt, assign)  pattern assign(_, "3900/4400")  such that Next*(call, while)  pattern assign(variable, _)  such that Calls*(procedure, "if")  such that Uses(while, variable) with 5700=stmt.stmt#  pattern assign(variable, "2700/2700")  pattern while(else, _) with procedure.procName="call"  pattern while(variable, _) with read.varName="if"  pattern assign(_, "8600-4600")  such that Follows*(if, 28)  such that Affects(_, assign)  such that Uses(14, variable) with variable.varName="while" with 4200=read.stmt# with if.stmt#=stmt.stmt# with print.varName=variable.varName  such that Calls*(procedure, procedure) with call.procName=procedure.procName with call.stmt#=2500  pattern if(read, _, _)  pattern while(variable, _)  pattern while(variable, _)  pattern assign(_, "7000+1600") with "procedure"=procedure.procName  pattern while(constant, _)  such that Affects*(stmt, _)  such that Affects*(_, stmt)  pattern while(_, _)  such that Modifies(read, "constant")  such that Follows*(stmt, call)  such that Next*(_, read)  pattern assign(read, _)  pattern if(variable, _, _) with call.procName=variable.varName  pattern assign(_, "1500/3600") with constant.value=if.stmt#  pattern while(variable, _)  such that Calls(_, procedure)  such that Modifies(3, variable) with read.varName="assign" with call.stmt#=8800  pattern assign(_, _) with read.stmt#=constant.value  pattern assign(_, "6400/9200")  pattern while(_, _)  pattern if(else, _, _)  pattern if(_, _, _)  pattern if(_, _, _) with "variable"=procedure.procName with procedure.procName="call"  pattern while(variable, _)  such that Calls*(_, procedure)  such that Parent(stmt, 16)  pattern assign(else, _)  pattern while(_, _)  pattern if(_, _, _)  pattern while(variable, _)  pattern while(variable, _)  pattern while(_, _)  such that Next(stmt, _)  such that Calls*(procedure, _) with constant.value=8600  pattern assign(_, _"if+2000"_)  such that Uses(stmt, _) with variable.varName=call.procName  pattern while(_, _)  pattern while(if, _)  such that Parent(11, if)  pattern if(procedure, _, _) with 3800=while.stmt#  such that Affects(assign, _)  such that Next*(22, stmt) with 300=call.stmt#  such that Parent*(while, _)  such that Next(read, if)  pattern while(constant, _) with print.varName=procedure.procName with "while"=call.procName  such that Affects(16, assign)  such that Uses(13, variable) with stmt.stmt#=9200 with procedure.procName=variable.varName  pattern assign(variable, _)  pattern assign(variable, "5200-8900") with "read"=print.varName  such that Calls("assign", procedure)  pattern if(variable, _, _) with print.varName="variable" with read.stmt#=assign.stmt#  pattern if(_, _, _)  pattern if(if, _, _)  pattern if(_, _, _) with "else"=print.varName  such that Calls(procedure, "assign")  pattern assign(_, "6200/1100")  such that Parent*(print, _) with 6400=read.stmt#  such that Calls("assign", procedure) with "print"=call.procName  such that Calls("print", procedure) with 1300=while.stmt# with read.stmt#=print.stmt#  such that Parent(call, while)  such that Modifies(read, _) with procedure.procName=variable.varName with variable.varName=call.procName  pattern if(variable, _, _) 

5000
19 - Query 19
variable variable; assign assign; call call; constant constant; print print; stmt stmt; read read; while while; if if; procedure procedure; 
Select <variable, assign, call, constant, print, stmt, read, while, if, procedure> with variable.varName=procedure.procName  such that Modifies(stmt, "call")  pattern while(_, _) with 9200=stmt.stmt#  such that Uses(procedure, _)  pattern if(if, _, _) with procedure.procName=read.varName  such that Uses(8, variable)  pattern while(constant, _)  pattern if(variable, _, _)  such that Modifies(assign, variable) with call.procName=variable.varName  such that Affects*(assign, stmt) with variable.varName="if"  pattern assign(_, "7400+2500")  pattern assign(variable, _) with 2100=constant.value  pattern while(variable, _)  pattern assign(else, "5100+6600") with variable.varName="else" with print.varName=procedure.procName  such that Parent*(_, print) with 7300=print.stmt#  pattern if(variable, _, _)  pattern while(variable, _)  pattern assign(_, _)  such that Follows(28, if)  pattern while(if, _) with "while"=procedure.procName with 7900=if.stmt#  pattern if(_, _, _)  pattern assign(variable, _"5800/2000"_) with "call"=call.procName  pattern if(_, _, _) with "while"=procedure.procName  pattern assign(then, _) with "if"=call.procName with 8500=print.stmt# with read.varName=print.varName  pattern if(_, _, _)  pattern if(constant, _, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern assign(variable, _) with read.varName="while"  pattern while(_, _) with "else"=call.procName with assign.stmt#=constant.value  such that Calls*("read", procedure) with while.stmt#=3100 with "constant"=print.varName  pattern if(_, _, _)  pattern while(variable, _)  pattern while(variable, _)  pattern if(while, _, _) with if.stmt#=1400 with constant.value=3700  such that Follows(_, if)  pattern if(then, _, _)  such that Calls(procedure, procedure) with read.stmt#=read.stmt# with "print"=procedure.procName  pattern if(print, _, _) with "constant"=call.procName  pattern if(variable, _, _)  such that Uses(6, variable) with call.stmt#=stmt.stmt# with 500=call.stmt#  pattern assign(variable, "3000*variable")  pattern if(if, _, _)  pattern while(_, _) with stmt.stmt#=600  pattern assign(if, _) with read.stmt#=8500 with print.stmt#=print.stmt#  pattern assign(variable, _) with constant.value=8500  such that Calls*(_, procedure)  such that Follows*(6, if)  such that Parent*(3, read)  pattern while(_, _)  pattern assign(read, _"6700+1600"_)  such that Uses(read, _) with procedure.procName=print.varName  such that Affects(stmt, assign)  pattern while(variable, _) with print.varName=procedure.procName  pattern while(_, _)  pattern while(variable, _)  pattern assign(_, _"200*7900"_)  such that Parent*(read, read)  pattern assign(_, _)  such that Next(assign, 15) with stmt.stmt#=read.stmt#  such that Affects(assign, 5)  pattern if(variable, _, _)  such that Modifies(read, variable)  pattern while(variable, _)  pattern while(variable, _)  pattern assign(_, _"8100*6500"_)  pattern if(call, _, _)  pattern while(variable, _)  pattern assign(_, _"8500+5600"_)  such that Next(19, read) with 6400=constant.value with read.stmt#=if.stmt# with read.varName="read"  pattern while(variable, _)  pattern assign(_, _"7200-5800"_)  pattern while(variable, _)  pattern assign(while, "(9500/while)/7500")  pattern while(_, _) with read.varName="constant"  pattern if(constant, _, _) with read.stmt#=6100  such that Calls*(procedure, _)  pattern if(_, _, _) with 6400=if.stmt#  pattern while(variable, _) with "then"=variable.varName with read.stmt#=constant.value  pattern if(constant, _, _)  pattern if(print, _, _)  such that Uses(26, variable)  pattern if(_, _, _)  pattern assign(variable, _) with "else"=variable.varName  pattern while(variable, _)  such that Follows(_, stmt)  pattern if(variable, _, _)  pattern assign(_, _)  pattern if(variable, _, _)  such that Follows*(print, 3)  such that Uses(while, _)  such that Follows*(_, while)  pattern assign(constant, "(7900+9700)/3100")  pattern while(constant, _)  such that Calls(_, procedure)  pattern assign(_, "1900+4400")  such that Next*(22, if) with stmt.stmt#=read.stmt#  pattern if(variable, _, _) with "assign"=variable.varName  such that Modifies(procedure, _)  such that Follows*(stmt, 21)  such that Follows(18, read) with stmt.stmt#=while.stmt# with print.varName=variable.varName  such that Affects*(5, stmt)  such that Follows*(stmt, _)  such that Uses(assign, _) with procedure.procName="print"  such that Uses(if, _) with stmt.stmt#=300  such that Calls*("while", procedure)  pattern assign(variable, _)  such that Modifies(while, _) with 9600=print.stmt#  pattern if(variable, _, _)  such that Next(while, call) with assign.stmt#=call.stmt#  such that Parent*(read, print) with print.varName="while"  such that Calls*("call", procedure) with read.stmt#=while.stmt# with "if"=print.varName with procedure.procName="assign" with if.stmt#=4200  pattern while(then, _)  such that Modifies(if, _)  pattern while(variable, _)  such that Parent(assign, 15)  such that Affects(21, stmt)  pattern if(while, _, _) with "while"=variable.varName  pattern assign(variable, "(100-300)+3600") with variable.varName=call.procName  pattern assign(variable, _"7600-else"_)  such that Next(_, if) with 7400=print.stmt# with if.stmt#=9800 with read.stmt#=call.stmt# with 3000=print.stmt#  pattern if(constant, _, _)  pattern assign(_, _"1700-print"_)  such that Follows(_, assign)  pattern assign(variable, "500-4400")  pattern if(variable, _, _) with if.stmt#=assign.stmt#  such that Calls*("then", procedure)  pattern assign(_, "7300+3200")  such that Uses(if, "else")  pattern while(variable, _)  pattern while(_, _) with variable.varName=procedure.procName  such that Follows*(if, stmt)  pattern if(if, _, _)  pattern while(_, _)  such that Next*(read, _)  pattern while(then, _)  pattern if(_, _, _) with stmt.stmt#=read.stmt#  pattern assign(_, _"(else*5000)/1900"_)  pattern while(_, _) with 500=read.stmt#  such that Next(if, _) with "variable"=procedure.procName with 4100=assign.stmt#  pattern assign(_, "2000/1900")  pattern assign(variable, "9700*call")  pattern while(_, _) with while.stmt#=9200 with constant.value=2100  pattern assign(constant, _) with 7200=call.stmt#  pattern assign(variable, _) with "variable"=variable.varName with call.procName=procedure.procName with "then"=print.varName  such that Modifies(24, variable) with print.varName=print.varName  pattern while(else, _) with 8300=if.stmt# with print.stmt#=constant.value with print.varName=read.varName  pattern assign(_, _"4100*6900"_) with "then"=read.varName  pattern assign(_, _"(call-4600)+else"_) with 400=read.stmt# with 7800=call.stmt#  such that Affects*(stmt, 25) with 1200=if.stmt#  such that Calls(_, procedure) with print.stmt#=2700  such that Parent*(while, 24)  such that Modifies(print, _) with procedure.procName=variable.varName  pattern assign(call, _)  pattern while(_, _)  pattern assign(_, "7700*1700")  such that Parent(while, _)  pattern while(then, _)  such that Affects(assign, _) with stmt.stmt#=3600  pattern while(assign, _)  such that Next(call, 16)  such that Affects*(assign, _)  pattern while(_, _)  pattern assign(else, _"3300/2800"_)  pattern if(while, _, _)  such that Calls*(procedure, procedure)  such that Follows(print, if)  pattern assign(print, "3900/8300")  such that Affects(17, stmt)  pattern assign(while, _"1800*2700"_)  such that Follows(call, _)  pattern assign(_, _)  pattern while(read, _) with procedure.procName="procedure"  such that Follows(18, while)  pattern assign(_, "3300+3800")  pattern assign(while, "4200+8500")  such that Affects*(stmt, assign)  pattern if(_, _, _) with call.procName="while"  pattern assign(variable, _"3900+6400"_) with procedure.procName="print"  pattern if(variable, _, _) with read.varName=call.procName  such that Calls*(procedure, procedure)  pattern assign(while, _"2200+400"_)  such that Next*(while, 14) with constant.value=7600 with read.varName="assign"  pattern if(variable, _, _) with "print"=call.procName  such that Uses(if, variable)  pattern if(variable, _, _)  such that Next(print, print) with "call"=read.varName with read.varName=read.varName with 3700=while.stmt#  pattern if(variable, _, _)  such that Follows(_, read)  pattern assign(_, _)  such that Calls(_, procedure) with call.procName="call" with print.varName=variable.varName with read.stmt#=2100  such that Next(stmt, if) with "call"=call.procName  pattern assign(_, _) with "call"=call.procName  pattern assign(_, _)  pattern if(call, _, _)  pattern while(else, _) with 800=while.stmt#  such that Follows(call, 2) with stmt.stmt#=7700  pattern assign(variable, "4900*2100")  such that Affects*(_, assign)  pattern while(_, _) with "if"=print.varName  pattern assign(variable, _"7000/7900"_)  such that Calls*(procedure, procedure)  such that Follows*(call, print)  pattern if(constant, _, _)  pattern assign(while, _) with "read"=print.varName  pattern assign(_, "5600*9100")  pattern while(variable, _)  pattern while(variable, _)  pattern if(_, _, _) with stmt.stmt#=constant.value  pattern assign(variable, "2800/100") with "then"=procedure.procName with read.varName="assign"  pattern assign(variable, _) with read.varName=variable.varName  pattern assign(variable, _) with procedure.procName=read.varName  such that Uses(while, _) with 2500=stmt.stmt# with call.procName=variable.varName  such that Modifies(stmt, "call") with "constant"=procedure.procName with 3500=print.stmt#  such that Parent*(stmt, _)  such that Modifies(1, variable) with read.stmt#=assign.stmt#  such that Next*(print, read)  pattern assign(then, _"7800*5400"_)  such that Uses(while, variable) with stmt.stmt#=5500  such that Follows*(call, _)  pattern assign(_, _"6900/read"_) with read.varName="call" with "read"=print.varName with variable.varName="procedure"  pattern assign(variable, "4700*call")  pattern while(_, _)  such that Affects*(10, assign) with print.stmt#=if.stmt#  such that Parent*(call, _)  such that Calls(procedure, "else")  pattern if(_, _, _)  pattern while(variable, _) with print.varName="else"  such that Modifies(assign, _)  such that Uses(call, "constant") with read.stmt#=1700 with print.stmt#=1700  pattern if(constant, _, _)  pattern while(variable, _)  pattern if(else, _, _)  pattern if(print, _, _)  pattern assign(variable, _"4900*400"_)  such that Calls*("constant", procedure)  pattern assign(_, "2000/2700")  pattern while(_, _) with if.stmt#=while.stmt#  pattern while(variable, _)  pattern while(_, _) with constant.value=read.stmt#  pattern while(variable, _)  such that Follows(call, 4)  pattern if(_, _, _)  pattern assign(assign, _)  pattern assign(print, "100+8100") with "then"=procedure.procName  pattern if(_, _, _) with call.procName="constant"  such that Calls*(procedure, _) with print.varName="assign"  such that Follows*(while, _)  such that Affects*(_, assign)  such that Affects(assign, 18) with 6500=while.stmt#  such that Modifies(18, variable)  pattern while(_, _) with print.varName="procedure" with 2300=call.stmt# with call.procName=call.procName with 700=if.stmt# with 8700=read.stmt#  such that Follows*(assign, print)  pattern assign(variable, _)  such that Affects(stmt, _)  pattern if(_, _, _)  such that Affects(_, assign) with read.varName=print.varName  such that Calls(procedure, "constant")  pattern assign(_, _"8400/8400"_)  such that Parent*(read, _) with print.varName=procedure.procName  such that Calls*(procedure, _)  such that Calls(procedure, procedure)  pattern while(variable, _)  such that Modifies(23, variable)  such that Calls(_, procedure)  pattern assign(variable, _"while/4100"_)  pattern if(_, _, _)  pattern if(read, _, _)  pattern if(variable, _, _)  pattern assign(variable, _)  pattern assign(_, _)  such that Follows*(_, assign)  such that Affects(1, assign)  pattern while(_, _)  such that Uses(print, "read")  such that Affects*(assign, _)  pattern while(read, _)  such that Parent(assign, 8)  pattern assign(if, _)  pattern while(variable, _)  pattern if(read, _, _)  such that Follows(_, call)  such that Affects(assign, 3)  pattern if(while, _, _)  such that Affects*(stmt, 14)  such that Calls(procedure, "if") with "if"=procedure.procName  pattern while(_, _) with "variable"=print.varName  pattern if(call, _, _)  such that Modifies(stmt, _)  such that Affects(assign, _) with "assign"=call.procName  pattern while(print, _)  such that Follows*(call, 5)  pattern assign(call, "1200-7100")  pattern while(_, _)  pattern assign(assign, _"3100-8300"_) with 4700=read.stmt# with "call"=call.procName  such that Parent*(print, 20)  such that Calls*("call", procedure) with while.stmt#=4200  pattern assign(if, _"print+assign"_)  pattern while(call, _)  pattern if(read, _, _)  such that Affects(assign, _) with call.stmt#=stmt.stmt#  such that Parent(_, read)  such that Affects*(stmt, _) with 6000=stmt.stmt#  pattern assign(else, _"read+6600"_)  such that Next*(while, assign)  such that Calls*(procedure, "call")  pattern while(while, _) with print.varName="call" with "constant"=read.varName  pattern if(_, _, _) with call.procName=procedure.procName  pattern if(assign, _, _)  such that Modifies(assign, "variable")  pattern if(variable, _, _)  pattern assign(variable, _) with variable.varName="assign"  such that Affects(stmt, stmt)  pattern assign(variable, "else*print")  pattern if(variable, _, _)  such that Uses(if, _)  pattern while(variable, _) with "call"=call.procName  pattern assign(variable, _) with read.varName="constant" with read.varName="print"  such that Next(24, while)  pattern assign(_, _)  pattern if(then, _, _)  pattern while(constant, _) with variable.varName=procedure.procName  pattern if(procedure, _, _)  pattern while(_, _)  such that Calls*(procedure, procedure) with print.varName=variable.varName with stmt.stmt#=while.stmt#  pattern if(assign, _, _)  pattern while(_, _)  pattern while(_, _)  pattern assign(_, _)  pattern assign(_, "9700+else")  such that Uses(13, variable) with print.varName="print" with read.stmt#=1300  pattern if(variable, _, _) with call.procName="variable"  pattern while(call, _)  pattern if(variable, _, _)  pattern if(call, _, _)  such that Parent*(26, print)  pattern if(_, _, _) with call.procName="assign"  pattern assign(assign, _) with "assign"=variable.varName with print.stmt#=constant.value with "if"=procedure.procName with read.varName="constant"  such that Parent*(_, assign) 

5000
20 - Query 20
assign assign; variable variable; print print; constant constant; stmt stmt; read read; procedure procedure; if if; while while; call call; 
Select <assign, variable, print, constant, stmt, read, procedure, if, while, call> with "call"=read.varName with call.stmt#=if.stmt#  pattern assign(_, _"4200+1600"_)  such that Follows*(while, 12)  such that Modifies(while, variable)  pattern assign(constant, _"9500*5100"_)  pattern assign(variable, "5100*2300") with 6000=stmt.stmt#  pattern if(variable, _, _)  pattern if(_, _, _) with variable.varName="procedure" with 8600=print.stmt#  pattern assign(_, _)  pattern if(_, _, _)  such that Next*(_, read) with "procedure"=read.varName  such that Parent*(if, _)  pattern assign(then, _)  pattern assign(_, "call+6500")  pattern while(while, _) with "if"=read.varName  pattern if(_, _, _)  pattern if(constant, _, _)  such that Affects(stmt, assign)  such that Next*(1, read)  such that Next*(5, if)  pattern if(_, _, _)  such that Next*(read, 13)  pattern if(variable, _, _)  pattern assign(_, "6700/5000")  such that Parent*(stmt, print)  such that Modifies(13, variable)  pattern assign(_, _)  such that Affects*(stmt, _)  pattern while(if, _)  pattern while(_, _) with "variable"=procedure.procName  pattern if(read, _, _)  pattern assign(if, _)  such that Uses(read, "call")  pattern if(_, _, _)  pattern assign(variable, _"1000*call"_) with 1400=assign.stmt#  pattern while(_, _)  such that Parent(if, call) with "if"=read.varName  pattern if(else, _, _) with read.stmt#=600  pattern while(variable, _)  pattern assign(variable, _) with "variable"=procedure.procName with print.stmt#=while.stmt# with call.procName=print.varName  pattern while(_, _)  such that Next*(stmt, _)  pattern if(_, _, _) with print.stmt#=assign.stmt#  pattern while(_, _) with while.stmt#=5700  such that Uses(5, variable) with while.stmt#=print.stmt# with "procedure"=read.varName  pattern if(_, _, _)  pattern if(assign, _, _)  pattern assign(variable, _)  pattern while(constant, _) with "assign"=variable.varName with if.stmt#=2100  pattern assign(_, "5900*6600")  such that Affects*(_, assign)  pattern assign(while, _)  such that Next*(assign, _)  pattern if(variable, _, _) with "else"=variable.varName  pattern if(else, _, _)  such that Modifies(7, variable)  pattern if(_, _, _)  pattern while(variable, _)  pattern assign(_, _"2400-5900"_)  such that Modifies(stmt, _)  pattern if(print, _, _)  pattern while(then, _)  pattern if(then, _, _)  such that Affects(stmt, 1) with constant.value=read.stmt#  pattern if(variable, _, _) with "while"=procedure.procName  pattern assign(_, "(900+call)/6800")  pattern if(variable, _, _)  pattern if(print, _, _)  such that Affects(assign, stmt)  pattern if(read, _, _)  such that Parent*(while, stmt) with read.varName="else" with 7600=read.stmt#  pattern assign(variable, "6200-1000")  such that Follows(read, _)  pattern assign(_, _"1700*7600"_)  such that Modifies(14, variable)  pattern if(procedure, _, _)  pattern assign(_, _)  pattern while(else, _)  pattern assign(_, _)  pattern while(call, _)  pattern while(_, _)  such that Follows(read, _)  pattern if(else, _, _)  pattern if(_, _, _)  pattern assign(constant, _"3300*2100"_)  pattern assign(variable, _)  such that Follows(assign, _)  pattern assign(variable, _) with read.varName=call.procName  such that Parent(call, 29) with read.stmt#=8600  pattern if(print, _, _)  such that Next*(13, stmt) with print.stmt#=read.stmt# with call.procName="variable"  pattern if(then, _, _) with call.procName=read.varName  pattern while(variable, _)  such that Next(28, assign) with constant.value=1600  such that Calls(procedure, procedure)  such that Next*(stmt, _) with procedure.procName="print"  pattern if(then, _, _)  such that Next*(read, 11)  such that Parent(print, _)  pattern assign(assign, _"(9500-600)/7400"_)  pattern if(_, _, _)  such that Uses(call, variable)  such that Affects(assign, stmt)  pattern while(variable, _) with if.stmt#=6600 with if.stmt#=6000 with procedure.procName=variable.varName with call.procName="while" with "constant"=variable.varName with 1800=read.stmt#  pattern assign(print, _)  pattern while(_, _) with "assign"=print.varName  pattern assign(variable, _"2700+8400"_)  pattern while(while, _)  pattern if(read, _, _)  pattern if(variable, _, _)  pattern while(variable, _) with read.varName="procedure"  pattern while(_, _)  such that Next(_, assign)  pattern if(_, _, _)  pattern while(procedure, _) with variable.varName="assign" with call.procName=call.procName with procedure.procName="if"  such that Affects(assign, assign)  pattern while(_, _)  such that Next*(assign, 22)  pattern assign(read, _)  pattern assign(_, "8200/print")  pattern if(variable, _, _)  pattern assign(read, _"3100+8300"_)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern if(variable, _, _) with print.stmt#=3300  such that Next(14, assign)  pattern assign(_, "7600/7000")  pattern assign(variable, _"200*5500"_)  pattern if(variable, _, _)  pattern if(variable, _, _)  such that Affects*(assign, _)  such that Next*(8, if) with "read"=print.varName  pattern assign(then, "2400+4000")  pattern while(variable, _)  pattern if(variable, _, _)  such that Next(6, read)  pattern if(_, _, _) with read.varName="procedure" with "else"=procedure.procName  such that Next(print, if)  pattern while(while, _) with 6700=stmt.stmt# with read.varName="else" with 8600=stmt.stmt#  pattern while(_, _) with print.varName=call.procName with read.stmt#=800 with "assign"=read.varName with variable.varName=call.procName  such that Affects*(27, stmt)  pattern assign(assign, "1100/7600")  pattern while(_, _)  pattern assign(variable, _"print/7500"_)  such that Next*(_, read)  such that Parent(_, stmt) with print.stmt#=2000 with assign.stmt#=700  pattern if(variable, _, _)  pattern assign(variable, _)  such that Next(call, while)  pattern while(variable, _) with "else"=read.varName  such that Next(read, read) with call.procName=print.varName with "variable"=procedure.procName with read.varName="then"  pattern assign(call, "5600*4100")  pattern if(_, _, _)  pattern while(_, _)  such that Affects*(assign, _)  such that Calls("read", procedure) with procedure.procName="else" with print.stmt#=7700  pattern while(then, _)  such that Calls*(_, procedure)  pattern while(variable, _) with 4700=if.stmt#  pattern if(_, _, _) with if.stmt#=1600  pattern assign(_, "3400-600")  pattern while(_, _) with call.procName=call.procName  such that Follows*(stmt, read)  pattern assign(variable, _)  pattern assign(_, _) with 2000=constant.value with if.stmt#=call.stmt# with "else"=procedure.procName  pattern if(variable, _, _) with "call"=procedure.procName with 4100=if.stmt#  pattern if(variable, _, _)  such that Calls(_, procedure)  pattern assign(constant, "(100*2800)-7800") with call.procName=procedure.procName with "read"=procedure.procName  such that Modifies(23, variable)  pattern if(variable, _, _)  pattern if(_, _, _)  such that Affects(assign, assign)  such that Next(27, call)  such that Modifies(stmt, variable)  pattern assign(variable, "4000/1300")  pattern while(_, _)  pattern while(_, _)  pattern assign(_, "500*500") with "read"=call.procName  pattern assign(assign, _) with print.varName=print.varName with print.varName=variable.varName  pattern if(assign, _, _)  such that Uses(call, variable) with if.stmt#=4500 with call.procName="else"  such that Parent(stmt, _)  such that Modifies(call, variable)  such that Follows(stmt, _)  pattern while(_, _)  such that Calls(procedure, "constant") with call.stmt#=constant.value  pattern while(variable, _)  pattern while(call, _)  pattern while(then, _)  pattern if(print, _, _)  pattern if(variable, _, _) with "while"=read.varName  such that Next*(stmt, 22)  such that Next(24, assign)  pattern while(variable, _)  pattern assign(_, "print*1300")  such that Follows*(print, 5) with variable.varName="if"  such that Parent(_, read)  pattern if(procedure, _, _)  such that Follows*(assign, _)  pattern while(_, _)  pattern if(assign, _, _)  such that Parent(assign, 8) with read.varName=read.varName  pattern while(_, _)  such that Next*(2, while)  such that Affects(stmt, 9)  pattern while(_, _) with stmt.stmt#=7000  such that Follows(12, if)  such that Affects*(_, stmt) with procedure.procName=call.procName with read.varName=call.procName  such that Calls(procedure, _)  such that Follows*(_, read) with print.stmt#=6300  such that Calls(_, procedure)  pattern assign(_, "2400+6400")  pattern if(print, _, _)  such that Uses(assign, "read")  pattern while(variable, _)  pattern while(variable, _)  pattern assign(_, "while*1500") with call.stmt#=4000  pattern while(then, _)  pattern assign(_, _) with while.stmt#=1700  pattern assign(variable, "1800*1800")  pattern while(_, _) with print.varName="if"  such that Modifies(print, variable)  pattern while(constant, _) with variable.varName="assign" with "else"=procedure.procName  such that Next(assign, _) with print.varName=procedure.procName  such that Modifies(call, "call")  such that Parent(if, _)  such that Next(while, while) with procedure.procName="variable"  such that Next*(while, 14)  pattern assign(print, _)  pattern while(_, _)  pattern assign(_, "6800/1700") with 2500=constant.value  such that Uses(assign, variable)  pattern while(_, _)  pattern if(_, _, _) with constant.value=8300 with call.procName="constant"  such that Affects(assign, 25)  such that Parent*(assign, while)  pattern while(variable, _) with read.varName="then"  such that Uses(while, _)  pattern if(_, _, _)  such that Parent(call, 7)  pattern assign(variable, "1400-5700")  pattern while(variable, _) with print.varName="print"  pattern assign(_, _"2100+700"_)  such that Follows*(stmt, 15)  pattern if(_, _, _) with while.stmt#=if.stmt#  pattern assign(_, _)  pattern while(call, _)  pattern if(_, _, _)  pattern assign(_, "assign-6800")  pattern while(then, _)  such that Modifies(4, variable)  such that Modifies(procedure, "read") with read.stmt#=print.stmt#  such that Calls*(_, procedure)  pattern assign(_, "7500+5800")  pattern assign(_, _"8200-7100"_) with call.stmt#=read.stmt#  pattern assign(variable, "7100/3700") with call.procName="read"  such that Calls(procedure, _)  such that Next(if, 17)  such that Next(print, _)  pattern assign(call, _) with "print"=procedure.procName  pattern while(_, _)  pattern while(variable, _) with "variable"=procedure.procName  such that Next(print, _) with 4600=constant.value  such that Follows(call, assign)  such that Calls(procedure, procedure) with 7700=constant.value with 1900=stmt.stmt#  pattern if(assign, _, _)  such that Calls(procedure, "call")  pattern if(variable, _, _) with "while"=print.varName  pattern while(variable, _) with call.procName="variable"  pattern if(variable, _, _)  pattern while(_, _)  such that Next(_, assign)  pattern while(if, _)  such that Parent(call, assign) with assign.stmt#=while.stmt#  pattern assign(variable, _"(700+9700)*8900"_)  pattern while(variable, _)  pattern if(variable, _, _)  pattern while(read, _)  pattern if(_, _, _) with 6100=assign.stmt#  pattern if(variable, _, _)  pattern while(variable, _) with call.procName="assign" with 6400=call.stmt#  pattern while(variable, _)  pattern assign(constant, _"3200*2300"_)  pattern while(procedure, _) with read.varName="assign" with stmt.stmt#=2800  pattern assign(variable, _)  pattern assign(variable, _)  pattern if(assign, _, _)  pattern if(variable, _, _)  such that Affects(stmt, 5)  pattern while(variable, _)  pattern if(call, _, _) with stmt.stmt#=2800  pattern if(while, _, _)  pattern if(assign, _, _)  pattern if(variable, _, _)  pattern while(read, _) with print.varName=call.procName with procedure.procName="procedure"  such that Uses(if, _)  pattern assign(_, _"2700-2800"_) with read.varName="constant" with print.varName=variable.varName  such that Next*(_, print)  pattern if(variable, _, _)  pattern if(if, _, _) with constant.value=constant.value with 8400=read.stmt# with "then"=read.varName  pattern while(while, _)  pattern assign(variable, _"5600*1700"_) with 9300=if.stmt#  pattern assign(variable, "9600*600") with "if"=print.varName  pattern while(_, _)  pattern assign(_, _"if-8200"_)  pattern while(variable, _) with while.stmt#=while.stmt#  such that Follows*(stmt, _)  pattern assign(variable, _)  such that Next(while, while) with "assign"=variable.varName  such that Next*(while, if)  such that Modifies(9, variable)  pattern while(variable, _)  such that Next*(while, if) with variable.varName=print.varName  pattern assign(print, _"6100*9400"_)  such that Affects*(assign, assign) with read.varName=read.varName  such that Affects(stmt, 25)  pattern assign(_, _"3000/8100"_) with "print"=read.varName  such that Parent(_, call)  such that Follows*(12, print)  such that Parent*(read, 3)  pattern if(variable, _, _)  pattern if(_, _, _) with 4900=constant.value  pattern assign(_, "read/2600") with "call"=print.varName  pattern assign(variable, _"1000-7400"_)  such that Follows(call, _)  pattern assign(if, _"4300+else"_)  such that Next(assign, stmt)  such that Follows(if, _)  pattern assign(variable, _)  pattern while(if, _)  pattern assign(_, _"6200*800"_)  pattern assign(variable, _"3600*4400"_)  pattern if(then, _, _)  pattern if(variable, _, _)  such that Affects(stmt, assign)  such that Affects*(assign, stmt) with read.stmt#=3800  pattern if(_, _, _)  such that Parent(assign, call)  such that Follows*(call, _)  such that Follows(print, while)  pattern while(_, _) with 9300=stmt.stmt#  pattern assign(variable, "(2300/3600)*9100")  pattern assign(variable, _"800-9900"_)  such that Follows*(stmt, 10) with call.stmt#=1900  pattern while(else, _) with constant.value=300  pattern while(variable, _) with "call"=procedure.procName  pattern if(variable, _, _)  pattern while(_, _)  pattern if(variable, _, _) with procedure.procName=print.varName  pattern if(then, _, _)  pattern while(read, _)  pattern if(_, _, _) with stmt.stmt#=4600  such that Calls*("call", procedure)  such that Affects*(18, stmt)  pattern while(_, _) with procedure.procName="then"  pattern assign(variable, "600-1100")  pattern assign(print, "5500*6900")  pattern if(variable, _, _) with procedure.procName="variable" with print.stmt#=read.stmt# with 8900=print.stmt# 

5000
21 - Query 21
variable variable; assign assign; constant constant; print print; stmt stmt; read read; procedure procedure; while while; if if; call call; 
Select <variable, assign, constant, print, stmt, read, procedure, while, if, call>  such that Calls(procedure, _)  pattern assign(_, "if*while")  pattern while(read, _) with "variable"=procedure.procName with variable.varName="call"  pattern while(while, _)  such that Follows*(assign, _) with call.stmt#=500  pattern if(procedure, _, _)  pattern assign(assign, _)  such that Next(15, read) with 2300=assign.stmt#  pattern if(_, _, _)  pattern while(_, _)  pattern assign(_, "2600/6000")  pattern if(variable, _, _)  pattern if(_, _, _)  pattern assign(_, "900+2100") with read.varName=read.varName with call.stmt#=constant.value  such that Calls*(procedure, procedure)  such that Affects*(7, stmt)  pattern while(then, _)  pattern assign(variable, _"3800-2100"_)  such that Parent(10, if)  pattern if(while, _, _) with call.procName=variable.varName with variable.varName=print.varName with stmt.stmt#=7500  pattern assign(print, _)  pattern if(read, _, _)  pattern assign(_, _)  pattern while(read, _) with call.procName=call.procName  pattern assign(_, _)  pattern assign(_, _"4900*8000"_)  such that Affects(assign, _)  pattern assign(_, _"constant/then"_)  such that Uses(while, variable) with variable.varName="if"  pattern assign(variable, _) with constant.value=stmt.stmt#  pattern if(_, _, _) with constant.value=4500  pattern if(constant, _, _)  such that Affects*(stmt, assign) with 2900=call.stmt#  pattern while(_, _) with constant.value=700  pattern if(_, _, _)  pattern if(variable, _, _)  pattern assign(if, _"(4700-8800)+assign"_)  such that Calls*(procedure, "constant")  such that Follows(15, assign) with assign.stmt#=7700  pattern assign(if, _"print-4200"_) with variable.varName="then" with "variable"=print.varName with read.varName="assign"  pattern while(_, _) with read.stmt#=while.stmt#  pattern while(constant, _)  pattern if(procedure, _, _)  such that Modifies(procedure, _)  pattern if(variable, _, _)  such that Parent(call, _)  pattern if(_, _, _) with while.stmt#=9800  such that Parent*(12, while) with procedure.procName="assign" with read.stmt#=6500  such that Parent*(27, if)  pattern if(_, _, _)  pattern assign(variable, _"assign*7800"_) with constant.value=5800  pattern while(variable, _)  pattern if(_, _, _)  such that Next*(assign, 25)  such that Follows*(_, call)  such that Next*(_, if) with "if"=read.varName  pattern assign(variable, _"if/4900"_)  such that Next*(call, 25)  pattern if(variable, _, _)  such that Calls*(_, procedure)  pattern assign(variable, _)  such that Calls*(procedure, procedure)  pattern while(_, _) with print.stmt#=2100 with print.varName=variable.varName with call.procName="call"  such that Calls("procedure", procedure) with "variable"=read.varName  such that Next*(if, assign)  pattern assign(variable, _)  such that Calls*(procedure, procedure) with variable.varName="assign" with print.stmt#=7400 with variable.varName=procedure.procName  such that Affects(assign, 20)  such that Follows*(23, stmt) with procedure.procName="if"  such that Uses(25, variable) with "print"=procedure.procName  such that Follows(while, if)  pattern if(variable, _, _) with call.stmt#=8700  pattern while(_, _)  pattern assign(variable, _"(6600-9400)*4900"_) with call.stmt#=assign.stmt# with variable.varName=variable.varName  such that Affects*(_, stmt) with "print"=procedure.procName with "assign"=print.varName  pattern while(variable, _)  pattern assign(_, _)  pattern if(_, _, _)  pattern assign(while, "4600-500")  pattern assign(variable, _)  such that Next*(assign, call) with "then"=procedure.procName  such that Affects(assign, 20) with "print"=read.varName  pattern while(constant, _)  pattern if(_, _, _)  pattern assign(procedure, _) with 7100=call.stmt# with 3400=print.stmt#  such that Affects(29, assign)  such that Parent(call, _)  pattern if(then, _, _)  such that Modifies(procedure, "call")  pattern assign(call, _"3000+constant"_) with stmt.stmt#=4200 with variable.varName="variable" with 9500=while.stmt#  pattern if(_, _, _)  pattern assign(_, _"1800+5000"_)  pattern if(_, _, _)  pattern assign(assign, _"8300-9100"_) with print.stmt#=9100 with 7500=stmt.stmt#  pattern assign(variable, _"2600-variable"_)  such that Parent*(read, call)  such that Calls(procedure, "read")  pattern if(variable, _, _)  pattern while(variable, _) with procedure.procName=call.procName  such that Calls*(procedure, _) with "while"=call.procName  such that Follows*(stmt, read)  pattern if(_, _, _) with 6800=if.stmt#  such that Affects(15, assign) with call.procName="constant" with "print"=call.procName  pattern while(variable, _) with "constant"=variable.varName  such that Affects(_, assign)  pattern while(variable, _)  such that Next*(call, 20) with procedure.procName="else"  pattern assign(_, _"200/4900"_) with 4900=if.stmt# with print.stmt#=stmt.stmt#  pattern if(variable, _, _)  such that Modifies(stmt, _)  such that Parent(stmt, _) with "if"=procedure.procName with assign.stmt#=9100  pattern while(_, _) with "while"=procedure.procName  pattern while(_, _) with read.varName=call.procName with "while"=call.procName  pattern assign(call, _)  pattern assign(variable, _"3800*6300"_)  pattern while(_, _) with stmt.stmt#=6900  pattern assign(_, _"(7700*400)*6500"_)  such that Uses(procedure, _)  pattern while(variable, _) with constant.value=3300  pattern if(_, _, _)  pattern assign(_, "4200/if")  pattern assign(_, "1800+5200")  pattern while(then, _) with while.stmt#=assign.stmt#  pattern while(read, _) with call.procName=procedure.procName  such that Affects(assign, _)  pattern assign(_, _) with variable.varName="while"  such that Affects*(_, stmt) with read.stmt#=read.stmt# with call.stmt#=assign.stmt# with assign.stmt#=8400  such that Uses(stmt, variable) with "else"=print.varName with constant.value=8100 with variable.varName=read.varName  pattern while(_, _)  pattern while(_, _)  such that Modifies(read, variable) with "then"=procedure.procName  pattern if(_, _, _) with read.stmt#=call.stmt#  such that Affects(6, stmt)  pattern while(variable, _)  such that Parent(assign, 12)  pattern while(variable, _)  pattern if(call, _, _) with "procedure"=variable.varName with assign.stmt#=400  such that Parent(read, _)  pattern assign(_, _) with "print"=procedure.procName with read.varName="else"  such that Affects(24, assign)  pattern assign(variable, _"3400-6600"_)  pattern assign(procedure, _"2900/9400"_)  pattern assign(_, _"7000-4900"_)  pattern while(variable, _) with call.procName=variable.varName  pattern if(_, _, _) with stmt.stmt#=3600 with 2300=call.stmt#  such that Calls*(procedure, "while") with 100=read.stmt# with call.procName="else"  pattern assign(print, _)  pattern assign(procedure, _)  pattern while(read, _)  such that Modifies(stmt, _) with procedure.procName="constant"  such that Calls*(procedure, _) with 7000=constant.value with variable.varName=read.varName  pattern assign(variable, "100-2800")  pattern if(variable, _, _) with constant.value=assign.stmt#  pattern if(print, _, _)  pattern while(_, _)  pattern if(_, _, _)  pattern while(then, _)  such that Calls*("if", procedure)  pattern assign(_, "7600+3100") with assign.stmt#=8000 with 9000=assign.stmt# with variable.varName="print"  pattern assign(_, _"8300/4200"_)  such that Modifies(2, variable)  pattern assign(while, _)  pattern while(variable, _)  such that Uses(read, _) with read.varName=read.varName with call.procName=variable.varName with "then"=read.varName with 8000=stmt.stmt# with 1200=if.stmt# with "variable"=variable.varName  pattern while(_, _)  pattern assign(procedure, "3500*9800") with call.stmt#=4900 with read.varName=print.varName  such that Uses(assign, variable) with procedure.procName="call" with 1700=if.stmt# with "variable"=call.procName with 1500=if.stmt#  such that Next(29, if)  pattern if(variable, _, _) with 8600=read.stmt# with read.stmt#=read.stmt#  such that Calls*("constant", procedure)  pattern assign(_, _) with "then"=print.varName  pattern assign(_, _"2000/3900"_)  such that Affects*(14, assign)  such that Modifies(13, variable) with stmt.stmt#=6800  pattern if(_, _, _)  such that Uses(while, _)  such that Follows*(14, assign)  pattern if(_, _, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern assign(variable, _"if/5400"_)  such that Parent(_, while)  such that Modifies(2, variable) with "constant"=variable.varName  pattern while(print, _)  pattern if(read, _, _)  pattern assign(constant, _)  such that Follows*(while, _) with call.procName="constant" with "read"=print.varName  pattern assign(variable, _"3400-9700"_) with "procedure"=read.varName with "variable"=call.procName  such that Uses(if, _)  pattern if(_, _, _)  such that Follows(call, _)  pattern while(else, _) with procedure.procName="else"  pattern assign(procedure, _)  pattern assign(read, _) with 4300=stmt.stmt# with read.varName="variable"  such that Parent(_, if) with while.stmt#=5200  pattern while(_, _) with while.stmt#=while.stmt#  pattern while(variable, _)  pattern if(variable, _, _) with constant.value=2000 with 1500=stmt.stmt#  pattern assign(variable, _"4500/1400"_)  such that Affects(assign, _)  such that Affects(_, stmt)  such that Affects*(assign, stmt)  pattern assign(variable, _"800*6000"_)  pattern assign(_, _"7500-9600"_)  pattern while(_, _)  pattern if(variable, _, _) with print.varName=call.procName  pattern if(variable, _, _)  such that Calls*(procedure, "read") with "variable"=print.varName  pattern while(variable, _)  pattern if(variable, _, _) with print.varName=call.procName  such that Follows(assign, assign) with while.stmt#=8800  pattern while(variable, _)  such that Calls("then", procedure)  pattern while(variable, _)  pattern assign(_, "(4600-6900)*5900") with "procedure"=procedure.procName  such that Parent(call, 23) with read.varName=call.procName with read.varName=read.varName with read.varName="variable" with "then"=variable.varName  such that Affects*(stmt, _) with read.varName=call.procName  such that Uses(while, "while")  pattern while(procedure, _)  pattern while(call, _) with stmt.stmt#=7800  such that Modifies(6, variable)  pattern while(variable, _) with call.procName="call"  such that Affects(stmt, stmt) with 3500=call.stmt#  pattern while(then, _)  pattern assign(if, "9700+5300")  pattern if(_, _, _)  such that Modifies(while, variable)  such that Follows(while, assign)  such that Next(14, read) with 7400=call.stmt# with procedure.procName="procedure" with 6300=print.stmt#  pattern if(_, _, _)  pattern if(variable, _, _)  such that Follows(stmt, 4)  such that Calls*("print", procedure)  pattern if(variable, _, _)  pattern while(variable, _)  such that Affects(stmt, assign)  pattern if(else, _, _) with "read"=variable.varName  pattern assign(_, _)  such that Follows*(read, _)  pattern assign(procedure, _"1900*1000"_)  pattern assign(_, _) with call.procName=variable.varName with if.stmt#=read.stmt#  pattern assign(variable, _"5100*7800"_)  such that Parent*(while, 8)  pattern if(variable, _, _)  pattern assign(variable, _"7900-7600"_)  pattern while(variable, _) with print.varName=procedure.procName  pattern if(variable, _, _)  pattern while(print, _) with 3800=read.stmt# with 7900=stmt.stmt#  pattern if(variable, _, _)  pattern assign(assign, _"(3500/1300)-2700"_)  pattern if(procedure, _, _) with assign.stmt#=1300 with read.varName=print.varName  such that Parent(print, _)  such that Modifies(assign, variable) with call.stmt#=4200  such that Next(call, _) with call.procName="variable"  such that Affects*(stmt, assign)  pattern assign(_, "3700*5200") with read.stmt#=assign.stmt#  pattern assign(variable, _"7900/2800"_)  such that Next*(call, 6)  pattern while(_, _) with "then"=print.varName  pattern while(variable, _)  pattern while(while, _) with read.stmt#=if.stmt# with "else"=call.procName with 3800=call.stmt# with "else"=read.varName  pattern while(variable, _)  such that Affects*(26, assign)  pattern assign(_, _"5500+6300"_)  pattern while(variable, _)  pattern assign(call, "3100+500")  pattern if(_, _, _)  pattern while(if, _)  such that Parent(_, read)  such that Affects(29, stmt)  pattern while(variable, _) with read.stmt#=constant.value with call.procName="assign"  pattern while(_, _)  pattern if(_, _, _) with read.varName="if" with assign.stmt#=if.stmt#  pattern while(_, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern while(variable, _) with call.procName="while" with variable.varName=procedure.procName with call.procName="read"  such that Calls(procedure, procedure)  pattern if(_, _, _) with read.varName=print.varName with read.varName=read.varName with "read"=read.varName  pattern while(_, _) with 2200=print.stmt#  pattern while(variable, _)  such that Next(7, assign)  pattern assign(_, _"8800/4200"_) with while.stmt#=9500  such that Affects(_, stmt) with 3800=stmt.stmt# with 4400=constant.value  such that Parent(19, stmt)  such that Uses(procedure, _) with 5700=stmt.stmt#  pattern assign(if, _"2000/3800"_)  pattern while(_, _)  pattern while(variable, _)  such that Follows*(stmt, stmt)  such that Calls(_, procedure) with print.varName="constant"  pattern assign(then, "7500/8100")  such that Uses(stmt, _) with read.varName="if"  pattern while(_, _)  such that Calls("else", procedure) with read.varName="while"  pattern assign(variable, _) with read.varName="call"  pattern if(variable, _, _)  pattern assign(assign, _)  pattern while(variable, _) with call.procName=print.varName  pattern assign(_, _"2400*2400"_) with 1600=read.stmt#  such that Next(read, _)  pattern assign(_, _"9400*4100"_)  pattern while(_, _)  pattern assign(_, "7800/2900")  such that Modifies(9, variable) with procedure.procName="call" with if.stmt#=call.stmt#  pattern while(print, _) with read.varName=read.varName with 400=while.stmt#  pattern while(variable, _)  pattern while(variable, _)  pattern assign(_, _"800/4600"_) with 8500=constant.value  pattern assign(_, _"4400/7900"_) with call.procName="if"  such that Parent(_, while)  pattern assign(variable, _"3700-9100"_) with call.stmt#=3000  pattern assign(_, "5500/1800") with read.stmt#=constant.value  pattern while(while, _) with constant.value=read.stmt#  pattern if(assign, _, _)  pattern assign(assign, _)  such that Follows(_, if)  pattern while(call, _) with read.stmt#=7500 

5000
22 - Query 22
print print; variable variable; constant constant; assign assign; call call; stmt stmt; read read; while while; if if; procedure procedure; 
Select <print, variable, constant, assign, call, stmt, read, while, if, procedure> with 3500=while.stmt# with read.stmt#=1700 with "if"=print.varName  pattern if(variable, _, _)  pattern assign(variable, "1700/9800")  pattern assign(constant, _) with assign.stmt#=if.stmt#  such that Affects*(15, stmt) with variable.varName="then"  such that Uses(23, variable)  pattern if(constant, _, _) with stmt.stmt#=print.stmt# with 7100=stmt.stmt# with read.varName="call" with constant.value=constant.value with "call"=read.varName  pattern if(variable, _, _) with print.stmt#=read.stmt#  pattern while(else, _) with print.varName="while" with print.stmt#=constant.value with "then"=variable.varName  pattern while(_, _)  pattern while(constant, _)  pattern assign(_, _"6300+7700"_) with variable.varName=procedure.procName with procedure.procName="read"  pattern while(_, _)  pattern while(variable, _)  such that Next(3, read)  pattern while(procedure, _) with 9100=if.stmt# with read.stmt#=read.stmt# with "constant"=read.varName  pattern assign(variable, _"9000-5100"_)  pattern while(procedure, _) with 8500=if.stmt# with print.varName="call"  pattern if(variable, _, _)  such that Follows(if, _) with "call"=call.procName  pattern while(_, _) with variable.varName=procedure.procName with "else"=variable.varName  such that Affects*(assign, _)  such that Follows(27, if)  pattern assign(_, _"7900*6700"_)  such that Next*(if, _)  pattern while(_, _) with read.varName="while"  pattern while(_, _)  such that Uses(while, _) with read.varName="else"  such that Calls*(procedure, "if")  such that Calls(procedure, procedure)  such that Calls*(_, procedure)  pattern if(variable, _, _) with print.varName="else"  such that Affects*(_, assign)  pattern assign(else, _"8100+9600"_) with print.varName="procedure"  pattern assign(_, _)  pattern while(_, _) with variable.varName="variable"  pattern assign(_, _"constant/2900"_)  pattern while(else, _)  pattern if(_, _, _) with constant.value=6400  pattern while(_, _)  pattern assign(_, "700-700")  pattern while(print, _)  such that Calls*(procedure, _)  pattern if(variable, _, _)  pattern if(if, _, _) with "procedure"=call.procName  such that Parent(_, stmt)  pattern assign(if, _"4200-2600"_) with variable.varName=call.procName  such that Follows(read, if) with call.stmt#=5500  pattern assign(_, _) with call.stmt#=8100  such that Parent*(while, 17)  pattern while(while, _)  such that Follows(_, read) with "else"=variable.varName  such that Uses(read, "while")  such that Next(if, 14) with read.varName="else"  pattern while(_, _) with call.stmt#=stmt.stmt# with read.varName="constant" with print.varName="constant" with "variable"=procedure.procName  such that Calls*(procedure, "then") with "read"=read.varName with read.stmt#=9400  such that Affects(assign, 16) with "then"=read.varName  pattern while(variable, _)  pattern if(variable, _, _) with call.procName="constant" with procedure.procName=read.varName with print.stmt#=300  pattern while(call, _) with if.stmt#=3400  pattern while(_, _) with while.stmt#=1700  pattern if(constant, _, _) with while.stmt#=stmt.stmt# with procedure.procName="print" with constant.value=call.stmt# with assign.stmt#=9100  pattern assign(assign, _)  such that Follows(call, assign)  pattern assign(then, _)  pattern if(variable, _, _) with 9100=if.stmt#  such that Affects(5, stmt) with variable.varName=call.procName with while.stmt#=assign.stmt# with 1000=if.stmt#  such that Calls*(procedure, procedure) with "call"=procedure.procName  such that Parent(16, call) with procedure.procName="if" with read.stmt#=call.stmt#  such that Calls(procedure, "print")  pattern while(_, _)  pattern if(_, _, _) with constant.value=9000 with print.varName=read.varName  such that Follows*(while, if)  pattern while(variable, _) with print.stmt#=800 with read.varName="if"  pattern while(variable, _) with constant.value=7100  pattern if(_, _, _)  pattern while(variable, _)  pattern assign(read, _"5000/procedure"_)  such that Affects(_, stmt) with stmt.stmt#=assign.stmt# with "call"=procedure.procName with print.varName="assign"  pattern if(constant, _, _)  pattern while(variable, _)  pattern assign(else, _) with procedure.procName=procedure.procName with 5100=while.stmt#  such that Next(_, while) with read.varName="read"  pattern assign(then, "6600-7500")  such that Next*(stmt, _)  pattern if(_, _, _)  such that Affects(18, assign) with read.varName="if" with while.stmt#=call.stmt#  such that Next*(print, while) with 5000=print.stmt# with constant.value=8800  pattern while(assign, _)  pattern assign(variable, "(2000*1800)/1300")  pattern if(_, _, _)  pattern if(else, _, _)  such that Calls("while", procedure)  such that Calls*("else", procedure)  pattern while(_, _)  pattern if(variable, _, _) with "constant"=call.procName with print.varName="read" with print.stmt#=5900  pattern assign(if, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern while(while, _)  pattern assign(_, _"((3200-call)+4400)/4000"_)  pattern while(_, _) with call.stmt#=stmt.stmt# with read.varName="variable"  pattern while(variable, _)  such that Parent*(print, call)  pattern while(variable, _)  such that Parent*(read, _) with 9200=read.stmt#  such that Parent*(while, 19)  such that Calls*(_, procedure) with if.stmt#=constant.value with 2500=stmt.stmt# with "procedure"=procedure.procName  pattern assign(_, _"300*6000"_) with print.varName=variable.varName  such that Next(stmt, 20)  such that Affects(stmt, _)  such that Next*(while, 25)  pattern while(variable, _)  pattern while(print, _) with 4600=call.stmt#  pattern assign(variable, "8400-5500")  such that Follows(read, 5)  pattern assign(_, "500-assign")  pattern if(_, _, _)  such that Affects*(stmt, 22)  such that Parent*(1, print)  such that Calls*("then", procedure)  such that Uses(1, variable)  such that Affects*(stmt, 5) with procedure.procName=read.varName  pattern if(_, _, _) with stmt.stmt#=3900  such that Modifies(11, variable)  pattern if(_, _, _) with "assign"=print.varName with assign.stmt#=8200  pattern while(_, _)  such that Follows(stmt, 7) with if.stmt#=900  such that Calls*(procedure, "constant")  pattern assign(variable, "6000/9500")  such that Follows(_, stmt) with "print"=variable.varName  such that Parent*(19, print)  pattern if(variable, _, _)  pattern while(_, _)  such that Calls(procedure, _) with call.procName="if"  such that Affects*(stmt, _)  pattern while(variable, _) with "if"=variable.varName  such that Modifies(stmt, variable)  pattern if(procedure, _, _)  pattern while(variable, _)  pattern if(variable, _, _)  pattern assign(call, _)  pattern assign(_, _"8500/1100"_)  pattern assign(call, _"8100*4200"_)  pattern assign(while, "7700-2600") with "if"=variable.varName  pattern if(_, _, _) with 1900=if.stmt# with procedure.procName=call.procName  such that Parent*(_, stmt)  pattern if(_, _, _) with call.procName="constant"  pattern while(print, _)  pattern if(variable, _, _)  pattern while(call, _)  pattern assign(else, _)  such that Affects*(stmt, _)  such that Follows(stmt, 19) with while.stmt#=2500  such that Next(stmt, 13)  pattern while(_, _)  such that Calls*(procedure, procedure) with procedure.procName="variable" with assign.stmt#=8100  such that Follows*(_, print)  pattern assign(variable, _)  pattern while(variable, _)  pattern while(variable, _)  pattern assign(variable, "6400*7200") with call.stmt#=if.stmt#  such that Follows*(read, read)  pattern assign(variable, _"4200-9300"_)  such that Affects(stmt, _)  pattern assign(print, _)  pattern if(variable, _, _)  pattern while(variable, _)  pattern while(call, _) with "variable"=print.varName  pattern while(read, _)  pattern if(variable, _, _)  such that Uses(if, variable)  pattern if(_, _, _) with stmt.stmt#=9800  such that Affects(_, stmt) with print.varName=call.procName  pattern assign(if, _"3500+6800"_)  pattern assign(if, "5400*4700")  pattern if(_, _, _)  pattern assign(_, "3600-3700") with "constant"=variable.varName  pattern if(read, _, _)  pattern if(_, _, _)  pattern assign(_, _) with constant.value=call.stmt#  pattern assign(variable, _"9400*1400"_) with 4600=call.stmt# with print.varName=read.varName with read.varName=call.procName  pattern assign(_, _)  such that Follows*(stmt, while)  pattern while(variable, _)  pattern assign(constant, "call*2800")  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern assign(_, _"6200/4300"_)  pattern while(call, _) with constant.value=print.stmt# with while.stmt#=2300 with 9600=constant.value with call.procName=call.procName  pattern while(variable, _)  such that Follows(while, if)  such that Parent*(call, stmt)  pattern while(call, _)  pattern assign(variable, _)  such that Affects(assign, 2)  such that Follows*(_, print) with 5600=assign.stmt# with 3100=print.stmt# with read.varName="while"  pattern assign(variable, _"9900-1000"_)  pattern if(_, _, _)  pattern while(_, _)  pattern while(call, _)  such that Affects(assign, assign) with procedure.procName=call.procName with call.procName="procedure" with while.stmt#=print.stmt#  pattern assign(_, "9100/6000")  such that Affects(stmt, _) with print.varName="procedure" with variable.varName=print.varName  pattern if(_, _, _)  such that Affects*(_, stmt)  pattern assign(_, _"1800*2800"_)  such that Parent*(read, 17)  such that Calls(procedure, "procedure") with print.stmt#=3900  pattern assign(_, _"8500*2300"_)  such that Affects(stmt, _)  such that Calls("while", procedure)  such that Uses(9, variable) with call.stmt#=8200 with constant.value=1100  pattern assign(then, _) with 1400=read.stmt#  such that Follows*(if, _)  pattern while(_, _) with read.varName="variable" with constant.value=if.stmt# with 8700=if.stmt#  pattern assign(_, "5000-8600") with constant.value=constant.value with print.varName=procedure.procName  pattern assign(variable, _"8000+read"_)  pattern if(assign, _, _)  pattern while(_, _)  such that Parent*(print, print) with constant.value=constant.value  such that Follows(assign, 16) with read.varName="else"  such that Affects*(assign, 9)  pattern assign(variable, _) with read.stmt#=constant.value with 9300=read.stmt#  pattern while(else, _)  pattern if(_, _, _)  pattern if(_, _, _) with 5200=stmt.stmt#  pattern if(_, _, _) with "then"=print.varName with "else"=read.varName with procedure.procName=call.procName  pattern if(constant, _, _) with print.varName="read"  such that Parent*(while, while)  pattern if(print, _, _)  pattern while(variable, _)  such that Affects*(stmt, _)  pattern if(_, _, _) with variable.varName="read"  pattern assign(variable, _)  pattern if(call, _, _)  pattern if(_, _, _)  such that Next*(_, stmt) with call.procName=call.procName  such that Modifies(if, variable)  pattern while(_, _)  pattern assign(_, "while/3500") with print.varName="variable"  such that Affects(_, assign)  such that Next(print, 17) with call.procName="print"  pattern assign(variable, _"200-6400"_)  such that Parent(14, while)  pattern if(print, _, _) with read.varName="read"  pattern assign(constant, "9500-3400")  such that Next*(9, stmt)  pattern if(assign, _, _)  pattern if(call, _, _)  pattern assign(assign, _)  pattern assign(procedure, "5000/8800")  pattern if(_, _, _)  such that Modifies(print, "then") with variable.varName=print.varName  such that Affects(_, assign)  pattern assign(variable, _)  such that Next(read, _) with variable.varName="assign"  pattern if(_, _, _)  pattern while(then, _)  such that Next*(7, read)  pattern if(_, _, _)  such that Parent(call, _)  pattern while(_, _)  pattern if(if, _, _) with "call"=call.procName  such that Next(print, call)  pattern while(variable, _) with while.stmt#=7900 with assign.stmt#=600  such that Modifies(read, variable)  pattern assign(procedure, "call/print") with read.varName="while"  pattern if(while, _, _)  such that Calls("while", procedure)  such that Parent*(_, stmt)  pattern while(variable, _)  such that Affects*(stmt, _) with 8100=while.stmt# with 4200=print.stmt#  pattern while(procedure, _)  pattern if(constant, _, _)  pattern while(variable, _)  such that Affects*(_, stmt) with 2000=read.stmt#  pattern if(_, _, _) with variable.varName=call.procName  pattern while(_, _) with "print"=variable.varName  pattern assign(variable, "8200+500")  such that Parent*(if, 6)  pattern assign(variable, "(4100/800)*print")  such that Follows(26, print) with variable.varName="else"  pattern assign(variable, "(7400-600)/4600") with if.stmt#=8300  pattern while(variable, _)  pattern if(variable, _, _)  pattern while(_, _)  pattern if(_, _, _)  such that Next*(24, while)  pattern while(variable, _)  pattern assign(_, _"8100*7900"_) with if.stmt#=stmt.stmt#  pattern while(while, _)  such that Modifies(call, variable)  such that Uses(15, variable)  such that Next(17, print) with call.stmt#=2500  pattern assign(assign, "(7800-9900)-3500")  pattern while(_, _) with call.procName="variable"  pattern if(_, _, _)  such that Uses(if, variable)  pattern while(_, _)  pattern assign(read, _"2100+7400"_) with print.varName=call.procName  pattern if(variable, _, _)  such that Parent(while, _) with read.varName="assign"  pattern if(_, _, _)  pattern if(_, _, _)  pattern while(variable, _)  pattern if(variable, _, _) with variable.varName=variable.varName  such that Parent*(_, read) with 2700=assign.stmt# with print.stmt#=while.stmt#  pattern while(call, _) with variable.varName="constant" with 2200=if.stmt#  such that Calls*("constant", procedure)  pattern while(variable, _) with 6200=read.stmt#  such that Uses(while, "then") with 5900=print.stmt# with "else"=variable.varName with "then"=procedure.procName  such that Modifies(26, variable)  pattern while(_, _)  such that Next(read, 16) with read.varName="procedure"  pattern while(if, _) with stmt.stmt#=4100 with call.stmt#=6200 with procedure.procName="while"  such that Uses(assign, "assign")  pattern if(_, _, _)  pattern if(procedure, _, _)  such that Uses(27, variable) with 4800=call.stmt#  pattern while(_, _) with stmt.stmt#=read.stmt#  pattern if(if, _, _)  pattern while(read, _) with call.procName=call.procName 

5000
23 - Query 23
assign assign; variable variable; print print; constant constant; stmt stmt; read read; procedure procedure; if if; while while; call call; 
Select <assign, variable, print, constant, stmt, read, procedure, if, while, call>  pattern assign(variable, _"8200-3200"_)  such that Calls("while", procedure)  pattern if(_, _, _)  such that Next*(22, read)  pattern if(variable, _, _)  such that Affects*(9, assign) with while.stmt#=assign.stmt#  pattern while(procedure, _)  such that Next*(print, _)  pattern if(else, _, _)  such that Follows(assign, while)  pattern while(_, _)  such that Modifies(read, "variable")  such that Affects*(_, assign) with print.varName="if" with 4300=read.stmt#  pattern assign(_, "4200*6200")  such that Next(_, call)  such that Follows*(26, call)  pattern assign(while, _"6300-3900"_)  pattern if(else, _, _)  pattern if(variable, _, _)  such that Parent*(while, _)  pattern assign(else, _"900/5800"_) with 300=call.stmt#  pattern while(then, _) with if.stmt#=stmt.stmt# with variable.varName="print" with print.varName="procedure"  pattern while(variable, _)  pattern if(variable, _, _) with "while"=read.varName with "else"=variable.varName  such that Parent(while, 6)  pattern assign(variable, "2600+5400")  such that Follows(_, read)  pattern while(_, _)  pattern assign(_, _"else+5500"_)  pattern while(variable, _)  pattern if(call, _, _)  such that Follows*(read, _)  pattern assign(procedure, _)  such that Calls*("read", procedure) with stmt.stmt#=7600 with if.stmt#=2900  such that Affects*(_, assign)  pattern if(variable, _, _) with print.stmt#=8000 with print.varName=call.procName  such that Affects(13, stmt) with procedure.procName=print.varName  pattern assign(print, "8500/4900")  pattern assign(_, _)  pattern while(_, _)  pattern while(variable, _)  pattern if(_, _, _)  such that Next(13, print) with procedure.procName=call.procName  pattern if(_, _, _)  such that Affects*(assign, assign)  such that Parent*(print, 1)  pattern if(variable, _, _)  such that Calls(procedure, "assign") with "call"=procedure.procName with print.varName="then"  pattern while(then, _)  such that Next*(if, _)  pattern assign(variable, "5100-2100")  such that Uses(call, _) with constant.value=read.stmt#  pattern while(_, _)  such that Parent*(stmt, 8)  pattern while(variable, _)  such that Affects(stmt, _) with variable.varName=call.procName  pattern assign(print, "4000-6900") with 3500=print.stmt# with call.procName=print.varName with 7400=while.stmt# with if.stmt#=stmt.stmt#  such that Follows*(18, read) with 4700=call.stmt#  pattern assign(_, _"8100/6600"_)  pattern while(_, _)  pattern assign(procedure, _"8900*print"_)  such that Follows(print, _)  pattern if(_, _, _) with "constant"=call.procName with 1500=assign.stmt#  such that Calls(procedure, _)  pattern while(variable, _)  pattern assign(_, _"9600*9100"_)  pattern if(else, _, _) with 5500=stmt.stmt#  pattern assign(variable, _"else+3600"_)  such that Modifies(22, variable) with read.varName="variable" with while.stmt#=6200  such that Calls*(procedure, procedure)  pattern assign(variable, _"1500*5600"_) with "constant"=procedure.procName  such that Follows*(_, if)  pattern assign(_, _) with while.stmt#=3500  such that Calls*(_, procedure)  pattern assign(_, _)  such that Uses(call, variable)  pattern while(_, _)  such that Calls*(_, procedure)  such that Modifies(24, variable)  pattern while(variable, _)  pattern assign(print, _)  such that Calls*(procedure, _)  pattern if(_, _, _)  pattern while(_, _) with 4100=stmt.stmt#  such that Parent(stmt, _)  pattern while(call, _) with print.stmt#=assign.stmt# with 3200=assign.stmt#  pattern while(_, _) with read.stmt#=print.stmt#  pattern while(variable, _)  pattern if(then, _, _) with read.stmt#=9900 with stmt.stmt#=5600  such that Affects(stmt, stmt)  such that Parent(7, assign) with call.stmt#=call.stmt# with while.stmt#=1500  pattern if(assign, _, _)  such that Modifies(call, variable) with "constant"=read.varName with variable.varName="assign"  pattern if(read, _, _)  such that Modifies(print, variable) with "if"=read.varName  such that Next(while, call)  pattern while(variable, _)  pattern while(variable, _)  pattern while(variable, _)  pattern if(_, _, _)  pattern assign(_, "9400/7300")  such that Affects(assign, 17)  such that Follows*(20, assign) with print.varName="if" with call.procName=print.varName with read.varName=read.varName  pattern if(_, _, _)  such that Calls*("procedure", procedure)  such that Affects*(_, stmt)  such that Calls(procedure, "while")  pattern assign(print, "4800/2100") with if.stmt#=if.stmt# with constant.value=print.stmt#  pattern assign(if, _"procedure-1700"_) with 9900=assign.stmt# with "constant"=read.varName with read.varName=variable.varName  pattern assign(variable, _"500-6600"_)  pattern while(_, _) with 5000=print.stmt#  pattern while(procedure, _)  such that Affects(assign, _)  pattern while(variable, _)  such that Calls*(procedure, "call")  such that Next(stmt, assign) with read.stmt#=while.stmt#  pattern while(_, _)  pattern while(call, _)  such that Parent*(read, 2) with call.procName="constant"  such that Parent*(while, 4)  such that Next*(_, while)  pattern assign(then, _"assign+8100"_)  pattern while(variable, _)  such that Follows*(read, 24) with "variable"=variable.varName with if.stmt#=print.stmt# with call.procName="then"  pattern assign(then, _"5000+assign"_)  pattern if(_, _, _)  pattern while(variable, _)  pattern while(variable, _) with print.stmt#=if.stmt#  such that Parent(_, call) with call.stmt#=call.stmt#  such that Calls("while", procedure)  such that Next(read, print) with stmt.stmt#=read.stmt#  such that Parent*(10, assign)  such that Parent*(_, read)  pattern if(_, _, _) with procedure.procName=procedure.procName  pattern if(_, _, _)  such that Affects*(_, assign)  such that Affects*(_, assign)  such that Affects*(stmt, 18) with constant.value=constant.value  pattern if(_, _, _)  pattern assign(_, _"variable-6300"_)  pattern while(variable, _)  pattern if(variable, _, _)  such that Parent*(_, while)  pattern while(variable, _)  pattern while(_, _)  pattern while(read, _) with call.stmt#=9300 with assign.stmt#=7800  pattern assign(_, _"6600-5300"_)  pattern while(variable, _)  pattern if(variable, _, _) with call.procName="else" with 6600=assign.stmt#  pattern if(variable, _, _)  pattern while(while, _) with variable.varName=procedure.procName with 2600=constant.value  pattern if(variable, _, _) with print.stmt#=9700 with while.stmt#=2000  pattern while(_, _)  such that Calls*(procedure, _) with if.stmt#=5900  pattern while(assign, _)  such that Follows*(_, if) with read.stmt#=print.stmt# with procedure.procName="procedure"  such that Follows(read, _) with "then"=print.varName  such that Parent*(while, _) with "read"=variable.varName  such that Parent(call, 20)  pattern while(procedure, _)  such that Calls*(procedure, _)  pattern if(read, _, _)  such that Parent*(print, _)  such that Next(if, while)  pattern assign(variable, _)  pattern while(constant, _)  such that Affects(assign, 27)  such that Affects*(stmt, stmt)  pattern while(while, _) with "constant"=read.varName  such that Modifies(read, _)  pattern while(variable, _) with stmt.stmt#=4100 with print.stmt#=3200  pattern if(variable, _, _) with procedure.procName=print.varName  such that Next(while, stmt)  pattern while(variable, _)  pattern assign(procedure, "900*5300")  pattern if(variable, _, _)  pattern assign(variable, "4800/3800")  such that Parent*(_, if) with "else"=print.varName with procedure.procName="call"  such that Parent(while, 9)  such that Calls(_, procedure)  such that Follows(25, assign) with 8500=call.stmt# with "assign"=print.varName  such that Calls("then", procedure)  such that Parent*(assign, stmt) with assign.stmt#=8100  pattern while(_, _) with print.stmt#=3100  such that Calls("call", procedure)  pattern if(_, _, _)  such that Affects(13, stmt)  pattern while(print, _)  pattern while(variable, _) with "if"=call.procName  such that Affects*(assign, 8) with read.varName=read.varName with call.stmt#=assign.stmt# with "read"=call.procName with "then"=call.procName  pattern while(variable, _)  pattern assign(_, "8900+300")  pattern while(variable, _)  such that Modifies(assign, _)  such that Parent*(assign, _)  such that Affects*(_, assign)  pattern while(variable, _)  such that Calls(procedure, _)  pattern while(_, _)  such that Modifies(procedure, _)  such that Affects*(stmt, _)  pattern assign(variable, "constant+2200")  pattern while(variable, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  such that Calls(procedure, _)  such that Follows*(_, assign) with constant.value=read.stmt# with 9100=read.stmt#  pattern if(else, _, _)  such that Modifies(7, variable)  pattern while(variable, _)  pattern if(variable, _, _)  pattern if(read, _, _) with "call"=variable.varName  pattern assign(variable, _"3900-7700"_)  such that Calls("assign", procedure)  pattern while(variable, _)  pattern assign(variable, "1400/7500") with read.stmt#=assign.stmt# with "constant"=read.varName  such that Calls(_, procedure)  pattern if(while, _, _)  such that Follows*(stmt, _)  such that Follows(_, read) with call.procName=variable.varName  pattern while(procedure, _)  such that Parent(stmt, _) with "else"=print.varName  such that Follows(while, stmt)  such that Follows(call, if)  pattern while(_, _)  pattern if(variable, _, _)  such that Next(print, read)  pattern if(constant, _, _)  such that Parent*(_, print) with print.varName=procedure.procName  pattern while(_, _)  pattern if(variable, _, _)  such that Affects*(assign, stmt) with 6100=call.stmt#  pattern if(variable, _, _)  such that Calls*("then", procedure) with read.varName=call.procName  pattern if(procedure, _, _) with constant.value=7800  such that Follows*(call, call)  pattern assign(variable, "1500*5600")  such that Affects*(7, assign)  pattern assign(variable, _) with 6400=if.stmt#  such that Calls*("constant", procedure) with 6200=assign.stmt#  pattern assign(variable, "4900*3400")  such that Follows(stmt, 10)  pattern while(_, _) with "constant"=print.varName with read.varName="constant"  pattern while(_, _)  such that Parent*(call, print)  such that Calls(procedure, _) with 1600=call.stmt#  such that Next(_, while)  pattern while(variable, _) with "then"=print.varName with stmt.stmt#=stmt.stmt# with stmt.stmt#=1800 with "call"=variable.varName  pattern if(read, _, _)  pattern while(_, _) with assign.stmt#=3700  such that Next*(29, stmt)  pattern if(variable, _, _)  pattern if(_, _, _)  such that Calls("then", procedure) with stmt.stmt#=read.stmt# with 7200=constant.value with 700=stmt.stmt# with procedure.procName="assign" with "assign"=read.varName with call.procName=read.varName with assign.stmt#=if.stmt# with read.stmt#=read.stmt#  such that Next*(7, read)  such that Next(call, 12)  such that Affects(assign, 13)  pattern while(variable, _)  such that Parent(read, _)  pattern while(constant, _)  such that Affects*(29, stmt)  pattern while(variable, _) with 2000=if.stmt#  pattern if(variable, _, _)  pattern while(variable, _)  pattern assign(_, "(7100+5600)*constant") with call.procName="else"  such that Next*(20, stmt)  such that Next(assign, _)  pattern while(call, _)  pattern if(variable, _, _)  pattern assign(then, "7400*3500")  pattern while(variable, _)  such that Modifies(while, _) with call.procName="read"  pattern assign(read, _"((5200+2600)/8500)*8600"_)  such that Follows(assign, _)  pattern assign(_, _)  such that Affects*(stmt, _)  pattern if(procedure, _, _) with 6900=call.stmt# with procedure.procName=procedure.procName  pattern if(variable, _, _)  such that Parent*(assign, 21)  pattern assign(variable, _)  such that Parent(12, while) with call.procName="read" with print.varName="else"  such that Uses(call, variable) with call.procName=procedure.procName with variable.varName="if"  such that Affects(stmt, _)  such that Affects*(3, stmt)  pattern assign(variable, "8400+5400")  such that Affects*(assign, assign)  pattern if(_, _, _) with 9300=constant.value with stmt.stmt#=1100  such that Modifies(26, variable) with 8400=stmt.stmt# with 4500=read.stmt# with read.stmt#=6900  such that Affects(assign, _)  such that Follows*(read, call)  such that Calls(procedure, _)  pattern while(else, _)  pattern if(_, _, _) with "else"=variable.varName  pattern assign(_, "print+3800") with if.stmt#=while.stmt#  pattern assign(while, "if*6300") with stmt.stmt#=assign.stmt#  such that Affects*(25, assign) with assign.stmt#=while.stmt# with variable.varName="if"  pattern while(print, _)  pattern assign(then, "5300/4800") with 5600=stmt.stmt#  pattern if(_, _, _) with "if"=variable.varName  pattern assign(_, _)  pattern assign(_, "600+7500")  pattern if(constant, _, _)  pattern while(variable, _)  such that Parent(5, if) with procedure.procName=variable.varName  pattern if(variable, _, _)  such that Follows(20, stmt)  such that Parent(while, 22) with print.varName="variable"  such that Modifies(if, _)  such that Affects(_, stmt) with call.procName="constant" with variable.varName=print.varName  such that Calls*("while", procedure) with read.varName=print.varName  pattern assign(variable, "7300-assign")  such that Affects(stmt, 28) with if.stmt#=assign.stmt#  such that Modifies(read, variable)  such that Uses(if, "then")  pattern assign(_, _"9200-6100"_)  pattern while(else, _)  such that Uses(while, _) with while.stmt#=4600  pattern if(_, _, _)  pattern if(_, _, _)  pattern assign(_, _"9500+4900"_) with while.stmt#=2800  pattern assign(_, "(read+assign)*1700")  pattern if(call, _, _) with 2700=print.stmt# with "print"=call.procName  pattern assign(variable, "(6200-2600)+8800")  pattern while(_, _) with constant.value=9200 with 6000=while.stmt#  pattern assign(variable, _"5800/7300"_)  such that Modifies(print, _)  such that Affects(stmt, assign) with "else"=print.varName  pattern assign(variable, "4200*400")  pattern if(read, _, _)  pattern while(_, _)  such that Next*(call, stmt) with while.stmt#=print.stmt# with if.stmt#=print.stmt# with constant.value=stmt.stmt#  pattern assign(variable, _) with print.stmt#=stmt.stmt# with print.stmt#=1800  such that Parent*(6, call) with call.procName="variable"  pattern if(variable, _, _)  pattern assign(then, "(7400*3200)*800")  pattern assign(if, _"1300*else"_) with 7200=stmt.stmt#  such that Uses(stmt, _)  such that Parent*(27, if) with call.stmt#=5900  such that Calls("then", procedure)  pattern if(procedure, _, _) 

5000
24 - Query 24
variable variable; assign assign; print print; call call; constant constant; stmt stmt; read read; if if; while while; procedure procedure; 
Select <variable, assign, print, call, constant, stmt, read, if, while, procedure>  pattern if(variable, _, _)  such that Affects(_, stmt)  such that Parent(if, _)  such that Affects(assign, _)  pattern assign(_, _"400-7400"_)  pattern assign(variable, _)  pattern if(_, _, _)  pattern assign(_, _)  such that Uses(assign, variable)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern assign(else, _"9700/1000"_) with 3900=stmt.stmt#  such that Affects(15, assign)  such that Parent*(stmt, _)  pattern while(variable, _)  pattern if(procedure, _, _) with "print"=read.varName with "else"=variable.varName  pattern if(_, _, _)  pattern while(variable, _) with print.varName=procedure.procName  pattern while(_, _) with "while"=procedure.procName  such that Next*(if, _) with call.stmt#=read.stmt# with call.procName="if"  pattern while(_, _) with 8300=while.stmt#  such that Next*(_, call) with "then"=call.procName  such that Affects*(6, stmt)  such that Calls*("call", procedure) with call.procName="while"  pattern if(print, _, _)  such that Calls*(procedure, _)  pattern assign(read, _)  such that Follows*(_, call)  such that Calls*(procedure, "constant") with print.stmt#=1100 with "then"=call.procName  such that Affects*(stmt, _) with 5400=stmt.stmt#  pattern if(variable, _, _)  pattern assign(_, _)  pattern assign(if, _)  pattern assign(if, _)  pattern assign(procedure, "6800+1000")  pattern assign(variable, _)  such that Follows*(while, assign) with procedure.procName="then"  pattern while(read, _) with 8400=read.stmt#  pattern if(constant, _, _)  pattern assign(variable, _"6900-6600"_) with while.stmt#=call.stmt#  pattern while(variable, _)  pattern assign(_, "8200*3400")  pattern while(_, _)  pattern if(variable, _, _) with read.varName=print.varName  such that Next(while, 7) with 800=assign.stmt# with 8800=while.stmt#  pattern assign(_, _"1700-constant"_)  such that Calls(procedure, "call")  pattern while(_, _)  pattern if(_, _, _) with "then"=variable.varName  pattern if(_, _, _)  pattern assign(variable, "3600-while")  such that Parent(if, _)  pattern while(_, _) with variable.varName="else"  such that Next(_, call) with 900=assign.stmt#  pattern assign(else, "8200-4900")  such that Parent*(if, assign)  such that Modifies(call, _)  such that Next*(7, if) with "call"=call.procName  pattern while(_, _)  such that Follows(_, call) with print.varName=call.procName  pattern if(_, _, _)  such that Modifies(call, _)  pattern if(variable, _, _)  pattern while(variable, _)  pattern if(constant, _, _)  such that Parent*(while, 11) with "else"=print.varName  such that Parent*(_, stmt)  pattern while(_, _) with procedure.procName="procedure"  such that Next(print, while)  such that Follows(_, stmt)  pattern while(_, _)  pattern while(_, _)  pattern while(variable, _) with stmt.stmt#=1700  pattern if(variable, _, _)  such that Follows(read, 28)  such that Affects(assign, _) with stmt.stmt#=7400 with 8800=constant.value  pattern assign(_, _)  such that Next(while, if)  such that Affects(stmt, 17)  pattern while(assign, _)  such that Parent(read, 10) with variable.varName="then"  such that Follows(_, stmt)  such that Follows*(_, call)  pattern assign(_, _) with stmt.stmt#=assign.stmt# with procedure.procName=procedure.procName with call.procName=variable.varName  such that Parent*(_, assign) with procedure.procName="print"  pattern assign(variable, _"5200+6600"_)  pattern assign(variable, _"9900*read"_) with 5600=print.stmt#  pattern if(variable, _, _)  pattern while(_, _)  pattern while(variable, _)  such that Affects(assign, stmt)  such that Calls*(procedure, procedure) with stmt.stmt#=9300  pattern while(_, _)  pattern assign(_, _"5400*5800"_)  pattern while(_, _)  pattern assign(print, _"800*3400"_)  pattern assign(while, _)  such that Modifies(print, "print")  such that Follows*(assign, print) with "while"=procedure.procName with call.stmt#=read.stmt# with 1700=print.stmt# with procedure.procName="call"  pattern if(_, _, _)  such that Uses(2, variable) with 7000=constant.value  pattern assign(_, "9900+2600") with constant.value=read.stmt#  such that Next*(call, 19)  pattern assign(variable, "(9800+8800)/2200") with print.varName="then"  pattern if(call, _, _)  pattern if(_, _, _) with call.stmt#=if.stmt#  such that Affects*(stmt, assign)  pattern while(else, _)  such that Uses(stmt, variable) with 6700=assign.stmt#  pattern if(procedure, _, _)  pattern if(variable, _, _)  pattern if(_, _, _) with call.procName="variable" with variable.varName="constant" with stmt.stmt#=5500  such that Modifies(procedure, "while") with call.stmt#=3200 with call.stmt#=if.stmt# with if.stmt#=read.stmt#  such that Calls(procedure, procedure)  such that Calls(procedure, _)  pattern assign(variable, _) with procedure.procName=read.varName  pattern if(if, _, _)  pattern assign(call, _"6000/if"_)  such that Follows*(assign, _)  such that Follows*(18, call)  such that Calls(procedure, procedure)  such that Modifies(print, variable)  pattern assign(variable, _) with procedure.procName="constant"  pattern assign(variable, _"2500-while"_)  pattern while(_, _)  pattern assign(constant, _"print*4900"_)  pattern while(then, _)  such that Next*(print, _) with constant.value=6000  pattern assign(procedure, "8000-assign")  pattern while(variable, _) with if.stmt#=2600 with print.varName="procedure" with "constant"=print.varName  such that Modifies(stmt, "then")  pattern if(_, _, _)  such that Calls(procedure, procedure)  pattern while(assign, _)  pattern while(procedure, _) with 2000=print.stmt# with variable.varName="if" with constant.value=constant.value  such that Calls*("while", procedure)  pattern assign(call, "8000-5200") with call.procName=read.varName  pattern assign(_, _) with 2900=stmt.stmt#  pattern if(constant, _, _)  pattern if(variable, _, _)  such that Next*(print, while)  such that Follows*(read, _) with call.procName=procedure.procName with procedure.procName=read.varName  pattern assign(variable, _)  such that Affects(_, stmt)  pattern assign(_, _) with 5400=if.stmt#  pattern while(_, _)  such that Affects(stmt, 4)  pattern assign(_, "9300+8400")  pattern assign(_, _"3600*3200"_) with 1500=assign.stmt#  pattern while(variable, _) with "assign"=print.varName  pattern while(_, _)  such that Parent*(print, _) with stmt.stmt#=8900  pattern assign(_, "7900-7900")  pattern if(else, _, _)  pattern while(print, _)  pattern while(variable, _)  pattern if(variable, _, _)  such that Parent*(_, stmt)  pattern if(variable, _, _)  pattern assign(if, _)  pattern if(variable, _, _)  such that Next(3, while)  such that Affects(assign, 18)  pattern assign(_, _)  pattern while(read, _)  pattern if(if, _, _) with print.stmt#=while.stmt#  pattern while(_, _) with while.stmt#=9000  pattern while(variable, _)  such that Parent*(4, while)  pattern while(_, _)  pattern assign(_, _"3600+8600"_)  pattern while(read, _)  pattern assign(_, "6700/5500")  pattern while(procedure, _)  such that Uses(call, "constant")  pattern assign(_, _"9000-while"_)  such that Follows*(call, 8)  pattern while(variable, _)  pattern while(variable, _) with variable.varName=variable.varName with 2400=if.stmt#  pattern assign(print, _"3500+8000"_)  pattern if(_, _, _) with print.varName="print"  such that Affects*(stmt, 26)  pattern if(if, _, _) with print.stmt#=3100 with variable.varName="call" with call.procName="read"  such that Affects*(stmt, stmt)  pattern if(variable, _, _) with 9900=if.stmt#  pattern assign(variable, "300+9200")  such that Calls*(procedure, _)  such that Affects*(assign, _)  pattern assign(_, "9500/2200")  pattern if(variable, _, _) with "else"=procedure.procName  pattern assign(variable, _)  pattern while(variable, _)  pattern if(_, _, _)  pattern if(_, _, _) with 1800=stmt.stmt#  pattern if(read, _, _) with call.procName=call.procName with call.procName=call.procName  pattern if(variable, _, _)  such that Calls(procedure, "call")  such that Affects*(21, assign)  pattern if(variable, _, _)  pattern while(_, _)  such that Calls(procedure, procedure) with 7500=while.stmt#  such that Parent*(assign, 13)  pattern if(variable, _, _) with constant.value=2200 with "procedure"=print.varName  pattern while(_, _)  pattern if(_, _, _)  pattern while(_, _)  such that Follows(25, if)  pattern assign(_, _"assign*1000"_)  pattern while(while, _)  such that Next(read, read) with call.stmt#=if.stmt#  pattern while(constant, _) with "assign"=read.varName  pattern assign(_, "5000*5900") with read.stmt#=read.stmt# with variable.varName="variable"  pattern if(_, _, _)  pattern if(_, _, _)  pattern assign(_, _"procedure/5700"_)  pattern while(variable, _) with procedure.procName="while"  pattern while(variable, _) with "read"=call.procName  such that Affects*(11, stmt)  such that Uses(17, variable) with call.procName=print.varName with call.procName="then"  pattern while(variable, _)  pattern if(_, _, _)  such that Calls*(_, procedure)  such that Parent*(_, print)  pattern while(variable, _)  pattern while(if, _)  pattern assign(_, _"3000*8000"_)  pattern assign(variable, "5900+read")  pattern assign(_, "2200/else")  pattern if(_, _, _)  pattern assign(constant, _)  such that Affects(_, assign)  pattern assign(variable, _)  such that Affects(_, stmt) with read.varName=read.varName with 200=assign.stmt# with constant.value=print.stmt#  pattern while(variable, _)  pattern if(_, _, _)  such that Affects(_, assign)  such that Follows(assign, assign)  pattern assign(variable, _"1400+3200"_)  such that Next*(stmt, print)  such that Follows(if, if)  pattern if(then, _, _)  pattern if(print, _, _)  such that Calls*("while", procedure)  pattern while(variable, _) with variable.varName=procedure.procName  such that Parent(if, while) with assign.stmt#=200  pattern assign(variable, _"3700/7300"_)  pattern assign(call, _"8100+2500"_)  pattern while(variable, _) with call.procName="variable"  pattern while(call, _)  such that Modifies(while, _)  such that Modifies(assign, _) with "else"=read.varName  such that Parent(call, _) with print.stmt#=stmt.stmt# with print.stmt#=9400  such that Follows*(_, while)  pattern if(_, _, _) with print.varName=variable.varName  pattern if(_, _, _) with procedure.procName="else"  such that Affects(6, stmt) with "call"=print.varName  such that Uses(if, "procedure")  such that Parent(_, assign) with "read"=print.varName  such that Parent*(call, 7)  such that Affects(14, assign)  pattern while(variable, _)  pattern assign(else, _)  pattern if(_, _, _)  pattern if(variable, _, _)  such that Follows*(stmt, assign)  such that Parent*(read, while)  pattern if(variable, _, _)  such that Affects*(21, stmt) with call.stmt#=while.stmt#  such that Affects(15, assign) with read.stmt#=call.stmt#  such that Parent*(if, call)  pattern if(_, _, _)  pattern assign(if, _)  such that Follows(25, if) with assign.stmt#=while.stmt# with 5800=read.stmt# with "print"=print.varName with 1700=print.stmt# with if.stmt#=if.stmt#  pattern if(variable, _, _)  pattern assign(variable, "call/7500") with call.procName=variable.varName  pattern assign(variable, _"7700*3000"_) with 2800=call.stmt# with "while"=call.procName with procedure.procName="read"  such that Modifies(while, variable) with while.stmt#=read.stmt# with procedure.procName=read.varName  pattern if(_, _, _) with print.stmt#=stmt.stmt#  pattern assign(variable, _"2700*2900"_) with 5600=assign.stmt#  such that Next*(29, if)  pattern assign(assign, _) with print.varName="procedure"  pattern assign(variable, "2000*if")  pattern assign(if, _)  such that Parent*(4, print)  pattern if(print, _, _)  pattern while(variable, _) with "procedure"=procedure.procName  pattern assign(_, "2600*7000")  pattern assign(read, "(2700+7900)/6500") with constant.value=stmt.stmt#  pattern assign(_, "500+3900") with 9100=assign.stmt#  pattern while(_, _)  pattern if(_, _, _)  such that Calls*(procedure, procedure)  such that Calls(procedure, procedure) with if.stmt#=8600 with 2200=while.stmt#  such that Next*(print, 20) with "variable"=call.procName with print.stmt#=while.stmt#  such that Modifies(28, variable) with procedure.procName="procedure"  pattern if(constant, _, _)  pattern if(_, _, _)  pattern if(constant, _, _)  such that Follows(_, while)  pattern if(variable, _, _) with 3700=call.stmt#  pattern while(_, _) with read.varName=variable.varName  such that Next(stmt, 14) with 5800=read.stmt# with "while"=call.procName  pattern assign(variable, _)  such that Calls*(procedure, procedure)  pattern if(assign, _, _)  pattern assign(variable, "(5400+6700)+9500")  pattern assign(print, _"4100/700"_)  pattern while(else, _)  pattern while(assign, _)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern assign(variable, _"(3700/1700)*4800"_)  pattern if(variable, _, _) with "while"=procedure.procName  pattern assign(constant, _"900/procedure"_)  such that Calls*(_, procedure)  such that Parent*(while, if) with stmt.stmt#=7500  pattern assign(variable, _)  pattern assign(variable, "3700+2700")  such that Next*(while, 6)  such that Follows*(assign, if)  such that Parent*(_, assign)  such that Affects*(assign, _) with print.varName="constant"  such that Modifies(print, variable)  pattern while(_, _) with read.stmt#=constant.value  pattern while(read, _) with print.stmt#=call.stmt#  pattern if(procedure, _, _)  such that Follows(while, 19)  pattern if(variable, _, _) with 3600=constant.value  pattern assign(_, "then-8400")  such that Parent*(while, stmt) with 2800=read.stmt#  such that Parent*(call, 18)  such that Uses(13, variable)  pattern while(_, _)  pattern assign(variable, "5500-8300")  pattern while(variable, _)  pattern while(then, _)  pattern if(variable, _, _)  pattern if(_, _, _)  such that Parent(read, _)  pattern assign(constant, _) with 2200=if.stmt# with 3800=read.stmt# with print.stmt#=print.stmt#  pattern if(variable, _, _)  pattern while(variable, _) with call.stmt#=3700 with 9900=assign.stmt#  such that Follows*(_, print) with read.varName="call"  such that Uses(assign, variable) with print.stmt#=6100 with 3500=if.stmt# with stmt.stmt#=call.stmt# with while.stmt#=3700  pattern while(variable, _)  pattern while(_, _) with variable.varName="call" with read.varName="read"  pattern if(if, _, _) with call.stmt#=read.stmt# 

5000
25 - Query 25
assign assign; variable variable; call call; print print; constant constant; stmt stmt; read read; while while; if if; procedure procedure; 
Select <assign, variable, call, print, constant, stmt, read, while, if, procedure> with "else"=call.procName with "then"=procedure.procName with while.stmt#=8700 with 1500=assign.stmt#  pattern assign(_, _)  such that Calls*("constant", procedure)  pattern while(variable, _) with procedure.procName="procedure"  such that Follows(while, call)  such that Follows(_, if)  pattern assign(variable, _"1000/2800"_)  pattern while(print, _) with stmt.stmt#=if.stmt#  pattern while(assign, _)  pattern assign(print, _) with if.stmt#=stmt.stmt# with while.stmt#=assign.stmt#  pattern assign(_, _"procedure/7100"_)  pattern assign(variable, _"3200-9300"_) with variable.varName="else"  pattern if(constant, _, _)  pattern assign(variable, "7300+400")  pattern assign(variable, _"5600/4100"_)  pattern assign(_, "6700-call")  pattern if(variable, _, _) with 200=if.stmt# with call.procName=procedure.procName with read.varName="procedure" with while.stmt#=stmt.stmt#  such that Parent*(_, read) with variable.varName="read"  pattern while(variable, _)  pattern if(variable, _, _) with assign.stmt#=7400  such that Follows(29, read)  such that Affects(assign, stmt)  pattern while(variable, _)  pattern assign(assign, _"8300/4900"_)  pattern if(constant, _, _)  such that Next*(print, 10) with "read"=call.procName  pattern if(variable, _, _) with print.varName="if"  such that Follows(assign, assign) with 4000=print.stmt# with variable.varName=variable.varName  pattern while(assign, _)  pattern while(variable, _)  such that Affects(24, stmt) with 5700=stmt.stmt#  pattern if(print, _, _)  such that Modifies(read, "else")  such that Modifies(if, variable)  pattern if(variable, _, _)  such that Calls*(procedure, _)  such that Follows(assign, _)  such that Calls(_, procedure) with "print"=call.procName with print.stmt#=call.stmt# with read.stmt#=9800 with "else"=read.varName  such that Parent(_, stmt)  such that Next*(stmt, 8)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern if(else, _, _)  pattern if(constant, _, _)  pattern if(if, _, _) with procedure.procName=print.varName with print.varName="call"  such that Next(read, _) with print.stmt#=stmt.stmt#  pattern while(variable, _)  pattern assign(assign, _"100-3900"_)  such that Parent*(_, stmt)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern if(assign, _, _) with read.varName=read.varName  pattern assign(_, "5700*100") with "variable"=call.procName  such that Affects(8, stmt)  pattern assign(call, _"(5100-8200)+else"_)  pattern while(_, _) with variable.varName="variable"  such that Follows(16, call) with if.stmt#=9600 with read.varName=print.varName  pattern assign(variable, _)  such that Modifies(15, variable) with read.varName="else" with print.varName="then"  pattern while(assign, _)  such that Parent(call, call) with "call"=variable.varName  pattern while(if, _)  such that Parent(assign, 18) with variable.varName=read.varName  pattern while(print, _) with read.stmt#=8700  pattern if(variable, _, _)  pattern assign(variable, _)  pattern while(variable, _) with "assign"=procedure.procName  pattern if(variable, _, _) with "print"=print.varName with 1800=while.stmt#  pattern while(variable, _)  pattern while(variable, _)  such that Affects*(stmt, stmt)  pattern while(while, _)  pattern if(constant, _, _)  pattern while(if, _)  pattern while(_, _)  pattern if(variable, _, _)  such that Next*(call, _)  such that Affects*(assign, stmt)  pattern while(variable, _)  pattern while(variable, _)  such that Affects*(_, stmt) with "procedure"=call.procName  such that Next(read, _)  such that Calls(_, procedure) with "assign"=read.varName  pattern while(variable, _) with print.varName="call" with if.stmt#=print.stmt# with procedure.procName="constant"  pattern if(variable, _, _) with call.procName=variable.varName  pattern assign(_, _"4900-9400"_) with 8600=constant.value with variable.varName=read.varName  pattern while(_, _)  pattern assign(variable, "3700-6500")  pattern if(_, _, _)  such that Uses(procedure, "constant") with assign.stmt#=6300 with 4400=read.stmt# with read.stmt#=3800  pattern assign(_, _"4000/9000"_) with print.stmt#=stmt.stmt#  pattern while(variable, _) with print.varName="constant" with "read"=read.varName  such that Affects(assign, _) with constant.value=while.stmt#  such that Follows*(call, _)  pattern while(print, _) with print.varName=procedure.procName with 7600=read.stmt# with constant.value=constant.value  pattern assign(variable, "3400*1800")  pattern while(assign, _)  pattern assign(variable, _"(7200/1900)*5300"_) with while.stmt#=3900 with 900=while.stmt#  pattern while(_, _)  pattern if(variable, _, _) with "print"=variable.varName  pattern if(variable, _, _)  such that Calls(procedure, _) with if.stmt#=9200  pattern assign(_, _)  such that Affects(9, assign)  pattern if(variable, _, _)  pattern while(variable, _) with print.varName=print.varName with 9500=print.stmt#  pattern assign(variable, "9800+4200")  such that Next*(if, assign)  such that Modifies(15, variable) with call.procName="else"  pattern assign(print, "2400+3900")  pattern while(call, _)  pattern while(if, _)  such that Calls(procedure, procedure)  such that Next*(_, read)  such that Affects(assign, 18)  such that Affects(28, stmt)  such that Calls*("if", procedure)  pattern while(variable, _)  pattern if(variable, _, _)  pattern assign(variable, _)  such that Parent(19, if)  pattern while(if, _)  pattern assign(_, "(3500+5000)-3800") with while.stmt#=call.stmt# with stmt.stmt#=3400  pattern assign(variable, _"(4500*4700)-else"_)  pattern while(variable, _)  such that Follows(_, assign)  pattern while(procedure, _) with if.stmt#=while.stmt#  pattern assign(variable, _"600+1100"_) with variable.varName="else" with call.procName=print.varName  pattern if(_, _, _)  such that Follows*(if, read)  such that Next(while, read) with variable.varName="print"  such that Parent(19, if)  pattern while(variable, _) with if.stmt#=3000 with variable.varName="while"  pattern while(then, _) with assign.stmt#=9200  pattern if(variable, _, _) with constant.value=constant.value  pattern while(_, _)  such that Follows(9, print) with 7300=assign.stmt#  pattern if(variable, _, _)  pattern assign(_, "3800+4100") with "call"=call.procName with read.varName="variable"  such that Next(read, _)  such that Parent(_, read) with read.stmt#=call.stmt# with 5500=read.stmt#  pattern assign(variable, _"while+9300"_) with "print"=read.varName  pattern while(call, _) with print.stmt#=constant.value  pattern assign(else, _)  pattern if(then, _, _)  pattern if(_, _, _)  pattern if(variable, _, _) with call.procName=read.varName  such that Parent(14, assign) with print.varName="then" with constant.value=stmt.stmt#  such that Next(assign, 27)  pattern assign(print, _) with 2500=print.stmt#  such that Uses(assign, _) with print.stmt#=5900  pattern while(_, _)  such that Uses(stmt, "else")  pattern while(variable, _) with read.varName=call.procName with while.stmt#=assign.stmt#  such that Next(if, _)  pattern assign(while, "(9400-2800)-3300") with "assign"=read.varName  pattern while(variable, _)  such that Follows*(20, if)  such that Calls("call", procedure)  pattern while(variable, _)  pattern assign(variable, "2700*5700")  pattern if(_, _, _)  such that Affects*(stmt, stmt)  pattern while(variable, _) with while.stmt#=while.stmt#  pattern assign(variable, _"9100/6100"_)  such that Next(_, if)  such that Modifies(stmt, variable) with procedure.procName=procedure.procName with call.stmt#=constant.value  pattern assign(variable, _) with 2000=print.stmt# with call.procName=procedure.procName with 2300=if.stmt#  pattern assign(variable, _"6300/then"_)  pattern assign(while, _)  such that Uses(8, variable)  pattern assign(variable, "7200*8700")  such that Affects(assign, 4) with "read"=procedure.procName  such that Next(call, _)  such that Follows(22, call)  such that Next(24, read) with "read"=call.procName  such that Follows(call, _) with if.stmt#=9900  pattern assign(assign, _) with procedure.procName=procedure.procName  pattern assign(_, _)  pattern assign(_, _"300/6500"_) with assign.stmt#=1800  such that Follows*(read, print)  pattern while(assign, _)  pattern assign(_, _"3700*7700"_)  pattern while(variable, _) with stmt.stmt#=7400  such that Next(call, if)  such that Affects*(stmt, _)  pattern assign(constant, _)  pattern while(variable, _) with "call"=call.procName  pattern while(variable, _)  pattern assign(_, "2500/600")  pattern if(_, _, _)  pattern while(variable, _) with print.stmt#=assign.stmt#  such that Next(stmt, assign) with "then"=procedure.procName  pattern if(_, _, _) with "while"=call.procName with read.varName=procedure.procName  pattern if(_, _, _)  pattern while(_, _)  such that Calls(_, procedure)  pattern while(read, _)  pattern if(_, _, _)  pattern assign(variable, "2100*2700")  pattern assign(if, _) with while.stmt#=print.stmt#  such that Follows(8, while)  pattern while(variable, _)  pattern if(variable, _, _) with print.varName="variable" with if.stmt#=while.stmt#  pattern if(_, _, _)  pattern assign(variable, _)  pattern while(_, _)  pattern if(constant, _, _)  pattern assign(variable, _"800*1700"_)  such that Next(1, if)  pattern if(_, _, _)  such that Parent(print, call) with call.stmt#=constant.value  pattern if(call, _, _)  such that Modifies(call, "then")  pattern assign(_, _"(6200/6900)/8800"_)  such that Uses(22, variable)  pattern while(variable, _)  pattern while(variable, _) with 200=constant.value with while.stmt#=3700 with print.stmt#=call.stmt#  such that Parent(while, 23) with stmt.stmt#=constant.value  pattern while(variable, _)  pattern if(if, _, _)  pattern assign(while, "3700+constant")  such that Parent(print, stmt) with "else"=procedure.procName with read.stmt#=6900  such that Calls("then", procedure) with variable.varName=variable.varName  pattern if(read, _, _)  pattern if(variable, _, _)  such that Follows*(13, while) with print.varName="call"  pattern if(read, _, _)  pattern while(variable, _)  pattern assign(while, "6200-1100")  pattern while(_, _)  such that Calls(procedure, "constant")  such that Next*(assign, 15) with 3900=assign.stmt# with "read"=variable.varName  pattern assign(print, "5800/4000")  pattern assign(assign, _)  such that Calls*(procedure, "procedure") with stmt.stmt#=9800  such that Calls(procedure, procedure)  pattern assign(variable, _"7200+1400"_) with call.stmt#=7700 with print.varName="assign"  pattern if(variable, _, _)  such that Parent*(6, stmt)  such that Calls("while", procedure)  pattern while(variable, _)  pattern if(then, _, _)  pattern assign(read, "((4900/6800)+9900)+6500")  pattern while(_, _) with "procedure"=variable.varName with if.stmt#=if.stmt#  pattern if(variable, _, _)  such that Parent(assign, 24)  such that Calls*(_, procedure)  pattern assign(if, "400/9400")  pattern while(_, _)  such that Follows(14, print)  pattern assign(then, "800+3200") with 8400=assign.stmt# with procedure.procName="constant"  pattern if(_, _, _)  such that Affects*(_, assign)  pattern while(read, _) with assign.stmt#=call.stmt#  pattern assign(call, "5900/1700")  pattern if(variable, _, _) with constant.value=100  such that Uses(assign, variable)  pattern while(_, _)  pattern assign(variable, "(6300-7100)-3000") with procedure.procName=print.varName  pattern assign(else, "(5300*200)+900")  such that Affects*(_, stmt)  pattern if(variable, _, _) with "call"=print.varName with print.varName="then" with while.stmt#=call.stmt# with 300=while.stmt#  pattern if(variable, _, _)  such that Parent(while, 14) with while.stmt#=7000  such that Affects(_, stmt)  such that Follows*(_, read) with call.procName="if"  such that Next*(assign, _)  such that Next(while, read)  pattern assign(variable, _)  such that Follows*(29, read)  such that Follows*(if, if) with while.stmt#=8200  pattern assign(_, _)  pattern while(variable, _)  pattern assign(variable, _) with "constant"=call.procName with while.stmt#=4200 with 5100=assign.stmt#  such that Next(10, while)  pattern while(_, _)  pattern assign(call, "2700/4100")  pattern assign(_, _) with "procedure"=call.procName  pattern assign(_, _"2200+5300"_)  such that Calls(procedure, "print")  such that Calls*(procedure, _)  such that Next(read, if)  pattern while(if, _)  pattern assign(read, "else-9700")  such that Follows(stmt, if)  pattern assign(variable, _)  such that Calls(procedure, "else") with 9200=while.stmt#  such that Uses(stmt, _)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern while(_, _)  such that Affects(29, stmt)  pattern assign(_, _)  such that Uses(read, _)  pattern if(_, _, _)  such that Follows*(read, if) with read.varName="if" with procedure.procName=procedure.procName with read.stmt#=constant.value  pattern assign(variable, "8000/3800") with while.stmt#=2300  pattern assign(_, _"7200*8700"_)  such that Modifies(call, variable)  pattern assign(_, _) with while.stmt#=7900  pattern assign(while, "8700-4600")  pattern assign(variable, "2600*7700") with 1200=print.stmt#  such that Next*(_, if)  such that Parent(print, 27)  such that Next(while, 29) with 3700=constant.value with call.procName=variable.varName  pattern if(_, _, _) with "while"=read.varName  pattern while(assign, _)  pattern if(variable, _, _)  pattern while(assign, _) with constant.value=9200 with call.stmt#=1300  pattern assign(variable, "(print+3000)+2500")  pattern assign(_, _) with read.stmt#=assign.stmt#  such that Affects*(assign, _)  pattern if(variable, _, _)  pattern while(else, _) with variable.varName=procedure.procName  pattern while(variable, _) with 1900=read.stmt#  such that Modifies(print, _)  pattern if(_, _, _) with "constant"=procedure.procName  such that Next*(13, assign) with procedure.procName="print" with print.varName=procedure.procName  such that Calls*("variable", procedure)  pattern assign(assign, _"2900+1700"_) with variable.varName="call"  pattern if(variable, _, _)  such that Follows(call, _)  pattern assign(if, "300/7200")  pattern if(procedure, _, _)  pattern if(_, _, _) with 1600=assign.stmt#  such that Calls(_, procedure) with 9800=if.stmt#  pattern assign(_, _"5500/2800"_)  such that Parent*(print, if)  pattern if(read, _, _)  pattern assign(constant, _"9100*300"_)  pattern assign(_, "(300-9100)*7900") with "variable"=variable.varName  pattern assign(if, _"7000/1100"_)  such that Calls*(procedure, _)  pattern while(_, _)  such that Next*(while, read)  pattern while(call, _) 

5000
26 - Query 26
assign assign; print print; variable variable; constant constant; stmt stmt; read read; procedure procedure; if if; while while; call call; 
Select <assign, print, variable, constant, stmt, read, procedure, if, while, call>  pattern if(_, _, _) with read.varName="assign"  pattern assign(call, "9400+5500")  such that Parent(call, _)  pattern assign(_, _) with "if"=print.varName with 4200=stmt.stmt# with "constant"=read.varName with variable.varName=read.varName  pattern assign(procedure, _"7700*9000"_) with procedure.procName=print.varName  pattern if(variable, _, _)  pattern while(variable, _)  such that Modifies(procedure, variable)  pattern if(variable, _, _)  such that Uses(if, variable)  pattern while(variable, _)  pattern while(_, _)  such that Modifies(10, variable)  such that Next(if, 3) with while.stmt#=4300  such that Follows*(if, assign)  pattern assign(_, _"5700*3000"_)  pattern while(constant, _)  pattern if(_, _, _)  pattern assign(variable, "(3900+100)-3100")  pattern assign(_, "constant*6900")  such that Parent*(read, read)  pattern if(variable, _, _)  pattern if(constant, _, _) with call.stmt#=4800  such that Next(18, call)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern while(constant, _)  pattern assign(variable, _"2500+2100"_) with call.stmt#=while.stmt#  such that Modifies(print, _)  such that Affects(7, assign)  pattern if(variable, _, _)  such that Follows*(if, assign)  pattern if(variable, _, _) with print.stmt#=call.stmt#  pattern while(_, _)  such that Next(print, if)  pattern while(_, _) with variable.varName="then" with procedure.procName=read.varName  pattern while(variable, _) with "procedure"=print.varName  pattern if(_, _, _) with 9600=while.stmt#  such that Uses(14, variable)  such that Calls(procedure, _)  such that Calls(_, procedure) with 1800=print.stmt#  pattern assign(constant, _"assign-7800"_) with stmt.stmt#=stmt.stmt# with call.stmt#=if.stmt# with stmt.stmt#=if.stmt# with procedure.procName="print"  pattern if(variable, _, _)  pattern while(variable, _) with 4900=assign.stmt#  pattern if(variable, _, _) with "else"=read.varName  pattern if(_, _, _)  such that Next(29, stmt)  such that Calls(_, procedure)  pattern assign(variable, _"9900+3500"_) with procedure.procName=read.varName with 3300=assign.stmt# with stmt.stmt#=print.stmt#  such that Affects(stmt, _)  such that Parent*(24, print) with "else"=call.procName  such that Modifies(10, variable)  pattern assign(while, _"4900+assign"_)  pattern if(_, _, _)  such that Next(_, while)  pattern while(variable, _) with 700=if.stmt#  pattern if(_, _, _) with 5900=assign.stmt#  pattern if(_, _, _) with 7000=assign.stmt#  pattern if(_, _, _)  pattern assign(read, _)  pattern if(if, _, _)  such that Parent(_, if)  such that Uses(call, variable)  pattern if(variable, _, _) with 7900=assign.stmt# with "if"=procedure.procName  pattern if(_, _, _)  pattern if(call, _, _)  pattern assign(procedure, _"7900-9500"_) with variable.varName="variable"  pattern while(variable, _)  pattern assign(print, _"3200-5500"_)  such that Affects(assign, _)  pattern assign(constant, _"900+5200"_)  pattern if(_, _, _)  pattern assign(call, "4000+3400")  pattern if(variable, _, _)  pattern if(variable, _, _) with "else"=read.varName with "read"=read.varName with procedure.procName="else"  such that Affects*(_, assign)  pattern while(_, _)  such that Parent(read, call)  pattern assign(_, _"(4700/6800)+9700"_)  such that Modifies(1, variable) with read.stmt#=700  such that Parent*(assign, _)  such that Calls(procedure, procedure)  pattern while(_, _)  such that Parent(_, call) with read.varName=call.procName with 6100=read.stmt# with print.varName="if" with 700=call.stmt#  such that Follows*(while, 10)  pattern while(else, _)  such that Follows*(_, if)  pattern if(_, _, _) with print.stmt#=read.stmt#  pattern while(call, _)  such that Calls*(procedure, procedure) with procedure.procName="print" with "then"=procedure.procName  pattern while(_, _) with call.procName="assign" with print.varName="then" with stmt.stmt#=200  such that Parent(_, print) with assign.stmt#=read.stmt#  pattern assign(_, _"5800*6200"_)  pattern if(variable, _, _)  such that Next(13, assign) with "assign"=call.procName with print.stmt#=7200  pattern while(variable, _) with stmt.stmt#=call.stmt# with if.stmt#=constant.value  such that Affects(assign, _)  such that Next(13, read)  pattern assign(_, _)  pattern assign(_, _)  such that Follows*(read, _)  pattern assign(call, _)  pattern while(assign, _)  pattern while(print, _)  such that Calls*(procedure, procedure) with variable.varName="then"  pattern while(_, _)  pattern if(variable, _, _)  pattern if(variable, _, _) with print.varName=procedure.procName  such that Next*(23, assign)  pattern if(variable, _, _) with "read"=read.varName  such that Next(print, _) with 6900=read.stmt# with call.procName=variable.varName  pattern if(_, _, _)  pattern assign(variable, _) with read.varName=print.varName  pattern if(variable, _, _)  pattern assign(variable, _)  such that Follows*(_, assign)  such that Follows*(read, read)  such that Next*(stmt, if)  pattern if(_, _, _) with 3300=print.stmt#  such that Calls(procedure, "read")  pattern assign(_, "1200-6200") with read.varName=call.procName  pattern while(_, _) with 8700=if.stmt# with 4800=assign.stmt#  pattern assign(assign, _)  pattern if(variable, _, _)  such that Calls*("if", procedure)  pattern assign(constant, _)  pattern if(variable, _, _)  pattern while(variable, _)  such that Uses(assign, "procedure")  such that Follows(call, read)  pattern assign(variable, _)  pattern assign(print, "6200*5700")  such that Calls*("procedure", procedure)  pattern while(call, _)  pattern assign(procedure, _) with read.stmt#=constant.value  such that Calls(procedure, _) with call.procName=call.procName  pattern while(while, _) with 2100=constant.value  pattern assign(then, "2300-100")  such that Follows*(_, assign)  such that Calls*(procedure, _)  pattern while(variable, _) with print.stmt#=8800  pattern if(variable, _, _) with "else"=variable.varName with assign.stmt#=1700  pattern while(read, _) with call.stmt#=constant.value with variable.varName=print.varName  pattern while(_, _) with read.varName=read.varName  pattern assign(else, _) with 7500=if.stmt#  such that Uses(22, variable)  such that Parent*(stmt, 13) with 9000=constant.value  such that Modifies(stmt, variable) with print.varName=variable.varName  pattern if(if, _, _) with variable.varName=call.procName  pattern while(_, _) with call.stmt#=3200  such that Modifies(26, variable)  pattern if(_, _, _)  such that Parent*(1, print) with call.stmt#=while.stmt#  pattern while(_, _) with "if"=print.varName  pattern assign(variable, _) with print.stmt#=1200 with call.procName=procedure.procName  pattern if(_, _, _)  pattern while(variable, _) with print.varName=variable.varName  pattern assign(call, _) with while.stmt#=assign.stmt#  pattern while(read, _) with assign.stmt#=6500  pattern assign(variable, _"5600-8200"_) with "print"=call.procName with call.stmt#=call.stmt#  pattern assign(_, "((1300/1900)-6300)-5900")  such that Modifies(read, _)  such that Next*(assign, 7)  such that Next(4, while) with stmt.stmt#=6800  such that Modifies(read, variable)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern assign(variable, "(7500-if)-1700")  such that Calls(procedure, _)  pattern while(_, _)  such that Uses(assign, _)  pattern if(assign, _, _)  pattern assign(variable, _"8300/8900"_)  pattern assign(_, _"5100/4600"_)  pattern if(variable, _, _)  pattern if(if, _, _)  such that Follows(stmt, 24)  such that Next(_, call) with 1200=stmt.stmt# with "assign"=call.procName  pattern while(while, _)  pattern assign(_, _"assign/procedure"_) with while.stmt#=4700  pattern while(variable, _)  pattern while(variable, _)  pattern if(_, _, _)  pattern assign(procedure, "2600-3200")  such that Parent*(print, _)  pattern assign(variable, "2100+7500") with stmt.stmt#=5700  pattern while(read, _) with "then"=procedure.procName with "procedure"=call.procName with 7900=assign.stmt#  pattern while(variable, _)  such that Calls(_, procedure)  pattern assign(_, _) with read.varName="print"  such that Calls*(procedure, "else")  such that Follows*(while, 12)  pattern assign(_, _)  pattern assign(variable, _)  such that Follows(while, 22) with read.varName=call.procName with assign.stmt#=constant.value  pattern while(variable, _)  pattern while(variable, _)  pattern while(then, _)  such that Affects*(24, stmt)  such that Follows(11, while) with read.stmt#=8900  pattern assign(_, _)  pattern while(if, _)  pattern while(_, _)  pattern while(variable, _)  pattern while(variable, _) with stmt.stmt#=7600  pattern assign(_, "5600/7200")  pattern while(_, _)  such that Follows(assign, 18)  such that Affects*(stmt, 7) with read.varName="print"  pattern while(print, _) with "else"=call.procName  such that Calls*(procedure, procedure)  pattern while(variable, _)  such that Calls(_, procedure)  pattern assign(variable, _"7600+7500"_)  pattern if(variable, _, _)  pattern while(variable, _) with 5800=print.stmt#  pattern while(variable, _) with "then"=read.varName  pattern while(_, _)  pattern while(variable, _)  pattern assign(_, _"8000*3500"_)  pattern while(variable, _) with stmt.stmt#=while.stmt#  such that Parent*(13, print) with "constant"=variable.varName with read.varName=variable.varName  pattern if(variable, _, _)  pattern assign(call, _"1900/7400"_)  pattern while(if, _) with assign.stmt#=4600  pattern while(_, _)  pattern if(_, _, _) with print.varName=call.procName with print.varName="call"  pattern if(variable, _, _)  such that Next*(assign, if)  pattern assign(_, "9100*8300")  pattern if(constant, _, _)  pattern assign(_, "8900/8000")  such that Uses(stmt, "procedure")  such that Calls*(_, procedure) with read.stmt#=2700  such that Parent(while, 22) with procedure.procName="call" with call.stmt#=call.stmt# with assign.stmt#=2700 with "if"=read.varName  pattern if(if, _, _)  pattern while(_, _)  such that Affects*(stmt, _) with read.varName=print.varName  such that Uses(28, variable)  such that Modifies(stmt, variable) with call.procName="assign"  pattern if(else, _, _)  pattern if(variable, _, _) with read.varName="while"  such that Follows(call, _)  such that Follows(18, stmt)  pattern if(read, _, _)  pattern while(call, _)  pattern while(variable, _)  pattern assign(print, _"5800/200"_) with print.stmt#=700  such that Follows*(_, if) with 4600=call.stmt#  such that Next*(print, _)  pattern assign(variable, _)  pattern while(_, _)  such that Parent(stmt, 14)  pattern if(while, _, _) with "then"=variable.varName with 300=print.stmt#  such that Calls*(procedure, procedure)  pattern while(if, _)  pattern assign(while, "assign-7500")  pattern if(_, _, _)  such that Uses(while, _)  such that Modifies(21, variable)  pattern assign(variable, "7500*1800") with 3300=read.stmt# with 6500=read.stmt#  pattern assign(_, "3900/call")  such that Affects(stmt, stmt)  pattern assign(assign, "5900/9000") with "if"=print.varName  such that Parent*(if, call) with variable.varName="constant" with print.varName=print.varName  pattern if(_, _, _) with procedure.procName=call.procName  such that Parent(_, stmt)  pattern if(_, _, _) with constant.value=if.stmt# with call.procName=procedure.procName  pattern if(while, _, _)  such that Parent*(_, assign)  pattern while(_, _)  pattern if(_, _, _) with "assign"=variable.varName  pattern if(variable, _, _)  pattern assign(if, "if+9300") with "print"=variable.varName with variable.varName="assign"  pattern assign(variable, _"9700*4300"_) with "constant"=call.procName  pattern while(_, _)  pattern if(variable, _, _) with constant.value=6200  pattern assign(_, "4500/9100") with call.procName="read"  pattern assign(while, "900/6800")  pattern assign(variable, "8500/3100") with procedure.procName="constant" with print.varName="call" with "variable"=call.procName  pattern if(read, _, _)  pattern if(_, _, _)  such that Next*(stmt, 22)  pattern if(_, _, _)  pattern while(variable, _)  pattern while(_, _)  such that Follows*(while, _) with if.stmt#=while.stmt#  pattern assign(variable, _)  pattern while(_, _)  pattern while(_, _)  pattern while(variable, _) with stmt.stmt#=2900 with stmt.stmt#=print.stmt#  pattern if(variable, _, _)  such that Calls(procedure, "assign")  pattern assign(_, "9300*6600")  such that Calls("variable", procedure)  such that Parent(9, assign)  such that Calls(_, procedure) with call.stmt#=5200  such that Follows*(_, call) with procedure.procName="while" with "print"=print.varName  pattern if(variable, _, _)  pattern if(_, _, _)  such that Follows*(stmt, read)  such that Affects(stmt, 1)  pattern assign(then, _) with 400=read.stmt# with print.varName=variable.varName with 6900=print.stmt#  such that Modifies(while, "procedure")  such that Follows*(stmt, 7)  such that Affects(_, assign)  such that Affects(assign, assign)  pattern while(_, _)  such that Calls*("print", procedure)  pattern while(_, _)  such that Modifies(while, _) with "while"=procedure.procName  such that Next(if, 12)  such that Modifies(read, "if")  such that Affects(stmt, stmt)  pattern if(variable, _, _) with print.varName="while" with variable.varName="variable" with "call"=variable.varName with variable.varName="while"  such that Parent(assign, call)  such that Affects*(_, assign)  such that Follows*(print, while)  pattern if(_, _, _)  such that Calls*(procedure, procedure)  pattern if(read, _, _)  pattern while(_, _)  pattern if(variable, _, _)  pattern assign(_, "800/2200")  pattern if(_, _, _)  pattern while(variable, _)  such that Next*(assign, stmt)  pattern if(variable, _, _)  pattern while(_, _)  pattern while(variable, _) with "constant"=variable.varName  such that Uses(11, variable)  such that Calls*(procedure, procedure) with print.stmt#=stmt.stmt# with 4100=call.stmt# with "else"=read.varName with call.procName="else"  pattern if(procedure, _, _)  pattern if(procedure, _, _)  such that Parent*(_, print)  pattern while(variable, _)  pattern assign(variable, _) with "constant"=variable.varName  such that Affects*(13, assign)  pattern if(_, _, _)  pattern while(print, _)  such that Affects*(19, stmt)  pattern if(_, _, _)  pattern assign(_, _)  such that Next(read, stmt) with print.stmt#=if.stmt# 

5000
27 - Query 27
variable variable; print print; assign assign; constant constant; stmt stmt; read read; procedure procedure; while while; if if; call call; 
Select <variable, print, assign, constant, stmt, read, procedure, while, if, call> with read.stmt#=1500 with print.varName=variable.varName  such that Modifies(procedure, "if")  such that Calls(_, procedure) with "if"=variable.varName with while.stmt#=call.stmt#  such that Follows(_, print) with read.varName=variable.varName with call.stmt#=if.stmt#  such that Parent*(read, _) with if.stmt#=assign.stmt# with assign.stmt#=8900 with stmt.stmt#=4100  such that Modifies(call, "read")  pattern if(assign, _, _)  pattern assign(variable, "else/3800")  pattern assign(variable, _"2900/9600"_)  pattern while(variable, _)  pattern while(assign, _)  pattern assign(_, _) with "then"=procedure.procName  pattern while(_, _)  pattern assign(variable, _)  such that Calls*(_, procedure)  pattern if(read, _, _) with assign.stmt#=assign.stmt#  pattern if(_, _, _)  such that Affects(5, assign) with read.varName=read.varName  pattern while(variable, _)  pattern while(variable, _) with procedure.procName=read.varName with procedure.procName="call"  such that Follows*(print, assign) with 500=call.stmt# with print.stmt#=2500  such that Calls(procedure, "print")  pattern while(if, _) with "then"=call.procName with 1000=print.stmt# with "variable"=print.varName  such that Parent*(while, _)  pattern assign(variable, "6400-7300") with call.procName=variable.varName with read.varName="call"  pattern assign(_, "8300/2200")  pattern assign(_, _)  pattern while(if, _)  such that Next(29, assign)  pattern if(variable, _, _) with "assign"=call.procName  such that Follows(while, read) with print.varName=read.varName  pattern while(else, _)  such that Next*(_, print) with stmt.stmt#=while.stmt#  such that Affects(stmt, _)  pattern if(variable, _, _)  such that Calls*(procedure, _)  such that Follows(assign, read)  pattern if(_, _, _)  such that Follows(print, 15)  pattern while(then, _)  such that Next*(_, call)  pattern while(print, _) with while.stmt#=stmt.stmt#  pattern if(variable, _, _)  pattern while(_, _)  pattern if(while, _, _) with read.varName=variable.varName with print.stmt#=call.stmt#  such that Affects*(stmt, _)  such that Uses(print, "while") with constant.value=900 with procedure.procName=procedure.procName  such that Follows(if, 10)  pattern if(while, _, _) with call.procName=variable.varName with 8300=stmt.stmt#  pattern if(_, _, _)  such that Parent*(print, _)  such that Calls*(procedure, _)  such that Parent*(read, call)  such that Next*(while, _)  pattern while(_, _)  such that Follows*(print, _)  such that Affects*(assign, assign) with assign.stmt#=6200  pattern if(then, _, _)  such that Calls*(procedure, procedure)  pattern if(variable, _, _) with stmt.stmt#=read.stmt#  such that Modifies(call, "print")  pattern if(while, _, _) with assign.stmt#=7500  pattern while(variable, _)  pattern assign(variable, _) with stmt.stmt#=3500  pattern assign(variable, _"5600+8300"_)  pattern while(if, _)  pattern while(assign, _)  such that Uses(if, _)  pattern while(constant, _)  pattern if(_, _, _)  pattern if(_, _, _)  such that Modifies(print, _)  pattern assign(_, _"5700/700"_)  pattern while(variable, _) with while.stmt#=while.stmt#  pattern assign(variable, "7200*3300") with call.procName="assign"  pattern while(variable, _) with 9100=read.stmt#  such that Follows(_, call)  pattern if(_, _, _)  pattern assign(variable, _"while-5400"_)  pattern assign(read, _)  such that Uses(stmt, "then")  pattern assign(_, _"1600+6900"_)  pattern if(_, _, _)  such that Calls("assign", procedure)  pattern while(variable, _) with 9900=print.stmt#  pattern while(_, _)  pattern assign(assign, _)  pattern if(constant, _, _)  pattern while(_, _)  pattern if(_, _, _)  pattern while(then, _)  pattern assign(read, "7700/4200")  pattern if(_, _, _)  pattern assign(print, "(9700-3100)*8800")  such that Affects(_, stmt)  such that Follows(_, assign) with 9000=call.stmt#  such that Parent*(while, _)  pattern if(else, _, _)  pattern while(_, _)  such that Parent(assign, 24) with "while"=call.procName with assign.stmt#=assign.stmt#  pattern assign(_, _)  pattern while(_, _)  such that Uses(procedure, variable)  pattern while(procedure, _)  such that Next(call, _) with "call"=variable.varName with variable.varName="read"  such that Follows*(read, print)  such that Modifies(18, variable)  pattern while(_, _)  pattern assign(_, "procedure/if")  pattern assign(_, _)  such that Follows*(read, 24) with call.stmt#=2400  such that Calls(procedure, _)  such that Next(_, read)  such that Calls(procedure, "else")  pattern assign(_, _"700-1900"_)  pattern if(variable, _, _) with "if"=variable.varName  pattern assign(variable, _)  pattern assign(procedure, "5300+100") with 4100=constant.value  such that Uses(15, variable) with 4500=stmt.stmt#  pattern while(constant, _)  pattern assign(variable, _"900/6900"_) with "then"=procedure.procName  such that Parent*(assign, 2) with stmt.stmt#=8700 with variable.varName=print.varName  such that Parent*(read, print) with print.varName="else"  such that Follows*(print, read)  pattern if(variable, _, _)  such that Follows*(_, if) with read.varName="procedure"  pattern if(variable, _, _)  pattern while(constant, _)  such that Follows*(_, stmt)  such that Calls*(procedure, procedure)  pattern if(variable, _, _) with procedure.procName=variable.varName  pattern if(variable, _, _)  pattern assign(_, "6100*8900") with stmt.stmt#=3600  pattern assign(while, "600-1800") with "constant"=variable.varName  pattern while(variable, _)  such that Follows(_, while)  pattern while(variable, _)  such that Follows*(print, stmt) with call.procName=read.varName  such that Uses(procedure, _)  pattern while(_, _) with if.stmt#=stmt.stmt#  pattern if(variable, _, _)  pattern while(variable, _)  pattern assign(read, _) with "then"=print.varName with assign.stmt#=800 with procedure.procName="else" with 9100=constant.value  such that Follows*(_, if) with constant.value=2300 with while.stmt#=constant.value  such that Affects(assign, stmt) with "variable"=print.varName  pattern assign(else, _"400+9600"_) with read.varName=variable.varName with "variable"=call.procName  pattern if(variable, _, _)  pattern if(_, _, _)  pattern if(while, _, _)  pattern if(if, _, _) with call.procName="constant" with while.stmt#=stmt.stmt#  such that Next(28, if)  such that Parent(call, while)  pattern assign(_, _) with "variable"=print.varName with variable.varName=procedure.procName  pattern while(_, _) with constant.value=6600  pattern while(assign, _)  such that Calls*("variable", procedure)  pattern assign(if, "2200+1800")  such that Parent(1, print)  pattern if(variable, _, _) with assign.stmt#=4100 with constant.value=600  pattern while(_, _)  pattern while(_, _)  such that Parent(6, read)  such that Calls*(procedure, _)  pattern assign(assign, _) with variable.varName="variable" with while.stmt#=4500 with "then"=print.varName with read.stmt#=5600 with assign.stmt#=call.stmt#  such that Parent(23, call)  pattern assign(_, _) with procedure.procName=print.varName  pattern while(then, _) with procedure.procName=call.procName with variable.varName="procedure"  such that Parent(print, call)  pattern while(variable, _)  such that Modifies(call, _) with "print"=read.varName with constant.value=while.stmt#  pattern assign(_, _) with read.varName="print"  pattern assign(assign, _) with 1200=print.stmt#  such that Calls("print", procedure)  pattern assign(variable, _)  pattern while(while, _) with "print"=read.varName  pattern assign(variable, "8000+7800")  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern assign(variable, _"7100/3800"_) with constant.value=stmt.stmt#  pattern assign(_, _"2100+8900"_)  pattern while(_, _)  pattern if(_, _, _)  pattern assign(if, _"8200/constant"_)  such that Parent(_, print) with while.stmt#=if.stmt#  pattern assign(_, _) with while.stmt#=7500 with 3000=constant.value  pattern if(print, _, _)  pattern assign(variable, _)  pattern if(variable, _, _)  pattern while(_, _)  such that Parent*(25, call)  pattern assign(variable, _"4300/3700"_) with while.stmt#=while.stmt#  pattern if(variable, _, _)  pattern if(_, _, _)  such that Follows(assign, assign)  pattern assign(_, _)  such that Calls*(procedure, "print")  such that Parent(29, if)  pattern assign(_, _)  such that Affects*(_, stmt)  such that Uses(28, variable) with 6600=read.stmt#  such that Parent*(_, if)  pattern while(read, _)  pattern while(_, _) with print.stmt#=2600 with stmt.stmt#=while.stmt#  such that Next(_, call)  pattern assign(_, _"6400-7800"_)  such that Parent(print, _)  such that Parent(stmt, stmt)  pattern while(_, _) with "procedure"=variable.varName with stmt.stmt#=while.stmt#  pattern while(_, _)  pattern if(variable, _, _) with read.stmt#=6900 with read.stmt#=call.stmt#  pattern while(variable, _)  pattern if(call, _, _)  such that Next*(if, while)  such that Affects(_, assign)  such that Follows(read, 16) with 9300=print.stmt#  such that Follows*(assign, _) with read.stmt#=6400  such that Next*(while, print)  pattern if(_, _, _) with "while"=read.varName  pattern while(variable, _)  such that Modifies(call, "variable")  such that Modifies(print, _) with procedure.procName=variable.varName  pattern while(_, _)  pattern assign(variable, _"8800-1600"_)  pattern assign(_, _"400*7000"_)  such that Parent*(_, while)  pattern assign(variable, "9600+4300") with call.procName=print.varName  pattern if(variable, _, _) with call.procName=call.procName  pattern while(_, _) with 7500=call.stmt# with assign.stmt#=call.stmt#  such that Affects*(stmt, _)  pattern while(_, _)  pattern if(variable, _, _) with "call"=procedure.procName  pattern assign(variable, _)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern assign(read, _"(6900/900)-6300"_)  pattern assign(read, _)  pattern while(variable, _)  pattern assign(procedure, "2800/9200") with assign.stmt#=5800  such that Modifies(23, variable)  pattern while(_, _)  such that Next*(print, _) with "then"=print.varName  pattern while(call, _)  such that Affects(stmt, _)  such that Calls*(procedure, "procedure")  such that Parent(15, call)  pattern assign(variable, "8600-7400")  such that Affects*(assign, _)  such that Next*(print, _)  such that Calls*("read", procedure) with call.stmt#=print.stmt#  such that Modifies(read, _)  such that Next*(12, if) with call.stmt#=if.stmt#  such that Follows*(stmt, 20)  such that Modifies(stmt, variable)  pattern while(variable, _)  pattern while(else, _) with while.stmt#=2100  pattern while(variable, _)  pattern assign(then, "9300*5300")  pattern while(_, _)  pattern while(_, _)  pattern while(variable, _) with while.stmt#=while.stmt# with 4500=if.stmt# with variable.varName=variable.varName  pattern assign(variable, _) with if.stmt#=call.stmt# with call.procName=read.varName  pattern if(variable, _, _) with "assign"=call.procName with 7700=stmt.stmt#  such that Affects*(_, stmt)  such that Next(while, _)  pattern if(_, _, _)  pattern assign(_, _) with "assign"=read.varName with call.procName=procedure.procName with constant.value=5300 with "constant"=variable.varName with 1100=constant.value with print.varName="variable"  pattern if(variable, _, _) with read.varName="procedure"  pattern if(_, _, _) with 2200=read.stmt#  pattern assign(variable, _"1400+2600"_)  such that Follows*(22, call)  such that Calls(procedure, "assign")  pattern if(variable, _, _)  such that Uses(assign, variable) with assign.stmt#=while.stmt#  pattern while(_, _)  pattern while(procedure, _)  pattern while(_, _)  such that Next(_, stmt)  pattern while(if, _)  pattern if(variable, _, _)  pattern while(procedure, _)  pattern if(constant, _, _) with "assign"=read.varName  pattern while(_, _) with procedure.procName=variable.varName  pattern if(variable, _, _) with procedure.procName="variable"  such that Follows*(assign, call)  such that Affects(_, assign) with "if"=call.procName  pattern assign(_, _)  such that Uses(stmt, variable) with read.stmt#=3800  such that Calls*(procedure, _)  such that Affects*(stmt, 11)  pattern if(procedure, _, _)  such that Next*(stmt, while)  pattern while(variable, _) with assign.stmt#=5900  such that Follows(9, read)  such that Calls*(_, procedure) with constant.value=while.stmt#  pattern assign(else, _"6600-call"_)  such that Follows*(call, while) with 8000=assign.stmt#  such that Parent*(stmt, 25)  pattern assign(while, _) with assign.stmt#=3000  pattern assign(variable, _)  such that Next(if, _)  such that Follows(if, if)  pattern while(variable, _) with procedure.procName=read.varName  such that Parent*(_, while) with variable.varName="constant"  such that Affects(assign, assign)  such that Affects(_, assign) with print.stmt#=read.stmt# with procedure.procName="while"  pattern assign(variable, _"1900/5600"_)  such that Next(assign, _) with assign.stmt#=stmt.stmt# with "while"=variable.varName  pattern assign(then, _"2800+6300"_) with print.varName=procedure.procName with 1900=call.stmt#  pattern assign(variable, _)  pattern while(assign, _) with procedure.procName=print.varName with print.varName=read.varName  pattern if(call, _, _)  pattern while(while, _)  pattern while(_, _)  pattern while(call, _) with 200=if.stmt# with call.procName="else"  such that Affects(stmt, 20) with while.stmt#=7100  pattern while(_, _) with "procedure"=read.varName  pattern if(procedure, _, _)  pattern if(_, _, _) with "if"=call.procName with print.varName="assign"  pattern while(variable, _)  such that Parent*(print, 2)  pattern while(variable, _) with variable.varName=procedure.procName  such that Parent*(_, if)  pattern if(while, _, _)  pattern while(variable, _) with "then"=call.procName  such that Uses(stmt, "while") with print.stmt#=read.stmt# with assign.stmt#=3900  pattern if(variable, _, _)  pattern assign(variable, _"1000-8900"_) with assign.stmt#=call.stmt#  such that Calls*(procedure, "variable")  pattern if(_, _, _)  pattern if(_, _, _)  such that Affects*(assign, assign)  pattern while(_, _) with call.procName="then" with stmt.stmt#=print.stmt#  pattern assign(assign, _"2600+1900"_)  such that Follows(_, assign)  pattern while(print, _)  pattern assign(variable, "9500-7000")  pattern assign(variable, _"5700*6900"_)  such that Parent*(25, call) with 3000=if.stmt# with print.varName=call.procName 

5000
28 - Query 28
variable variable; assign assign; print print; call call; constant constant; stmt stmt; read read; while while; if if; procedure procedure; 
Select <variable, assign, print, call, constant, stmt, read, while, if, procedure>  pattern assign(variable, "8000/5000") with stmt.stmt#=stmt.stmt#  pattern while(_, _) with assign.stmt#=read.stmt#  pattern assign(variable, _"3800-7000"_)  pattern while(variable, _)  such that Uses(print, "while")  such that Next(_, read)  pattern if(else, _, _)  pattern assign(call, "8400*100") with read.stmt#=9000 with "read"=print.varName  such that Calls*(procedure, procedure)  pattern while(_, _)  such that Uses(call, _) with 3500=read.stmt# with variable.varName="else" with print.stmt#=2000  pattern while(assign, _) with call.procName="procedure"  pattern while(_, _) with "then"=variable.varName  pattern while(variable, _) with variable.varName=call.procName  pattern if(_, _, _) with 9500=call.stmt# with stmt.stmt#=900  pattern while(variable, _)  pattern if(variable, _, _) with call.stmt#=constant.value  such that Parent*(assign, print)  pattern while(variable, _)  such that Calls*("print", procedure)  such that Next(assign, while) with print.stmt#=3900 with "then"=read.varName with variable.varName=procedure.procName  such that Next(call, while)  pattern if(print, _, _)  such that Next*(while, _) with 7200=print.stmt# with read.varName="assign"  pattern if(_, _, _) with call.procName="variable"  pattern assign(print, _"9800*3200"_)  such that Next*(read, stmt)  such that Calls(procedure, procedure) with print.stmt#=5400  pattern if(while, _, _) with read.varName=read.varName  pattern if(_, _, _)  pattern assign(print, _"1500+2400"_)  pattern while(call, _)  pattern assign(procedure, "8100-4200")  pattern while(else, _)  pattern if(constant, _, _)  pattern assign(_, _)  pattern if(variable, _, _)  pattern while(read, _)  such that Follows*(if, _)  pattern if(_, _, _)  pattern assign(variable, "(3500-2500)/600")  pattern while(variable, _)  such that Calls(_, procedure)  pattern while(variable, _)  such that Parent*(_, while) with variable.varName="read"  pattern while(variable, _)  pattern if(call, _, _) with "print"=read.varName with print.varName=variable.varName  pattern assign(while, "5200/2400")  such that Next(while, print)  such that Calls*(procedure, _)  pattern while(variable, _)  pattern assign(variable, "8700+else")  such that Parent(stmt, read)  such that Follows*(_, stmt) with read.varName="procedure"  pattern while(while, _)  such that Calls("procedure", procedure)  pattern assign(_, "assign-9100") with print.stmt#=8700  pattern while(variable, _)  pattern while(call, _)  pattern assign(if, _)  such that Modifies(call, variable)  pattern if(if, _, _)  such that Calls*(_, procedure)  such that Calls*(_, procedure)  pattern assign(_, _) with print.stmt#=4000  pattern assign(_, _)  pattern while(read, _)  pattern while(variable, _) with "procedure"=procedure.procName  such that Parent*(stmt, call) with print.varName="print"  pattern if(while, _, _)  pattern while(variable, _)  such that Uses(if, _)  such that Next*(_, assign)  pattern assign(variable, _"(2100+7100)+4500"_) with while.stmt#=3500 with 5500=assign.stmt#  pattern if(variable, _, _) with call.procName=call.procName  pattern assign(variable, "6200-800")  such that Next*(_, stmt)  pattern while(procedure, _) with variable.varName="constant"  pattern assign(call, _"then/6000"_)  pattern if(variable, _, _)  pattern assign(variable, _)  such that Affects(27, assign) with read.varName=procedure.procName  pattern assign(variable, _"(3800-7700)*1000"_)  pattern assign(variable, "4600+7800") with read.stmt#=print.stmt# with call.stmt#=call.stmt# with assign.stmt#=2500  pattern while(_, _) with read.stmt#=stmt.stmt#  pattern while(then, _)  pattern while(_, _) with variable.varName=call.procName  such that Affects*(assign, stmt)  such that Affects*(14, stmt)  pattern if(_, _, _) with "call"=variable.varName with variable.varName="procedure" with procedure.procName="then" with print.varName=variable.varName  pattern assign(variable, "2600*7000")  pattern while(_, _)  pattern assign(_, _"500-3900"_)  pattern if(print, _, _) with 6800=print.stmt#  such that Affects*(assign, _)  pattern if(else, _, _) with print.varName="then" with 8400=read.stmt#  pattern while(constant, _) with if.stmt#=7300  pattern assign(read, _"1800-6800"_) with procedure.procName=procedure.procName  pattern if(else, _, _)  pattern if(constant, _, _)  pattern if(_, _, _)  pattern if(_, _, _) with constant.value=3700  pattern if(variable, _, _) with print.varName="constant"  pattern while(_, _)  pattern if(_, _, _)  pattern while(assign, _) with read.stmt#=call.stmt# with call.stmt#=3600  such that Parent*(print, while) with 3400=while.stmt#  such that Parent(call, 11) with call.procName="else"  such that Parent(1, read)  pattern if(variable, _, _) with if.stmt#=9700  such that Parent*(print, _) with call.stmt#=7200  pattern while(variable, _)  such that Modifies(21, variable)  pattern while(variable, _)  pattern if(variable, _, _)  such that Affects*(stmt, _)  pattern while(read, _) with 3500=print.stmt#  pattern assign(_, _"3500-9600"_) with 3100=stmt.stmt# with assign.stmt#=9500 with 9400=constant.value with stmt.stmt#=5500 with procedure.procName=call.procName with 3600=while.stmt# with variable.varName="variable" with call.stmt#=5600 with "variable"=call.procName  such that Next(print, _)  pattern assign(_, _"4700*2500"_) with 7200=constant.value  pattern assign(variable, _"5300-6500"_)  pattern while(variable, _)  pattern assign(then, _) with assign.stmt#=if.stmt# with print.varName="else"  pattern assign(_, _)  pattern while(_, _) with if.stmt#=while.stmt#  pattern while(variable, _) with assign.stmt#=stmt.stmt#  pattern if(_, _, _) with 3800=constant.value  such that Parent*(10, read)  pattern assign(assign, "6900-5400")  pattern if(variable, _, _)  pattern assign(_, _"7300*8900"_)  pattern assign(_, "3900*1600") with read.varName=read.varName  pattern while(_, _) with if.stmt#=call.stmt#  pattern if(read, _, _) with "variable"=print.varName  pattern if(variable, _, _)  such that Affects*(stmt, _)  pattern assign(_, "if/5500")  pattern assign(variable, _"7900*1800"_)  pattern assign(variable, "(6400*3700)*3400") with "procedure"=procedure.procName  such that Affects*(13, assign) with 7900=print.stmt#  such that Follows*(call, _)  such that Parent(while, call) with constant.value=while.stmt# with 6100=print.stmt# with 3800=stmt.stmt#  pattern while(then, _)  such that Affects*(26, stmt)  pattern assign(variable, _"7700*6600"_)  pattern if(variable, _, _)  such that Parent*(print, _)  pattern assign(print, _"7900*5800"_)  pattern while(variable, _)  pattern while(_, _) with print.stmt#=1200  pattern while(call, _) with "procedure"=print.varName  pattern assign(_, _)  pattern assign(_, "3500-5600")  pattern assign(variable, _)  pattern if(variable, _, _) with procedure.procName="call"  such that Follows*(call, 12)  pattern while(read, _)  such that Parent(read, stmt) with read.varName="procedure" with read.stmt#=stmt.stmt#  pattern assign(_, "4600/3100") with if.stmt#=assign.stmt#  pattern while(while, _) with procedure.procName=procedure.procName  pattern assign(variable, _)  pattern while(constant, _)  pattern if(_, _, _)  such that Next*(read, _)  pattern while(_, _)  such that Modifies(while, "call") with while.stmt#=while.stmt#  pattern while(_, _)  pattern assign(_, _"(1000/800)+3100"_)  pattern while(variable, _) with call.stmt#=call.stmt#  such that Follows*(21, print)  pattern while(variable, _)  such that Next*(14, assign)  pattern if(variable, _, _)  such that Calls*(procedure, procedure)  pattern if(_, _, _) with variable.varName="constant" with constant.value=9300  such that Next(15, call) with "assign"=procedure.procName  pattern assign(else, _)  pattern assign(procedure, _"500-1800"_)  pattern while(_, _)  such that Follows*(call, while) with if.stmt#=4100  such that Uses(28, variable)  pattern assign(constant, "(5000/8000)*1600")  such that Parent(assign, 2)  pattern while(variable, _)  such that Affects(3, assign)  such that Affects(assign, 11)  such that Next(14, assign) with assign.stmt#=call.stmt#  pattern assign(_, "6200*1900")  pattern while(_, _)  such that Next*(assign, 29) with read.varName=procedure.procName  such that Affects*(_, assign)  such that Calls*(procedure, procedure) with read.stmt#=if.stmt# with call.stmt#=stmt.stmt#  pattern while(_, _)  pattern assign(print, _)  pattern while(variable, _)  such that Uses(stmt, variable)  pattern assign(_, "3200-3400")  such that Follows*(_, stmt)  pattern assign(assign, _"8000-6800"_)  pattern while(variable, _)  such that Next(assign, 8)  pattern if(call, _, _) with 9200=constant.value  pattern while(_, _)  pattern assign(else, _)  pattern assign(variable, "1400+variable") with "if"=read.varName with 4100=call.stmt#  pattern if(constant, _, _) with variable.varName=procedure.procName  pattern if(assign, _, _)  such that Follows*(assign, 27)  pattern assign(variable, _) with read.varName=call.procName  pattern assign(variable, _"900+3100"_) with "print"=call.procName  pattern while(_, _)  pattern if(_, _, _) with if.stmt#=while.stmt#  pattern assign(_, "6900/4300") with call.stmt#=if.stmt#  pattern assign(variable, _"2900*assign"_) with procedure.procName="read" with read.stmt#=7000  pattern if(if, _, _)  such that Parent(read, 14)  such that Calls(procedure, procedure)  pattern while(variable, _)  pattern while(_, _)  such that Modifies(read, _)  pattern if(constant, _, _) with if.stmt#=call.stmt# with 4300=call.stmt#  such that Uses(2, variable)  such that Modifies(11, variable)  pattern if(read, _, _)  pattern if(if, _, _)  such that Follows*(stmt, _)  pattern while(variable, _)  pattern while(print, _)  such that Uses(assign, _)  pattern while(assign, _) with while.stmt#=4700 with call.procName="while" with 8700=read.stmt#  pattern assign(_, _"5500+3400"_)  pattern while(variable, _)  such that Next(read, print)  pattern if(variable, _, _)  such that Calls(procedure, "if")  pattern assign(variable, _) with call.procName="assign"  pattern if(then, _, _) with if.stmt#=6200  pattern while(variable, _)  pattern if(while, _, _)  such that Affects*(2, assign)  pattern assign(assign, _"4700*9300"_)  pattern if(_, _, _)  pattern assign(constant, "2100/3100")  such that Next*(stmt, stmt)  pattern if(call, _, _)  pattern assign(else, _)  pattern if(constant, _, _) with read.varName="call"  pattern assign(_, _)  such that Affects*(assign, 21)  such that Next*(stmt, _)  such that Parent(read, assign)  such that Calls*(procedure, _) with call.procName=print.varName  pattern assign(variable, "8400*9300")  pattern while(variable, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern while(variable, _)  pattern while(call, _)  pattern if(_, _, _) with procedure.procName="else" with stmt.stmt#=2800  such that Next(if, _)  pattern if(variable, _, _)  pattern while(while, _) with 5000=while.stmt#  pattern assign(variable, _)  such that Follows(call, 1)  pattern while(_, _) with print.stmt#=1600  pattern while(constant, _)  pattern if(read, _, _)  pattern while(variable, _) with 1700=assign.stmt#  such that Parent*(_, if)  pattern while(else, _)  such that Modifies(call, "then")  pattern if(if, _, _)  such that Parent(assign, _)  pattern if(_, _, _)  pattern assign(_, _"9100*2200"_)  pattern while(variable, _)  such that Affects(assign, _) with procedure.procName=call.procName with print.varName="if"  pattern if(variable, _, _)  pattern while(call, _) with "if"=call.procName with call.procName="print" with stmt.stmt#=9400  such that Calls*(procedure, _)  such that Next(call, 4)  such that Follows(call, 24) with 3700=constant.value  such that Calls(procedure, "call")  such that Calls*(procedure, _)  pattern if(then, _, _)  pattern if(variable, _, _)  such that Affects(4, stmt) with call.procName=call.procName with read.stmt#=constant.value  such that Affects*(assign, _)  such that Affects*(assign, stmt)  such that Calls(procedure, _)  such that Calls*(_, procedure)  such that Parent(if, 9)  pattern while(variable, _)  pattern assign(_, _) with print.stmt#=6500 with "variable"=print.varName  such that Follows(stmt, _)  such that Affects(stmt, _)  pattern if(print, _, _) with 900=call.stmt#  pattern while(if, _) with call.stmt#=1000  pattern while(_, _) with if.stmt#=print.stmt#  such that Parent(call, 28) with "then"=procedure.procName with print.varName="else" with call.stmt#=constant.value with 7300=if.stmt# with print.stmt#=4200 with print.varName="procedure" with if.stmt#=call.stmt# with procedure.procName=read.varName with 3300=constant.value with 8100=stmt.stmt#  such that Calls(_, procedure)  pattern assign(_, _)  pattern assign(else, _"8100*5300"_)  such that Calls*(procedure, _)  such that Follows(call, 22)  such that Modifies(if, "assign")  pattern if(_, _, _) with read.varName=variable.varName  pattern assign(read, _"2700*9400"_)  pattern if(procedure, _, _)  pattern assign(variable, _)  such that Affects(assign, 19) with "then"=read.varName  such that Affects*(stmt, _)  pattern if(_, _, _)  pattern while(variable, _)  such that Next(print, assign)  pattern assign(variable, _"if*7500"_)  pattern while(_, _)  pattern assign(call, _"2200-6100"_)  such that Calls(_, procedure)  pattern assign(then, _)  such that Next*(_, while)  such that Parent*(if, assign)  pattern if(variable, _, _)  pattern while(variable, _) with call.stmt#=print.stmt#  pattern if(constant, _, _)  pattern if(variable, _, _) with read.varName="then"  pattern while(variable, _)  such that Parent(print, 9)  pattern if(variable, _, _)  pattern while(_, _)  pattern while(_, _)  such that Parent*(assign, 5)  pattern if(procedure, _, _)  pattern assign(variable, _)  pattern while(_, _)  such that Next(4, call)  pattern assign(_, _"7200+9300"_)  such that Follows*(8, while) with variable.varName=read.varName  pattern if(_, _, _)  pattern if(variable, _, _)  pattern assign(variable, _"9600*5000"_)  pattern if(_, _, _) with 5700=call.stmt# with if.stmt#=assign.stmt#  pattern assign(constant, _)  pattern if(_, _, _)  pattern assign(procedure, _"5500/600"_)  pattern assign(if, _) with call.procName=read.varName  such that Modifies(stmt, "while") with if.stmt#=while.stmt# 

5000
29 - Query 29
assign assign; variable variable; print print; call call; constant constant; stmt stmt; read read; if if; while while; procedure procedure; 
Select <assign, variable, print, call, constant, stmt, read, if, while, procedure> with stmt.stmt#=stmt.stmt#  pattern if(assign, _, _)  such that Next*(read, 6)  pattern if(_, _, _)  pattern assign(_, _"1300+3300"_)  pattern if(_, _, _)  pattern assign(_, _)  pattern while(variable, _)  such that Parent(print, 17) with print.varName=variable.varName with "read"=procedure.procName  such that Parent(stmt, 5)  pattern assign(read, _"6200+procedure"_)  pattern while(variable, _)  pattern assign(_, _) with read.stmt#=if.stmt#  such that Follows*(_, while) with 800=while.stmt#  such that Affects(assign, _) with "assign"=read.varName  pattern if(variable, _, _)  pattern assign(procedure, _)  such that Parent(15, assign)  pattern while(print, _)  such that Modifies(read, "variable")  such that Affects*(assign, 12)  pattern assign(variable, _) with assign.stmt#=7000 with 9900=call.stmt#  pattern while(_, _) with read.stmt#=call.stmt#  pattern while(variable, _) with "while"=call.procName  pattern assign(_, "9600+9100") with assign.stmt#=print.stmt#  pattern if(variable, _, _)  pattern if(_, _, _) with assign.stmt#=call.stmt# with variable.varName=read.varName  pattern while(constant, _)  pattern while(else, _) with constant.value=while.stmt#  such that Parent(call, _)  pattern while(if, _)  pattern assign(variable, _)  pattern while(_, _)  pattern if(call, _, _)  such that Next(stmt, while)  pattern while(_, _) with print.varName=call.procName with print.varName="assign"  such that Affects*(_, stmt)  pattern if(call, _, _) with 1000=constant.value  such that Next*(assign, 2)  pattern assign(print, _)  pattern assign(_, _)  pattern assign(variable, _) with 6600=while.stmt#  such that Follows(10, while) with "variable"=procedure.procName with call.stmt#=call.stmt#  pattern assign(_, _"2800*2300"_)  such that Calls*(procedure, "else")  pattern while(variable, _) with call.stmt#=stmt.stmt#  pattern assign(print, _)  pattern if(constant, _, _)  pattern assign(variable, "3600/2300") with print.varName="else" with procedure.procName=call.procName  pattern if(_, _, _)  such that Affects*(stmt, stmt)  pattern if(_, _, _)  pattern while(variable, _) with "if"=read.varName  such that Affects*(stmt, _) with if.stmt#=8300 with "procedure"=read.varName  such that Next*(10, print) with 100=call.stmt#  such that Affects(stmt, assign) with "procedure"=variable.varName  pattern while(else, _)  such that Modifies(27, variable) with stmt.stmt#=6400  pattern assign(call, _) with call.stmt#=print.stmt# with 7400=call.stmt# with "procedure"=variable.varName  pattern assign(_, _)  such that Next(read, print) with variable.varName="while"  such that Follows(3, stmt)  such that Affects*(6, assign) with 8900=while.stmt#  such that Uses(27, variable) with variable.varName=variable.varName with assign.stmt#=8300  such that Next*(read, 6)  pattern while(procedure, _)  such that Next(_, assign)  pattern if(variable, _, _) with 6200=if.stmt# with "print"=variable.varName  such that Uses(read, _) with print.varName="procedure"  pattern while(while, _)  pattern while(_, _)  pattern assign(call, _"6800+8300"_)  pattern if(variable, _, _)  such that Follows*(call, 23)  such that Calls*(_, procedure) with read.varName=call.procName with call.procName="assign" with 6600=stmt.stmt#  pattern while(variable, _) with "assign"=procedure.procName  pattern if(_, _, _) with read.varName=read.varName  pattern if(variable, _, _)  pattern assign(then, _)  pattern assign(_, _"2600*variable"_)  such that Follows(assign, 3)  pattern while(variable, _)  such that Next(if, print)  pattern assign(variable, _"(8200/then)+4900"_) with stmt.stmt#=2900  pattern assign(_, _) with procedure.procName="constant"  pattern assign(variable, "500+9300") with assign.stmt#=stmt.stmt#  pattern assign(variable, _"2100+2300"_)  such that Uses(assign, _)  pattern while(_, _)  pattern assign(_, _"then*procedure"_) with "read"=read.varName  such that Follows*(_, stmt)  such that Parent(while, _) with "if"=call.procName  pattern assign(procedure, "assign*2200") with assign.stmt#=stmt.stmt#  pattern if(variable, _, _)  such that Calls(procedure, procedure)  pattern while(while, _)  such that Follows(stmt, while)  pattern if(variable, _, _) with "if"=call.procName  pattern if(_, _, _) with 100=constant.value with read.varName="variable" with read.varName="print"  such that Parent*(stmt, stmt)  pattern while(_, _)  such that Follows(assign, _)  pattern if(then, _, _)  pattern if(_, _, _)  pattern assign(constant, _) with read.varName="procedure" with variable.varName="variable"  pattern if(variable, _, _)  pattern assign(variable, _"while/7300"_) with 4400=if.stmt# with "while"=read.varName  such that Follows(call, 1)  pattern assign(_, _"2400+9500"_)  such that Calls*(procedure, _) with while.stmt#=3600  such that Uses(if, "then")  pattern assign(_, "4900/1700")  pattern assign(variable, _"8500-8300"_)  pattern if(_, _, _) with variable.varName="if"  such that Uses(procedure, variable) with "constant"=procedure.procName  such that Modifies(assign, "else")  such that Affects(_, stmt)  such that Modifies(assign, "variable") with procedure.procName=call.procName with variable.varName=variable.varName  such that Calls*(procedure, procedure)  pattern while(constant, _)  such that Follows(stmt, _)  pattern while(variable, _)  pattern assign(_, "3500*8600")  pattern if(read, _, _)  such that Follows(assign, call) with constant.value=constant.value with stmt.stmt#=call.stmt#  pattern if(variable, _, _)  pattern assign(variable, "6800+7800")  pattern while(variable, _)  pattern if(variable, _, _)  pattern if(_, _, _) with call.procName=print.varName  pattern if(variable, _, _) with procedure.procName="variable"  pattern assign(variable, _)  such that Next(_, print) with "then"=call.procName  pattern while(while, _)  such that Affects*(assign, _)  pattern assign(_, _"7000+4100"_)  pattern while(_, _)  pattern assign(variable, _)  pattern while(while, _)  pattern while(variable, _)  pattern if(_, _, _)  pattern assign(variable, _)  pattern if(_, _, _)  such that Parent*(read, 19) with print.stmt#=call.stmt#  such that Modifies(call, variable) with assign.stmt#=3800  such that Next(_, call)  pattern assign(_, "5900-else") with call.procName="variable"  such that Calls*(_, procedure)  such that Parent*(_, assign) with "procedure"=call.procName  pattern while(_, _) with variable.varName=read.varName with 2100=if.stmt# with 4600=print.stmt#  pattern while(variable, _) with 600=while.stmt#  such that Calls*("print", procedure) with assign.stmt#=read.stmt#  pattern while(_, _)  pattern while(variable, _) with print.varName="while"  pattern while(call, _)  pattern if(_, _, _)  pattern while(while, _)  such that Affects(stmt, 27)  pattern while(_, _) with procedure.procName="print"  pattern if(read, _, _)  such that Follows(if, _) with read.varName="while" with call.procName="then"  such that Parent(22, while)  pattern while(call, _)  pattern if(_, _, _) with read.varName=variable.varName  pattern while(call, _)  pattern assign(variable, _) with read.varName="procedure" with "then"=read.varName  pattern assign(_, "5800/3300")  pattern while(call, _) with print.varName="else"  pattern assign(assign, _"1100-200"_) with read.varName="while"  pattern assign(else, _"3700+5100"_)  such that Uses(19, variable)  pattern while(_, _)  pattern if(_, _, _) with "while"=call.procName  pattern while(then, _)  such that Modifies(call, _)  pattern while(variable, _)  pattern if(procedure, _, _) with call.procName="constant"  pattern assign(_, "1500/7200")  pattern if(call, _, _) with assign.stmt#=stmt.stmt#  such that Follows(stmt, _) with read.stmt#=call.stmt#  pattern if(variable, _, _)  such that Next(print, 9)  such that Affects(assign, assign)  pattern assign(variable, _"9800+6700"_) with assign.stmt#=1900  such that Modifies(21, variable)  pattern if(_, _, _)  pattern if(constant, _, _)  pattern while(_, _)  pattern assign(variable, _"if-3700"_)  pattern while(variable, _)  such that Affects*(25, stmt) with 5300=call.stmt# with 4200=constant.value  pattern assign(_, "(4900/8300)/900")  such that Uses(3, variable)  such that Uses(read, "constant")  pattern if(_, _, _) with procedure.procName="constant"  pattern assign(variable, _"6900*assign"_)  such that Next*(read, _)  such that Follows*(_, call)  pattern assign(then, _)  pattern while(then, _)  pattern assign(_, "(4400-700)*assign") with if.stmt#=call.stmt# with call.stmt#=if.stmt# with 8700=stmt.stmt#  pattern while(variable, _)  pattern if(constant, _, _)  pattern assign(variable, _"while-7100"_) with 600=stmt.stmt#  pattern while(else, _)  pattern while(variable, _) with constant.value=2000  pattern if(procedure, _, _)  pattern assign(variable, _) with read.varName=read.varName  pattern if(variable, _, _) with 9500=constant.value  pattern assign(variable, "8600-3100")  pattern if(_, _, _)  pattern while(variable, _)  such that Parent(stmt, assign) with read.stmt#=read.stmt#  pattern assign(procedure, _"constant+2800"_)  pattern if(variable, _, _)  pattern assign(read, "2500-2200") with variable.varName=call.procName with if.stmt#=1200 with 5300=call.stmt# with "print"=read.varName  pattern while(print, _) with call.procName="read"  pattern assign(variable, "7300+1200")  such that Affects*(stmt, 16)  pattern if(variable, _, _) with 8100=constant.value with procedure.procName="assign"  pattern if(variable, _, _)  pattern if(variable, _, _) with print.varName="variable" with read.stmt#=assign.stmt# with constant.value=4500 with if.stmt#=7300 with "print"=call.procName  such that Parent*(_, read)  pattern assign(_, "(7400-8500)/2100") with 6200=constant.value  pattern while(variable, _) with stmt.stmt#=2800  pattern while(_, _)  such that Uses(28, variable) with procedure.procName="variable" with call.stmt#=2000 with call.procName=print.varName  such that Affects(12, stmt)  such that Follows*(18, stmt)  pattern while(_, _)  such that Modifies(procedure, variable)  pattern assign(variable, "(8600*4500)*3200") with call.procName="while" with print.stmt#=7000  such that Affects(assign, _) with "if"=variable.varName  such that Affects(assign, _) with stmt.stmt#=call.stmt# with "variable"=call.procName  such that Uses(procedure, "while") with assign.stmt#=while.stmt#  pattern if(_, _, _)  pattern if(_, _, _)  pattern if(if, _, _) with "if"=call.procName  such that Modifies(while, variable)  pattern assign(variable, _"5000+5100"_) with read.varName=variable.varName with 8600=if.stmt#  pattern if(_, _, _)  such that Uses(stmt, "constant") with print.varName=call.procName  such that Calls*(procedure, _)  such that Affects(stmt, stmt)  pattern while(variable, _) with procedure.procName=call.procName  such that Uses(read, "else")  pattern while(variable, _) with assign.stmt#=5200  pattern assign(variable, _)  such that Calls*("variable", procedure)  such that Follows(while, 12)  pattern if(_, _, _)  such that Follows(print, _)  such that Follows*(read, 25)  such that Uses(procedure, "else")  pattern assign(_, "8900-5300")  such that Parent*(assign, 29) with print.stmt#=if.stmt# with procedure.procName="call"  pattern assign(_, _) with "print"=variable.varName with constant.value=100  pattern if(_, _, _) with constant.value=4900  pattern assign(_, _)  such that Next*(while, 8)  pattern if(variable, _, _)  pattern while(variable, _)  such that Modifies(while, variable)  such that Follows*(26, print) with 2200=constant.value  pattern assign(_, _)  pattern if(call, _, _)  such that Next*(_, while)  such that Parent(assign, print)  pattern assign(variable, "6200+8100") with if.stmt#=3900 with print.varName="assign" with 1500=read.stmt#  pattern assign(then, "6100/else") with while.stmt#=2700  such that Uses(read, _)  such that Follows*(read, assign)  such that Uses(if, "print")  pattern while(_, _)  such that Calls(procedure, procedure) with print.varName="procedure"  pattern while(variable, _)  such that Affects(assign, stmt) with "constant"=call.procName with "if"=call.procName with read.stmt#=constant.value  such that Calls*(procedure, _) with "procedure"=call.procName  pattern if(_, _, _)  such that Calls*(_, procedure)  pattern if(variable, _, _) with call.procName="call"  pattern if(variable, _, _) with print.stmt#=call.stmt#  such that Calls(procedure, _)  pattern if(_, _, _)  such that Uses(7, variable) with print.varName="then"  pattern if(else, _, _) with procedure.procName="call"  such that Uses(if, "print") with procedure.procName=print.varName  such that Next*(while, read) with print.varName=read.varName  such that Next(19, read) with 3100=while.stmt# with constant.value=6400  such that Next*(15, read)  pattern assign(variable, "7600/3400")  such that Modifies(stmt, "variable") with procedure.procName=read.varName  pattern assign(variable, _)  such that Calls(procedure, procedure)  such that Affects(_, stmt)  pattern assign(variable, _"6600/5600"_)  such that Next*(25, call) with 2800=constant.value  pattern if(_, _, _) with stmt.stmt#=3600  pattern assign(print, _"4700-7000"_) with read.varName=call.procName  pattern if(_, _, _)  such that Calls(procedure, procedure)  pattern while(print, _) with call.procName=procedure.procName  such that Follows*(stmt, 21)  pattern if(variable, _, _) with print.stmt#=9200 with print.stmt#=assign.stmt#  pattern while(constant, _) with 2200=call.stmt#  pattern if(_, _, _)  pattern if(variable, _, _) with call.stmt#=3800  pattern if(_, _, _) with 2800=call.stmt#  pattern while(variable, _)  such that Parent*(_, print) with assign.stmt#=if.stmt#  pattern while(variable, _) with call.procName="assign" with variable.varName="else" with "constant"=procedure.procName  such that Affects(_, assign)  pattern while(_, _)  such that Uses(while, _)  pattern if(_, _, _)  such that Affects*(assign, _) with constant.value=read.stmt#  such that Modifies(assign, _)  such that Follows*(20, assign)  pattern assign(_, _"4700-3300"_) with read.varName="assign" with constant.value=9400  such that Follows(15, assign)  such that Calls*(procedure, _)  pattern while(assign, _) with assign.stmt#=4100  pattern while(_, _)  pattern assign(_, _"procedure-6000"_) with 300=read.stmt#  pattern while(_, _)  such that Follows*(2, if)  such that Parent(if, 2)  pattern if(read, _, _) 

5000
30 - Query 30
assign assign; variable variable; print print; constant constant; stmt stmt; read read; procedure procedure; if if; while while; call call; 
Select <assign, variable, print, constant, stmt, read, procedure, if, while, call>  such that Modifies(assign, "procedure")  pattern if(variable, _, _)  such that Uses(if, "print") with "read"=call.procName  pattern assign(print, _)  pattern if(variable, _, _)  pattern if(if, _, _)  pattern if(_, _, _)  such that Follows(call, stmt) with print.stmt#=6800  pattern while(_, _) with read.stmt#=if.stmt#  such that Next(_, assign)  such that Affects(12, stmt)  such that Affects(stmt, 12)  such that Affects(stmt, stmt)  pattern assign(variable, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern while(procedure, _) with while.stmt#=call.stmt# with print.stmt#=stmt.stmt#  such that Parent(read, stmt) with read.stmt#=5900  pattern while(variable, _)  such that Calls*(procedure, procedure)  pattern if(_, _, _)  pattern while(_, _) with read.varName=print.varName  pattern if(_, _, _)  such that Next(13, print)  such that Follows*(_, call) with while.stmt#=9200  such that Follows*(if, read)  pattern if(variable, _, _) with read.stmt#=500  pattern while(read, _)  pattern if(_, _, _)  pattern while(call, _) with print.stmt#=call.stmt#  pattern if(_, _, _)  pattern while(variable, _) with constant.value=5000  pattern if(print, _, _)  pattern assign(variable, _)  such that Follows*(read, _)  pattern while(variable, _) with "call"=print.varName  such that Affects*(stmt, assign)  pattern while(then, _)  pattern while(assign, _)  such that Follows(while, _) with while.stmt#=stmt.stmt#  pattern while(variable, _)  pattern if(_, _, _) with procedure.procName=print.varName with print.varName="variable"  pattern assign(_, "2800+6800")  pattern while(call, _)  pattern while(read, _)  such that Next*(print, _) with stmt.stmt#=if.stmt# with assign.stmt#=call.stmt# with print.stmt#=constant.value with read.stmt#=stmt.stmt# with 5400=while.stmt#  such that Affects*(stmt, _)  such that Follows*(_, assign) with constant.value=7400 with stmt.stmt#=9500  pattern if(_, _, _)  such that Follows*(16, while)  such that Next*(if, assign) with variable.varName="read"  pattern while(_, _)  such that Affects*(stmt, assign) with call.procName=print.varName  such that Calls*("call", procedure)  pattern if(_, _, _) with 4500=if.stmt#  pattern while(variable, _) with variable.varName=variable.varName  such that Next*(21, assign)  pattern while(variable, _) with call.procName=variable.varName with 1000=print.stmt#  pattern if(variable, _, _) with 7200=while.stmt# with print.varName=procedure.procName  pattern while(else, _) with 3100=stmt.stmt#  pattern while(variable, _) with procedure.procName="variable"  pattern assign(variable, _)  pattern while(_, _) with call.procName=print.varName  such that Calls*("read", procedure)  pattern if(then, _, _) with 8500=call.stmt#  such that Next(call, 21)  such that Follows*(_, stmt)  such that Next(_, read)  pattern assign(variable, _)  pattern assign(then, _"7900*then"_) with 5600=constant.value  pattern while(variable, _)  such that Affects*(assign, 24) with 5900=if.stmt# with print.varName="else"  pattern while(variable, _) with "else"=read.varName  such that Next*(_, while)  such that Modifies(stmt, variable)  pattern while(variable, _) with 4700=assign.stmt# with print.varName="while" with "procedure"=read.varName with print.varName=print.varName with "then"=procedure.procName  pattern assign(constant, _"3500/6800"_)  such that Calls*(_, procedure)  such that Next(while, assign)  pattern if(variable, _, _) with read.stmt#=4300  pattern while(_, _)  such that Follows*(print, stmt)  such that Calls*(_, procedure)  pattern assign(while, "7900+9000") with variable.varName=variable.varName  such that Next(_, call) with if.stmt#=2300 with variable.varName=call.procName with stmt.stmt#=if.stmt#  pattern if(variable, _, _)  such that Parent(print, _) with read.stmt#=call.stmt#  pattern assign(_, _)  such that Modifies(if, "assign")  pattern if(print, _, _) with procedure.procName=print.varName  pattern if(read, _, _)  pattern if(while, _, _)  such that Calls*("read", procedure)  such that Uses(if, _) with "else"=variable.varName with if.stmt#=while.stmt#  pattern while(then, _)  such that Modifies(if, _) with variable.varName=procedure.procName with assign.stmt#=8500  such that Uses(read, _) with while.stmt#=constant.value with 4200=read.stmt#  such that Parent(print, call)  such that Affects(assign, stmt)  pattern assign(variable, _) with assign.stmt#=print.stmt#  such that Calls(procedure, procedure)  such that Next*(_, read)  pattern while(_, _)  pattern assign(_, _"5700*9600"_)  such that Parent*(21, stmt) with call.procName="call"  pattern if(_, _, _)  pattern while(_, _)  such that Modifies(15, variable) with procedure.procName="while"  pattern while(_, _) with call.procName=print.varName  pattern if(variable, _, _)  such that Uses(call, variable)  pattern if(_, _, _) with print.stmt#=assign.stmt# with if.stmt#=6100  pattern if(variable, _, _)  such that Calls(procedure, "call")  such that Parent*(print, while)  pattern assign(variable, "6600+if")  pattern if(read, _, _)  pattern while(variable, _)  pattern while(_, _)  pattern if(_, _, _)  such that Follows(call, _) with "constant"=procedure.procName  pattern assign(_, _"7600*6800"_)  pattern assign(procedure, _) with stmt.stmt#=4600  pattern assign(while, _) with variable.varName=read.varName  pattern if(_, _, _)  such that Calls*(procedure, procedure)  pattern while(then, _)  such that Affects(stmt, 23)  pattern while(variable, _)  such that Calls(procedure, "call")  such that Affects*(stmt, _) with print.stmt#=4600 with print.varName="print"  such that Modifies(print, _)  pattern while(constant, _)  such that Follows(while, 27)  pattern if(variable, _, _) with variable.varName="variable"  pattern assign(assign, _"print+1800"_)  pattern if(variable, _, _)  such that Next(9, while) with 5500=if.stmt#  such that Uses(procedure, variable) with read.stmt#=5700  such that Next(if, read) with if.stmt#=2900  pattern if(variable, _, _)  pattern while(variable, _) with 6600=while.stmt# with print.varName=call.procName with assign.stmt#=constant.value  pattern while(_, _) with read.stmt#=assign.stmt#  pattern while(_, _)  pattern if(procedure, _, _)  such that Modifies(13, variable)  such that Next*(3, while)  pattern if(variable, _, _) with call.procName="while"  such that Calls*("assign", procedure)  pattern assign(variable, _"900*8300"_) with print.varName=procedure.procName  pattern if(_, _, _)  pattern if(variable, _, _)  pattern assign(_, _"2300*2000"_)  pattern assign(_, _"400*6100"_)  pattern assign(variable, _) with stmt.stmt#=4400 with "procedure"=print.varName with procedure.procName="assign"  pattern while(then, _)  pattern while(variable, _)  pattern while(variable, _)  pattern assign(_, _)  pattern while(variable, _)  pattern while(variable, _) with read.varName=read.varName  such that Next(if, read)  pattern assign(_, _"3400/5700"_)  pattern if(variable, _, _) with "constant"=read.varName with "read"=variable.varName  such that Parent(assign, _) with read.stmt#=read.stmt#  pattern while(variable, _)  such that Follows*(18, assign) with read.varName=read.varName  pattern while(constant, _) with stmt.stmt#=stmt.stmt#  such that Parent*(print, assign)  pattern while(_, _)  pattern assign(_, _"6000/6900"_) with assign.stmt#=constant.value  pattern assign(_, "4600-100")  pattern while(procedure, _)  pattern assign(then, "1100+8000")  pattern if(call, _, _) with assign.stmt#=1800  such that Parent*(if, call) with "assign"=read.varName  such that Calls*("assign", procedure)  pattern if(read, _, _)  pattern if(variable, _, _)  pattern while(variable, _)  such that Modifies(while, _)  pattern while(print, _) with call.stmt#=call.stmt# with variable.varName="else"  such that Follows(while, read)  such that Parent(25, assign) with read.varName="read" with procedure.procName=variable.varName  pattern assign(variable, _"1500-8000"_)  pattern if(variable, _, _)  such that Parent(print, call) with procedure.procName="call" with "call"=call.procName with constant.value=9100  pattern while(_, _)  pattern if(_, _, _)  pattern while(_, _)  such that Follows*(print, 29) with 1600=while.stmt#  pattern assign(variable, _) with 4100=stmt.stmt#  pattern if(variable, _, _)  pattern if(then, _, _)  such that Next*(_, read)  pattern if(_, _, _)  such that Follows*(call, _)  such that Affects*(3, stmt) with 2600=call.stmt# with 3800=if.stmt#  such that Calls*(_, procedure) with variable.varName="then"  pattern assign(call, _"(8500+2700)-200"_)  pattern assign(variable, _"8200-6600"_)  pattern assign(print, "while*9400")  pattern if(_, _, _)  pattern assign(_, "9600+3100")  pattern while(variable, _)  pattern if(_, _, _)  pattern assign(assign, "2900-2500")  pattern while(_, _)  such that Affects*(22, assign)  pattern if(_, _, _)  such that Affects*(stmt, stmt) with 5600=assign.stmt# with procedure.procName="read"  such that Next(call, 5)  such that Next*(while, _)  such that Parent*(read, while)  pattern while(_, _) with variable.varName="if"  pattern if(variable, _, _) with print.varName=print.varName  pattern assign(_, _"(2100*2600)*7200"_) with procedure.procName=procedure.procName  such that Uses(14, variable)  pattern if(_, _, _) with variable.varName="print"  such that Affects(_, stmt) with if.stmt#=call.stmt#  pattern assign(_, _)  pattern assign(print, "(7900/900)+while") with "variable"=procedure.procName  pattern assign(_, "3300-6000")  pattern while(if, _)  pattern if(variable, _, _)  pattern while(variable, _)  pattern if(_, _, _)  such that Parent(if, 10)  pattern while(_, _) with procedure.procName=print.varName with if.stmt#=7900 with variable.varName=procedure.procName  pattern assign(variable, _) with "assign"=print.varName with assign.stmt#=1800 with stmt.stmt#=if.stmt#  pattern while(variable, _) with procedure.procName="constant" with print.stmt#=4600  pattern if(assign, _, _) with call.procName=variable.varName with 9500=assign.stmt#  such that Follows*(_, while)  such that Affects(stmt, _)  pattern assign(call, "2800/9200") with "call"=variable.varName  pattern while(variable, _) with stmt.stmt#=constant.value with read.varName="else"  pattern while(_, _) with 3800=assign.stmt# with if.stmt#=while.stmt#  pattern while(_, _)  pattern while(_, _)  pattern if(variable, _, _)  pattern while(constant, _)  pattern while(variable, _) with if.stmt#=9100  such that Follows*(if, while)  such that Parent*(_, stmt)  pattern if(variable, _, _)  pattern assign(_, "read+4100")  pattern while(variable, _)  pattern if(read, _, _)  such that Modifies(assign, _)  pattern if(_, _, _) with constant.value=print.stmt# with 7600=if.stmt# with "assign"=variable.varName  pattern while(print, _)  such that Next(17, while) with 8200=read.stmt#  such that Calls(_, procedure)  such that Affects*(stmt, 16)  pattern while(variable, _)  pattern if(variable, _, _) with 7100=constant.value  such that Calls(procedure, _)  pattern while(variable, _) with "then"=print.varName  such that Parent(_, if)  pattern while(_, _)  pattern assign(variable, _)  pattern while(_, _)  pattern while(variable, _)  such that Follows*(_, read) with stmt.stmt#=3500 with variable.varName="assign"  such that Modifies(17, variable) with while.stmt#=5300  pattern assign(read, _"9600/5000"_) with "while"=procedure.procName  pattern assign(if, "9900/6500")  such that Parent(20, call)  pattern while(_, _)  such that Calls*(procedure, "print")  such that Calls*("while", procedure) with 2400=assign.stmt#  pattern assign(_, _)  pattern while(_, _)  such that Uses(18, variable)  pattern if(if, _, _)  pattern while(variable, _) with read.stmt#=6800 with variable.varName="read"  pattern while(_, _)  pattern assign(variable, _)  such that Next(while, 18)  pattern assign(_, "8000-2900")  pattern assign(read, _) with call.procName=procedure.procName  such that Follows(_, call)  pattern if(_, _, _) with "print"=read.varName with while.stmt#=print.stmt#  such that Affects(assign, stmt)  such that Follows(assign, _)  pattern while(variable, _) with procedure.procName=call.procName  such that Follows(_, print)  pattern if(while, _, _)  pattern assign(_, "3300/1300")  pattern if(assign, _, _)  pattern while(print, _) with assign.stmt#=1300  pattern while(variable, _)  pattern assign(call, "while-100") with "then"=read.varName  pattern while(_, _)  such that Parent(assign, 14)  pattern if(_, _, _)  pattern assign(variable, _"4000-5100"_)  pattern if(_, _, _)  pattern if(_, _, _) with assign.stmt#=6600 with "constant"=variable.varName  pattern assign(variable, _"600/9300"_) with 2300=while.stmt#  pattern assign(else, "9700/8500")  such that Calls(procedure, "if") with "if"=call.procName with constant.value=assign.stmt# with constant.value=9800 with read.stmt#=1800  such that Affects(_, stmt)  pattern assign(if, _)  such that Modifies(procedure, _)  pattern if(variable, _, _)  pattern while(variable, _)  such that Calls*(procedure, _)  such that Follows(_, call) with while.stmt#=800  pattern if(_, _, _)  pattern while(variable, _)  pattern while(variable, _)  such that Affects*(assign, stmt)  pattern assign(_, "then-4600")  pattern assign(variable, _"(7800/8800)/if"_)  pattern assign(variable, _)  pattern if(if, _, _)  pattern if(assign, _, _)  pattern while(read, _) with assign.stmt#=assign.stmt#  pattern while(assign, _) with constant.value=constant.value  pattern if(then, _, _)  such that Affects*(_, stmt) with read.varName=read.varName  pattern while(constant, _)  pattern while(variable, _)  such that Affects*(24, assign) with if.stmt#=while.stmt#  pattern assign(else, _)  such that Next(_, stmt)  such that Affects(assign, stmt)  such that Next(_, print)  pattern assign(if, _)  pattern assign(_, _)  pattern if(variable, _, _)  such that Modifies(27, variable)  pattern while(_, _)  pattern assign(_, "2000+7700")  pattern assign(_, _"8000+6000"_)  pattern if(_, _, _)  such that Follows*(call, read)  pattern while(_, _)  pattern while(variable, _)  pattern if(call, _, _)  pattern while(print, _)  such that Follows*(assign, _) with while.stmt#=2400 

5000
31 - Query 31
variable variable; assign assign; print print; constant constant; stmt stmt; read read; procedure procedure; while while; if if; call call; 
Select <variable, assign, print, constant, stmt, read, procedure, while, if, call>  such that Parent(_, while)  pattern assign(variable, "9300-6900")  pattern assign(_, "6500+4700") with print.varName="call"  pattern while(variable, _) with assign.stmt#=4700  pattern if(variable, _, _)  pattern assign(variable, _"8700+7800"_)  pattern while(variable, _)  pattern assign(_, _)  pattern if(call, _, _) with call.procName="procedure"  pattern while(procedure, _) with "call"=procedure.procName with read.stmt#=5200 with 9800=call.stmt# with if.stmt#=1000 with constant.value=constant.value  pattern if(variable, _, _)  such that Follows(while, _) with call.stmt#=call.stmt#  such that Parent(while, _) with variable.varName=read.varName  pattern if(while, _, _)  pattern while(variable, _)  pattern assign(read, _)  such that Parent*(print, print) with read.varName="then"  such that Next*(if, 23)  pattern assign(read, _"4000*6500"_)  such that Uses(call, variable)  pattern assign(variable, _)  pattern while(variable, _)  pattern while(variable, _)  pattern assign(variable, "read*900")  pattern while(_, _)  pattern while(variable, _)  such that Parent*(read, 15)  such that Affects(_, stmt)  pattern while(variable, _) with "print"=print.varName  pattern if(variable, _, _) with read.stmt#=read.stmt#  such that Uses(20, variable) with procedure.procName=read.varName  pattern if(_, _, _) with "assign"=print.varName with read.varName=procedure.procName  pattern assign(variable, _)  such that Affects(assign, _)  pattern assign(_, _"600/2600"_) with variable.varName=procedure.procName with assign.stmt#=call.stmt#  pattern assign(_, _"9400-2900"_) with 2500=call.stmt# with "procedure"=call.procName  pattern if(variable, _, _)  such that Affects*(stmt, _)  pattern assign(variable, _"1000-2200"_)  pattern if(call, _, _)  pattern if(else, _, _)  pattern while(constant, _)  pattern assign(print, _)  such that Parent*(call, 15)  pattern while(print, _)  pattern assign(constant, _)  pattern assign(_, _) with "procedure"=procedure.procName with constant.value=7400 with 7900=read.stmt#  pattern if(variable, _, _)  such that Next(5, stmt)  pattern assign(constant, _"2800/2200"_)  such that Uses(call, variable)  such that Modifies(if, variable)  pattern assign(variable, "3300+4900")  such that Parent*(_, while) with "else"=read.varName  pattern assign(_, _) with "else"=call.procName with print.stmt#=7400  such that Uses(3, variable)  such that Follows*(_, assign) with constant.value=6600  pattern assign(constant, _"7600*5300"_)  pattern if(variable, _, _)  such that Affects*(stmt, _)  pattern assign(_, "4300+7800") with print.varName="call"  pattern while(procedure, _)  pattern assign(variable, _)  pattern assign(_, _)  pattern assign(variable, "8200/3700")  such that Calls*("variable", procedure)  pattern if(_, _, _) with 600=print.stmt#  pattern if(while, _, _) with call.stmt#=5100 with variable.varName="read" with read.varName=read.varName  pattern while(constant, _)  such that Follows*(assign, 3)  such that Calls*(_, procedure)  pattern while(variable, _)  pattern if(variable, _, _) with print.varName=print.varName with read.varName=variable.varName  pattern if(variable, _, _)  pattern while(print, _)  pattern while(variable, _)  pattern assign(_, "2000*7200")  pattern while(assign, _) with stmt.stmt#=read.stmt#  pattern if(call, _, _)  pattern assign(variable, "7200/5700")  pattern if(variable, _, _)  pattern while(read, _)  pattern assign(_, _"8500/2300"_)  pattern if(_, _, _) with "then"=procedure.procName with call.procName=read.varName  pattern if(print, _, _) with variable.varName="else"  pattern while(call, _) with 1800=if.stmt# with "variable"=procedure.procName with constant.value=call.stmt# with call.stmt#=if.stmt#  pattern if(variable, _, _)  pattern while(then, _) with "if"=procedure.procName with read.stmt#=200  pattern while(variable, _)  pattern assign(variable, _) with procedure.procName=call.procName with 5400=read.stmt#  pattern if(_, _, _)  pattern while(_, _)  such that Modifies(assign, "read") with read.varName="then"  pattern if(_, _, _)  pattern assign(variable, _)  such that Next(5, print)  pattern if(_, _, _)  pattern if(variable, _, _)  pattern while(variable, _)  such that Calls*(procedure, "variable")  pattern assign(then, _)  pattern if(_, _, _)  pattern if(variable, _, _) with call.procName="read"  pattern while(variable, _)  pattern assign(if, "4000*700")  such that Affects(_, assign)  pattern while(_, _)  such that Next(print, _) with "print"=procedure.procName  such that Next(print, _) with "procedure"=variable.varName  pattern assign(print, _"5700*100"_)  pattern while(_, _)  pattern assign(variable, _)  pattern assign(variable, _) with call.stmt#=constant.value with "read"=read.varName  pattern if(_, _, _)  pattern assign(_, _) with call.procName="if" with stmt.stmt#=constant.value with print.varName="constant"  pattern assign(variable, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern while(_, _)  pattern while(variable, _)  such that Modifies(procedure, _) with 3000=constant.value  such that Uses(28, variable)  such that Calls*(procedure, "while") with print.varName="assign"  pattern assign(assign, _)  pattern while(variable, _)  pattern assign(call, _"(9000*constant)+9000"_)  pattern assign(if, _"(900*600)/5300"_)  pattern assign(_, _)  pattern assign(_, _"4300-2300"_)  pattern assign(_, _"9400/7500"_) with "call"=call.procName  such that Calls(_, procedure) with variable.varName="assign" with procedure.procName=variable.varName  pattern assign(variable, _"8200/9700"_) with "then"=call.procName  pattern while(variable, _)  such that Calls(procedure, _)  such that Uses(while, "call") with procedure.procName="else"  pattern while(_, _)  pattern while(_, _)  pattern assign(_, _)  pattern while(variable, _)  pattern if(_, _, _)  pattern if(_, _, _)  pattern while(_, _) with "assign"=procedure.procName  such that Parent*(assign, _)  such that Modifies(call, "variable")  pattern assign(_, "(3700-4700)+900")  pattern while(constant, _) with read.varName=call.procName with 9900=while.stmt#  such that Follows*(stmt, _)  pattern assign(variable, "8900*9800")  pattern if(variable, _, _)  pattern if(while, _, _) with 2700=assign.stmt# with stmt.stmt#=call.stmt#  pattern if(variable, _, _)  pattern if(print, _, _)  pattern while(assign, _) with while.stmt#=stmt.stmt# with call.stmt#=7200  such that Parent*(while, _)  such that Parent*(20, if)  such that Modifies(procedure, "if")  pattern while(variable, _)  pattern assign(variable, "9900/3000")  such that Follows(while, _)  pattern while(variable, _)  pattern if(_, _, _)  pattern while(variable, _)  such that Modifies(read, variable)  pattern while(call, _)  pattern while(procedure, _)  pattern if(variable, _, _)  pattern assign(variable, _"5400-5400"_)  pattern while(_, _)  such that Follows(stmt, 11) with procedure.procName=read.varName  pattern if(_, _, _) with 5400=if.stmt#  pattern if(_, _, _)  such that Parent(_, assign) with print.stmt#=2700 with print.varName=variable.varName  pattern while(call, _)  pattern if(_, _, _)  such that Affects*(_, stmt)  such that Calls(procedure, procedure) with print.varName=variable.varName with "variable"=print.varName with read.varName="read"  such that Affects*(_, assign)  pattern if(_, _, _)  pattern assign(_, _)  pattern if(read, _, _)  pattern while(_, _)  pattern assign(assign, "5900*4500") with variable.varName="while" with "assign"=read.varName with procedure.procName="constant" with print.stmt#=assign.stmt#  pattern while(_, _)  pattern assign(call, _)  such that Affects*(assign, _) with "variable"=read.varName  pattern if(variable, _, _)  pattern while(variable, _) with 6500=assign.stmt#  such that Follows(if, print)  pattern if(_, _, _)  pattern if(variable, _, _)  such that Calls*(procedure, _) with read.stmt#=2900 with "while"=procedure.procName  such that Calls(procedure, "procedure")  such that Parent*(28, print)  pattern if(else, _, _) with stmt.stmt#=2300  pattern if(if, _, _)  pattern assign(print, _)  such that Parent*(assign, _) with variable.varName="while"  pattern while(variable, _)  such that Follows(stmt, _)  pattern while(_, _)  pattern assign(_, _)  pattern while(_, _)  pattern while(print, _) with 9800=stmt.stmt# with procedure.procName=read.varName with procedure.procName=call.procName with variable.varName=procedure.procName  such that Follows(print, assign)  pattern if(variable, _, _) with 200=print.stmt# with "then"=print.varName with variable.varName="variable" with procedure.procName=call.procName  such that Modifies(while, "assign") with "assign"=print.varName  such that Affects(stmt, assign)  pattern if(variable, _, _)  pattern assign(_, _"2100-4700"_)  such that Follows*(_, call)  pattern assign(_, _) with constant.value=7800  pattern while(variable, _)  pattern while(print, _)  pattern assign(_, _"8300-assign"_) with print.varName=call.procName  such that Calls("print", procedure)  pattern while(variable, _)  pattern assign(variable, _"procedure*8300"_) with 1100=read.stmt#  such that Modifies(24, variable) with "assign"=print.varName  pattern while(constant, _) with variable.varName=procedure.procName  pattern while(variable, _)  pattern if(_, _, _)  pattern if(_, _, _)  pattern assign(then, _"print*5500"_)  pattern if(variable, _, _) with constant.value=call.stmt#  such that Calls(procedure, procedure)  such that Follows*(call, assign) with stmt.stmt#=4800  such that Calls*("else", procedure)  pattern assign(_, _)  pattern while(constant, _)  pattern assign(variable, _)  pattern if(_, _, _) with print.stmt#=4100  pattern if(procedure, _, _)  pattern assign(constant, _)  such that Calls(_, procedure) with print.stmt#=6900 with "else"=call.procName with variable.varName="procedure"  pattern while(variable, _)  such that Uses(if, _)  pattern while(_, _) with while.stmt#=9300  pattern assign(variable, _"9800*6400"_)  pattern if(_, _, _)  such that Next*(while, stmt)  pattern while(variable, _)  such that Modifies(22, variable) with constant.value=4700 with assign.stmt#=2500  such that Calls("read", procedure) with constant.value=9500  pattern while(while, _)  pattern if(if, _, _)  pattern while(_, _)  pattern if(print, _, _)  pattern assign(_, "(7200-2500)-9300") with assign.stmt#=2600 with read.varName="if"  pattern if(then, _, _)  pattern assign(_, _"9100*3100"_) with read.varName=print.varName  such that Affects*(assign, assign)  such that Parent*(assign, _) with if.stmt#=read.stmt#  pattern if(variable, _, _) with "procedure"=read.varName  pattern assign(variable, _"(7600-1700)/if"_)  pattern while(variable, _) with 700=while.stmt# with print.varName=call.procName  such that Modifies(call, variable) with stmt.stmt#=while.stmt#  pattern assign(variable, _"read/2000"_)  pattern if(_, _, _)  pattern while(variable, _)  such that Next(call, stmt)  such that Affects(_, assign) with "constant"=variable.varName  such that Parent*(print, 9)  pattern assign(variable, _"100/3800"_)  such that Follows(assign, 24)  pattern while(variable, _)  pattern while(_, _) with 5600=print.stmt#  pattern while(then, _)  pattern if(else, _, _)  such that Modifies(read, variable)  pattern if(then, _, _) with variable.varName="constant"  pattern while(else, _)  pattern while(_, _)  pattern assign(procedure, "2000*8100")  pattern if(variable, _, _) with print.varName=read.varName  pattern assign(_, _"7800-200"_) with "else"=variable.varName with print.stmt#=6300  pattern if(_, _, _)  such that Parent(8, call)  such that Affects*(stmt, 18)  pattern if(read, _, _)  pattern if(variable, _, _) with call.stmt#=stmt.stmt# with "if"=variable.varName  such that Parent*(_, print) with call.procName=procedure.procName with read.stmt#=constant.value  such that Follows*(call, 17) with "variable"=print.varName  such that Parent*(12, if)  such that Affects(stmt, 6) with variable.varName=variable.varName with read.varName="procedure"  pattern while(variable, _)  such that Next*(call, 19)  pattern assign(variable, _) with "constant"=procedure.procName  pattern assign(variable, _"8900*4400"_)  pattern assign(_, _"6800+8800"_)  pattern if(else, _, _) with constant.value=5300 with variable.varName="print" with 3400=if.stmt#  such that Calls(_, procedure)  such that Uses(while, _)  pattern if(_, _, _)  such that Follows(_, stmt) with 900=assign.stmt#  pattern assign(call, "3000/4400")  such that Modifies(11, variable) with 7400=if.stmt#  such that Next(call, assign) with call.procName="while"  such that Calls*(procedure, "variable")  pattern while(variable, _) with "if"=procedure.procName  pattern if(then, _, _)  such that Calls*(_, procedure)  pattern assign(_, _"9200-2900"_)  pattern while(read, _)  pattern while(procedure, _)  such that Calls("else", procedure) with variable.varName=variable.varName  pattern while(variable, _)  such that Next(3, print)  such that Affects(stmt, 29) with if.stmt#=stmt.stmt#  such that Calls*(_, procedure)  pattern assign(variable, _"4100/3900"_)  pattern assign(_, _"1800/3100"_)  pattern while(then, _)  pattern assign(_, _) with print.stmt#=while.stmt#  pattern while(_, _)  pattern while(constant, _)  such that Affects(assign, assign)  pattern while(variable, _) with print.varName=read.varName with procedure.procName="procedure" with 1500=if.stmt#  pattern while(variable, _)  such that Calls*("then", procedure)  pattern while(while, _)  pattern while(variable, _) with stmt.stmt#=7900 with while.stmt#=5800 with procedure.procName=variable.varName with if.stmt#=5200  pattern while(print, _)  pattern while(_, _)  such that Follows*(assign, _)  pattern if(_, _, _)  pattern if(variable, _, _) with procedure.procName="if"  pattern while(_, _)  pattern while(variable, _)  such that Affects*(_, assign)  such that Calls*(_, procedure)  pattern if(_, _, _) with call.procName=print.varName with procedure.procName=read.varName  pattern assign(_, _"3500-read"_)  pattern if(variable, _, _)  pattern if(variable, _, _) with read.varName=print.varName  pattern while(print, _)  pattern if(_, _, _) with stmt.stmt#=assign.stmt#  pattern while(_, _)  such that Parent*(_, read) with print.stmt#=5800  such that Next*(_, read)  pattern if(variable, _, _)  pattern while(variable, _) with read.varName=procedure.procName  pattern while(variable, _)  pattern while(print, _)  such that Follows*(_, read) 

5000
32 - Query 32
variable variable; print print; assign assign; constant constant; stmt stmt; read read; procedure procedure; if if; while while; call call; 
Select <variable, print, assign, constant, stmt, read, procedure, if, while, call> with "read"=call.procName  pattern while(procedure, _)  pattern if(_, _, _)  pattern while(variable, _)  pattern if(_, _, _) with "else"=call.procName  such that Next*(print, _) with if.stmt#=9900  pattern if(variable, _, _)  such that Uses(14, variable)  pattern while(_, _)  such that Uses(read, variable) with procedure.procName="print" with procedure.procName="procedure"  such that Affects*(assign, assign) with print.stmt#=400 with call.procName=call.procName  pattern if(variable, _, _)  pattern if(then, _, _)  pattern assign(procedure, _) with call.stmt#=assign.stmt# with read.varName=procedure.procName  pattern assign(variable, "3800*7800")  pattern while(if, _) with print.varName="assign" with procedure.procName="while"  pattern assign(assign, _"8500-7000"_) with print.varName="constant"  such that Uses(procedure, _)  such that Follows*(if, 5)  pattern assign(_, "9800/5900") with "procedure"=variable.varName  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern while(assign, _)  pattern while(variable, _)  pattern if(procedure, _, _)  such that Next*(_, stmt) with call.procName="call" with 2600=print.stmt#  such that Uses(while, variable)  pattern if(_, _, _) with call.procName="read"  pattern assign(_, _"4300+7900"_)  such that Follows*(5, while) with "procedure"=print.varName  pattern while(_, _) with 2100=stmt.stmt#  pattern while(print, _)  such that Affects(stmt, stmt)  pattern if(constant, _, _)  pattern while(variable, _)  pattern while(variable, _)  such that Next*(_, read)  such that Next*(4, assign)  pattern while(variable, _)  pattern if(variable, _, _)  such that Next*(call, print)  such that Modifies(print, _)  pattern while(then, _)  pattern if(assign, _, _) with print.stmt#=stmt.stmt#  such that Parent(17, while)  pattern while(_, _)  pattern assign(variable, _)  pattern assign(print, _) with if.stmt#=9600  such that Parent(_, stmt) with 7900=constant.value with call.stmt#=2000  pattern if(while, _, _)  pattern while(variable, _)  pattern while(_, _) with 8500=stmt.stmt# with read.varName=print.varName  pattern while(while, _) with variable.varName=variable.varName  such that Calls(procedure, "variable")  such that Follows*(while, print)  such that Uses(call, _) with stmt.stmt#=2900  pattern while(_, _)  pattern while(_, _)  pattern assign(variable, _) with call.stmt#=3700  pattern if(_, _, _)  such that Follows(if, _) with 4100=read.stmt#  pattern assign(then, _"7900*9400"_)  pattern while(print, _)  pattern while(variable, _)  such that Calls("if", procedure) with procedure.procName="if" with read.varName="variable" with print.varName=print.varName with stmt.stmt#=constant.value with read.varName=call.procName  such that Follows(if, _)  such that Next(while, assign)  such that Uses(if, "if")  pattern if(call, _, _)  pattern assign(variable, _)  pattern assign(_, _"3000/7900"_) with read.varName="constant"  such that Next(_, call)  pattern assign(variable, _)  such that Follows*(if, call) with variable.varName=variable.varName  pattern if(_, _, _)  pattern if(_, _, _) with read.varName="then"  such that Modifies(print, _)  such that Follows(print, _)  pattern while(variable, _) with 6800=constant.value  pattern while(_, _) with read.varName=procedure.procName with read.stmt#=1700  pattern while(variable, _)  such that Affects(_, assign) with call.procName=call.procName  pattern while(variable, _)  pattern assign(assign, _)  pattern while(variable, _) with variable.varName="read"  pattern assign(_, "(1600+assign)/3100") with 7600=call.stmt#  such that Follows*(print, _)  such that Next(if, 17)  pattern if(variable, _, _) with procedure.procName=read.varName with read.varName=print.varName with assign.stmt#=9400 with "else"=variable.varName  pattern if(_, _, _)  such that Follows(_, if) with "if"=variable.varName  pattern assign(variable, "600*6200") with variable.varName="variable"  pattern while(else, _)  such that Affects(stmt, stmt) with read.varName="variable"  such that Follows*(print, _)  such that Parent(if, while) with "constant"=variable.varName  pattern assign(variable, _"2500+1000"_) with "print"=read.varName  pattern assign(print, _"9100/1400"_)  pattern while(_, _) with 3600=if.stmt# with "print"=read.varName  pattern assign(print, "2100-6300")  pattern if(assign, _, _)  pattern if(then, _, _) with procedure.procName="read"  such that Calls*(procedure, "constant") with stmt.stmt#=2400  pattern while(_, _)  such that Calls*(procedure, "while")  such that Follows*(read, _)  such that Parent*(if, _)  such that Parent(stmt, _)  pattern assign(variable, _)  pattern while(read, _)  such that Uses(read, "assign")  such that Next(28, assign) with if.stmt#=stmt.stmt#  pattern while(variable, _)  pattern while(variable, _) with call.procName=read.varName with assign.stmt#=1300 with 1000=assign.stmt#  pattern if(_, _, _)  pattern if(while, _, _) with read.varName="call"  such that Next(call, _)  such that Parent(8, stmt)  pattern if(call, _, _) with call.stmt#=600  such that Affects(assign, stmt) with print.stmt#=while.stmt#  pattern while(call, _)  pattern while(_, _) with "print"=procedure.procName  such that Affects(assign, stmt) with procedure.procName="read" with constant.value=3800  such that Next*(4, print)  such that Uses(stmt, variable)  pattern assign(constant, _)  pattern if(_, _, _) with constant.value=while.stmt# with read.stmt#=4400  such that Calls*("print", procedure) with read.varName=procedure.procName with "assign"=read.varName  such that Uses(while, variable) with 9300=assign.stmt# with 9300=assign.stmt#  such that Modifies(12, variable) with print.varName="else"  pattern assign(variable, _"6500*600"_)  such that Parent(_, while) with read.varName=variable.varName  pattern assign(_, "(((if-1800)/9300)*4400)+then") with variable.varName=print.varName with call.procName=print.varName  such that Calls*(procedure, _)  such that Follows*(while, _) with variable.varName="procedure" with procedure.procName=print.varName with call.procName="while" with 6900=if.stmt# with print.varName="then"  pattern while(call, _)  pattern assign(variable, "assign*7100")  pattern assign(variable, _)  pattern assign(variable, "9700/2200")  pattern assign(_, "5200+8000")  pattern if(_, _, _) with 6500=stmt.stmt#  pattern if(_, _, _)  such that Next*(_, while)  such that Affects*(assign, stmt) with 7900=print.stmt#  pattern assign(constant, _)  pattern assign(_, _"(7600/7800)+2200"_)  such that Calls*("assign", procedure) with stmt.stmt#=constant.value with call.stmt#=print.stmt#  such that Next*(assign, print)  pattern if(variable, _, _)  pattern while(variable, _)  such that Parent*(while, _)  pattern while(print, _)  pattern assign(if, _"100-call"_)  pattern assign(_, "9000+print")  pattern assign(variable, _)  such that Calls*(_, procedure)  pattern assign(variable, _)  such that Modifies(procedure, _) with "if"=procedure.procName  pattern assign(_, _"4400/5600"_)  pattern if(print, _, _)  pattern while(print, _)  pattern if(call, _, _)  such that Modifies(procedure, "while")  pattern while(variable, _)  such that Parent*(call, 2) with 4400=while.stmt#  pattern assign(_, "5700*6900") with print.stmt#=stmt.stmt#  pattern assign(variable, _"9200+1100"_) with print.varName="read"  pattern if(_, _, _)  pattern while(variable, _)  such that Follows*(assign, 13)  such that Follows(_, if) with "if"=procedure.procName  such that Parent(16, call)  pattern assign(then, _)  pattern assign(call, "5900+8100")  such that Uses(stmt, "assign")  such that Parent(stmt, 23) with constant.value=constant.value  pattern if(while, _, _)  such that Next(24, read) with "variable"=print.varName  pattern assign(variable, _"print-3400"_) with procedure.procName=procedure.procName  such that Affects*(stmt, 7)  such that Calls*(procedure, "while") with print.stmt#=constant.value with "assign"=procedure.procName  pattern assign(constant, "(100+3000)-constant")  such that Uses(5, variable)  pattern while(assign, _) with variable.varName="then"  pattern assign(while, _"8800+9100"_)  such that Affects*(_, stmt)  pattern while(_, _)  pattern assign(_, _)  such that Affects*(_, assign)  such that Modifies(procedure, variable)  such that Follows*(15, while)  pattern if(else, _, _) with 3600=assign.stmt#  pattern assign(_, "6100+6900")  pattern if(variable, _, _)  pattern while(_, _) with call.procName="read"  pattern while(if, _)  pattern assign(_, _"7100+3300"_)  pattern if(then, _, _)  pattern assign(while, "variable*9400") with 4800=while.stmt#  such that Affects(assign, 12) with read.stmt#=7800  such that Modifies(22, variable)  pattern while(_, _)  pattern while(variable, _) with constant.value=assign.stmt# with call.procName=variable.varName with "variable"=print.varName  such that Next(_, assign)  pattern assign(variable, _) with read.varName="else" with "print"=call.procName  pattern assign(_, "(2000+8600)-9900") with assign.stmt#=while.stmt#  such that Modifies(print, variable) with if.stmt#=call.stmt# with read.stmt#=100 with procedure.procName="else"  pattern while(assign, _)  pattern assign(variable, _)  pattern while(variable, _)  pattern assign(variable, _) with "call"=read.varName  pattern while(_, _) with print.stmt#=while.stmt#  such that Next(call, _)  pattern while(variable, _) with constant.value=7500  pattern if(else, _, _) with read.varName=call.procName  pattern if(else, _, _)  such that Modifies(call, variable) with procedure.procName=read.varName  such that Uses(8, variable) with read.varName=read.varName  pattern assign(constant, _) with if.stmt#=stmt.stmt#  such that Next(call, _)  pattern assign(else, _) with procedure.procName="while" with "print"=variable.varName  pattern assign(variable, _"print/9600"_) with call.stmt#=print.stmt#  such that Affects(assign, _) with read.varName=procedure.procName  pattern if(variable, _, _) with call.procName=print.varName with 1000=constant.value  such that Calls(procedure, _) with 2100=print.stmt#  such that Calls*(procedure, _)  pattern assign(_, _"1200/800"_)  such that Affects(assign, 24)  such that Calls*(procedure, _)  such that Calls*(_, procedure)  pattern assign(_, "6400*3200") with "assign"=print.varName with "if"=variable.varName with if.stmt#=read.stmt# with read.varName="procedure"  pattern while(_, _)  pattern assign(variable, _)  pattern assign(_, _"9900+6300"_)  pattern while(print, _)  pattern assign(while, "8900/1900")  such that Follows*(if, _) with procedure.procName="variable"  pattern assign(_, _)  such that Modifies(24, variable) with procedure.procName=call.procName with read.varName=read.varName with print.stmt#=assign.stmt# with print.stmt#=call.stmt#  pattern while(_, _)  pattern while(_, _)  pattern assign(print, "6400-6200")  pattern while(_, _)  such that Next(read, if)  such that Uses(while, "if")  pattern assign(_, "3500*6900") with "while"=call.procName  pattern while(variable, _) with 700=call.stmt#  pattern assign(variable, "5400-4500") with stmt.stmt#=print.stmt#  such that Parent*(_, stmt)  pattern assign(read, "3100+variable") with assign.stmt#=2600  pattern assign(variable, _)  pattern if(assign, _, _)  such that Modifies(if, "while")  such that Next*(stmt, _)  such that Parent*(assign, stmt)  pattern assign(_, _"1800*5200"_) with constant.value=constant.value  pattern while(_, _) with print.stmt#=print.stmt# with "print"=procedure.procName with variable.varName=read.varName  pattern if(variable, _, _)  such that Modifies(print, "constant")  pattern while(_, _)  pattern if(read, _, _)  such that Next(stmt, 18)  pattern while(print, _)  pattern if(variable, _, _) with 5900=read.stmt#  pattern assign(variable, "4200*8000")  pattern assign(_, _) with "read"=read.varName  pattern while(variable, _)  pattern if(_, _, _) with print.varName=call.procName with call.stmt#=while.stmt#  pattern if(variable, _, _) with print.varName=call.procName  pattern while(print, _)  pattern if(variable, _, _)  such that Next(read, read) with read.varName="read"  such that Parent*(if, 29)  such that Parent(stmt, stmt)  pattern while(read, _)  such that Calls(procedure, "else")  pattern while(variable, _)  pattern while(_, _)  pattern if(then, _, _) with variable.varName="read"  pattern assign(variable, _)  pattern assign(_, _"6100+900"_)  such that Modifies(stmt, variable) with print.varName=read.varName with 4200=call.stmt# with read.varName=call.procName  pattern while(variable, _)  pattern while(procedure, _) with 9700=stmt.stmt# with "assign"=print.varName  pattern while(_, _) with read.varName=print.varName with read.varName=procedure.procName with call.procName="variable"  such that Follows(_, if)  such that Calls*("read", procedure)  such that Affects(assign, 29)  pattern assign(call, "1800*8200") with procedure.procName="then" with call.stmt#=1500  pattern while(call, _) with read.varName=call.procName  such that Uses(procedure, _)  pattern assign(constant, _"3400/7100"_)  pattern while(then, _)  such that Uses(assign, variable)  pattern while(procedure, _)  pattern while(variable, _) with call.procName="assign"  such that Affects(_, stmt)  pattern if(_, _, _) with 300=constant.value  such that Calls*(_, procedure)  pattern while(variable, _) with constant.value=1100  pattern while(_, _)  pattern assign(while, _"1300/9100"_)  such that Follows(if, _) with "else"=procedure.procName with procedure.procName="if"  pattern if(_, _, _)  such that Calls*(_, procedure)  pattern assign(variable, "8600-8100")  pattern assign(print, _"(9600+9300)*9000"_) with procedure.procName="procedure"  pattern while(_, _)  pattern assign(else, _"4400+4900"_)  pattern while(constant, _) with constant.value=assign.stmt#  pattern if(variable, _, _)  pattern assign(variable, _"6000/3500"_)  such that Parent*(read, _)  pattern while(else, _)  pattern while(_, _)  pattern assign(assign, _)  pattern assign(_, _) with print.varName=variable.varName  pattern if(variable, _, _) with "then"=call.procName with procedure.procName="print"  pattern while(_, _)  pattern assign(read, "2500-7400")  pattern assign(_, "3000/5500")  such that Affects(assign, stmt)  such that Affects*(stmt, assign)  pattern while(variable, _)  such that Uses(21, variable)  pattern while(variable, _)  pattern if(procedure, _, _)  such that Affects*(_, stmt)  pattern if(_, _, _)  pattern if(_, _, _) with print.varName="while"  such that Affects*(11, assign)  pattern assign(variable, _"1700-4300"_)  such that Next*(_, if) 

5000
33 - Query 33
variable variable; assign assign; constant constant; print print; stmt stmt; read read; procedure procedure; while while; if if; call call; 
Select <variable, assign, constant, print, stmt, read, procedure, while, if, call> with stmt.stmt#=1800 with call.procName="constant"  pattern while(variable, _)  pattern if(_, _, _)  pattern assign(read, _"constant/8100"_)  such that Parent(_, read) with variable.varName="constant" with 1300=constant.value  pattern assign(variable, _)  pattern assign(while, "900-5500")  such that Affects(assign, _) with stmt.stmt#=stmt.stmt# with "then"=call.procName  pattern while(else, _)  pattern if(then, _, _) with 5800=call.stmt# with procedure.procName="procedure"  pattern assign(constant, "else/then")  pattern assign(procedure, _"(8300-9500)+procedure"_)  such that Uses(stmt, "if")  pattern while(_, _)  pattern if(procedure, _, _) with 9600=assign.stmt#  such that Calls(procedure, _) with 1700=assign.stmt# with call.procName=print.varName  pattern if(print, _, _)  such that Uses(2, variable)  pattern while(variable, _)  pattern while(variable, _) with read.varName="constant" with while.stmt#=while.stmt#  such that Parent(print, _)  such that Parent(27, call)  such that Parent(call, 19)  pattern assign(_, _"9900-1200"_) with procedure.procName=call.procName  pattern assign(_, _)  pattern if(variable, _, _)  such that Affects(stmt, 9)  pattern assign(variable, "3700+3200")  pattern assign(_, _) with stmt.stmt#=read.stmt#  pattern while(_, _)  such that Affects(assign, 28)  pattern while(variable, _) with assign.stmt#=assign.stmt# with print.varName="assign"  pattern assign(_, _"6300*8200"_)  pattern if(read, _, _)  such that Modifies(assign, _)  pattern if(_, _, _)  pattern assign(variable, "(2900-7900)-9000")  pattern while(procedure, _)  such that Uses(call, _)  pattern while(_, _) with procedure.procName=procedure.procName with 4700=print.stmt# with print.varName="constant"  such that Calls(procedure, "if")  pattern while(variable, _)  such that Parent*(27, assign)  pattern while(variable, _) with call.procName="while"  pattern while(call, _)  pattern while(then, _)  pattern while(_, _) with print.stmt#=8600 with call.procName="if"  such that Next*(stmt, 27)  pattern while(variable, _) with call.procName="if"  such that Calls*(procedure, _) with while.stmt#=8900  such that Uses(5, variable)  pattern while(_, _)  pattern while(_, _)  such that Modifies(call, _) with "constant"=variable.varName  pattern while(call, _)  pattern if(variable, _, _) with while.stmt#=7600  such that Modifies(29, variable)  pattern while(if, _)  pattern while(_, _)  pattern if(_, _, _)  pattern while(then, _)  such that Affects*(_, assign) with "constant"=variable.varName  such that Affects*(_, assign)  pattern while(_, _) with "else"=print.varName  such that Parent(assign, _)  pattern if(else, _, _) with 400=print.stmt# with while.stmt#=if.stmt#  such that Next(if, _)  pattern while(_, _) with call.procName=procedure.procName  pattern assign(_, _"8700/variable"_)  pattern while(variable, _)  pattern assign(constant, _)  pattern assign(procedure, _"8500+2400"_) with 7800=print.stmt#  such that Follows*(_, read)  pattern while(_, _) with 1300=while.stmt#  such that Next(read, _)  pattern assign(variable, _"7400+3100"_)  pattern assign(_, _)  such that Affects(stmt, _) with 2400=read.stmt#  pattern while(else, _)  pattern if(variable, _, _)  pattern while(if, _)  pattern while(call, _) with read.stmt#=7700 with 4400=print.stmt#  pattern assign(variable, _)  pattern while(_, _) with 5100=call.stmt#  pattern while(then, _)  such that Parent(1, print) with if.stmt#=read.stmt#  such that Parent*(read, if) with "while"=variable.varName with print.varName=call.procName  pattern while(_, _) with call.procName="procedure"  pattern if(while, _, _) with print.stmt#=5200  pattern while(_, _) with read.varName=print.varName  pattern while(call, _)  pattern assign(_, "8100/6300") with "then"=procedure.procName with print.stmt#=print.stmt# with "constant"=procedure.procName  such that Parent(read, _) with procedure.procName=call.procName with if.stmt#=1100  such that Affects*(_, stmt) with if.stmt#=print.stmt# with procedure.procName=read.varName  pattern while(variable, _) with "else"=read.varName  pattern assign(variable, "500+1300") with print.stmt#=call.stmt#  pattern while(_, _)  such that Modifies(20, variable) with print.varName="procedure"  such that Calls*(procedure, "call")  pattern assign(else, _"9200/5200"_) with variable.varName="variable"  pattern if(_, _, _)  such that Parent(assign, stmt) with constant.value=while.stmt#  pattern while(_, _)  such that Calls("print", procedure)  pattern if(variable, _, _)  pattern assign(_, _"2400+1100"_) with 2800=stmt.stmt#  pattern while(call, _)  such that Next*(_, if)  such that Calls*(procedure, _)  such that Calls(procedure, "then")  such that Calls*(procedure, procedure)  pattern while(_, _) with read.varName=read.varName with 7900=call.stmt# with read.varName="while"  pattern if(variable, _, _)  such that Calls(procedure, _)  such that Parent(if, _)  pattern while(_, _)  pattern while(variable, _)  pattern if(variable, _, _)  pattern if(else, _, _) with if.stmt#=9400  pattern if(call, _, _)  pattern while(variable, _) with "then"=variable.varName  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern if(read, _, _) with constant.value=assign.stmt#  pattern assign(if, _) with stmt.stmt#=assign.stmt# with constant.value=7100  pattern assign(else, "1600-9500") with print.varName=variable.varName  such that Next*(while, 4)  pattern while(while, _)  such that Next(print, _) with "if"=read.varName with "print"=print.varName  such that Calls*(procedure, _) with read.varName="while"  pattern if(if, _, _) with read.stmt#=call.stmt#  pattern assign(variable, _"1600+3700"_)  pattern while(_, _) with constant.value=4100  such that Parent(_, if)  pattern while(variable, _)  pattern assign(assign, _"9500+6200"_)  pattern if(variable, _, _)  pattern if(while, _, _)  such that Modifies(procedure, "else")  such that Follows*(if, stmt)  such that Next(assign, call)  pattern if(call, _, _)  pattern assign(while, "2800/8000")  pattern while(_, _) with print.varName=print.varName with 8300=if.stmt# with call.procName="if"  such that Follows*(if, _)  pattern assign(read, _)  pattern assign(if, "7800+9400")  pattern if(then, _, _)  pattern while(_, _)  pattern while(variable, _) with read.stmt#=while.stmt#  pattern while(while, _)  pattern assign(else, _"3200+2900"_)  pattern if(_, _, _)  pattern if(if, _, _)  such that Next*(while, print)  such that Follows*(_, read) with "then"=print.varName  such that Parent(assign, read) with "while"=procedure.procName with call.stmt#=stmt.stmt#  pattern while(while, _) with "call"=variable.varName  pattern assign(variable, "8000+call")  pattern assign(_, "4300*7700")  such that Next*(if, assign) with procedure.procName="if"  such that Affects(_, stmt)  pattern assign(assign, _"1300-2400"_)  pattern assign(procedure, "9900+while")  pattern if(variable, _, _) with "print"=procedure.procName with constant.value=4000  pattern while(print, _)  pattern assign(if, _"7100-7800"_)  such that Modifies(24, variable)  pattern while(_, _)  such that Parent(read, 21) with if.stmt#=print.stmt#  pattern assign(then, _"9500/9800"_)  pattern if(read, _, _) with read.varName=call.procName  such that Parent(if, stmt) with stmt.stmt#=stmt.stmt#  pattern assign(_, _) with "call"=variable.varName with read.stmt#=5100  pattern assign(_, _) with assign.stmt#=2200 with read.varName="while"  such that Modifies(while, variable)  pattern assign(procedure, "8400*5500")  pattern while(read, _)  pattern while(while, _)  such that Next(stmt, print) with while.stmt#=if.stmt#  pattern if(variable, _, _)  such that Parent*(_, if)  pattern while(variable, _) with stmt.stmt#=print.stmt#  pattern assign(variable, "9500-3700")  pattern assign(variable, "then+200")  pattern if(_, _, _)  pattern while(variable, _)  pattern if(read, _, _)  such that Next(5, stmt) with variable.varName=call.procName  pattern if(_, _, _)  such that Modifies(if, "assign")  pattern while(then, _) with print.varName=procedure.procName  pattern if(variable, _, _)  such that Uses(if, "call") with read.stmt#=9400 with while.stmt#=4200 with call.procName=call.procName with constant.value=8700 with "read"=call.procName  pattern while(variable, _)  pattern if(_, _, _) with print.stmt#=3000  such that Affects*(stmt, _)  pattern while(_, _)  pattern if(_, _, _)  such that Affects*(assign, _)  such that Affects*(_, assign)  pattern assign(if, _)  pattern if(variable, _, _)  pattern while(_, _)  such that Calls*(procedure, "while") with 2500=while.stmt#  pattern assign(variable, _)  pattern while(if, _)  pattern if(_, _, _)  pattern assign(_, _)  such that Follows*(18, assign)  pattern while(variable, _)  pattern if(variable, _, _)  such that Modifies(while, _)  pattern if(else, _, _)  pattern while(then, _) with 7400=print.stmt#  such that Follows*(if, _)  pattern while(procedure, _) with assign.stmt#=assign.stmt# with read.varName="print"  pattern if(variable, _, _) with print.stmt#=if.stmt#  pattern if(procedure, _, _)  pattern if(assign, _, _)  such that Parent*(while, _) with call.stmt#=call.stmt# with "else"=read.varName  such that Modifies(print, "constant")  pattern if(_, _, _)  pattern assign(variable, _) with if.stmt#=5900  pattern while(_, _)  pattern assign(procedure, "7500-4700") with call.procName="while" with print.stmt#=assign.stmt#  such that Affects(_, assign)  such that Uses(2, variable)  such that Calls*(procedure, "if") with 7400=read.stmt# with constant.value=print.stmt#  pattern if(_, _, _)  such that Modifies(read, _) with read.varName="assign" with 6000=while.stmt#  pattern while(variable, _)  pattern if(read, _, _) with read.stmt#=9900  such that Parent(call, assign) with call.procName="print" with stmt.stmt#=4400  such that Next*(if, _)  pattern assign(variable, "1900*6200")  such that Uses(if, variable)  pattern assign(read, _)  pattern while(_, _)  such that Parent*(call, _)  pattern assign(_, _)  such that Affects*(assign, assign)  such that Parent*(assign, _) with while.stmt#=if.stmt# with call.procName="procedure" with 2100=while.stmt# with "then"=procedure.procName  pattern if(variable, _, _)  such that Parent(assign, 13)  such that Uses(procedure, "procedure") with variable.varName=print.varName  pattern if(_, _, _)  such that Uses(call, _)  pattern if(variable, _, _) with "if"=variable.varName  pattern assign(_, _"3200-1200"_)  pattern assign(variable, "7300+1400")  pattern while(variable, _) with read.varName=variable.varName with "call"=call.procName  such that Uses(call, _) with print.varName=print.varName with call.procName="print"  pattern while(variable, _) with call.procName=call.procName  pattern if(variable, _, _)  such that Follows(if, _)  pattern while(variable, _)  pattern if(variable, _, _)  pattern while(variable, _) with variable.varName="variable"  pattern assign(variable, _) with constant.value=assign.stmt#  pattern assign(variable, "400/900")  pattern assign(procedure, "9700*9100")  pattern if(_, _, _)  pattern assign(_, _"3500+6700"_) with stmt.stmt#=6300  such that Uses(11, variable)  pattern assign(variable, _)  such that Affects*(assign, _)  pattern assign(variable, _"9400*7300"_) with constant.value=8100  pattern if(if, _, _) with read.varName=read.varName  such that Follows(if, 15) with procedure.procName="if" with read.varName=read.varName  such that Parent*(call, 19)  pattern while(_, _)  such that Calls(_, procedure)  pattern while(variable, _) with while.stmt#=print.stmt#  pattern while(_, _)  such that Follows(if, 2)  such that Affects(_, stmt)  such that Parent*(read, 5) with 1600=call.stmt# with "call"=read.varName  pattern if(_, _, _)  pattern assign(variable, _) with 800=constant.value  pattern assign(_, _"1200*5000"_)  such that Modifies(while, _)  pattern assign(read, _"6400+7300"_)  such that Parent(print, _)  pattern if(_, _, _)  pattern if(_, _, _)  pattern while(procedure, _) with read.varName="if"  such that Affects*(assign, _)  such that Affects*(assign, _)  pattern while(variable, _)  such that Affects*(stmt, 22)  pattern assign(call, _"then*3700"_)  pattern while(variable, _)  pattern assign(variable, _"8700+call"_)  such that Calls*("read", procedure) with procedure.procName=variable.varName with "call"=read.varName with "else"=call.procName  such that Next*(_, assign)  pattern if(_, _, _)  pattern if(_, _, _) with print.varName="then"  such that Uses(stmt, _) with while.stmt#=6900  such that Affects(assign, _)  pattern while(_, _) with stmt.stmt#=call.stmt#  pattern assign(print, "6100-3200")  such that Uses(read, _)  pattern while(_, _)  pattern assign(_, "7700+4800")  pattern if(variable, _, _) with call.procName="procedure"  pattern assign(_, "500*1100") with call.stmt#=read.stmt#  such that Affects(_, assign)  pattern while(_, _)  pattern if(_, _, _)  pattern assign(_, _"1000*2600"_)  pattern if(_, _, _) with procedure.procName="call" with print.varName=print.varName  pattern while(read, _)  pattern while(_, _)  pattern assign(variable, _"5300/procedure"_)  such that Modifies(print, "call")  such that Parent*(_, call) with read.varName=read.varName  such that Follows(while, _)  pattern if(variable, _, _) with procedure.procName="call" with 9000=assign.stmt#  such that Affects*(assign, _) with "while"=print.varName with procedure.procName="then"  pattern while(variable, _)  pattern if(_, _, _)  pattern assign(variable, _)  such that Parent*(15, stmt)  pattern while(constant, _)  pattern assign(variable, "3800/2700")  pattern assign(variable, _"5800*1600"_)  pattern if(_, _, _) with "variable"=call.procName  such that Follows(_, print)  such that Next(9, assign) with stmt.stmt#=if.stmt# with 9900=while.stmt#  such that Affects(10, stmt)  pattern assign(call, _"3300-3300"_)  such that Parent*(28, stmt)  pattern if(variable, _, _)  pattern assign(variable, _"5200*if"_)  such that Parent*(print, 17)  such that Modifies(if, "assign")  such that Parent(while, 24)  pattern while(variable, _) with variable.varName=read.varName  such that Uses(print, "else")  such that Parent(call, _)  such that Follows*(_, read)  pattern assign(_, "5700-9500") 

5000
34 - Query 34
variable variable; assign assign; constant constant; call call; print print; stmt stmt; read read; while while; if if; procedure procedure; 
Select <variable, assign, constant, call, print, stmt, read, while, if, procedure>  such that Affects*(1, stmt)  pattern while(read, _) with variable.varName=procedure.procName  such that Next*(if, _)  pattern while(then, _)  pattern if(_, _, _)  pattern if(else, _, _)  pattern assign(variable, _"100/7500"_) with 8300=constant.value  pattern while(assign, _)  such that Modifies(if, variable) with read.stmt#=6200 with stmt.stmt#=assign.stmt#  pattern if(assign, _, _) with if.stmt#=call.stmt# with "constant"=read.varName  such that Modifies(13, variable) with "print"=variable.varName  such that Follows(stmt, if)  pattern assign(assign, "7500-7300") with 2900=call.stmt#  such that Follows*(print, _)  such that Modifies(while, "print") with variable.varName="call"  pattern if(_, _, _) with "if"=call.procName  pattern assign(variable, "9100/1700")  pattern while(variable, _)  pattern while(variable, _) with if.stmt#=read.stmt#  pattern assign(variable, _"8500*9700"_) with procedure.procName="read"  such that Follows*(call, _)  such that Next*(call, 11) with while.stmt#=print.stmt# with "constant"=read.varName  pattern if(_, _, _)  such that Next(stmt, print)  pattern while(procedure, _)  pattern assign(constant, "1400/6000")  such that Follows*(20, stmt)  pattern assign(_, "(7500-1400)-2600") with print.varName=call.procName with read.stmt#=7900 with read.varName=procedure.procName with "else"=variable.varName  such that Affects*(_, assign)  pattern assign(variable, _) with "call"=read.varName  pattern assign(variable, _) with print.stmt#=3000  pattern assign(_, "9900*5300") with read.varName="print"  pattern assign(while, "(4100-600)/6600")  pattern assign(_, _)  pattern assign(assign, "3200+1200")  pattern if(variable, _, _) with variable.varName=variable.varName  such that Follows(read, 3)  such that Uses(while, "assign")  such that Parent(stmt, _) with "constant"=read.varName  pattern if(variable, _, _) with "read"=call.procName  pattern while(_, _) with if.stmt#=constant.value  pattern if(variable, _, _) with variable.varName=procedure.procName  pattern if(variable, _, _)  pattern while(_, _) with "variable"=call.procName  pattern if(_, _, _)  such that Follows*(assign, stmt) with "constant"=procedure.procName  such that Uses(read, variable)  pattern if(_, _, _)  pattern if(read, _, _) with read.stmt#=call.stmt# with stmt.stmt#=5100  pattern while(else, _)  such that Parent*(read, 17)  such that Uses(23, variable) with assign.stmt#=print.stmt# with read.varName="while"  pattern while(variable, _) with stmt.stmt#=call.stmt#  pattern while(while, _)  pattern if(constant, _, _) with "if"=print.varName  pattern assign(variable, "9200+6400")  pattern if(_, _, _) with variable.varName=call.procName  pattern if(variable, _, _) with stmt.stmt#=stmt.stmt#  pattern assign(variable, "300/200")  pattern while(_, _)  pattern if(variable, _, _)  pattern while(_, _)  such that Affects*(_, assign) with "assign"=variable.varName with variable.varName="variable"  pattern while(variable, _)  such that Next(_, read)  such that Calls(procedure, _) with variable.varName="call" with assign.stmt#=constant.value with variable.varName="constant"  pattern assign(variable, _)  such that Affects*(assign, 4)  such that Affects(_, stmt)  such that Parent*(stmt, 24)  such that Next(4, assign)  pattern assign(assign, "4300+3200") with 9400=constant.value  pattern while(_, _) with "constant"=procedure.procName with procedure.procName=variable.varName  such that Calls(procedure, procedure)  pattern while(variable, _)  such that Uses(stmt, _) with while.stmt#=assign.stmt# with if.stmt#=6200  pattern assign(if, _) with call.stmt#=call.stmt# with procedure.procName=procedure.procName with call.procName=read.varName  such that Follows*(_, read)  such that Parent*(call, 10)  pattern while(while, _)  pattern while(_, _) with 2300=read.stmt#  pattern while(variable, _)  such that Follows*(6, stmt)  such that Affects*(_, stmt)  pattern while(else, _)  pattern assign(assign, "7600+1800")  such that Affects(stmt, _) with procedure.procName=variable.varName  pattern if(variable, _, _) with print.stmt#=2900  pattern while(variable, _)  such that Next(call, read) with print.stmt#=4800  pattern if(print, _, _) with 6200=stmt.stmt# with read.stmt#=read.stmt#  such that Affects*(_, stmt) with "else"=call.procName with call.stmt#=assign.stmt#  pattern if(_, _, _)  pattern assign(variable, _)  such that Modifies(stmt, _)  such that Affects*(stmt, _)  pattern assign(variable, "read-4700")  pattern if(while, _, _)  pattern while(variable, _) with "call"=print.varName  pattern assign(_, "5600-call")  pattern assign(variable, _"8000+5900"_)  pattern while(while, _) with 2500=read.stmt#  pattern assign(variable, _"8200/7200"_)  pattern while(variable, _)  pattern assign(variable, _)  pattern if(then, _, _) with variable.varName=print.varName with read.stmt#=call.stmt# with assign.stmt#=constant.value  such that Affects(assign, _)  pattern if(else, _, _)  pattern if(_, _, _)  pattern while(assign, _)  pattern while(if, _)  pattern if(variable, _, _)  pattern assign(if, _"6200+8300"_)  pattern assign(then, _)  pattern if(print, _, _)  pattern assign(else, _)  pattern if(then, _, _)  such that Calls*(procedure, _)  pattern assign(variable, _)  pattern if(else, _, _)  pattern if(_, _, _) with 8400=constant.value  such that Affects(stmt, stmt)  pattern assign(_, _)  such that Follows(17, assign)  pattern while(_, _)  pattern while(variable, _) with "assign"=read.varName with variable.varName=print.varName with variable.varName=procedure.procName  pattern while(then, _) with constant.value=3200 with procedure.procName="while" with if.stmt#=read.stmt# with print.stmt#=3200 with print.varName=procedure.procName with "print"=read.varName with 5100=constant.value  pattern if(_, _, _) with call.procName=print.varName  pattern while(_, _)  pattern while(_, _)  pattern assign(variable, _) with constant.value=assign.stmt# with "read"=procedure.procName  pattern assign(variable, _)  such that Calls*(procedure, "if") with 3500=if.stmt#  such that Follows*(call, stmt) with 3000=stmt.stmt#  such that Affects*(stmt, 8)  pattern while(variable, _)  such that Follows*(while, 13) with read.varName="constant" with if.stmt#=1100  pattern if(variable, _, _)  pattern if(variable, _, _)  such that Follows*(read, 7)  pattern if(variable, _, _) with 2800=call.stmt#  such that Parent(if, 1)  pattern assign(variable, "6300/8600")  pattern if(constant, _, _)  pattern if(_, _, _) with 6300=while.stmt#  pattern assign(variable, "9500/2300")  pattern while(assign, _)  pattern if(_, _, _)  such that Parent*(17, print)  pattern while(variable, _)  pattern while(_, _)  pattern if(variable, _, _) with variable.varName="while"  such that Calls(procedure, "assign")  such that Next(stmt, 12)  such that Parent*(17, assign)  pattern if(_, _, _)  such that Next(stmt, 27) with while.stmt#=7200 with "then"=call.procName  such that Follows(_, read)  pattern if(_, _, _)  pattern if(else, _, _) with variable.varName=print.varName  pattern assign(_, "(4100/5200)/3800")  pattern assign(_, "7500/1600") with "call"=variable.varName with 2300=while.stmt# with "read"=procedure.procName  pattern while(_, _) with while.stmt#=1600 with call.procName=call.procName  such that Affects*(6, assign)  such that Modifies(while, _)  pattern assign(_, _"3800*7900"_) with 1800=print.stmt#  pattern assign(_, _"1700+800"_)  pattern if(else, _, _) with call.procName="then" with while.stmt#=stmt.stmt#  pattern while(variable, _)  such that Affects(assign, _)  pattern while(_, _) with procedure.procName="variable"  such that Next*(print, _) with "constant"=call.procName  such that Follows*(1, call)  pattern assign(constant, _) with "else"=print.varName  such that Next*(call, _)  such that Next(while, 3) with "read"=procedure.procName  pattern if(procedure, _, _) with "assign"=variable.varName  pattern while(_, _)  pattern while(variable, _)  such that Follows*(while, call) with stmt.stmt#=8900  pattern assign(variable, _)  pattern assign(_, "7100-9200")  such that Affects(stmt, 17)  pattern assign(_, _)  such that Uses(2, variable)  pattern if(then, _, _)  pattern if(variable, _, _) with stmt.stmt#=assign.stmt# with 1400=call.stmt# with read.stmt#=6200  pattern while(variable, _)  such that Calls(procedure, "while")  such that Uses(stmt, "print") with print.varName=read.varName with read.varName=call.procName with variable.varName=procedure.procName  pattern while(_, _)  such that Follows*(print, stmt)  pattern while(while, _)  such that Modifies(procedure, _) with print.varName=read.varName  such that Calls(_, procedure)  pattern assign(_, _"variable+6600"_)  pattern if(else, _, _) with procedure.procName="while" with print.varName="then" with call.stmt#=3400  pattern assign(variable, "3100+6700")  pattern while(_, _) with print.stmt#=stmt.stmt#  such that Parent(call, _)  pattern assign(if, _)  pattern while(variable, _)  pattern assign(variable, _)  pattern while(variable, _) with 3500=call.stmt# with if.stmt#=2400  such that Parent*(7, stmt)  such that Modifies(stmt, "else") with call.procName=read.varName  pattern assign(then, _)  pattern assign(if, _)  such that Parent*(_, if) with read.varName="call" with "then"=call.procName with 6100=if.stmt# with read.varName=read.varName  such that Parent*(_, if)  pattern while(_, _)  pattern if(variable, _, _) with stmt.stmt#=while.stmt#  pattern if(procedure, _, _) with assign.stmt#=assign.stmt#  such that Follows*(while, _)  pattern if(_, _, _)  such that Affects*(24, stmt) with read.stmt#=3700  pattern if(_, _, _)  pattern assign(print, _"8600-4500"_) with read.varName="constant"  pattern while(variable, _) with print.stmt#=read.stmt#  such that Modifies(while, _) with stmt.stmt#=8100  pattern while(variable, _)  such that Calls(procedure, "else")  pattern if(_, _, _)  pattern if(print, _, _)  pattern while(variable, _) with variable.varName=call.procName  pattern if(_, _, _)  pattern if(_, _, _) with 3900=constant.value  such that Parent*(assign, if) with "if"=call.procName  pattern while(_, _) with while.stmt#=constant.value with procedure.procName="print"  such that Calls(procedure, "procedure")  pattern while(variable, _) with call.procName=print.varName with variable.varName="print"  pattern while(read, _)  pattern while(variable, _)  pattern if(variable, _, _) with if.stmt#=600 with procedure.procName="while" with "constant"=procedure.procName  such that Follows(call, if) with 5700=stmt.stmt#  such that Affects(stmt, 8)  pattern assign(_, _"(2900*4800)*print"_) with 7500=while.stmt# with 2100=call.stmt#  pattern assign(assign, "9500/2900") with while.stmt#=3800  pattern while(_, _)  pattern if(variable, _, _) with call.stmt#=call.stmt#  pattern assign(variable, _) with while.stmt#=constant.value  such that Calls*(procedure, procedure)  pattern if(variable, _, _)  such that Follows*(stmt, if)  pattern while(variable, _)  pattern while(else, _)  such that Calls*(procedure, "print")  pattern while(variable, _)  such that Next*(_, print)  pattern if(variable, _, _) with 2800=assign.stmt#  pattern while(if, _) with procedure.procName="procedure" with if.stmt#=6500  pattern assign(variable, _) with print.varName="print" with if.stmt#=2700  pattern while(if, _)  such that Next(print, 6)  pattern if(variable, _, _)  such that Affects*(stmt, _)  pattern assign(variable, _)  pattern while(_, _) with "constant"=print.varName  pattern while(print, _) with 9400=print.stmt#  pattern while(_, _) with 5800=assign.stmt#  pattern assign(constant, _"900/procedure"_)  such that Calls(_, procedure)  pattern if(variable, _, _) with 9000=assign.stmt#  pattern while(_, _)  such that Parent*(call, _)  pattern if(_, _, _)  pattern assign(then, "6300-7400") with call.stmt#=stmt.stmt#  such that Next(call, _)  pattern if(_, _, _) with "variable"=procedure.procName  such that Parent*(call, assign)  pattern while(variable, _)  pattern assign(constant, _)  such that Next(25, if)  pattern if(_, _, _) with "else"=procedure.procName  such that Affects(_, stmt)  such that Next*(stmt, _)  such that Follows*(_, stmt) with read.varName=procedure.procName with if.stmt#=if.stmt# with "else"=call.procName  such that Uses(28, variable)  pattern while(_, _)  pattern if(variable, _, _) with 8400=stmt.stmt#  pattern while(_, _) with variable.varName=read.varName with read.varName=variable.varName  pattern while(_, _)  pattern assign(variable, _"(2700+6000)-9700"_)  pattern assign(_, _)  pattern assign(_, "5100+4800")  such that Follows*(5, read) with read.varName="read" with "variable"=variable.varName  such that Calls*(procedure, "constant")  pattern while(variable, _)  pattern if(_, _, _)  pattern if(variable, _, _) with procedure.procName=procedure.procName  such that Modifies(2, variable) with assign.stmt#=3400  such that Next(16, assign)  such that Next(_, read) with constant.value=1000 with print.stmt#=constant.value  pattern if(assign, _, _) with 5400=constant.value  pattern assign(_, _"1900+2500"_) with print.varName="read"  such that Uses(read, _) with constant.value=8900 with "variable"=variable.varName  such that Follows(assign, 5)  such that Follows(print, 25)  pattern while(constant, _) with print.varName="then"  pattern assign(call, "8500*if") with print.varName=procedure.procName  pattern while(_, _)  pattern assign(variable, _"7400+2000"_)  pattern while(variable, _) with call.procName="procedure" with 1000=constant.value  such that Parent*(assign, _)  pattern assign(_, _"3900/7200"_)  pattern assign(if, _)  such that Follows*(call, _)  such that Parent*(call, _) with 1200=constant.value  such that Modifies(if, variable)  pattern assign(variable, "5800/4600")  pattern while(_, _)  pattern assign(variable, "1900/6100")  such that Parent*(read, call)  pattern if(assign, _, _)  pattern if(variable, _, _)  pattern while(read, _)  such that Follows*(_, assign) with print.stmt#=read.stmt# with read.varName=procedure.procName  pattern assign(assign, _) with read.varName=procedure.procName with while.stmt#=assign.stmt#  such that Parent(read, 3) with procedure.procName=procedure.procName  pattern if(_, _, _)  pattern if(_, _, _) with if.stmt#=while.stmt# 

5000
35 - Query 35
variable variable; assign assign; call call; print print; constant constant; stmt stmt; read read; if if; while while; procedure procedure; 
Select <variable, assign, call, print, constant, stmt, read, if, while, procedure>  pattern while(variable, _) with read.stmt#=while.stmt# with "procedure"=read.varName  pattern while(procedure, _) with if.stmt#=9300  pattern while(_, _)  such that Affects*(assign, 17) with procedure.procName="procedure"  such that Calls(procedure, "assign")  pattern if(print, _, _) with read.varName="procedure"  such that Affects(_, stmt) with read.varName="constant" with procedure.procName="else"  pattern assign(_, _"6900+call"_)  pattern assign(variable, _"300*900"_)  such that Next(10, call)  such that Next(1, while)  pattern while(call, _)  such that Modifies(if, variable)  such that Modifies(assign, variable)  pattern assign(_, "2100-5500") with "variable"=variable.varName  such that Follows*(18, if)  such that Next(read, _)  pattern while(variable, _)  such that Follows(27, stmt)  pattern assign(variable, _)  pattern while(_, _)  pattern assign(_, "(1700/9400)/9200")  pattern while(print, _) with "then"=print.varName with print.varName="constant" with read.stmt#=3200 with 1900=print.stmt#  pattern assign(_, _"7100*7700"_)  pattern while(variable, _)  pattern while(variable, _)  pattern if(variable, _, _) with variable.varName="while"  pattern if(variable, _, _)  pattern assign(_, _)  pattern if(_, _, _)  pattern if(call, _, _) with call.stmt#=3900  pattern assign(variable, "call+9800") with print.varName=read.varName  pattern while(procedure, _)  such that Modifies(stmt, _)  pattern assign(else, "7700+300")  such that Follows*(while, _)  pattern while(variable, _)  pattern while(_, _)  such that Follows*(if, 24)  pattern assign(read, "3300+call")  pattern if(constant, _, _)  pattern if(variable, _, _)  such that Follows*(stmt, _)  pattern while(variable, _) with call.procName=procedure.procName with stmt.stmt#=7300  pattern while(_, _)  pattern if(_, _, _) with read.stmt#=print.stmt#  pattern while(variable, _)  such that Calls(procedure, "assign") with stmt.stmt#=constant.value  such that Parent(_, call)  pattern assign(_, _"5300-6500"_)  pattern assign(_, _"4900*1000"_)  pattern if(variable, _, _) with "print"=read.varName  pattern if(_, _, _)  pattern while(variable, _)  pattern assign(_, _)  such that Modifies(print, _)  pattern if(variable, _, _)  such that Modifies(stmt, _)  such that Parent*(18, print) with "assign"=read.varName with 6500=stmt.stmt#  such that Modifies(call, _) with "print"=call.procName  pattern if(_, _, _) with read.stmt#=stmt.stmt#  pattern while(variable, _) with "variable"=call.procName  pattern while(print, _)  pattern if(_, _, _)  pattern assign(variable, _)  pattern if(_, _, _)  such that Follows*(while, print)  pattern assign(_, _"(6500*100)-5400"_) with call.stmt#=read.stmt#  such that Parent*(print, if)  such that Next*(_, print)  pattern assign(call, "9400-3900")  such that Calls(procedure, _)  such that Parent(17, while)  such that Modifies(if, _) with assign.stmt#=3600  such that Follows(while, stmt) with procedure.procName="constant" with 2000=constant.value  such that Next(assign, 3)  pattern assign(variable, _)  pattern if(read, _, _) with 8400=assign.stmt# with "if"=call.procName with variable.varName=procedure.procName  pattern assign(_, _)  pattern while(else, _)  such that Calls*(_, procedure)  pattern while(then, _)  pattern assign(_, _) with if.stmt#=8100  pattern assign(_, "4600/100")  pattern if(else, _, _) with print.varName=procedure.procName  such that Parent(read, _)  pattern assign(_, "variable/2300")  such that Follows(25, assign) with "assign"=call.procName  pattern assign(else, _)  pattern while(variable, _)  such that Modifies(assign, variable)  pattern if(else, _, _) with procedure.procName="while"  such that Affects*(stmt, _)  such that Next(read, while) with "variable"=call.procName  pattern if(variable, _, _)  pattern if(_, _, _) with call.procName="assign"  pattern if(read, _, _) with 7200=constant.value  pattern assign(_, _"(else+then)-300"_)  pattern assign(variable, _) with call.stmt#=assign.stmt#  such that Calls(procedure, procedure)  pattern assign(variable, _"8000*1000"_) with assign.stmt#=2200  pattern if(_, _, _)  pattern if(_, _, _)  such that Next*(read, stmt)  such that Parent*(28, read)  such that Uses(procedure, _)  such that Follows*(_, while)  such that Affects(assign, _)  such that Uses(while, "procedure")  pattern while(_, _) with read.stmt#=7700  such that Parent(_, while)  pattern while(_, _)  pattern while(_, _)  pattern if(while, _, _)  pattern assign(variable, "1100-6800")  such that Follows*(assign, print) with read.varName=procedure.procName  pattern while(_, _) with constant.value=5700 with procedure.procName="then" with 5500=constant.value  such that Affects*(stmt, stmt) with 3100=while.stmt#  pattern while(_, _)  such that Affects(assign, 21) with read.varName="call"  such that Follows(_, while)  pattern if(variable, _, _)  pattern while(variable, _)  such that Calls*(procedure, _)  such that Affects(stmt, _)  pattern assign(variable, "1800+400")  such that Calls*(_, procedure) with "then"=variable.varName  pattern if(variable, _, _)  pattern assign(else, _"9300+7300"_)  pattern if(variable, _, _)  such that Affects(2, stmt)  pattern if(else, _, _)  pattern assign(variable, "3200-8800")  pattern while(variable, _) with procedure.procName="procedure" with constant.value=read.stmt#  such that Affects*(_, stmt) with print.stmt#=500 with variable.varName=variable.varName  pattern if(_, _, _)  such that Modifies(procedure, variable)  pattern assign(variable, _)  pattern assign(while, "(7100/8800)/print")  such that Next*(print, if)  pattern if(variable, _, _)  pattern assign(call, _"9700*2500"_)  pattern if(if, _, _)  pattern assign(variable, _) with if.stmt#=if.stmt#  such that Follows(if, _) with read.varName="variable"  pattern assign(_, "(3900+2300)-1400") with while.stmt#=assign.stmt# with call.procName=call.procName  pattern while(variable, _) with stmt.stmt#=5400  such that Next(print, 4)  pattern while(if, _) with stmt.stmt#=assign.stmt# with constant.value=while.stmt#  such that Uses(28, variable)  such that Follows*(print, _)  such that Parent(while, stmt)  pattern assign(print, "1900-800")  such that Calls(procedure, _)  pattern while(_, _)  pattern if(_, _, _)  pattern assign(variable, "8300+6100")  pattern if(assign, _, _)  pattern if(_, _, _)  pattern while(variable, _) with read.varName="if"  such that Parent*(print, assign)  pattern while(_, _) with "then"=variable.varName  such that Affects(stmt, stmt)  such that Affects*(12, assign)  pattern while(variable, _) with constant.value=8700 with 4400=read.stmt# with print.stmt#=while.stmt#  pattern while(variable, _)  such that Modifies(read, variable)  pattern if(_, _, _)  such that Next*(_, while)  pattern assign(else, "6600-5200")  pattern if(then, _, _) with call.stmt#=print.stmt# with read.varName="if"  pattern if(while, _, _)  pattern assign(variable, _) with variable.varName=variable.varName with 5100=read.stmt# with print.varName=variable.varName with 3500=constant.value with read.stmt#=constant.value  such that Next(if, if)  pattern while(variable, _) with "constant"=read.varName  pattern if(call, _, _) with "constant"=read.varName with print.stmt#=7400 with read.stmt#=assign.stmt#  such that Follows*(_, stmt) with print.varName=read.varName  pattern if(_, _, _)  pattern assign(variable, "(variable+5700)+3100")  such that Parent*(17, if)  such that Next(if, _)  such that Uses(while, "variable") with stmt.stmt#=constant.value with procedure.procName=print.varName with stmt.stmt#=print.stmt#  such that Parent*(11, print) with 5300=if.stmt# with read.varName="if"  pattern while(_, _) with assign.stmt#=5300 with procedure.procName=call.procName  pattern assign(_, _)  pattern assign(constant, _"8600-9200"_)  pattern if(_, _, _)  pattern if(else, _, _) with call.procName=print.varName  pattern assign(variable, "400+4900")  such that Modifies(if, variable) with procedure.procName="while"  pattern if(variable, _, _) with variable.varName=print.varName  pattern assign(variable, _"procedure*7200"_)  pattern if(while, _, _)  pattern if(variable, _, _) with call.procName=call.procName  pattern if(variable, _, _)  such that Next*(call, _) with 6200=if.stmt# with if.stmt#=4700 with call.stmt#=6400  pattern while(variable, _)  pattern assign(assign, "3700+5400") with stmt.stmt#=1500 with variable.varName="read" with while.stmt#=constant.value  such that Affects(1, stmt) with read.varName="if" with constant.value=constant.value  such that Follows*(call, print)  pattern while(constant, _)  such that Parent(6, print)  pattern assign(read, "7200/200")  pattern assign(variable, "3500*6700") with procedure.procName="procedure" with call.procName=call.procName with procedure.procName="read"  pattern assign(if, _"8600-variable"_)  pattern while(_, _) with print.stmt#=assign.stmt#  pattern assign(_, _"5600/6700"_) with stmt.stmt#=while.stmt#  pattern if(_, _, _)  pattern assign(then, "2500+if")  such that Next(print, _) with 300=stmt.stmt# with "call"=read.varName with 1600=print.stmt# with 6700=stmt.stmt# with 2300=while.stmt#  pattern while(_, _) with "else"=read.varName  pattern assign(variable, _)  pattern while(_, _)  pattern assign(assign, _"7400-print"_) with while.stmt#=8000  pattern assign(variable, _"1400-then"_)  pattern if(print, _, _) with 9100=stmt.stmt#  pattern assign(assign, _)  such that Follows(_, if)  pattern while(constant, _)  such that Follows(read, _)  pattern if(_, _, _)  pattern if(variable, _, _)  such that Calls*(procedure, procedure)  such that Next*(call, while) with "procedure"=print.varName  such that Parent(assign, 18)  pattern while(if, _)  pattern if(_, _, _)  such that Follows*(stmt, _) with while.stmt#=6800  pattern assign(variable, "7500+3700")  pattern assign(variable, "4100+1500")  pattern while(variable, _) with assign.stmt#=5300 with while.stmt#=while.stmt#  such that Parent(call, _)  pattern if(_, _, _)  such that Calls*(procedure, "print")  pattern if(_, _, _)  pattern while(variable, _) with variable.varName="assign"  such that Affects*(_, stmt)  such that Parent(read, _)  such that Calls*(procedure, procedure) with read.stmt#=8200  such that Affects*(assign, 10)  pattern assign(assign, _"4600*4800"_)  pattern assign(_, "4200+1800") with constant.value=5900  such that Modifies(print, variable)  such that Modifies(print, variable) with variable.varName="while"  such that Follows(_, while) with read.varName=variable.varName with read.stmt#=constant.value  pattern assign(variable, "9000-6400")  pattern while(while, _)  pattern assign(_, "8100+then") with 2600=assign.stmt# with variable.varName=call.procName  pattern if(variable, _, _)  such that Follows(26, read)  pattern while(_, _)  pattern while(assign, _)  such that Parent(read, _)  pattern while(_, _)  such that Affects*(_, stmt) with variable.varName="constant"  pattern assign(print, "(3600+2200)*1900")  such that Affects(assign, assign) with call.stmt#=9700  pattern if(constant, _, _)  pattern if(_, _, _)  pattern if(_, _, _) with call.procName="assign"  such that Follows(assign, 12)  pattern if(_, _, _)  such that Parent(_, if)  pattern assign(then, _)  such that Affects(10, assign)  such that Next*(_, while)  pattern while(procedure, _)  pattern if(_, _, _)  pattern while(_, _)  pattern while(_, _) with assign.stmt#=5800  such that Parent*(stmt, assign)  pattern if(while, _, _)  pattern while(variable, _) with procedure.procName=procedure.procName  pattern assign(variable, _)  pattern while(variable, _)  such that Follows(26, read)  such that Follows*(assign, while)  pattern if(print, _, _)  such that Modifies(call, "print") with "else"=call.procName  pattern if(call, _, _)  pattern if(variable, _, _) with while.stmt#=while.stmt#  pattern assign(_, _"2600*9300"_) with read.varName="procedure" with 300=while.stmt# with read.varName=procedure.procName with call.stmt#=7200  pattern while(_, _) with while.stmt#=constant.value with 9100=call.stmt#  pattern if(_, _, _)  such that Follows(14, call) with print.stmt#=call.stmt#  pattern assign(read, _"3900+8600"_) with print.varName=variable.varName  such that Follows(if, _)  pattern while(variable, _)  pattern assign(variable, _"2100/5900"_)  pattern assign(variable, "call+5300")  such that Follows(24, stmt)  such that Affects*(_, assign)  pattern while(_, _)  such that Parent(11, read)  pattern assign(variable, _"(8100*6800)-7600"_)  such that Parent(print, 28)  such that Follows(20, while)  pattern if(variable, _, _)  pattern if(variable, _, _) with read.stmt#=assign.stmt#  pattern while(_, _) with constant.value=7000  pattern assign(then, _"5100/4100"_) with while.stmt#=1800  such that Affects(assign, 2) with call.stmt#=read.stmt# with 3200=constant.value  such that Affects*(_, assign) with 2900=call.stmt#  pattern assign(_, "1000+7200")  pattern assign(_, _"2000-1600"_) with 9900=stmt.stmt#  pattern if(variable, _, _)  pattern if(assign, _, _)  pattern if(_, _, _)  pattern if(variable, _, _)  pattern if(_, _, _) with procedure.procName="variable"  pattern assign(else, _"((7200*9200)+7300)+5400"_)  pattern while(constant, _)  such that Parent*(print, 22) with 4100=print.stmt#  pattern while(if, _)  such that Next(6, call)  pattern if(print, _, _) with procedure.procName="print"  such that Parent*(29, if) with if.stmt#=5000  pattern while(variable, _)  pattern assign(constant, "1100*5600")  such that Affects(_, stmt)  such that Next*(_, call)  pattern assign(_, "8500/900") with stmt.stmt#=constant.value with "else"=call.procName with constant.value=stmt.stmt#  pattern if(variable, _, _)  pattern assign(variable, "4000/1500")  pattern if(_, _, _)  such that Parent*(stmt, call)  such that Uses(1, variable)  pattern assign(_, _"3900-8900"_) with variable.varName=call.procName  pattern assign(variable, "1500+3200") with 1600=read.stmt#  pattern while(_, _)  pattern if(variable, _, _) with 9700=if.stmt#  such that Parent*(_, stmt)  pattern assign(variable, "7100+3800")  such that Next(29, assign)  pattern while(variable, _)  pattern assign(variable, "7400+8000") with print.varName="procedure"  such that Next*(print, _)  pattern assign(variable, _) with call.stmt#=4000 with read.stmt#=read.stmt#  pattern while(_, _)  pattern while(_, _)  such that Affects(assign, _)  pattern while(_, _)  such that Parent(stmt, call)  such that Follows(if, 11) 

5000
36 - Query 36
print print; assign assign; variable variable; constant constant; stmt stmt; read read; procedure procedure; while while; if if; call call; 
Select <print, assign, variable, constant, stmt, read, procedure, while, if, call> with print.stmt#=while.stmt# with variable.varName=variable.varName  pattern assign(then, _) with procedure.procName="assign" with while.stmt#=call.stmt#  pattern while(variable, _)  pattern assign(variable, _)  such that Calls*(_, procedure)  pattern if(variable, _, _)  pattern assign(variable, _"3200*5500"_)  pattern assign(then, _"2900/4300"_)  such that Parent*(stmt, read)  such that Next(read, while)  pattern if(_, _, _)  such that Modifies(call, "constant")  pattern assign(while, "8100+1500")  pattern if(then, _, _) with read.stmt#=2500  such that Calls(_, procedure)  such that Next(while, 28)  such that Parent(print, print)  pattern if(print, _, _)  pattern while(variable, _) with 6500=constant.value  pattern if(variable, _, _) with variable.varName=variable.varName  pattern while(else, _)  such that Next(assign, _)  pattern while(variable, _)  such that Affects*(stmt, _)  such that Calls("print", procedure)  pattern if(call, _, _) with call.procName="assign"  such that Affects(_, stmt)  such that Follows(read, call)  pattern assign(_, "8900+2200")  such that Follows(_, read)  such that Next*(call, _) with "assign"=read.varName  pattern while(_, _)  such that Affects(14, assign)  pattern if(variable, _, _)  such that Modifies(18, variable) with variable.varName="read"  such that Calls(procedure, "assign") with print.varName="constant"  such that Next(assign, 3)  pattern assign(_, _)  pattern while(_, _)  pattern if(_, _, _)  pattern assign(_, _"100*constant"_) with read.varName="read"  pattern if(variable, _, _)  such that Modifies(if, variable) with "read"=print.varName with print.varName="else" with call.procName=print.varName  pattern if(else, _, _)  such that Next(1, assign)  such that Next*(_, read) with call.stmt#=100 with stmt.stmt#=2100  pattern assign(variable, _"1900-3500"_)  pattern assign(assign, "print+constant") with 5700=call.stmt#  such that Follows(assign, _) with read.varName="print"  pattern if(variable, _, _)  such that Affects*(stmt, stmt)  pattern if(variable, _, _)  such that Parent*(while, 24)  pattern if(constant, _, _) with variable.varName="call" with assign.stmt#=2400  such that Modifies(call, _)  pattern assign(call, _) with call.stmt#=8500  pattern assign(variable, _)  pattern assign(_, _"4900*2700"_)  such that Follows(18, call) with call.procName="while"  such that Parent(assign, _) with 1300=stmt.stmt#  pattern assign(variable, _) with call.stmt#=stmt.stmt#  pattern if(constant, _, _) with read.varName="variable"  pattern assign(constant, _"3200/1800"_)  such that Next*(stmt, stmt) with read.varName=call.procName with "call"=print.varName  such that Parent*(stmt, 6)  such that Affects(17, assign)  pattern while(_, _)  pattern if(call, _, _) with 9400=if.stmt#  pattern assign(procedure, "4700-6000") with "while"=call.procName  pattern while(while, _)  such that Affects(stmt, 21) with procedure.procName="procedure"  such that Parent(while, if)  pattern assign(variable, "1300-1600")  such that Uses(while, "variable") with 1300=stmt.stmt#  such that Calls*("else", procedure) with read.stmt#=call.stmt#  pattern if(variable, _, _)  pattern assign(_, "4500*100") with "procedure"=read.varName with procedure.procName=print.varName  such that Calls(procedure, _)  pattern if(_, _, _)  such that Modifies(read, "variable") with print.stmt#=print.stmt# with variable.varName=read.varName  pattern assign(_, _) with while.stmt#=7700  such that Calls("print", procedure)  pattern assign(call, _"200-9200"_)  such that Affects*(assign, _) with 1900=read.stmt#  such that Follows*(print, 24)  pattern if(read, _, _)  pattern while(variable, _)  pattern while(_, _)  pattern assign(while, _"8100-9800"_)  pattern while(_, _) with read.varName=read.varName with 1500=call.stmt#  pattern while(_, _)  pattern assign(_, _)  pattern if(_, _, _)  pattern if(variable, _, _)  pattern while(else, _)  pattern while(_, _)  such that Calls("then", procedure)  such that Calls*(_, procedure) with variable.varName=print.varName with if.stmt#=while.stmt# with constant.value=assign.stmt# with call.stmt#=200  pattern assign(_, _"5300*3100"_) with 7300=constant.value  pattern if(variable, _, _)  such that Follows*(print, 28)  such that Next*(stmt, _)  such that Affects*(20, assign)  such that Parent*(_, read)  pattern while(_, _) with call.procName="assign"  pattern while(else, _)  such that Calls(procedure, "then")  pattern assign(variable, "2700/then")  such that Uses(read, _) with read.varName="then" with while.stmt#=5000 with call.stmt#=9300  pattern if(_, _, _)  pattern assign(_, _"300+while"_)  such that Next*(_, if) with call.stmt#=6800  pattern while(_, _)  pattern while(variable, _)  pattern assign(_, "2800*constant")  such that Parent(_, if) with call.procName=call.procName  pattern if(variable, _, _)  such that Parent(while, 20)  such that Follows*(stmt, 22)  pattern while(assign, _) with call.procName=call.procName with "call"=read.varName with stmt.stmt#=3500  pattern while(_, _) with 6200=call.stmt#  pattern while(variable, _) with variable.varName="then"  pattern if(else, _, _)  pattern if(_, _, _) with while.stmt#=3800  pattern if(variable, _, _) with print.stmt#=9700 with print.stmt#=4400 with 3800=print.stmt#  such that Parent(stmt, _)  pattern assign(while, "6700-1900") with 600=stmt.stmt#  such that Affects*(assign, _)  pattern if(_, _, _)  pattern while(variable, _) with call.procName=call.procName  pattern assign(_, "5100+8500")  pattern if(variable, _, _) with variable.varName=read.varName  pattern while(procedure, _)  pattern if(variable, _, _) with call.stmt#=2200  pattern while(variable, _) with while.stmt#=call.stmt# with variable.varName=procedure.procName  pattern if(variable, _, _) with 800=stmt.stmt#  pattern if(while, _, _)  pattern while(then, _)  such that Follows*(22, while)  pattern if(variable, _, _)  pattern assign(if, _)  pattern assign(assign, _"2600/3200"_)  pattern assign(variable, "1000*2700")  pattern while(_, _) with read.stmt#=1400 with read.varName=procedure.procName  such that Modifies(20, variable)  pattern while(read, _)  pattern if(variable, _, _)  pattern while(variable, _) with assign.stmt#=constant.value with variable.varName=procedure.procName with variable.varName="call"  pattern while(procedure, _)  such that Follows(_, read) with "call"=call.procName with call.stmt#=assign.stmt# with call.procName="if" with "else"=print.varName  such that Calls*(_, procedure)  such that Follows*(_, read) with print.stmt#=5100 with read.varName=read.varName  pattern while(variable, _)  pattern if(read, _, _)  pattern if(_, _, _)  pattern if(variable, _, _)  pattern assign(_, _)  pattern if(variable, _, _)  such that Next(assign, _) with "then"=procedure.procName  pattern if(_, _, _) with variable.varName=variable.varName  pattern if(print, _, _) with 6200=call.stmt#  pattern while(variable, _)  pattern assign(call, "8300/if")  such that Uses(if, _)  pattern while(_, _)  pattern assign(variable, _) with variable.varName=read.varName  pattern while(variable, _)  pattern if(variable, _, _) with 6100=if.stmt# with stmt.stmt#=if.stmt#  such that Parent*(if, _) with print.varName=procedure.procName  such that Affects(stmt, _)  pattern if(assign, _, _)  pattern if(variable, _, _)  such that Next*(while, stmt)  pattern assign(_, _"assign+9500"_) with procedure.procName="then" with assign.stmt#=8300  pattern if(call, _, _)  such that Parent(_, if)  pattern if(variable, _, _)  such that Calls*("procedure", procedure)  pattern while(_, _)  such that Affects*(assign, 21) with "procedure"=procedure.procName  such that Affects*(stmt, _)  pattern if(_, _, _)  pattern while(variable, _)  such that Modifies(read, variable)  pattern while(variable, _)  pattern assign(variable, "6500*2900")  pattern assign(procedure, "700/7500") with print.stmt#=1900  pattern if(_, _, _) with procedure.procName=print.varName  such that Uses(call, variable)  pattern while(_, _)  pattern while(variable, _)  pattern while(variable, _)  pattern assign(else, "2500*if")  pattern if(procedure, _, _)  pattern assign(variable, _)  pattern assign(while, "5000-variable")  pattern assign(variable, "5000/2300")  pattern if(variable, _, _)  pattern assign(print, "1700/5400") with read.varName="else"  pattern if(variable, _, _)  such that Next*(read, 11)  such that Next*(_, stmt) with 6100=stmt.stmt#  such that Follows(stmt, _)  pattern while(else, _)  pattern assign(variable, _) with if.stmt#=while.stmt# with "if"=print.varName with print.varName=variable.varName  pattern if(else, _, _)  pattern while(read, _) with if.stmt#=8000  pattern while(call, _)  such that Modifies(11, variable)  pattern assign(variable, _)  pattern assign(if, "3300/1300")  pattern if(while, _, _)  pattern assign(variable, "(5200*1100)*9500")  such that Uses(call, "print")  pattern while(while, _)  pattern while(_, _) with "call"=procedure.procName  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern while(_, _) with "while"=call.procName  such that Parent(stmt, _)  such that Uses(read, _)  pattern if(_, _, _) with variable.varName=call.procName  pattern if(assign, _, _)  such that Parent(25, read)  pattern while(assign, _) with print.stmt#=3100  pattern while(call, _) with variable.varName=procedure.procName  pattern while(call, _) with "read"=variable.varName  such that Uses(stmt, variable)  pattern while(assign, _) with call.procName=procedure.procName  pattern while(variable, _)  pattern assign(variable, _"8900+8600"_)  pattern assign(variable, "8900+7400")  pattern assign(variable, _)  pattern assign(print, "procedure*9200")  such that Affects(assign, stmt)  pattern while(then, _)  such that Modifies(1, variable) with "procedure"=read.varName  pattern if(_, _, _)  pattern while(_, _)  pattern if(_, _, _)  such that Uses(13, variable)  such that Calls*(_, procedure)  pattern while(_, _)  such that Parent*(print, _) with procedure.procName="variable"  such that Next*(assign, if) with constant.value=6900 with print.varName="call" with 800=constant.value with call.procName="else"  such that Next(read, 12) with if.stmt#=while.stmt#  such that Follows*(_, stmt)  pattern if(variable, _, _)  such that Parent*(if, 8) with 6800=if.stmt#  pattern if(call, _, _)  such that Uses(15, variable)  pattern if(variable, _, _)  pattern while(variable, _)  pattern assign(variable, _"3900-6600"_) with 3600=while.stmt#  pattern assign(_, _"(2400/7600)+9800"_)  pattern if(then, _, _)  such that Parent*(_, stmt)  pattern if(variable, _, _) with "constant"=variable.varName  pattern assign(_, "8900+1500") with procedure.procName="call" with call.procName="while"  pattern assign(then, "8600/6500")  such that Modifies(27, variable)  pattern if(_, _, _) with assign.stmt#=2100  such that Calls(_, procedure) with "print"=print.varName  pattern if(variable, _, _)  pattern while(variable, _) with while.stmt#=5400  pattern while(procedure, _)  such that Parent*(if, 6)  pattern if(variable, _, _) with call.procName="print"  pattern if(variable, _, _)  such that Follows*(print, 20)  pattern assign(_, _"6700/read"_) with read.varName="read"  pattern while(_, _)  pattern if(call, _, _)  pattern while(procedure, _) with while.stmt#=read.stmt#  pattern while(_, _) with read.stmt#=read.stmt#  pattern while(_, _)  pattern assign(_, _"1500+4800"_) with read.stmt#=read.stmt#  pattern if(else, _, _) with call.procName=variable.varName with 8600=print.stmt#  pattern while(variable, _)  pattern assign(call, _)  pattern while(_, _) with print.stmt#=5100 with call.procName=procedure.procName  such that Modifies(call, _)  pattern while(constant, _)  such that Next*(call, while)  pattern if(_, _, _)  such that Affects*(assign, 29)  pattern assign(call, "5900/8700")  such that Next(stmt, _)  pattern if(if, _, _)  such that Modifies(stmt, _)  pattern if(if, _, _)  such that Calls*(procedure, _) with call.procName="variable"  pattern while(_, _)  such that Next(13, call)  pattern if(_, _, _)  pattern while(variable, _)  such that Uses(9, variable)  pattern if(read, _, _)  such that Parent(8, read) with procedure.procName="procedure" with "read"=read.varName with stmt.stmt#=read.stmt# with print.stmt#=5000  pattern while(_, _)  pattern while(procedure, _) with read.stmt#=4100 with read.stmt#=call.stmt# with procedure.procName=read.varName  such that Affects(assign, stmt) with call.stmt#=5300  such that Follows(assign, 20) with variable.varName="constant"  pattern assign(else, _"assign*100"_)  such that Follows(call, _) with read.stmt#=1300  such that Calls*(procedure, "call")  pattern assign(_, _"call+then"_) with read.stmt#=500  pattern while(then, _)  such that Parent*(call, 14)  such that Affects(assign, 9)  such that Parent*(stmt, _) with print.varName="variable"  pattern assign(variable, _) with "else"=read.varName with print.varName=call.procName  pattern if(variable, _, _) with while.stmt#=stmt.stmt#  pattern if(call, _, _) with call.procName=procedure.procName  such that Next*(print, _) with call.procName="else"  such that Next*(stmt, print)  pattern while(variable, _)  pattern if(variable, _, _) with stmt.stmt#=200  pattern if(_, _, _)  pattern if(print, _, _)  pattern if(variable, _, _) with constant.value=print.stmt#  pattern assign(_, _) with read.varName=print.varName  pattern if(else, _, _)  such that Affects(assign, _) with assign.stmt#=1000  pattern while(read, _) with procedure.procName="read"  pattern if(else, _, _)  such that Calls(procedure, "procedure")  pattern assign(variable, _) with variable.varName="if"  such that Next*(13, while)  pattern if(constant, _, _)  pattern if(constant, _, _) with print.varName=call.procName  such that Affects(stmt, _)  pattern while(variable, _) with "variable"=variable.varName  pattern if(variable, _, _)  such that Affects(assign, 19)  such that Uses(while, "variable")  such that Modifies(3, variable)  such that Uses(procedure, "procedure")  pattern while(variable, _) with 8100=assign.stmt#  such that Affects*(stmt, stmt)  pattern assign(_, _"1000/6900"_)  pattern while(assign, _) with read.varName=variable.varName  pattern while(assign, _)  such that Uses(call, "if")  such that Modifies(15, variable) 

5000
37 - Query 37
assign assign; print print; constant constant; variable variable; stmt stmt; read read; procedure procedure; while while; if if; call call; 
Select <assign, print, constant, variable, stmt, read, procedure, while, if, call>  such that Parent*(_, stmt)  such that Affects(11, assign) with 4800=print.stmt# with while.stmt#=constant.value  pattern while(_, _) with call.procName="print" with variable.varName=call.procName  pattern while(_, _) with "variable"=print.varName  pattern assign(_, "1000+100")  pattern while(while, _) with 6100=read.stmt# with if.stmt#=900 with variable.varName=read.varName with stmt.stmt#=stmt.stmt# with call.stmt#=assign.stmt#  pattern if(assign, _, _)  pattern while(_, _) with call.procName="while"  such that Affects(29, assign)  such that Follows(_, print) with "read"=variable.varName with procedure.procName="else" with 8000=call.stmt#  pattern if(_, _, _)  pattern while(variable, _) with while.stmt#=constant.value  pattern while(while, _)  pattern assign(_, _) with while.stmt#=1500 with while.stmt#=4300  such that Parent(23, while)  pattern if(variable, _, _)  pattern while(_, _)  such that Uses(call, "if")  pattern assign(then, _"(call/1900)*2500"_)  pattern if(_, _, _) with if.stmt#=assign.stmt#  pattern if(variable, _, _)  pattern assign(_, _"8300*900"_)  pattern assign(variable, _"6600/2500"_)  such that Follows(print, 16) with stmt.stmt#=3600  pattern while(if, _)  such that Parent*(while, while) with print.varName="call"  pattern while(variable, _)  pattern if(while, _, _)  pattern if(variable, _, _)  pattern assign(_, _"1700-6200"_) with 3500=constant.value  pattern if(variable, _, _)  such that Calls(procedure, "while") with call.procName=variable.varName  such that Affects(stmt, assign)  pattern while(variable, _) with "variable"=call.procName  such that Calls*(procedure, procedure) with procedure.procName="then"  pattern while(variable, _)  pattern if(variable, _, _)  pattern while(variable, _)  pattern if(variable, _, _)  such that Uses(16, variable)  pattern if(_, _, _)  such that Calls*(procedure, _) with assign.stmt#=while.stmt# with if.stmt#=constant.value with procedure.procName=procedure.procName with read.stmt#=assign.stmt#  pattern while(procedure, _) with read.varName=print.varName  pattern assign(variable, _) with 9100=assign.stmt# with 4300=call.stmt# with 6500=read.stmt# with while.stmt#=print.stmt# with "then"=call.procName with while.stmt#=assign.stmt#  such that Uses(if, variable)  such that Parent(3, print)  such that Calls(_, procedure)  pattern if(variable, _, _)  pattern while(_, _) with call.stmt#=stmt.stmt# with print.varName="while" with while.stmt#=7800  such that Next*(stmt, _)  pattern while(print, _)  pattern assign(_, "4800/9100")  pattern assign(variable, _) with 5900=if.stmt# with constant.value=5000 with constant.value=4700 with "constant"=variable.varName  pattern while(_, _)  pattern assign(variable, "5500/6200")  pattern assign(variable, _"7400/5300"_)  such that Calls(procedure, _)  pattern while(variable, _)  such that Parent*(29, assign) with call.procName="read"  pattern while(print, _)  such that Parent*(29, assign)  pattern assign(else, _)  such that Follows*(6, read)  such that Parent*(print, if)  such that Follows(read, 29) with 7200=read.stmt# with read.stmt#=call.stmt#  such that Affects(21, stmt)  such that Next(call, _)  pattern while(variable, _)  such that Follows(stmt, if)  pattern assign(_, "1000-9800")  such that Parent(2, stmt) with assign.stmt#=7300  pattern assign(while, "8200/2100") with constant.value=3300 with "variable"=variable.varName  such that Uses(10, variable) with print.varName="call"  pattern assign(procedure, _)  pattern while(_, _) with call.stmt#=stmt.stmt#  pattern while(_, _)  pattern assign(variable, "9600+5100")  pattern assign(variable, "4600-500")  pattern if(variable, _, _)  pattern while(_, _)  pattern while(variable, _)  such that Calls("call", procedure) with if.stmt#=if.stmt# with call.stmt#=while.stmt#  such that Modifies(call, variable)  pattern assign(variable, "(6500/500)-4900")  such that Parent(stmt, 16)  pattern assign(_, _"600/9200"_)  pattern if(variable, _, _)  such that Affects(_, assign)  such that Parent(1, read) with print.varName=print.varName with print.varName="while" with 7400=print.stmt#  pattern assign(variable, _"5800*1300"_) with "assign"=read.varName  pattern while(assign, _)  pattern assign(else, _"5200+9600"_)  such that Next*(assign, 4)  such that Parent(10, read) with print.stmt#=if.stmt#  such that Modifies(if, _)  pattern assign(_, _"((4700*1000)*8700)+6100"_)  such that Follows(while, _) with 500=while.stmt#  pattern while(_, _)  pattern while(call, _)  pattern assign(_, _"6400+500"_)  such that Calls(procedure, _) with print.stmt#=constant.value  such that Modifies(14, variable)  such that Calls(_, procedure)  such that Calls(procedure, procedure)  pattern if(_, _, _)  pattern assign(_, _)  pattern while(_, _) with "print"=read.varName  such that Modifies(stmt, variable)  pattern while(procedure, _) with "while"=variable.varName  pattern while(constant, _)  pattern assign(then, _)  such that Follows(read, 20)  pattern assign(variable, "1000*6900")  pattern if(procedure, _, _)  such that Calls(procedure, procedure)  pattern if(_, _, _) with print.varName="if" with "if"=print.varName  such that Parent*(_, print) with if.stmt#=2800 with read.varName=read.varName with 1700=if.stmt#  pattern while(variable, _)  such that Affects(stmt, _)  such that Next(while, assign) with 6800=call.stmt#  pattern assign(if, _) with assign.stmt#=7500  pattern assign(_, _"8600+1000"_)  pattern while(_, _)  pattern while(read, _)  such that Affects(2, assign) with print.varName="variable"  such that Parent(_, call)  pattern assign(variable, "2400/1300")  pattern if(variable, _, _)  pattern while(_, _)  pattern assign(variable, _)  such that Next*(while, _) with constant.value=6300  such that Follows(27, read)  pattern while(_, _)  such that Next(22, while)  such that Calls("variable", procedure)  pattern while(read, _)  pattern assign(variable, _"4900*3000"_) with read.stmt#=if.stmt# with while.stmt#=read.stmt#  pattern if(variable, _, _)  pattern if(variable, _, _)  such that Affects*(_, assign)  such that Parent(assign, _) with assign.stmt#=print.stmt#  pattern if(_, _, _)  such that Calls*("call", procedure) with 3700=constant.value with print.stmt#=5000  pattern while(_, _)  such that Follows*(stmt, 25)  such that Follows*(read, 27)  pattern while(call, _)  pattern assign(variable, _"2700*9800"_)  such that Next(_, print)  pattern if(variable, _, _)  pattern assign(then, "(4300/8300)+7100") with read.varName="print"  pattern assign(_, _)  such that Next*(assign, call)  pattern assign(_, _)  pattern assign(variable, _) with assign.stmt#=call.stmt#  pattern if(procedure, _, _)  pattern assign(else, "5600-2100")  pattern assign(variable, _"1800/9100"_)  such that Uses(call, variable)  such that Follows(while, while)  pattern while(_, _)  pattern if(constant, _, _) with call.stmt#=stmt.stmt#  such that Modifies(print, _)  such that Calls*(procedure, "print") with while.stmt#=read.stmt# with procedure.procName=print.varName  pattern assign(variable, _"1100/procedure"_)  pattern if(variable, _, _)  pattern assign(_, "3300+5900") with 9300=print.stmt#  such that Next(call, _) with if.stmt#=3700 with 7000=stmt.stmt#  such that Follows(stmt, if)  pattern assign(constant, _) with read.stmt#=assign.stmt#  such that Uses(9, variable)  such that Parent*(while, _) with "variable"=procedure.procName with print.stmt#=5100  pattern assign(call, "3300*4300") with "variable"=call.procName  pattern if(_, _, _)  such that Next*(_, call)  pattern if(else, _, _) with print.stmt#=while.stmt#  pattern while(_, _)  such that Parent(stmt, if) with print.varName=call.procName with 2400=if.stmt#  pattern if(else, _, _) with read.varName="if"  pattern if(_, _, _) with "variable"=print.varName  such that Modifies(read, "if")  pattern while(variable, _) with "procedure"=read.varName  pattern assign(read, "4500+3600") with variable.varName="variable" with 4600=if.stmt#  pattern while(variable, _) with stmt.stmt#=if.stmt#  pattern if(while, _, _)  pattern if(if, _, _)  pattern while(if, _)  pattern while(call, _)  such that Affects(assign, _)  such that Next(_, stmt)  such that Parent*(stmt, stmt)  pattern while(call, _)  pattern if(variable, _, _)  pattern assign(if, _"6200/1100"_)  such that Affects(_, assign)  such that Uses(29, variable)  pattern if(else, _, _)  pattern while(variable, _)  such that Uses(procedure, "procedure")  pattern assign(variable, "5500/5000")  such that Calls*(procedure, "variable")  pattern assign(print, _"7700*9600"_)  pattern while(print, _) with variable.varName=print.varName  pattern if(call, _, _) with constant.value=constant.value  pattern while(assign, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern while(variable, _) with 1900=assign.stmt# with 2200=read.stmt#  such that Follows(_, if)  pattern if(_, _, _)  pattern if(_, _, _)  pattern while(_, _) with constant.value=3600  such that Calls(procedure, procedure)  pattern assign(assign, "5000/5000")  pattern assign(variable, _) with 800=constant.value with stmt.stmt#=6900  pattern assign(variable, _"6400/1500"_)  such that Next(_, call)  pattern while(procedure, _)  such that Next(17, if)  pattern while(variable, _) with procedure.procName="read"  pattern while(call, _)  pattern assign(variable, _) with 4800=read.stmt#  pattern assign(_, _)  pattern assign(_, _)  such that Next(4, assign)  such that Calls(procedure, "then")  such that Affects(stmt, 17)  such that Follows*(if, stmt)  pattern assign(_, _) with print.stmt#=call.stmt#  pattern while(_, _) with 4000=print.stmt#  pattern while(_, _) with procedure.procName="assign"  such that Follows(read, stmt) with 3200=read.stmt#  such that Modifies(call, variable)  pattern if(_, _, _)  pattern assign(_, "9300+9800")  pattern if(_, _, _) with constant.value=read.stmt# with procedure.procName=read.varName  pattern assign(variable, _"5300-9400"_)  pattern assign(variable, _) with print.stmt#=assign.stmt# with "constant"=call.procName  pattern assign(_, _)  such that Uses(read, _) with variable.varName=read.varName  such that Parent*(assign, _) with "if"=procedure.procName  such that Next(_, print) with 8600=stmt.stmt# with read.varName="procedure"  pattern if(read, _, _)  pattern while(_, _)  pattern assign(variable, _)  pattern if(variable, _, _)  pattern while(read, _)  pattern if(variable, _, _)  such that Follows(assign, if)  such that Next(print, 25)  pattern assign(variable, _"8700/if"_) with call.procName=variable.varName  pattern while(_, _)  pattern while(_, _)  pattern if(print, _, _) with "assign"=print.varName  pattern if(_, _, _) with "procedure"=variable.varName  pattern assign(variable, "4700/5500") with print.varName=variable.varName  pattern while(_, _) with assign.stmt#=6300 with call.stmt#=5100 with call.procName=call.procName  such that Affects*(assign, 2)  pattern while(variable, _)  pattern assign(call, _"1300+2100"_)  pattern while(variable, _)  such that Affects*(stmt, 21)  pattern while(variable, _) with read.stmt#=5200  such that Affects*(2, stmt)  such that Uses(read, _)  pattern if(_, _, _)  pattern if(then, _, _)  such that Calls*(procedure, procedure)  such that Follows*(print, _)  such that Parent*(call, _) with while.stmt#=8700  pattern while(variable, _)  pattern while(constant, _)  pattern assign(_, _)  pattern if(assign, _, _)  pattern while(variable, _)  such that Uses(stmt, variable) with 300=print.stmt# with variable.varName="constant" with 1100=while.stmt# with read.stmt#=9100 with "while"=variable.varName with "else"=read.varName  pattern assign(_, _)  such that Parent*(assign, 17)  such that Next(_, print)  such that Next(call, if)  such that Calls(_, procedure)  pattern assign(if, _"7300+5300"_)  pattern if(procedure, _, _)  pattern assign(_, _"6600+8900"_)  pattern while(while, _)  such that Next*(call, _) with if.stmt#=assign.stmt#  pattern if(procedure, _, _) with variable.varName="procedure"  pattern if(variable, _, _)  such that Affects*(7, assign)  pattern assign(variable, _"(6200*3000)+4500"_)  such that Modifies(while, variable)  such that Modifies(while, _) with "while"=procedure.procName  pattern assign(variable, "(2600-7500)*call")  such that Modifies(assign, variable)  such that Calls*("then", procedure) with variable.varName="else"  pattern while(variable, _)  pattern assign(_, "1100/8100") with 4800=print.stmt# with call.procName=print.varName with procedure.procName="else"  such that Next(call, _)  such that Calls(_, procedure)  such that Parent*(print, _)  pattern while(variable, _) with variable.varName="constant"  pattern while(_, _)  pattern while(variable, _)  such that Parent(read, _)  such that Parent(while, 16) with while.stmt#=constant.value with call.procName=read.varName with constant.value=stmt.stmt#  such that Affects(_, assign)  pattern while(_, _)  such that Next(call, _)  pattern if(procedure, _, _)  pattern assign(print, _"4600+9400"_)  pattern while(_, _)  such that Affects(_, assign)  pattern while(variable, _) with 6400=if.stmt#  pattern while(_, _) with procedure.procName="assign"  pattern if(variable, _, _)  such that Parent*(_, call)  pattern assign(constant, _"4200/else"_)  such that Parent*(16, call)  pattern if(variable, _, _)  such that Affects(_, stmt)  pattern while(_, _)  pattern if(variable, _, _) with if.stmt#=assign.stmt# with "else"=call.procName with read.varName="read" with variable.varName=variable.varName with 5800=constant.value  pattern while(variable, _)  such that Modifies(stmt, variable)  pattern if(_, _, _)  such that Follows*(29, stmt)  such that Follows*(if, _)  such that Follows*(call, _) with call.procName=variable.varName  pattern assign(variable, "3200*3500")  pattern if(call, _, _)  pattern if(variable, _, _)  such that Parent*(call, 17) with 9600=print.stmt#  pattern assign(variable, _"8400+while"_)  pattern while(variable, _) with print.varName="while"  such that Follows*(20, read) with "call"=read.varName  pattern if(_, _, _)  such that Affects*(stmt, assign) with assign.stmt#=assign.stmt# with "call"=print.varName  pattern while(procedure, _)  such that Follows*(assign, 18)  pattern while(call, _)  pattern if(variable, _, _)  such that Affects(assign, stmt)  pattern assign(variable, _"(400*5700)+else"_)  pattern while(variable, _) 

5000
38 - Query 38
variable variable; assign assign; constant constant; print print; stmt stmt; read read; procedure procedure; while while; if if; call call; 
Select <variable, assign, constant, print, stmt, read, procedure, while, if, call> with stmt.stmt#=6700  pattern while(variable, _) with read.varName=variable.varName  such that Parent*(while, _)  such that Next(_, stmt)  such that Follows(15, read)  such that Next*(while, 9) with 2600=call.stmt#  such that Uses(read, "call")  pattern assign(variable, "constant+procedure")  such that Calls*(procedure, _)  such that Parent(_, call)  pattern assign(_, "variable*5500") with "print"=read.varName  such that Parent(24, call) with 6700=while.stmt#  such that Parent(assign, _)  pattern while(variable, _) with stmt.stmt#=9300  such that Affects*(19, assign) with assign.stmt#=stmt.stmt#  pattern assign(_, _)  pattern while(variable, _)  pattern assign(_, "1800*3600")  pattern if(variable, _, _)  such that Calls*(procedure, "then")  pattern while(variable, _)  such that Parent*(25, read)  pattern if(variable, _, _)  such that Calls(procedure, _)  pattern if(_, _, _) with stmt.stmt#=constant.value  pattern if(variable, _, _)  pattern assign(print, _) with while.stmt#=call.stmt# with 7300=if.stmt#  such that Uses(18, variable)  pattern while(variable, _)  such that Calls(procedure, _)  such that Follows(if, _)  pattern assign(_, _)  such that Next*(29, assign) with variable.varName="call"  pattern if(then, _, _)  pattern if(_, _, _)  pattern if(_, _, _)  pattern if(then, _, _) with "else"=procedure.procName  pattern assign(variable, _)  such that Modifies(while, variable) with constant.value=7400 with procedure.procName=call.procName  such that Calls*(_, procedure)  such that Affects(_, stmt)  pattern while(variable, _) with assign.stmt#=2000  pattern assign(variable, _) with "assign"=call.procName  pattern assign(variable, "8200/5500")  pattern assign(_, "6200/2800")  such that Uses(print, variable)  such that Parent*(read, 6)  pattern if(variable, _, _)  pattern assign(variable, _"8800/9600"_) with read.stmt#=8900  such that Next*(15, print)  pattern while(call, _) with 6500=assign.stmt# with if.stmt#=9600 with assign.stmt#=while.stmt#  such that Follows(read, read)  such that Calls*("if", procedure) with variable.varName=read.varName  such that Affects(stmt, 18) with read.varName="assign"  pattern while(assign, _)  such that Calls(procedure, "procedure") with procedure.procName="variable"  pattern while(variable, _)  pattern if(while, _, _)  pattern assign(print, _"7700/5600"_)  such that Affects*(assign, _)  pattern assign(if, _) with "assign"=call.procName  pattern if(while, _, _) with "else"=variable.varName  pattern assign(_, _) with stmt.stmt#=9800  such that Modifies(assign, variable)  pattern if(assign, _, _)  pattern if(variable, _, _) with 1200=assign.stmt#  such that Parent(call, assign)  pattern assign(_, "3800+then")  pattern if(variable, _, _)  such that Affects*(stmt, stmt) with print.stmt#=1900  pattern assign(variable, _"8100*then"_)  pattern assign(variable, _)  pattern if(else, _, _)  pattern while(variable, _)  such that Affects(11, assign)  such that Next(read, _) with assign.stmt#=5800 with call.procName="constant" with read.varName="procedure"  such that Next(if, _)  such that Next(while, _)  pattern if(variable, _, _)  pattern if(_, _, _)  such that Calls*(procedure, "assign")  pattern while(_, _) with read.stmt#=9900  such that Modifies(if, "read")  pattern assign(read, _)  such that Follows*(if, 2) with print.varName="print" with "call"=call.procName with constant.value=stmt.stmt#  pattern if(_, _, _)  pattern while(_, _)  such that Affects*(assign, assign)  such that Next(read, read)  such that Calls(_, procedure) with "variable"=print.varName  pattern if(constant, _, _)  pattern if(_, _, _)  pattern while(variable, _)  pattern assign(variable, "9700/3500")  such that Follows(print, 24)  pattern assign(variable, _)  such that Modifies(28, variable) with 7000=stmt.stmt# with read.stmt#=3900  pattern while(call, _) with assign.stmt#=8700  such that Parent*(25, stmt)  such that Affects*(assign, _) with constant.value=while.stmt#  pattern if(_, _, _)  pattern if(variable, _, _)  pattern while(variable, _)  pattern assign(_, _"1300/800"_)  such that Next*(print, _)  pattern assign(variable, "read/3900")  such that Calls("constant", procedure)  pattern if(variable, _, _) with "read"=procedure.procName  such that Modifies(21, variable)  pattern if(_, _, _)  pattern assign(_, _)  pattern assign(variable, _"1600+6600"_) with "print"=variable.varName  pattern if(print, _, _)  pattern while(variable, _)  such that Parent(stmt, 22) with call.procName="constant"  pattern assign(_, _) with procedure.procName=call.procName with read.stmt#=constant.value  such that Next(_, if)  pattern while(then, _)  such that Follows(if, 29) with while.stmt#=call.stmt#  such that Modifies(call, _)  pattern while(_, _)  pattern assign(constant, _)  such that Calls(_, procedure) with read.varName="then"  such that Modifies(19, variable)  pattern assign(read, "4500+800")  such that Uses(18, variable) with call.stmt#=8900  pattern while(variable, _)  such that Affects(stmt, stmt) with while.stmt#=call.stmt# with 9500=read.stmt#  pattern assign(variable, _"800*8300"_)  pattern if(variable, _, _)  such that Follows(_, print)  pattern if(print, _, _) with procedure.procName=call.procName  pattern assign(_, "5300/while") with read.stmt#=print.stmt# with 8600=if.stmt# with read.varName="constant"  pattern assign(_, _) with read.stmt#=stmt.stmt#  such that Next*(14, while)  pattern if(_, _, _) with call.procName="else"  pattern assign(_, "9800+6100")  such that Parent*(28, if)  such that Affects*(stmt, 10)  pattern assign(while, _"(9400*2700)+6500"_)  pattern while(else, _)  pattern while(_, _)  pattern while(_, _)  pattern while(_, _)  pattern while(variable, _)  pattern assign(_, _"1000*6700"_)  such that Uses(14, variable)  such that Calls(procedure, _) with "variable"=procedure.procName  pattern if(variable, _, _)  such that Affects*(stmt, 22)  such that Uses(assign, variable)  such that Affects*(assign, _)  such that Affects*(_, stmt) with while.stmt#=9300  such that Affects(stmt, 14)  pattern if(variable, _, _) with "constant"=read.varName with "if"=procedure.procName  pattern if(_, _, _)  pattern assign(_, _) with while.stmt#=call.stmt# with procedure.procName="constant"  pattern if(_, _, _)  pattern while(call, _) with stmt.stmt#=while.stmt#  pattern assign(variable, _"9600+2300"_) with variable.varName="call"  such that Modifies(stmt, _)  pattern while(variable, _) with "then"=call.procName  pattern if(procedure, _, _)  such that Modifies(call, "read") with print.stmt#=assign.stmt# with read.stmt#=if.stmt# with "else"=print.varName with "constant"=print.varName  pattern assign(constant, _)  pattern while(variable, _) with "procedure"=read.varName  such that Follows(stmt, _) with assign.stmt#=assign.stmt#  such that Parent*(_, assign) with variable.varName="variable"  such that Uses(17, variable) with 900=if.stmt# with variable.varName=procedure.procName with read.stmt#=9000  pattern if(variable, _, _)  such that Parent(call, assign)  pattern while(procedure, _) with stmt.stmt#=call.stmt#  pattern if(constant, _, _)  pattern while(if, _) with assign.stmt#=1600  pattern assign(_, _"7000-8800"_)  pattern while(_, _) with "else"=procedure.procName  pattern if(call, _, _)  such that Next(call, _) with call.stmt#=4400 with while.stmt#=if.stmt# with variable.varName="call" with assign.stmt#=8300 with "variable"=read.varName  pattern if(variable, _, _)  pattern if(variable, _, _) with "assign"=print.varName with if.stmt#=if.stmt#  such that Follows(if, _)  such that Affects*(assign, 11) with constant.value=4700  such that Parent(print, call) with "else"=procedure.procName  pattern assign(else, _"variable/8000"_)  such that Uses(read, "while") with print.varName="constant"  such that Affects(stmt, 16)  pattern if(_, _, _)  pattern if(variable, _, _)  such that Next(call, while)  pattern while(variable, _) with procedure.procName="else" with "print"=variable.varName  pattern if(_, _, _)  pattern assign(_, "500*1600")  such that Affects(assign, _)  pattern assign(variable, "7300+2600")  such that Follows(call, 29)  such that Next(_, assign) with print.stmt#=6000  pattern if(variable, _, _)  such that Calls*("print", procedure)  such that Next*(27, call) with "else"=print.varName with "print"=print.varName with "variable"=procedure.procName with variable.varName="else"  pattern if(variable, _, _)  pattern assign(then, _)  pattern while(variable, _) with "procedure"=print.varName  pattern assign(print, _"1100-3100"_)  pattern while(variable, _)  pattern while(if, _)  such that Parent*(assign, 18)  pattern while(then, _)  such that Uses(call, _) with call.procName="else"  pattern assign(variable, "9600/8900")  such that Affects(assign, stmt) with print.varName="procedure"  pattern while(variable, _)  pattern if(while, _, _)  pattern assign(variable, _"7600*9500"_)  such that Next*(_, if)  pattern assign(assign, _) with read.stmt#=while.stmt#  such that Uses(procedure, "if") with constant.value=stmt.stmt#  pattern assign(_, _"7700+700"_)  pattern assign(constant, "4200/6300")  such that Next*(read, _)  pattern assign(variable, _"4800-8000"_)  such that Uses(read, variable)  pattern if(else, _, _) with call.stmt#=100  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern assign(_, _"(4900*2500)*1300"_)  such that Follows*(read, _) with "else"=print.varName  such that Next(print, 9) with procedure.procName=variable.varName  pattern if(_, _, _)  pattern assign(_, "7400+6300") with "read"=call.procName  pattern assign(_, _)  pattern if(_, _, _)  such that Affects*(assign, 6)  pattern while(variable, _)  pattern while(if, _) with while.stmt#=800 with "variable"=print.varName  pattern while(_, _)  such that Next*(_, assign) with constant.value=4500  pattern while(variable, _) with if.stmt#=print.stmt#  such that Next(stmt, read) with 8900=print.stmt#  pattern assign(_, "600/4700")  such that Follows*(24, call)  pattern while(variable, _) with stmt.stmt#=read.stmt#  pattern if(_, _, _)  pattern if(read, _, _)  such that Affects*(15, stmt)  pattern if(_, _, _)  pattern while(if, _)  such that Uses(22, variable)  such that Calls(procedure, _)  pattern while(variable, _)  pattern while(variable, _) with 500=assign.stmt#  pattern while(then, _)  such that Calls(_, procedure) with constant.value=assign.stmt#  pattern if(_, _, _)  such that Affects*(assign, 4)  pattern assign(constant, "2700+6800") with "constant"=variable.varName  pattern assign(print, "5900-2900")  pattern if(_, _, _)  such that Next*(read, if)  such that Follows(6, print)  pattern if(constant, _, _)  pattern if(constant, _, _)  pattern assign(_, "8300+3600")  such that Next*(call, assign)  such that Modifies(while, _)  such that Modifies(while, variable) with if.stmt#=while.stmt#  pattern assign(_, _"constant/5200"_) with print.varName="assign"  such that Follows*(if, 21)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern assign(_, _"300*9200"_)  pattern assign(variable, "8600+5100")  pattern while(variable, _)  pattern while(_, _) with if.stmt#=assign.stmt#  pattern assign(procedure, "2400/1400")  pattern while(_, _)  pattern if(variable, _, _) with "read"=read.varName with read.varName=print.varName with read.varName=call.procName with call.procName=procedure.procName  pattern while(variable, _) with "then"=variable.varName with variable.varName=variable.varName  pattern while(read, _)  pattern assign(_, _"2500*8800"_) with assign.stmt#=call.stmt#  pattern if(_, _, _)  such that Follows(if, 18)  such that Modifies(assign, _)  such that Parent(while, 23)  pattern assign(variable, _"6600+then"_) with variable.varName=read.varName  pattern if(if, _, _)  pattern while(_, _)  pattern if(call, _, _)  such that Affects(3, assign) with stmt.stmt#=print.stmt#  such that Calls("procedure", procedure)  pattern assign(variable, _) with procedure.procName="else"  pattern assign(variable, "4100+3400")  such that Modifies(procedure, "variable") with while.stmt#=constant.value  pattern if(_, _, _)  such that Calls(procedure, "procedure")  such that Follows(_, call)  pattern while(variable, _)  such that Follows*(call, _)  pattern while(_, _) with procedure.procName=procedure.procName  such that Parent(assign, _) with constant.value=read.stmt# with assign.stmt#=call.stmt# with "variable"=read.varName  pattern assign(_, _)  such that Follows*(_, print) with "procedure"=print.varName with procedure.procName="procedure"  such that Calls*(procedure, _)  pattern while(_, _)  pattern if(variable, _, _) with read.varName=variable.varName with constant.value=constant.value with read.stmt#=2900  such that Uses(assign, "read")  pattern while(if, _) with "call"=call.procName with stmt.stmt#=400 with "procedure"=call.procName with while.stmt#=read.stmt# with procedure.procName="then" with "else"=variable.varName with 6400=print.stmt#  such that Affects*(stmt, _)  such that Uses(24, variable)  pattern while(_, _) with print.varName=variable.varName  such that Uses(read, variable)  pattern if(read, _, _)  pattern assign(_, _"then/9600"_)  pattern if(variable, _, _) with print.varName=read.varName  pattern while(_, _) with variable.varName="read"  pattern if(print, _, _)  such that Follows(print, 15)  pattern if(else, _, _) with 9300=read.stmt# with procedure.procName=variable.varName with 5200=assign.stmt#  such that Follows(_, while)  such that Calls*(procedure, _)  pattern if(_, _, _) with "if"=read.varName  such that Follows(print, _)  pattern while(print, _) with print.varName=print.varName with call.stmt#=2700  pattern if(variable, _, _) with constant.value=500  pattern while(while, _) with procedure.procName=print.varName  pattern while(variable, _)  pattern while(while, _)  pattern if(_, _, _)  such that Uses(call, _)  pattern while(variable, _)  pattern if(_, _, _)  such that Follows(stmt, assign) with 2000=print.stmt# with constant.value=assign.stmt#  such that Parent*(read, 2) with while.stmt#=2900  such that Next*(print, _)  such that Calls*(_, procedure)  pattern assign(_, _"200/8600"_)  pattern assign(variable, _)  pattern if(then, _, _)  pattern if(read, _, _) with "if"=procedure.procName  pattern if(call, _, _) with 2800=print.stmt# with call.procName="assign"  pattern assign(_, _"call+6300"_) with variable.varName=variable.varName 

5000
39 - Query 39
variable variable; assign assign; print print; constant constant; stmt stmt; read read; procedure procedure; if if; while while; call call; 
Select <variable, assign, print, constant, stmt, read, procedure, if, while, call>  pattern if(call, _, _)  pattern while(read, _)  pattern if(variable, _, _)  such that Parent*(stmt, 29)  pattern assign(variable, "200+2500") with call.stmt#=7900  such that Parent(1, assign) with call.stmt#=call.stmt#  pattern while(assign, _) with "variable"=variable.varName with if.stmt#=call.stmt#  pattern if(variable, _, _)  pattern if(variable, _, _) with print.varName="call"  pattern while(assign, _)  such that Calls(procedure, procedure)  pattern while(read, _)  such that Affects(18, stmt)  pattern if(_, _, _)  pattern assign(variable, "4400*4100")  pattern if(_, _, _)  pattern while(variable, _)  pattern assign(variable, "2200+1900") with call.procName="constant"  pattern assign(variable, _)  such that Affects*(_, stmt)  pattern assign(variable, "(500-5800)-procedure")  pattern while(else, _) with assign.stmt#=call.stmt#  pattern if(variable, _, _)  pattern assign(variable, _) with call.procName="assign" with print.varName="read"  pattern if(_, _, _)  pattern if(_, _, _)  such that Follows*(call, 14)  pattern assign(variable, "2000+2400") with 6600=print.stmt#  pattern assign(else, _"(1900+8300)/procedure"_)  pattern while(_, _) with call.stmt#=5700  pattern assign(variable, "5100*800")  pattern assign(variable, _"5800/1700"_) with 3100=assign.stmt# with "if"=read.varName  pattern assign(_, _"4400+6800"_)  pattern while(variable, _)  pattern if(read, _, _)  pattern while(variable, _)  pattern assign(variable, _)  pattern while(_, _)  such that Affects*(22, stmt)  such that Affects*(2, assign) with variable.varName=variable.varName with variable.varName="variable"  pattern while(variable, _)  pattern if(variable, _, _)  such that Parent*(stmt, _)  such that Affects(assign, stmt) with variable.varName="variable"  pattern if(_, _, _)  pattern assign(procedure, _"(8800-constant)+constant"_)  such that Calls(_, procedure) with "procedure"=print.varName with variable.varName=read.varName  pattern assign(variable, _)  pattern if(_, _, _) with "print"=variable.varName  pattern if(_, _, _) with constant.value=constant.value  such that Next*(read, _) with read.stmt#=constant.value  pattern if(variable, _, _)  pattern while(_, _)  pattern while(_, _) with call.stmt#=1200  pattern if(variable, _, _)  such that Affects(_, stmt)  such that Modifies(5, variable)  pattern while(variable, _)  such that Calls(_, procedure) with if.stmt#=5600 with call.stmt#=read.stmt#  pattern assign(variable, _)  such that Parent(call, _)  pattern assign(if, "1200-4800")  pattern assign(_, _"((8400-6100)-2300)+2600"_) with call.procName=read.varName with procedure.procName=call.procName  pattern while(_, _)  pattern assign(_, _"9000-9300"_) with print.varName=variable.varName  pattern assign(_, _"then*8200"_)  such that Follows*(if, _) with call.procName="call"  pattern if(_, _, _) with "else"=print.varName  such that Uses(call, variable)  such that Calls(procedure, "print")  pattern while(_, _)  pattern while(_, _)  pattern while(_, _) with while.stmt#=print.stmt#  such that Follows(18, stmt) with variable.varName="procedure"  pattern assign(_, _"9300+1300"_) with while.stmt#=4700  pattern while(while, _)  such that Parent*(25, call)  pattern if(_, _, _) with assign.stmt#=2400  such that Parent(call, 28)  pattern if(else, _, _)  pattern while(variable, _)  pattern while(_, _)  pattern assign(while, _)  such that Modifies(23, variable)  such that Affects*(assign, _)  such that Calls*(procedure, "call") with assign.stmt#=6500 with constant.value=constant.value with "print"=call.procName  pattern assign(variable, _"variable/6200"_) with 4700=print.stmt#  such that Follows*(_, if)  pattern while(_, _)  pattern assign(_, _) with variable.varName="procedure"  pattern while(_, _)  pattern while(variable, _)  pattern if(else, _, _)  pattern assign(read, _)  pattern if(variable, _, _)  pattern assign(call, _"(100/3800)*8700"_) with stmt.stmt#=assign.stmt#  pattern while(variable, _) with variable.varName="print" with procedure.procName="constant"  such that Affects*(20, assign)  pattern if(variable, _, _)  such that Modifies(stmt, "then")  such that Modifies(24, variable)  pattern while(read, _) with "procedure"=procedure.procName  pattern assign(variable, _"9500+9700"_)  such that Next*(_, while)  pattern if(_, _, _)  such that Calls(procedure, _) with "if"=variable.varName  such that Affects(_, assign)  such that Parent(stmt, if)  pattern while(_, _)  such that Next(_, stmt)  such that Calls*("if", procedure) with if.stmt#=if.stmt#  pattern while(_, _) with "else"=variable.varName with "print"=procedure.procName  pattern assign(variable, "8800*5700")  such that Uses(if, variable) with "procedure"=call.procName  such that Calls*(procedure, "else")  pattern if(else, _, _)  such that Affects(stmt, assign) with print.varName=print.varName  such that Calls(procedure, _)  pattern assign(variable, _"5900*2600"_)  such that Parent*(if, 12)  pattern assign(then, _)  pattern if(_, _, _) with "else"=call.procName  pattern assign(read, _) with "constant"=variable.varName  pattern if(variable, _, _)  such that Affects*(_, assign)  such that Calls*(procedure, _)  such that Affects*(stmt, 3)  pattern while(else, _)  pattern while(variable, _) with read.stmt#=6500  pattern if(variable, _, _)  pattern assign(call, _"4600-4200"_) with call.stmt#=7700 with variable.varName="constant"  such that Follows(_, if)  pattern while(_, _) with 4100=read.stmt# with procedure.procName="print"  pattern assign(_, _)  such that Calls("call", procedure)  pattern assign(_, _)  such that Follows(read, read)  pattern assign(variable, _"(2900+9700)*7000"_) with "constant"=call.procName with call.procName=procedure.procName with constant.value=8500  such that Modifies(procedure, variable)  such that Follows*(22, call)  pattern if(_, _, _) with print.varName="procedure" with call.stmt#=if.stmt#  pattern while(else, _)  pattern assign(variable, _)  pattern while(variable, _) with stmt.stmt#=stmt.stmt#  such that Next*(8, if)  such that Parent*(while, 18) with stmt.stmt#=4800  pattern if(else, _, _) with assign.stmt#=2300  pattern while(variable, _)  pattern assign(_, _)  pattern assign(_, _)  pattern if(assign, _, _)  pattern while(variable, _)  such that Affects*(assign, stmt)  pattern assign(assign, _"8900/read"_)  pattern while(procedure, _) with "procedure"=read.varName  pattern assign(variable, _)  such that Next(read, _) with "call"=variable.varName with procedure.procName=procedure.procName  such that Modifies(procedure, variable) with while.stmt#=if.stmt# with while.stmt#=assign.stmt# with 4700=assign.stmt#  such that Modifies(19, variable)  such that Calls(_, procedure)  such that Follows*(stmt, _) with call.procName=call.procName  pattern while(variable, _)  pattern assign(variable, _"900+6000"_) with assign.stmt#=7100  pattern assign(variable, _)  pattern assign(variable, _"900-if"_)  pattern while(variable, _)  pattern while(print, _)  such that Affects*(assign, _)  such that Modifies(while, _) with read.varName="if"  pattern if(variable, _, _) with assign.stmt#=while.stmt#  pattern while(else, _) with while.stmt#=print.stmt#  pattern assign(variable, _"4800+2900"_) with read.varName="then" with stmt.stmt#=call.stmt# with "if"=call.procName  such that Parent*(_, print) with print.varName="print"  pattern while(call, _) with variable.varName=variable.varName  pattern if(if, _, _) with constant.value=4900 with "while"=print.varName  pattern assign(_, _) with call.procName=procedure.procName  such that Parent*(read, 9)  such that Affects(26, assign)  such that Next(print, read) with 3600=read.stmt#  pattern while(call, _)  pattern while(variable, _)  pattern while(variable, _) with "then"=variable.varName  such that Parent(_, stmt)  pattern assign(variable, _"(7700/2700)*6400"_)  such that Follows*(if, print)  such that Modifies(21, variable)  such that Uses(call, _)  such that Follows*(stmt, _)  pattern while(if, _) with variable.varName="procedure"  pattern while(print, _)  such that Modifies(if, "read") with read.stmt#=100  such that Follows*(4, stmt)  pattern while(variable, _)  pattern while(variable, _) with 7500=read.stmt#  pattern if(variable, _, _) with call.procName=call.procName  pattern while(read, _) with "if"=variable.varName  such that Uses(procedure, "print")  such that Calls*(_, procedure) with read.varName=call.procName  pattern if(_, _, _)  pattern if(print, _, _)  such that Parent*(8, stmt)  pattern if(_, _, _)  pattern assign(variable, _"9800-5900"_) with "constant"=variable.varName  such that Uses(1, variable) with while.stmt#=1900  such that Follows*(if, 18) with "else"=call.procName  pattern if(_, _, _)  pattern while(variable, _)  such that Next(_, stmt)  pattern while(read, _)  such that Follows*(while, print)  pattern if(constant, _, _)  pattern while(variable, _)  pattern while(_, _)  such that Affects(stmt, 3)  such that Uses(while, variable)  pattern if(call, _, _)  pattern while(variable, _)  pattern assign(variable, _"7600-3900"_)  such that Parent*(_, if)  pattern assign(if, _"9600/5000"_) with "assign"=call.procName with "call"=variable.varName with stmt.stmt#=stmt.stmt# with read.varName=procedure.procName  such that Uses(14, variable) with print.stmt#=if.stmt#  pattern if(variable, _, _) with assign.stmt#=read.stmt#  such that Next(while, 8)  pattern if(_, _, _)  pattern if(procedure, _, _) with read.varName="while"  such that Modifies(call, "call")  pattern assign(_, "(7600/1900)/7900") with "if"=call.procName  pattern assign(variable, _"6700+3000"_)  pattern if(call, _, _)  pattern assign(_, "8300+8200")  pattern while(assign, _)  such that Affects(stmt, _)  pattern assign(variable, _) with "read"=call.procName  such that Affects*(26, assign)  pattern if(read, _, _)  pattern if(while, _, _) with assign.stmt#=9600  pattern if(while, _, _)  pattern if(_, _, _)  pattern assign(variable, "200*6500") with call.procName="while"  pattern if(_, _, _) with read.varName=call.procName  such that Affects(_, stmt)  such that Follows(while, while)  pattern if(read, _, _) with procedure.procName=variable.varName with call.procName=print.varName  pattern while(print, _)  such that Calls*(procedure, _) with 600=call.stmt# with read.varName=procedure.procName with variable.varName=procedure.procName  such that Follows*(22, assign) with variable.varName=procedure.procName with procedure.procName="print"  pattern if(variable, _, _)  pattern assign(variable, _"3000/3800"_)  such that Calls(procedure, procedure)  pattern if(call, _, _)  pattern while(variable, _) with 1200=while.stmt#  such that Uses(read, _)  pattern assign(variable, "3200/2200") with print.stmt#=stmt.stmt#  such that Follows(stmt, _)  pattern while(constant, _)  pattern if(variable, _, _)  such that Uses(call, _) with while.stmt#=while.stmt#  pattern while(_, _) with constant.value=9200  pattern while(_, _)  pattern assign(variable, _"3900/100"_)  pattern if(variable, _, _) with 400=read.stmt# with if.stmt#=3100  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern while(_, _)  pattern while(print, _) with procedure.procName=call.procName  such that Parent*(if, print)  such that Parent(if, 9)  such that Follows(25, read) with if.stmt#=1800  such that Parent(if, 17) with assign.stmt#=if.stmt#  pattern assign(variable, _"5600*7400"_) with print.varName=variable.varName  such that Affects(stmt, 11)  pattern assign(procedure, "5900/900")  pattern assign(_, _"8500-4800"_)  pattern assign(_, _)  such that Uses(assign, "print") with "variable"=read.varName  pattern if(assign, _, _) with read.varName=print.varName  pattern assign(variable, _"1900+8600"_) with print.varName=variable.varName with variable.varName="procedure"  such that Next*(print, if)  pattern if(assign, _, _) with read.varName=read.varName  pattern while(variable, _)  pattern assign(variable, _"5800*400"_)  pattern if(variable, _, _)  such that Follows*(while, 1) with variable.varName=call.procName  pattern while(variable, _)  pattern if(_, _, _)  pattern if(_, _, _)  pattern while(variable, _) with 400=stmt.stmt# with assign.stmt#=constant.value with 200=read.stmt#  such that Parent*(_, print) with "call"=procedure.procName  pattern assign(call, _)  such that Calls(_, procedure) with if.stmt#=3000 with read.varName=call.procName  such that Follows(_, call)  pattern assign(procedure, _"100*5200"_) with stmt.stmt#=2800  pattern if(variable, _, _)  such that Follows(_, if)  such that Next(while, call)  pattern assign(variable, "5400*5000") with "constant"=print.varName  pattern while(variable, _)  pattern while(variable, _)  pattern if(variable, _, _)  pattern assign(_, "5500*2000")  pattern while(variable, _)  pattern if(constant, _, _)  pattern while(_, _)  such that Follows(assign, assign)  such that Modifies(16, variable) with variable.varName=read.varName  such that Uses(procedure, variable)  such that Parent(if, _)  such that Next(print, while)  such that Affects*(17, stmt)  pattern if(_, _, _) with read.stmt#=if.stmt#  pattern assign(then, "8000-assign")  pattern while(_, _)  such that Modifies(stmt, variable) with 9200=if.stmt#  pattern if(call, _, _) with if.stmt#=3800  pattern while(_, _) with variable.varName=read.varName  such that Calls(procedure, _)  pattern if(_, _, _)  such that Calls(procedure, procedure)  such that Modifies(if, "variable")  such that Follows(stmt, stmt)  pattern while(read, _)  such that Calls(procedure, _) with print.varName=variable.varName with print.varName=call.procName with "call"=read.varName  such that Next(read, call)  pattern assign(variable, _)  such that Parent*(_, read) with variable.varName=procedure.procName  pattern assign(_, "3800+5500") with call.stmt#=read.stmt#  pattern if(_, _, _)  pattern while(_, _) with "while"=procedure.procName with assign.stmt#=while.stmt#  such that Parent*(print, 20)  such that Modifies(call, "else")  pattern while(_, _) with call.stmt#=3300 with "call"=print.varName with "assign"=read.varName  pattern if(then, _, _)  pattern assign(if, _) with 9100=assign.stmt#  pattern if(variable, _, _)  pattern if(_, _, _) with call.stmt#=8200 with "then"=print.varName  pattern assign(_, _"5400-3200"_)  such that Calls*(procedure, procedure)  such that Uses(read, "variable")  pattern while(variable, _)  pattern while(variable, _)  such that Calls*("constant", procedure)  pattern while(print, _)  pattern while(variable, _) with "while"=read.varName  pattern if(_, _, _)  such that Calls(procedure, _) 

5000
40 - Query 40
print print; variable variable; constant constant; assign assign; stmt stmt; read read; procedure procedure; if if; while while; call call; 
Select <print, variable, constant, assign, stmt, read, procedure, if, while, call> with 1800=constant.value  pattern while(else, _) with print.stmt#=1800  pattern if(_, _, _)  pattern while(then, _)  pattern if(variable, _, _) with read.varName=call.procName  such that Uses(29, variable) with variable.varName="read"  such that Modifies(stmt, variable)  such that Affects*(assign, 24)  pattern assign(variable, _)  such that Affects*(14, stmt) with call.stmt#=8600  pattern while(variable, _)  such that Next(_, call)  pattern assign(_, "(3700+9200)/procedure") with assign.stmt#=3700  pattern assign(constant, _) with procedure.procName=variable.varName  pattern if(variable, _, _)  such that Affects(stmt, _) with "if"=procedure.procName  pattern if(_, _, _)  pattern assign(variable, _"5300/6700"_)  such that Parent(print, _)  such that Parent*(read, print) with 8900=print.stmt#  pattern assign(variable, _)  such that Next*(assign, _)  pattern assign(procedure, _"3900+1700"_)  pattern while(while, _) with "procedure"=read.varName  such that Parent(print, _) with procedure.procName="then"  such that Uses(call, variable) with read.stmt#=1400  such that Affects(assign, assign) with assign.stmt#=5400  pattern assign(_, _)  such that Next(read, 23)  such that Calls*("call", procedure) with while.stmt#=stmt.stmt# with "variable"=procedure.procName  pattern assign(then, "(300/9800)/8300")  pattern while(variable, _)  pattern assign(_, "6300+800")  pattern while(_, _)  pattern assign(variable, _) with variable.varName=call.procName  such that Calls(procedure, _)  such that Follows(_, while)  pattern assign(variable, _"1700*4000"_)  pattern if(_, _, _)  such that Parent*(_, call) with stmt.stmt#=2700  pattern assign(variable, "(4600+1500)/1600")  pattern if(constant, _, _)  pattern if(_, _, _)  pattern assign(variable, "4900+6400") with assign.stmt#=print.stmt#  pattern assign(_, _)  pattern assign(variable, _"5100+8800"_)  pattern while(variable, _)  such that Parent(_, assign)  pattern while(_, _) with "variable"=read.varName  pattern assign(variable, _"2600+4600"_)  such that Affects*(17, assign) with stmt.stmt#=print.stmt#  pattern assign(_, "6300/7300")  pattern if(variable, _, _)  such that Follows(assign, if)  pattern while(variable, _)  such that Next(_, while) with variable.varName=print.varName  pattern while(_, _)  pattern while(_, _) with 6900=constant.value with variable.varName=read.varName with "procedure"=read.varName with "variable"=read.varName  such that Modifies(call, _)  such that Uses(29, variable) with 4300=call.stmt#  pattern while(variable, _) with variable.varName=print.varName with print.stmt#=stmt.stmt#  such that Affects(stmt, 7) with call.procName="variable" with read.stmt#=stmt.stmt#  such that Uses(procedure, _) with while.stmt#=9300  pattern while(_, _) with read.stmt#=while.stmt#  pattern if(variable, _, _) with read.stmt#=6600  pattern assign(variable, _)  pattern while(_, _)  pattern if(assign, _, _) with constant.value=8900  such that Next(read, 23)  such that Affects*(18, assign)  pattern if(_, _, _)  pattern while(print, _)  pattern while(variable, _) with "print"=call.procName  pattern assign(variable, _)  such that Calls(procedure, _)  pattern if(print, _, _)  pattern assign(variable, "assign*6600")  such that Calls*(procedure, _)  such that Modifies(procedure, _)  pattern while(variable, _) with read.stmt#=print.stmt#  pattern assign(variable, _"4400*6600"_) with "then"=read.varName with 1000=print.stmt#  such that Next(read, call) with constant.value=if.stmt#  such that Affects*(stmt, stmt)  pattern if(variable, _, _) with 5600=while.stmt#  pattern while(_, _)  such that Modifies(procedure, variable) with print.stmt#=stmt.stmt#  pattern assign(read, _)  pattern assign(_, _) with variable.varName=read.varName  pattern assign(_, _"7700/4500"_)  such that Affects*(assign, _)  pattern while(_, _) with "if"=read.varName  pattern while(if, _) with 1000=stmt.stmt#  such that Parent(print, 6) with while.stmt#=6900  such that Affects*(stmt, stmt)  pattern if(_, _, _)  pattern assign(_, "6200/4800")  pattern assign(call, _"900+1200"_)  such that Modifies(procedure, variable)  such that Parent*(_, if) with read.stmt#=assign.stmt#  such that Parent*(print, assign)  pattern if(variable, _, _) with "variable"=read.varName with assign.stmt#=7500  such that Parent*(stmt, _) with read.varName=variable.varName  such that Modifies(stmt, "variable") with print.varName="read" with assign.stmt#=assign.stmt# with "read"=print.varName  pattern if(variable, _, _)  pattern assign(_, "(1900/8400)+read")  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern while(procedure, _) with "assign"=print.varName with 4700=print.stmt#  pattern assign(_, _"3300/9200"_)  such that Parent*(assign, 21)  pattern assign(variable, _"500*5300"_)  pattern while(variable, _) with 8300=stmt.stmt# with print.stmt#=if.stmt# with call.stmt#=print.stmt#  such that Follows(_, stmt) with read.stmt#=4500  pattern while(variable, _) with read.varName="variable"  such that Calls(procedure, _) with "assign"=call.procName  pattern while(_, _)  such that Calls(procedure, procedure) with call.stmt#=4100  pattern if(_, _, _)  such that Affects(_, stmt) with 2000=print.stmt# with "while"=print.varName  pattern if(procedure, _, _) with read.stmt#=constant.value with 5600=assign.stmt#  pattern assign(variable, "variable+4300")  pattern if(_, _, _)  such that Uses(stmt, _) with print.stmt#=print.stmt#  pattern if(call, _, _)  pattern if(constant, _, _) with read.varName=call.procName  pattern assign(_, "4700*9100") with "if"=procedure.procName  such that Parent*(assign, 11)  such that Follows(print, 1)  such that Parent*(print, 27)  pattern if(read, _, _)  pattern while(else, _)  such that Parent*(while, 19)  pattern if(variable, _, _)  pattern if(if, _, _)  pattern if(variable, _, _)  pattern assign(while, "8300*assign")  pattern assign(_, _"4400*6300"_) with variable.varName="variable"  pattern while(else, _) with procedure.procName=print.varName  pattern if(read, _, _)  such that Affects*(_, assign) with if.stmt#=3700 with call.stmt#=1000 with print.varName=call.procName  such that Calls("if", procedure)  such that Next(assign, 23)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern while(_, _)  pattern if(variable, _, _) with "constant"=variable.varName  pattern if(read, _, _)  pattern assign(else, _) with read.varName=print.varName  such that Modifies(while, "call") with "print"=call.procName  such that Parent(_, print) with assign.stmt#=6600  pattern while(variable, _) with "assign"=procedure.procName  pattern if(variable, _, _) with 5500=assign.stmt#  pattern assign(variable, _)  pattern assign(_, _"4200+6000"_) with 4600=if.stmt#  pattern assign(variable, _"2100-6600"_)  pattern while(variable, _)  pattern while(_, _)  pattern while(_, _) with assign.stmt#=7700  such that Calls(procedure, "read") with read.stmt#=constant.value with procedure.procName="then"  such that Next(print, 7)  such that Calls(procedure, "call") with variable.varName="variable" with print.varName=print.varName  such that Calls*(_, procedure)  pattern while(while, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern if(assign, _, _)  such that Parent(15, assign)  such that Next(_, read) with procedure.procName=procedure.procName  pattern while(variable, _)  such that Parent*(if, _)  such that Follows*(_, assign) with stmt.stmt#=call.stmt# with read.stmt#=3800  pattern if(while, _, _)  pattern assign(_, _"2900/4300"_)  such that Next*(print, 14)  such that Next*(read, 14)  such that Parent*(assign, call)  pattern assign(variable, _"8200-1100"_) with 6000=read.stmt#  such that Parent*(assign, 16) with 2400=stmt.stmt# with procedure.procName=read.varName with "assign"=print.varName with "assign"=read.varName with assign.stmt#=6300 with print.varName=call.procName with "while"=call.procName with procedure.procName=call.procName  pattern while(_, _)  pattern assign(_, "9500+read")  pattern assign(_, "4600+8100")  pattern assign(variable, "procedure+6900")  pattern while(_, _)  such that Parent*(assign, 15)  such that Affects*(assign, stmt) with constant.value=print.stmt#  such that Parent(read, _)  such that Calls("procedure", procedure)  such that Follows*(29, if) with procedure.procName="constant" with stmt.stmt#=500  pattern if(read, _, _)  such that Modifies(if, "else") with while.stmt#=call.stmt#  pattern assign(_, _"5700/7700"_)  pattern if(_, _, _)  pattern assign(then, _"else-8500"_) with procedure.procName="call"  such that Affects*(18, assign)  such that Next*(print, if) with 100=read.stmt#  pattern assign(variable, _)  pattern while(call, _) with variable.varName=read.varName  such that Calls*(procedure, _) with constant.value=9200 with read.varName="call"  such that Modifies(21, variable)  pattern assign(variable, "3000/7100")  pattern assign(_, _"5900-then"_)  such that Next*(_, read)  pattern while(read, _) with read.varName=read.varName  pattern if(variable, _, _) with print.varName=call.procName with procedure.procName="else"  pattern assign(then, _"5600+2200"_) with "else"=call.procName with stmt.stmt#=1900  pattern if(variable, _, _)  pattern if(variable, _, _)  such that Calls*(procedure, "if")  such that Parent*(while, 22)  pattern assign(_, _)  such that Calls("procedure", procedure) with read.varName=procedure.procName  pattern if(_, _, _)  pattern while(call, _)  pattern if(read, _, _) with "procedure"=variable.varName with read.varName="constant"  such that Next(read, call)  pattern if(variable, _, _)  pattern if(variable, _, _)  such that Uses(print, _)  pattern assign(print, "3500/7900")  pattern if(assign, _, _) with print.varName="variable"  such that Calls*("then", procedure) with 7800=constant.value  pattern assign(_, _"4900/4800"_)  pattern while(call, _)  pattern if(variable, _, _)  such that Affects*(20, stmt)  pattern if(variable, _, _)  pattern while(assign, _)  such that Parent*(6, read)  pattern assign(variable, "(9700+9600)*4000") with print.varName=read.varName  pattern while(variable, _) with procedure.procName="procedure"  pattern if(_, _, _)  pattern assign(_, _"9000+4500"_) with procedure.procName=variable.varName  pattern assign(variable, _) with variable.varName=procedure.procName with read.stmt#=5500  pattern assign(constant, _"5400/7200"_) with read.varName="print"  pattern while(_, _) with if.stmt#=constant.value  such that Affects(stmt, 14)  pattern if(procedure, _, _) with call.stmt#=while.stmt#  such that Next*(call, _)  such that Follows*(_, assign)  pattern while(_, _)  pattern while(variable, _)  such that Calls*(procedure, "procedure") with read.varName=variable.varName  pattern while(call, _)  pattern assign(variable, "5400*6600") with "procedure"=call.procName  pattern while(_, _)  such that Affects(11, stmt)  such that Affects*(assign, _)  pattern if(variable, _, _)  pattern assign(_, _"2900+7100"_)  pattern while(_, _)  such that Next(5, print)  pattern assign(_, "2800/2900")  such that Affects(7, assign)  pattern assign(variable, "900*6000")  pattern if(_, _, _)  such that Calls*(procedure, _)  pattern while(variable, _)  pattern while(constant, _)  pattern while(if, _) with read.stmt#=read.stmt#  such that Next(_, print) with "assign"=procedure.procName  pattern assign(if, _"7100/7100"_) with 7800=call.stmt#  such that Affects*(stmt, stmt)  such that Calls*("else", procedure)  pattern while(while, _) with "variable"=variable.varName with "then"=print.varName  such that Uses(while, "read")  pattern while(_, _) with print.stmt#=assign.stmt#  pattern assign(_, "5600-3500")  pattern if(_, _, _) with procedure.procName="if"  pattern assign(variable, _"5400*4000"_) with assign.stmt#=if.stmt#  pattern assign(variable, "((600+5400)/4400)/5700") with call.stmt#=9700  pattern if(then, _, _)  such that Modifies(while, _)  pattern assign(_, _"800*6300"_)  such that Parent(call, 10) with "procedure"=call.procName  pattern while(variable, _) with read.varName=call.procName  pattern assign(_, _"7600/300"_)  pattern if(variable, _, _)  pattern while(_, _)  such that Calls(procedure, _)  pattern while(variable, _)  such that Calls*(_, procedure) with "procedure"=procedure.procName  such that Next*(15, while)  pattern assign(variable, _)  pattern while(_, _) with 8700=while.stmt# with 200=assign.stmt# with read.stmt#=call.stmt#  such that Uses(if, _)  pattern assign(_, _"5700*300"_)  pattern assign(_, "4400+2600")  pattern while(_, _)  pattern assign(_, _)  such that Calls(procedure, "constant") with print.varName="procedure"  pattern if(_, _, _)  such that Calls*(_, procedure) with "else"=procedure.procName with 7600=stmt.stmt# with call.stmt#=4500  pattern if(_, _, _)  pattern assign(variable, "9200-2100")  pattern while(_, _)  such that Modifies(call, _)  pattern assign(while, "4300/8800") with constant.value=stmt.stmt# with procedure.procName="if"  such that Calls*(procedure, procedure)  pattern if(call, _, _)  such that Follows(if, _)  pattern while(else, _) with 4700=read.stmt#  such that Uses(print, _)  pattern assign(_, _"7300-if"_)  pattern if(then, _, _)  pattern assign(call, "1400*2500")  such that Modifies(procedure, "assign")  pattern if(variable, _, _)  such that Follows*(call, 25)  such that Affects*(28, stmt)  pattern while(variable, _) with variable.varName=variable.varName  pattern if(_, _, _) with call.procName="assign"  pattern while(variable, _)  such that Affects(assign, 4)  pattern while(_, _) with stmt.stmt#=constant.value  such that Calls(procedure, _) with print.varName=call.procName  such that Follows*(print, 8)  such that Next*(_, while)  pattern while(_, _)  pattern if(variable, _, _)  pattern while(_, _)  pattern assign(_, "1600*2800") with print.stmt#=9300  such that Modifies(assign, variable) with "assign"=variable.varName  such that Next*(if, _) with "constant"=variable.varName with "call"=variable.varName with "print"=variable.varName  pattern while(_, _)  pattern while(print, _)  such that Follows*(_, print)  such that Affects*(_, assign)  such that Modifies(print, "constant")  such that Parent(22, assign) with "while"=call.procName with 2100=read.stmt# with call.procName="constant"  pattern assign(print, "2700+1100")  such that Follows*(stmt, _)  pattern assign(procedure, _"2600/2900"_)  such that Follows*(stmt, _)  pattern if(_, _, _)  such that Parent*(call, 21) with 3600=print.stmt#  pattern if(variable, _, _) with call.stmt#=stmt.stmt#  such that Calls(procedure, procedure)  pattern while(variable, _)  pattern while(_, _) 

5000
41 - Query 41
assign assign; variable variable; constant constant; print print; stmt stmt; read read; procedure procedure; if if; while while; call call; 
Select <assign, variable, constant, print, stmt, read, procedure, if, while, call>  such that Calls*(procedure, _)  pattern while(_, _)  such that Calls*(procedure, procedure)  pattern assign(variable, _)  pattern if(procedure, _, _)  such that Parent(assign, if)  such that Affects*(stmt, assign)  such that Calls*(_, procedure) with constant.value=9800 with call.stmt#=9100  such that Next(read, read)  pattern if(variable, _, _) with 3400=assign.stmt# with "print"=procedure.procName  such that Modifies(while, _) with assign.stmt#=3800  such that Next(while, _) with variable.varName="while" with 5000=while.stmt#  such that Next(24, read) with "read"=procedure.procName  pattern assign(_, _"3500*200"_) with 1000=if.stmt#  pattern assign(else, "9000+4400")  pattern while(variable, _) with "assign"=variable.varName with call.procName=call.procName with call.stmt#=while.stmt#  pattern while(print, _) with "while"=procedure.procName  such that Calls(procedure, "print") with read.varName="print"  pattern assign(call, _)  pattern if(variable, _, _) with 6300=assign.stmt#  pattern assign(then, "9400*100") with variable.varName=procedure.procName  such that Affects*(assign, assign) with "call"=call.procName  pattern assign(_, "(7300/2900)/9300")  such that Calls(procedure, procedure)  pattern while(while, _)  pattern assign(if, _)  pattern while(variable, _)  pattern assign(variable, _)  pattern while(_, _)  pattern assign(variable, "4500/variable")  pattern while(_, _)  such that Calls(procedure, procedure) with "print"=read.varName with 1900=call.stmt#  pattern assign(read, _"900-3900"_)  such that Follows*(read, _)  pattern assign(call, _)  pattern if(variable, _, _)  pattern assign(while, _)  such that Calls*(procedure, "then")  such that Affects(stmt, _) with read.varName=print.varName  such that Affects(stmt, stmt)  such that Next(if, while)  such that Next(read, _) with procedure.procName=call.procName  such that Parent(_, while)  such that Follows*(stmt, if)  such that Calls(procedure, "else") with call.stmt#=7400  such that Affects(5, assign) with 9400=while.stmt#  such that Parent*(26, call)  pattern if(variable, _, _) with if.stmt#=call.stmt#  pattern if(variable, _, _)  such that Modifies(21, variable)  pattern while(_, _) with 8300=call.stmt#  pattern while(variable, _)  such that Uses(print, "else") with read.varName=read.varName  pattern assign(variable, _)  pattern assign(variable, "3800-7200") with 600=stmt.stmt# with call.procName=variable.varName with assign.stmt#=3600  such that Next*(if, _)  pattern assign(if, _)  such that Next(print, 1) with procedure.procName="constant"  pattern assign(_, _)  such that Affects*(_, assign)  such that Affects(assign, 2) with "while"=print.varName  pattern while(variable, _)  pattern assign(_, "(5000/7200)+1000")  pattern while(_, _)  such that Affects*(assign, _) with variable.varName="while" with 5500=if.stmt#  pattern if(print, _, _)  pattern while(while, _) with 4200=assign.stmt# with variable.varName="if"  pattern while(then, _)  pattern while(_, _) with read.varName=variable.varName  pattern if(variable, _, _)  pattern assign(variable, "read*assign")  such that Uses(23, variable)  pattern assign(call, _"6000-5100"_)  pattern while(variable, _) with 9700=read.stmt# with "call"=call.procName with 3900=while.stmt#  pattern while(if, _) with while.stmt#=stmt.stmt#  such that Affects*(assign, assign)  pattern if(then, _, _) with call.stmt#=5300  pattern while(variable, _)  such that Uses(while, "if") with 2400=assign.stmt#  pattern while(variable, _)  such that Next*(25, assign)  pattern while(_, _) with call.procName=read.varName  such that Next*(_, print)  pattern assign(variable, "5800-9100")  pattern while(_, _) with read.varName="call" with call.procName="call"  such that Uses(15, variable)  pattern while(then, _)  pattern if(variable, _, _) with 5700=stmt.stmt#  such that Affects*(6, stmt)  such that Uses(29, variable) with variable.varName="call" with print.stmt#=assign.stmt#  pattern assign(variable, _)  pattern while(variable, _) with "if"=read.varName  such that Modifies(call, _) with "call"=procedure.procName with 3400=read.stmt# with 4900=print.stmt#  such that Parent(17, assign)  pattern if(_, _, _)  such that Follows(if, assign)  such that Parent*(read, 15)  such that Calls*(_, procedure)  such that Modifies(read, "variable")  such that Follows(print, 11)  such that Affects*(stmt, stmt) with procedure.procName=print.varName  pattern assign(call, _"700-4300"_)  such that Next(_, if)  pattern if(variable, _, _)  pattern while(_, _) with "call"=print.varName  such that Follows*(call, stmt)  such that Follows(_, print)  pattern if(procedure, _, _)  pattern assign(variable, _"5700-constant"_) with if.stmt#=9400  such that Follows*(read, assign) with 3800=assign.stmt#  pattern assign(variable, "5200+2400")  such that Follows*(11, stmt)  such that Affects*(10, stmt)  such that Modifies(call, "if")  pattern assign(then, _"1400/800"_) with read.varName="variable"  such that Modifies(while, _) with read.stmt#=4200 with read.varName="procedure"  such that Affects*(stmt, stmt)  pattern assign(print, "9600/procedure") with 6200=if.stmt#  pattern if(if, _, _)  pattern assign(_, _"8500+2000"_)  such that Next*(18, print)  pattern if(variable, _, _)  pattern assign(_, _"(200-8800)/4700"_) with "print"=procedure.procName with read.varName=print.varName with call.stmt#=read.stmt#  pattern assign(_, _)  pattern assign(variable, _)  pattern while(variable, _) with print.stmt#=call.stmt#  such that Affects(stmt, stmt)  such that Parent*(stmt, print)  such that Calls*(procedure, procedure) with if.stmt#=8200  pattern assign(variable, "3300*400")  pattern while(assign, _) with constant.value=100  such that Next(stmt, 18)  such that Follows*(assign, _)  such that Follows*(_, read) with read.stmt#=5300  pattern assign(variable, _"5400/then"_) with "while"=variable.varName with "then"=call.procName with variable.varName="assign" with while.stmt#=3300  such that Next(_, print)  such that Follows(if, call)  such that Parent*(_, if)  pattern if(variable, _, _)  pattern if(_, _, _) with "call"=procedure.procName  such that Parent(_, while)  pattern if(variable, _, _)  pattern if(variable, _, _) with "call"=variable.varName  such that Follows(read, 12) with stmt.stmt#=2500 with read.varName="while"  pattern if(_, _, _) with while.stmt#=while.stmt#  pattern if(variable, _, _)  pattern if(variable, _, _)  such that Modifies(assign, "print")  such that Parent*(if, read) with while.stmt#=6100 with read.varName="while" with "call"=read.varName with "else"=read.varName  such that Next(_, call)  pattern if(_, _, _)  pattern if(_, _, _)  pattern while(_, _)  such that Calls(procedure, procedure)  pattern while(variable, _) with call.stmt#=9600 with 8200=if.stmt# with assign.stmt#=while.stmt#  pattern while(variable, _)  pattern assign(_, _"3200-2800"_) with "read"=call.procName with assign.stmt#=while.stmt#  pattern while(_, _)  pattern while(if, _)  pattern if(variable, _, _)  pattern if(then, _, _)  such that Parent*(stmt, 6)  pattern while(_, _)  such that Affects*(1, stmt) with stmt.stmt#=300 with 9100=if.stmt#  such that Follows*(assign, stmt) with 2100=print.stmt#  pattern while(assign, _) with call.procName=print.varName  pattern while(_, _)  pattern while(while, _) with "procedure"=variable.varName  pattern if(assign, _, _)  such that Next(_, call) with assign.stmt#=6300  such that Parent(assign, if) with 200=stmt.stmt#  pattern if(variable, _, _)  pattern while(variable, _)  pattern if(_, _, _)  pattern assign(variable, _"(1900+9100)+constant"_)  pattern while(_, _)  pattern if(variable, _, _)  such that Next*(_, print)  such that Affects(5, assign)  pattern if(_, _, _)  such that Affects*(assign, _)  pattern assign(_, "6700+7200") with print.stmt#=while.stmt#  pattern if(_, _, _)  such that Modifies(6, variable)  pattern if(_, _, _)  pattern assign(_, "1000-6600")  pattern while(else, _)  pattern if(constant, _, _)  such that Modifies(call, "if") with "if"=call.procName  pattern while(_, _) with "while"=call.procName  such that Uses(if, variable)  pattern if(variable, _, _) with 6800=stmt.stmt#  pattern while(variable, _)  pattern while(variable, _) with read.varName="if"  pattern if(variable, _, _)  such that Affects*(15, assign) with while.stmt#=5800  such that Modifies(stmt, "constant")  such that Next(_, call) with 7600=while.stmt#  such that Parent(_, stmt)  pattern if(_, _, _) with print.stmt#=2000  pattern while(_, _)  pattern assign(variable, _"constant/6700"_) with "if"=read.varName  such that Parent*(print, _)  pattern while(variable, _)  pattern if(_, _, _)  pattern assign(_, "6800*7800")  pattern assign(variable, _"4800*4900"_)  pattern while(_, _)  pattern if(_, _, _)  pattern if(else, _, _)  pattern assign(_, _"3900*constant"_)  pattern if(variable, _, _) with "print"=read.varName with 5400=constant.value with assign.stmt#=if.stmt#  pattern assign(constant, _)  pattern if(variable, _, _) with assign.stmt#=5500  pattern assign(variable, _)  such that Next*(10, assign)  such that Follows(read, 21) with variable.varName="then" with "if"=read.varName  such that Parent(while, _)  pattern if(_, _, _)  pattern while(read, _) with variable.varName="procedure" with "read"=print.varName  pattern if(variable, _, _)  pattern if(variable, _, _)  such that Affects*(stmt, stmt)  such that Follows*(print, 12)  such that Follows*(29, call)  pattern if(_, _, _) with procedure.procName="variable"  such that Affects*(_, assign) with while.stmt#=stmt.stmt# with 3400=read.stmt#  such that Affects(stmt, assign) with constant.value=2900 with variable.varName="variable" with while.stmt#=200 with read.varName=variable.varName  pattern if(_, _, _) with variable.varName="while" with 300=if.stmt# with variable.varName=variable.varName with call.stmt#=5800 with "assign"=call.procName  pattern if(_, _, _)  such that Next(if, call) with stmt.stmt#=while.stmt# with call.procName="if" with "call"=variable.varName  pattern if(variable, _, _)  such that Follows*(while, 25) with print.varName="procedure"  pattern assign(variable, _)  such that Follows(assign, _) with if.stmt#=5200  pattern while(_, _)  pattern if(variable, _, _)  such that Follows(while, print) with 8900=call.stmt#  pattern assign(variable, "2300*4000") with 900=constant.value  pattern while(_, _)  pattern if(then, _, _)  pattern if(variable, _, _)  pattern assign(_, _)  pattern if(if, _, _)  pattern while(_, _)  such that Affects*(assign, _) with if.stmt#=100  such that Next(_, assign) with print.varName="read" with 3300=while.stmt#  such that Affects*(assign, stmt)  pattern assign(_, "8200*else") with 1700=if.stmt#  pattern if(variable, _, _)  pattern assign(_, _)  such that Calls*(procedure, "procedure")  such that Uses(print, variable) with if.stmt#=print.stmt#  such that Next*(call, while)  pattern if(variable, _, _)  such that Next(stmt, read)  pattern if(constant, _, _) with "variable"=variable.varName  such that Parent*(11, print) with "while"=variable.varName  pattern while(_, _)  such that Uses(27, variable)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern if(variable, _, _) with print.varName=variable.varName  pattern while(variable, _) with print.varName=read.varName with constant.value=1300  pattern while(_, _) with call.stmt#=3600  pattern if(call, _, _) with 3700=if.stmt#  pattern assign(variable, "2400*assign")  pattern if(_, _, _)  pattern assign(variable, _"600+1500"_)  such that Next(call, if)  such that Follows(if, _)  pattern assign(while, "(3100-3700)*8000")  pattern if(variable, _, _) with call.procName=print.varName with "read"=procedure.procName  pattern if(while, _, _)  pattern while(_, _)  pattern while(variable, _)  such that Calls(_, procedure) with "call"=print.varName  pattern while(variable, _)  such that Affects(29, stmt)  pattern if(_, _, _) with 9800=constant.value  pattern while(print, _)  such that Next*(9, if) with "variable"=variable.varName  such that Parent*(_, print)  pattern if(_, _, _)  such that Affects(stmt, 1)  pattern while(variable, _) with 1300=call.stmt#  such that Affects*(26, stmt)  pattern assign(variable, _"variable-4500"_)  such that Parent(_, print) with print.varName=variable.varName with procedure.procName="constant"  such that Next(_, read)  pattern while(variable, _) with call.procName="else" with constant.value=3100  pattern while(_, _)  pattern if(while, _, _)  such that Follows*(stmt, 19) with 7800=assign.stmt# with 3700=print.stmt# with procedure.procName=variable.varName  pattern if(_, _, _)  pattern assign(_, "6600+3900")  such that Affects(stmt, _)  pattern if(print, _, _)  pattern while(variable, _)  such that Uses(7, variable)  pattern if(call, _, _)  pattern while(then, _)  pattern if(variable, _, _)  pattern while(else, _)  pattern while(variable, _) with 8600=print.stmt#  such that Calls(procedure, "read") with call.stmt#=1400 with print.varName="else"  pattern if(constant, _, _)  pattern while(else, _) with 3600=assign.stmt# with 6700=while.stmt#  such that Calls*(procedure, _)  such that Next*(while, 9)  pattern assign(variable, "4200-400")  pattern if(_, _, _) with "if"=procedure.procName  pattern while(variable, _)  pattern assign(_, _)  pattern assign(variable, "1000/3700")  pattern if(variable, _, _) with print.stmt#=8900  pattern if(variable, _, _) with 8000=constant.value with assign.stmt#=7200 with "while"=procedure.procName  such that Parent*(print, _)  pattern assign(read, "4100+5900")  pattern assign(variable, _"5800-600"_)  pattern assign(variable, "7300/8200") with "then"=procedure.procName  such that Affects(stmt, _)  such that Follows(stmt, print) with "procedure"=variable.varName  such that Calls*("else", procedure)  such that Affects(stmt, stmt) with 1700=constant.value with constant.value=9500 with variable.varName=procedure.procName with print.varName="else"  such that Affects*(stmt, 8) with variable.varName=read.varName with call.procName="procedure"  such that Follows(while, 28) with constant.value=7400  such that Parent*(4, call) 

5000
42 - Query 42
assign assign; variable variable; constant constant; print print; call call; stmt stmt; read read; if if; while while; procedure procedure; 
Select <assign, variable, constant, print, call, stmt, read, if, while, procedure>  pattern if(print, _, _)  such that Calls(procedure, procedure)  pattern assign(_, "800-3200")  pattern if(variable, _, _) with 6500=constant.value  pattern assign(variable, "1700/200")  pattern assign(read, _)  such that Calls(procedure, "procedure") with print.stmt#=6800 with 1900=while.stmt#  pattern if(else, _, _) with 3000=if.stmt# with print.stmt#=7300 with call.stmt#=read.stmt# with 3400=constant.value with read.varName="while" with stmt.stmt#=6400  such that Calls*(procedure, procedure)  such that Affects(assign, _)  such that Modifies(read, _) with 9700=if.stmt# with "constant"=read.varName  pattern assign(then, _)  pattern if(variable, _, _) with call.procName="print" with assign.stmt#=call.stmt#  pattern while(_, _)  pattern while(variable, _)  pattern while(variable, _) with read.stmt#=constant.value with variable.varName="constant" with print.stmt#=stmt.stmt#  pattern assign(else, _)  such that Affects(_, assign) with 4700=stmt.stmt#  pattern while(variable, _) with read.varName=read.varName  such that Uses(read, "if")  pattern if(variable, _, _)  pattern while(if, _)  pattern while(_, _)  such that Affects*(assign, stmt)  pattern if(_, _, _)  pattern while(_, _)  pattern assign(variable, "(6400+1500)+9200")  pattern while(variable, _)  pattern while(_, _)  pattern assign(_, _)  pattern if(variable, _, _) with 4400=stmt.stmt# with constant.value=3200 with 4900=stmt.stmt#  such that Follows*(print, 22) with 8300=while.stmt# with 6300=constant.value  pattern if(_, _, _)  such that Next(23, assign)  pattern while(variable, _)  pattern assign(variable, _) with 5500=stmt.stmt# with if.stmt#=stmt.stmt# with if.stmt#=while.stmt#  such that Affects(stmt, 5)  pattern assign(_, _) with procedure.procName="read"  pattern while(variable, _)  such that Affects(stmt, _)  such that Follows*(stmt, _) with "constant"=print.varName  pattern assign(variable, "(2700/2800)/5100")  pattern if(variable, _, _)  such that Parent(if, while)  pattern while(_, _)  pattern assign(assign, "2900/5200")  pattern while(_, _)  pattern while(_, _)  pattern assign(variable, _)  such that Uses(procedure, variable) with read.varName="else"  pattern assign(_, _"4100/7500"_) with read.stmt#=5800 with constant.value=2400  pattern while(_, _) with read.varName=print.varName  pattern assign(variable, _)  pattern if(print, _, _)  pattern if(variable, _, _)  pattern while(call, _)  such that Next(assign, _) with call.stmt#=8700  pattern assign(_, _"7500/8900"_) with procedure.procName="while"  pattern assign(variable, _"while*1700"_)  pattern if(variable, _, _)  such that Affects(stmt, _)  pattern if(print, _, _) with call.procName=variable.varName with constant.value=1700  pattern if(assign, _, _)  pattern if(variable, _, _) with 500=stmt.stmt#  pattern assign(_, _) with 8500=print.stmt#  pattern if(if, _, _) with call.procName="while" with 6500=while.stmt# with 5300=constant.value with assign.stmt#=8400  pattern while(_, _) with read.varName=read.varName  pattern while(print, _) with 8300=stmt.stmt#  such that Next*(if, read) with call.stmt#=8000 with call.stmt#=while.stmt# with "constant"=procedure.procName  pattern while(variable, _)  such that Next*(stmt, stmt)  such that Next(stmt, 10) with if.stmt#=4700  pattern while(_, _)  such that Next(print, while)  pattern assign(constant, "8600*7100")  such that Affects*(assign, assign)  pattern assign(_, _) with "call"=call.procName  pattern while(variable, _)  such that Next*(20, if)  pattern while(variable, _) with "call"=variable.varName  such that Follows(_, assign) with print.varName="then"  such that Next(stmt, 16)  such that Calls*("constant", procedure)  pattern assign(constant, "7900*9500") with read.varName=variable.varName  pattern while(_, _)  such that Calls(procedure, "while")  such that Uses(while, _)  pattern assign(variable, "5700/6200")  pattern while(_, _) with stmt.stmt#=9000 with print.varName="else"  pattern if(variable, _, _)  such that Next(read, _)  pattern if(print, _, _)  pattern while(_, _)  such that Calls*(procedure, _)  pattern assign(variable, _)  such that Next(while, _) with "variable"=read.varName  pattern assign(constant, _"1300-print"_)  pattern while(variable, _)  pattern assign(_, _"then-9900"_) with constant.value=5700  pattern assign(read, _) with 1200=read.stmt# with "assign"=procedure.procName  pattern if(while, _, _) with "print"=procedure.procName  pattern if(variable, _, _)  such that Uses(read, "then") with constant.value=print.stmt# with variable.varName="then"  pattern if(if, _, _) with 9500=stmt.stmt#  pattern if(_, _, _)  such that Next*(_, stmt)  such that Modifies(22, variable)  pattern assign(variable, _) with "while"=procedure.procName with procedure.procName="procedure"  pattern while(if, _)  pattern while(variable, _) with while.stmt#=7900  such that Next*(assign, 15) with procedure.procName=call.procName  pattern if(variable, _, _)  such that Next(call, _) with read.varName="while" with if.stmt#=500  pattern while(constant, _)  pattern assign(variable, "call/1200")  pattern assign(constant, _"4800*8800"_) with call.procName=variable.varName with read.varName=variable.varName with if.stmt#=stmt.stmt# with 1800=stmt.stmt# with "constant"=procedure.procName  pattern if(variable, _, _)  such that Next(10, call)  pattern if(constant, _, _)  pattern assign(variable, _)  pattern assign(call, _) with "assign"=procedure.procName  pattern if(_, _, _)  pattern assign(variable, _"9600-8200"_) with procedure.procName="then"  pattern while(procedure, _)  such that Affects*(_, stmt) with procedure.procName="variable" with procedure.procName="procedure"  pattern assign(variable, "9000/6000")  pattern assign(_, "8700/variable") with stmt.stmt#=9400  pattern while(_, _)  pattern assign(_, "7300/1500")  such that Follows(25, read)  pattern while(print, _)  pattern while(variable, _) with "read"=procedure.procName with assign.stmt#=read.stmt#  such that Follows*(read, assign) with "then"=read.varName  such that Parent(23, read)  such that Affects(_, assign) with while.stmt#=while.stmt# with "read"=read.varName with if.stmt#=6900 with assign.stmt#=while.stmt#  pattern while(constant, _) with if.stmt#=2900 with "then"=procedure.procName with if.stmt#=if.stmt#  such that Parent(stmt, 23) with 6300=stmt.stmt#  pattern while(_, _)  such that Affects*(assign, 29)  pattern if(variable, _, _) with while.stmt#=9200 with 3800=call.stmt#  pattern while(variable, _) with "assign"=call.procName  pattern if(then, _, _)  such that Calls*(_, procedure) with "procedure"=variable.varName  pattern assign(variable, _"if-3300"_) with read.varName=procedure.procName with "constant"=variable.varName with "if"=print.varName  pattern assign(variable, "4500-8300")  such that Parent(8, print) with if.stmt#=4500 with print.varName=variable.varName with stmt.stmt#=8700 with 7400=read.stmt#  pattern if(then, _, _)  such that Parent*(_, print)  pattern while(variable, _)  such that Follows*(call, read)  pattern if(variable, _, _)  such that Calls("call", procedure)  pattern if(_, _, _) with "constant"=read.varName with variable.varName=procedure.procName  pattern while(variable, _)  pattern while(variable, _)  pattern if(variable, _, _) with 6700=assign.stmt# with while.stmt#=8300  such that Calls(procedure, "while")  such that Next*(6, print)  such that Next(call, _) with "while"=call.procName  pattern assign(while, _) with 4700=if.stmt#  such that Follows*(_, stmt)  pattern assign(_, _) with "then"=variable.varName  pattern assign(variable, "8000/8800") with read.varName=read.varName  such that Next*(3, read)  pattern while(_, _)  such that Follows(_, read) with print.varName=procedure.procName with print.varName=print.varName  such that Next*(while, call) with "procedure"=call.procName  such that Calls*(procedure, "else")  pattern if(variable, _, _) with while.stmt#=call.stmt#  pattern assign(constant, _)  pattern if(_, _, _) with 1700=print.stmt#  pattern if(if, _, _) with 4200=read.stmt# with constant.value=call.stmt# with 200=constant.value  such that Follows*(assign, assign)  pattern while(while, _) with call.procName=read.varName with 8000=stmt.stmt# with read.stmt#=4800  pattern while(_, _)  such that Parent(11, print) with if.stmt#=9800  pattern assign(_, "9500*8800") with 2600=assign.stmt#  pattern if(while, _, _)  pattern if(variable, _, _) with read.stmt#=1300  pattern while(call, _) with print.varName="while" with "print"=read.varName  such that Calls*(procedure, _)  such that Follows(assign, _) with "constant"=call.procName with procedure.procName="else"  pattern assign(variable, _"4900+procedure"_)  pattern assign(variable, "4300*9500")  pattern while(print, _)  pattern while(_, _) with "if"=print.varName with print.varName=print.varName with 300=assign.stmt#  such that Parent(while, print)  pattern if(_, _, _)  pattern while(_, _)  pattern if(_, _, _) with "while"=read.varName with print.varName="assign"  such that Parent(print, 9) with procedure.procName="assign"  pattern while(variable, _)  pattern if(_, _, _)  pattern assign(variable, _)  pattern assign(if, _"((9100-500)*9800)*7800"_) with procedure.procName="variable"  such that Parent(assign, 23) with "then"=read.varName with 6300=if.stmt#  pattern if(_, _, _)  pattern while(_, _) with variable.varName="variable"  such that Uses(print, "then") with "read"=call.procName  pattern if(assign, _, _)  such that Next*(assign, while)  pattern assign(procedure, _"6000-300"_)  pattern while(_, _) with "else"=read.varName  pattern assign(_, "3500-7600")  pattern assign(variable, _)  such that Calls(procedure, _)  pattern if(_, _, _) with "read"=variable.varName  such that Follows*(read, call)  such that Next(17, read)  such that Affects*(stmt, _)  such that Follows*(_, assign)  pattern if(variable, _, _) with call.procName=print.varName with "assign"=print.varName  pattern if(_, _, _)  pattern if(variable, _, _) with procedure.procName="assign"  pattern assign(variable, "5400+8600")  pattern assign(procedure, _"3100*1100"_)  pattern assign(variable, "2100*print")  pattern while(_, _)  pattern while(variable, _) with constant.value=read.stmt# with 2600=call.stmt# with procedure.procName=procedure.procName with read.stmt#=1100  such that Parent*(_, if) with "while"=call.procName  such that Follows(print, 9)  such that Follows(3, read)  pattern if(variable, _, _) with procedure.procName="variable"  pattern assign(variable, _)  pattern assign(variable, "2600-6400")  pattern assign(while, "8600-9500") with procedure.procName="procedure" with stmt.stmt#=constant.value  such that Follows(2, if)  pattern assign(then, _)  such that Calls(procedure, "then")  such that Parent(while, stmt) with print.stmt#=read.stmt# with procedure.procName="read"  such that Next*(if, 4)  such that Parent(14, while)  such that Uses(10, variable) with print.varName=read.varName with constant.value=if.stmt#  such that Parent*(18, assign)  pattern if(read, _, _)  pattern if(_, _, _)  such that Next(print, _)  pattern assign(_, "(8000-9200)+5800")  pattern if(variable, _, _)  pattern while(_, _) with if.stmt#=if.stmt#  such that Follows(18, print)  pattern while(else, _)  pattern assign(else, _) with print.varName=print.varName  pattern while(variable, _) with print.varName=read.varName with while.stmt#=assign.stmt# with procedure.procName="read" with variable.varName="variable"  pattern if(variable, _, _) with 8600=constant.value  pattern assign(then, _) with variable.varName=procedure.procName  pattern assign(_, "4100-9200") with "else"=call.procName  such that Next(4, read)  pattern assign(variable, "4700/1200")  pattern if(_, _, _)  pattern assign(if, "(1800+3100)*4800") with read.stmt#=constant.value  such that Parent(while, 27) with variable.varName="assign"  pattern while(_, _)  pattern while(call, _) with print.varName=variable.varName  pattern while(assign, _)  pattern if(variable, _, _)  pattern assign(procedure, _)  pattern while(constant, _)  such that Follows*(23, assign)  pattern if(variable, _, _)  such that Calls("else", procedure) with call.procName="else" with constant.value=2800  pattern while(constant, _) with assign.stmt#=4900 with constant.value=9300  pattern if(variable, _, _)  such that Affects(stmt, stmt)  such that Parent*(stmt, _)  such that Modifies(while, "while") with variable.varName=procedure.procName  such that Calls("call", procedure) with "constant"=call.procName with variable.varName=read.varName  pattern assign(_, _"4700-read"_)  pattern assign(variable, "8400-2700") with print.varName=procedure.procName  such that Calls(procedure, _)  pattern if(variable, _, _)  such that Follows(24, print) with "then"=print.varName with while.stmt#=5600  pattern if(assign, _, _)  pattern if(_, _, _) with 9700=constant.value  pattern while(_, _)  such that Affects(25, stmt) with variable.varName="assign"  pattern while(constant, _)  pattern assign(variable, _"8100/5500"_)  such that Uses(if, "print") with variable.varName="procedure" with assign.stmt#=constant.value  pattern assign(_, "2600*1800") with 8600=if.stmt#  pattern while(_, _)  such that Modifies(while, "assign")  pattern while(_, _) with "while"=variable.varName  such that Next(_, print)  pattern assign(variable, _"3500/assign"_)  pattern while(_, _)  pattern while(variable, _)  such that Next*(19, while) with print.varName="if"  such that Calls("assign", procedure) with call.stmt#=constant.value  pattern while(variable, _) with "then"=call.procName with print.varName="procedure"  such that Parent*(22, assign)  such that Next(call, 3) with read.varName=procedure.procName with read.stmt#=call.stmt#  pattern assign(variable, _)  pattern assign(while, _"7800/8200"_)  such that Parent(if, _)  pattern assign(_, _) with print.stmt#=while.stmt#  such that Calls(procedure, procedure)  such that Affects(_, assign)  pattern while(_, _)  pattern while(call, _)  pattern assign(_, "8100*1800")  such that Follows(stmt, 27) with print.stmt#=if.stmt# with "print"=call.procName with "read"=variable.varName  pattern assign(while, _)  pattern if(constant, _, _) with "variable"=read.varName  pattern assign(while, _)  such that Modifies(procedure, _)  pattern assign(else, _) 

5000
43 - Query 43
variable variable; assign assign; print print; constant constant; stmt stmt; read read; procedure procedure; while while; if if; call call; 
Select <variable, assign, print, constant, stmt, read, procedure, while, if, call>  pattern assign(variable, _"9500/500"_)  pattern assign(call, _)  such that Uses(9, variable)  pattern while(_, _)  such that Next(_, while)  pattern assign(else, "300*3200")  such that Affects*(24, assign) with assign.stmt#=read.stmt# with assign.stmt#=call.stmt# with read.stmt#=if.stmt# with print.varName=print.varName  pattern if(_, _, _)  such that Next*(6, call) with read.varName=variable.varName  such that Next(_, stmt) with variable.varName=read.varName  pattern while(variable, _)  pattern if(variable, _, _)  pattern if(read, _, _)  pattern if(_, _, _)  such that Follows(while, if)  pattern assign(else, _"3400/4000"_)  pattern while(_, _) with print.varName="print"  pattern while(read, _)  such that Calls*(procedure, procedure)  such that Uses(print, variable)  pattern while(_, _) with "assign"=print.varName  such that Uses(if, _) with "print"=procedure.procName with call.procName=print.varName  pattern while(_, _)  such that Parent*(call, 6)  such that Follows(27, call)  pattern if(assign, _, _)  such that Calls*(_, procedure) with print.varName=call.procName with print.varName=read.varName  pattern assign(_, _)  such that Next(if, _) with "else"=procedure.procName  such that Next(read, _)  pattern while(call, _)  pattern if(variable, _, _) with 3500=constant.value  pattern assign(variable, _"3500+9500"_)  pattern while(variable, _)  pattern assign(_, _"2900*5500"_)  such that Parent*(21, stmt) with while.stmt#=call.stmt#  pattern while(variable, _)  pattern if(_, _, _)  such that Uses(read, _)  such that Parent(assign, stmt) with "read"=variable.varName  pattern assign(constant, _"2900/9800"_)  pattern assign(_, _) with if.stmt#=assign.stmt#  pattern while(variable, _)  pattern assign(_, _) with print.varName=variable.varName  pattern assign(if, "3600+2500") with variable.varName="procedure" with read.varName=call.procName  pattern if(variable, _, _)  pattern assign(variable, _"1600-600"_)  pattern assign(variable, "7200/6500")  pattern assign(variable, _"7100*1900"_)  such that Uses(assign, "variable")  such that Affects*(_, stmt) with 2600=if.stmt#  such that Modifies(stmt, "assign")  pattern if(_, _, _) with call.stmt#=constant.value  pattern assign(variable, _"4300/7400"_)  pattern assign(constant, "3000/assign") with "while"=call.procName with variable.varName="variable"  pattern if(variable, _, _)  such that Parent(read, assign)  such that Affects(assign, assign)  pattern if(_, _, _)  such that Follows(if, assign) with "procedure"=read.varName with print.varName=read.varName  pattern if(variable, _, _)  pattern assign(variable, "1600-7800") with if.stmt#=600  pattern while(variable, _) with "variable"=read.varName  pattern assign(while, "3300/9100")  pattern if(constant, _, _)  pattern while(then, _)  such that Calls(procedure, _) with "else"=variable.varName  such that Uses(stmt, variable)  pattern while(variable, _)  such that Calls*(_, procedure)  such that Calls*(_, procedure)  such that Calls(procedure, procedure) with if.stmt#=constant.value  pattern if(variable, _, _)  such that Follows*(5, while) with while.stmt#=assign.stmt# with procedure.procName="assign"  pattern if(_, _, _)  pattern while(_, _)  such that Next*(stmt, _)  pattern if(_, _, _)  such that Calls*(procedure, "print") with if.stmt#=read.stmt# with print.varName=procedure.procName  such that Calls(procedure, "variable")  pattern while(print, _)  such that Uses(read, _) with 5500=read.stmt# with call.procName=read.varName with "while"=print.varName  such that Parent*(read, _)  pattern while(_, _) with 1200=read.stmt#  pattern assign(_, _"8400-6600"_)  pattern if(variable, _, _)  pattern if(variable, _, _)  such that Parent*(stmt, _)  pattern assign(variable, _) with while.stmt#=assign.stmt#  such that Next*(while, _) with print.varName="if"  such that Modifies(stmt, "assign")  pattern assign(while, _"200*5900"_)  such that Calls*(procedure, procedure) with constant.value=call.stmt# with print.stmt#=3100  pattern while(if, _)  such that Calls(procedure, procedure)  pattern if(_, _, _) with 4800=while.stmt#  pattern while(variable, _) with print.varName=procedure.procName  pattern assign(_, _)  such that Affects(19, stmt)  such that Uses(if, "call") with "else"=procedure.procName  pattern while(variable, _)  pattern while(variable, _)  pattern if(_, _, _)  pattern if(call, _, _) with procedure.procName="assign" with if.stmt#=read.stmt# with read.stmt#=print.stmt# with 7400=assign.stmt#  pattern assign(variable, _)  pattern while(call, _)  such that Affects*(assign, _) with 5000=call.stmt#  such that Uses(stmt, "if") with if.stmt#=if.stmt#  pattern if(_, _, _) with variable.varName="else"  pattern while(variable, _) with call.procName=read.varName with print.stmt#=assign.stmt# with variable.varName="assign"  pattern while(variable, _)  pattern assign(_, _"7100*8600"_)  pattern if(read, _, _) with assign.stmt#=6900 with if.stmt#=6700  pattern while(variable, _)  pattern assign(variable, "6100*500") with "if"=print.varName  pattern while(_, _)  pattern while(if, _)  pattern assign(print, _) with 6300=assign.stmt#  pattern if(read, _, _) with 400=constant.value  such that Calls*(procedure, _) with call.procName="then"  pattern while(if, _) with "procedure"=call.procName  such that Parent(if, _)  pattern assign(read, _"1100+900"_)  pattern if(variable, _, _)  such that Next*(_, call)  such that Calls(procedure, _)  pattern while(_, _)  pattern if(constant, _, _)  such that Uses(while, "then")  pattern if(_, _, _)  pattern assign(_, "1900+7100")  pattern assign(constant, "7300/1200")  such that Calls*(procedure, "constant")  such that Calls(procedure, "if")  such that Next*(assign, read)  such that Affects*(assign, _)  pattern if(_, _, _)  such that Uses(read, variable)  pattern if(variable, _, _) with constant.value=5300  pattern assign(variable, _"200*9200"_)  pattern while(while, _)  pattern while(procedure, _)  pattern if(procedure, _, _) with call.procName=read.varName  such that Follows(print, assign)  such that Calls(procedure, "constant")  pattern while(_, _)  such that Affects(stmt, 6)  pattern while(variable, _) with procedure.procName="while"  pattern assign(_, "(1600+else)+5700") with "call"=variable.varName  pattern if(call, _, _)  pattern while(print, _) with 8100=call.stmt# with stmt.stmt#=stmt.stmt#  such that Parent*(stmt, 1) with stmt.stmt#=9600  pattern if(assign, _, _)  pattern while(procedure, _) with 300=read.stmt# with assign.stmt#=7100 with assign.stmt#=9000 with call.procName="assign"  such that Calls(procedure, procedure)  such that Calls*(procedure, _)  such that Modifies(call, _)  pattern if(_, _, _)  such that Calls*(procedure, _)  pattern if(_, _, _)  pattern while(variable, _)  pattern assign(variable, "5600+100")  pattern if(variable, _, _)  such that Calls(procedure, _) with assign.stmt#=if.stmt# with constant.value=call.stmt#  pattern if(_, _, _)  such that Parent(_, stmt) with call.procName="then"  such that Uses(while, variable)  pattern if(assign, _, _)  pattern assign(_, "5400*9200") with 4800=print.stmt# with print.varName=procedure.procName  pattern while(_, _)  such that Parent*(assign, 6)  pattern if(_, _, _)  pattern if(print, _, _) with call.stmt#=constant.value  pattern if(procedure, _, _)  pattern assign(procedure, _"2700-3200"_)  such that Affects(4, assign) with assign.stmt#=read.stmt#  pattern assign(read, "2100-9300")  pattern if(_, _, _)  such that Uses(procedure, "assign")  such that Calls(procedure, _)  pattern assign(call, "4100*9600")  pattern assign(variable, _)  pattern if(variable, _, _)  such that Calls*(procedure, "else") with variable.varName="else" with read.varName="assign" with if.stmt#=7000  pattern if(while, _, _)  pattern while(_, _)  pattern assign(variable, _"read*4700"_)  such that Calls(procedure, _) with print.varName=variable.varName  pattern assign(_, "2500/9300") with "read"=variable.varName  pattern while(_, _)  such that Modifies(assign, "then")  pattern while(variable, _)  pattern while(_, _)  such that Parent*(20, assign) with read.stmt#=call.stmt# with "constant"=variable.varName with print.stmt#=stmt.stmt#  such that Parent(while, 29)  pattern assign(_, _) with 1500=call.stmt#  such that Parent(_, if)  such that Follows*(_, read) with stmt.stmt#=5300 with 1800=while.stmt#  such that Parent(stmt, _)  pattern assign(variable, _"1800+8000"_) with call.procName=variable.varName  such that Parent*(call, assign)  pattern assign(_, _)  such that Follows*(while, read)  pattern if(_, _, _)  such that Parent(while, 22) with "print"=read.varName  pattern if(print, _, _)  pattern assign(variable, _"((2700*7900)/3600)*4000"_) with assign.stmt#=5600 with print.stmt#=read.stmt# with "then"=variable.varName  pattern if(_, _, _)  pattern while(variable, _)  such that Affects*(_, assign)  pattern if(variable, _, _)  pattern while(else, _) with "else"=read.varName with variable.varName="then"  pattern if(variable, _, _) with "constant"=procedure.procName  pattern assign(_, "8400-2700") with if.stmt#=6600  pattern assign(_, _)  pattern if(_, _, _) with call.stmt#=7900 with procedure.procName="while"  pattern assign(read, _"(8500-1700)-9200"_)  such that Follows(stmt, stmt)  pattern if(variable, _, _) with while.stmt#=read.stmt# with "variable"=procedure.procName  pattern while(variable, _) with print.stmt#=constant.value  such that Modifies(call, _) with 7500=constant.value  pattern assign(variable, _) with read.stmt#=4100  such that Follows*(_, if)  pattern assign(variable, "9400*7900")  such that Next(print, 25)  pattern while(variable, _)  pattern assign(_, "500*if")  such that Affects(assign, assign)  pattern while(variable, _)  pattern while(_, _)  pattern assign(_, _"1400/7100"_)  such that Calls(procedure, "variable")  pattern while(_, _)  pattern while(variable, _)  pattern if(variable, _, _)  such that Calls*(_, procedure)  pattern assign(then, "4800+4700")  pattern if(variable, _, _)  pattern if(constant, _, _)  pattern while(_, _) with "while"=variable.varName with 9600=while.stmt#  pattern assign(_, _) with "if"=procedure.procName  such that Parent*(_, read)  such that Affects(_, assign)  such that Follows(assign, call)  such that Next*(while, read)  such that Follows(_, while) with assign.stmt#=call.stmt#  pattern assign(_, _)  pattern if(variable, _, _)  pattern if(then, _, _)  pattern if(variable, _, _)  such that Parent*(call, _)  pattern if(variable, _, _)  pattern assign(variable, _"3400+5800"_) with print.varName="procedure" with procedure.procName=call.procName  pattern assign(_, _"read/3500"_)  pattern assign(while, "4500/else")  such that Affects*(23, stmt) with print.varName="then"  such that Affects*(27, stmt) with 8300=while.stmt# with 9500=stmt.stmt#  such that Next*(24, print)  such that Parent*(if, 17)  pattern assign(variable, "4400*assign") with 4700=call.stmt#  such that Calls*(procedure, _)  pattern assign(else, _)  such that Follows*(if, _)  pattern while(call, _)  pattern assign(variable, _)  pattern while(then, _)  pattern assign(variable, "4900-7500")  pattern if(print, _, _) with "procedure"=read.varName with procedure.procName=print.varName  pattern assign(variable, _"(1900/1500)/while"_) with assign.stmt#=assign.stmt# with constant.value=8200  pattern if(assign, _, _)  such that Modifies(20, variable) with call.procName="print"  such that Affects*(assign, 20) with print.varName=variable.varName  pattern if(while, _, _) with variable.varName=variable.varName  pattern while(_, _)  pattern assign(procedure, _"2500+5500"_)  pattern assign(_, _"(9400/8400)+read"_)  pattern assign(call, _"if+9500"_)  pattern assign(variable, _"7200-procedure"_)  pattern assign(variable, _"3100-3800"_)  such that Modifies(while, "else")  pattern while(variable, _)  pattern if(variable, _, _)  pattern while(while, _)  pattern if(_, _, _)  pattern while(while, _) with if.stmt#=stmt.stmt# with "constant"=read.varName with call.procName="else"  pattern assign(_, _"5700/2300"_) with "procedure"=call.procName  pattern assign(variable, _"(7100-5000)-while"_)  pattern while(_, _) with print.stmt#=read.stmt#  such that Follows(_, print)  pattern while(variable, _)  pattern if(variable, _, _) with procedure.procName=procedure.procName with "while"=read.varName  such that Parent*(4, while) with 4900=print.stmt#  such that Calls*(procedure, _) with "call"=variable.varName with while.stmt#=stmt.stmt#  pattern assign(_, _)  pattern assign(_, "2800*if")  pattern while(_, _)  such that Follows*(call, _)  pattern while(_, _)  pattern while(_, _)  such that Next(_, stmt)  pattern while(variable, _)  pattern if(variable, _, _) with procedure.procName=print.varName  pattern if(while, _, _)  pattern if(_, _, _) with while.stmt#=stmt.stmt# with assign.stmt#=600  such that Modifies(procedure, "variable")  pattern while(while, _) with print.stmt#=3300  pattern assign(variable, "7400-2800") with variable.varName=print.varName  pattern assign(while, "8300+4100")  such that Next(_, stmt) with read.varName="print"  such that Calls*(procedure, procedure)  pattern if(if, _, _)  such that Next(2, print)  such that Next(_, call)  pattern assign(else, "8000+9400")  such that Follows(stmt, _)  pattern while(if, _)  such that Parent(25, read) with while.stmt#=8600  such that Next*(9, read)  pattern while(variable, _)  such that Calls(procedure, _)  pattern if(_, _, _)  pattern assign(_, "6600+2800") with "read"=print.varName with call.procName="while" with 3600=assign.stmt#  such that Affects(stmt, _) with assign.stmt#=5200 with print.varName="print"  pattern if(_, _, _)  pattern while(assign, _)  such that Calls*(procedure, procedure) with stmt.stmt#=8700  pattern if(variable, _, _)  such that Next(4, if)  pattern assign(constant, "2200*9200")  pattern while(_, _)  pattern assign(_, _"4900-7600"_) with read.stmt#=8500  such that Affects*(1, assign) with while.stmt#=assign.stmt#  pattern if(_, _, _)  pattern assign(assign, "5400*8000")  pattern if(variable, _, _)  such that Parent(if, _)  pattern assign(read, _)  such that Parent(_, stmt) with 3900=if.stmt# with if.stmt#=assign.stmt#  such that Calls(_, procedure)  pattern while(variable, _)  pattern while(_, _)  pattern if(_, _, _)  pattern if(print, _, _)  pattern if(assign, _, _)  pattern assign(_, _"4200-9900"_) with assign.stmt#=read.stmt#  pattern while(_, _) with variable.varName="procedure"  pattern while(then, _) 

5000
44 - Query 44
variable variable; assign assign; print print; constant constant; stmt stmt; read read; procedure procedure; if if; while while; call call; 
Select <variable, assign, print, constant, stmt, read, procedure, if, while, call>  pattern assign(variable, "2100*6500")  such that Next(call, if)  such that Follows*(7, print)  pattern while(_, _)  pattern assign(_, "4500*5200") with print.varName="call"  pattern assign(_, "6600+5300") with read.varName=call.procName  such that Calls(procedure, procedure)  pattern assign(_, "8800-8900")  pattern assign(_, _"then-6300"_)  pattern assign(_, _"4300+9000"_)  pattern while(variable, _)  such that Calls*(_, procedure) with call.stmt#=read.stmt#  pattern while(_, _)  pattern if(variable, _, _) with variable.varName=variable.varName  such that Next(call, _)  pattern if(_, _, _)  pattern if(variable, _, _)  such that Uses(stmt, _)  pattern assign(_, "(if/3900)+5700")  pattern if(variable, _, _)  pattern assign(_, "2400+8300") with variable.varName=read.varName  pattern assign(variable, _) with "while"=call.procName  pattern assign(print, _)  pattern while(variable, _)  such that Parent(call, 18)  pattern if(_, _, _)  such that Affects*(assign, _)  pattern assign(read, _)  such that Calls(procedure, "procedure") with while.stmt#=while.stmt#  such that Modifies(call, "variable")  such that Follows(_, while) with print.stmt#=if.stmt#  pattern if(variable, _, _)  such that Follows(read, 25) with "else"=call.procName with variable.varName="if"  such that Calls*(procedure, procedure) with 600=stmt.stmt#  such that Parent(while, _)  such that Next*(28, while)  pattern while(while, _)  such that Calls*(procedure, _)  pattern if(variable, _, _) with if.stmt#=if.stmt# with stmt.stmt#=call.stmt#  pattern assign(variable, "6100+2900")  such that Follows*(call, 25) with "print"=read.varName with if.stmt#=stmt.stmt#  pattern if(variable, _, _) with print.stmt#=7600 with "print"=read.varName  such that Parent*(_, if)  such that Modifies(assign, _) with 2700=print.stmt#  pattern assign(_, "8600+5000")  pattern while(variable, _) with print.varName="while"  pattern while(variable, _)  pattern while(_, _)  pattern if(variable, _, _) with assign.stmt#=constant.value with while.stmt#=3000  such that Calls*(procedure, "read") with print.varName=procedure.procName  pattern assign(read, "3400*print") with stmt.stmt#=9200  pattern assign(variable, "1100/8800") with read.varName="procedure"  pattern if(_, _, _)  pattern if(_, _, _)  pattern assign(variable, "500+3200") with call.stmt#=4600  such that Follows(_, if)  pattern assign(_, _"7500-1000"_) with stmt.stmt#=1800  pattern while(procedure, _)  such that Parent*(8, while)  pattern assign(_, _"2400/5400"_)  pattern assign(call, _"100-300"_)  such that Calls*(procedure, _)  pattern while(_, _) with "read"=procedure.procName with print.varName="else"  pattern while(_, _) with 5900=call.stmt# with if.stmt#=2000  pattern assign(variable, _)  such that Parent(_, if)  such that Affects*(_, assign) with "read"=call.procName with constant.value=while.stmt# with stmt.stmt#=9300  pattern if(else, _, _)  pattern if(_, _, _) with constant.value=constant.value  pattern assign(_, _"400+1100"_)  such that Follows(_, while) with 8500=assign.stmt# with read.stmt#=stmt.stmt#  such that Follows(assign, _)  such that Next(while, call)  such that Next*(call, stmt) with "print"=print.varName  pattern assign(read, "constant+constant") with 900=call.stmt#  pattern assign(variable, _"4300+6800"_) with "call"=call.procName with procedure.procName=read.varName  pattern if(variable, _, _)  pattern if(procedure, _, _)  such that Calls(procedure, _) with call.procName="procedure" with call.procName=read.varName  such that Follows(_, assign)  pattern assign(variable, _)  pattern if(variable, _, _) with procedure.procName=print.varName  pattern assign(then, "7900+3600")  such that Affects*(assign, 8)  such that Affects(28, assign) with "variable"=print.varName  pattern if(_, _, _)  pattern assign(_, _)  pattern assign(variable, _"200-7900"_)  such that Parent*(5, stmt)  such that Next(read, _) with assign.stmt#=3500  pattern assign(then, "600+5600")  pattern if(else, _, _)  such that Affects*(_, stmt)  such that Calls("assign", procedure)  pattern assign(else, _)  pattern assign(variable, _)  such that Calls*(procedure, "if") with if.stmt#=read.stmt#  pattern assign(_, _"2800*read"_) with "then"=procedure.procName  pattern if(variable, _, _)  pattern while(variable, _)  such that Modifies(assign, _)  pattern while(then, _) with variable.varName="read"  pattern while(while, _)  pattern assign(_, _)  such that Uses(assign, variable) with 4700=read.stmt#  pattern if(_, _, _)  pattern while(variable, _)  pattern assign(_, _"8200*4300"_)  pattern if(variable, _, _) with stmt.stmt#=constant.value  such that Uses(while, variable)  pattern assign(_, _"1000-6600"_)  pattern while(procedure, _)  pattern assign(while, _)  pattern if(variable, _, _)  pattern assign(variable, _)  pattern assign(constant, _"7300*9700"_) with constant.value=400  pattern assign(_, _) with call.stmt#=5900 with 1600=constant.value  such that Modifies(20, variable)  pattern assign(_, "3500+call") with "procedure"=call.procName  such that Follows*(_, print)  such that Calls*(procedure, procedure)  such that Modifies(19, variable)  pattern assign(_, _)  pattern if(assign, _, _) with assign.stmt#=3600  pattern assign(_, "4600/6300") with 6900=stmt.stmt# with procedure.procName="read"  pattern if(variable, _, _)  such that Calls*(procedure, procedure)  such that Uses(read, variable) with call.stmt#=if.stmt# with print.stmt#=9100 with print.varName="print"  such that Calls(procedure, procedure)  such that Next*(call, while)  such that Next*(print, call)  pattern if(if, _, _)  such that Next(15, while) with "procedure"=print.varName  pattern while(variable, _)  pattern assign(if, _"9400+else"_)  pattern assign(_, _"1200/9100"_) with read.stmt#=call.stmt#  pattern while(read, _)  pattern while(_, _)  such that Follows(if, if)  such that Calls(procedure, "read")  pattern if(procedure, _, _)  such that Follows(if, _)  pattern while(procedure, _)  pattern assign(while, _)  such that Next(print, _) with "print"=procedure.procName  pattern if(assign, _, _)  pattern while(_, _)  pattern if(if, _, _)  pattern while(procedure, _)  pattern while(_, _)  such that Follows(_, print)  pattern assign(variable, _"8000-4000"_) with print.stmt#=read.stmt#  pattern assign(call, "(1200*7200)+1000") with assign.stmt#=stmt.stmt#  pattern while(while, _)  pattern assign(_, _) with "assign"=call.procName  pattern assign(if, _)  such that Uses(if, "while") with 8600=constant.value  pattern if(if, _, _)  such that Calls*(procedure, _)  such that Follows(_, print)  pattern assign(variable, _"3800/4900"_)  pattern if(_, _, _) with call.procName="variable"  such that Next*(16, call) with procedure.procName=procedure.procName  pattern if(print, _, _) with assign.stmt#=constant.value  such that Calls(_, procedure)  pattern if(variable, _, _)  pattern while(_, _)  pattern if(variable, _, _) with constant.value=300  such that Parent*(assign, _)  such that Follows*(9, call) with 300=print.stmt#  such that Parent(_, stmt)  such that Affects(14, stmt)  pattern if(_, _, _)  pattern assign(_, _"7400/4600"_) with while.stmt#=print.stmt#  pattern if(_, _, _) with 3800=assign.stmt#  pattern if(call, _, _)  such that Next*(3, assign) with "then"=print.varName  pattern while(if, _)  pattern while(_, _) with "read"=print.varName  pattern while(variable, _) with procedure.procName=variable.varName  such that Calls(procedure, "constant") with 3200=constant.value  pattern assign(variable, _"4000+7300"_)  pattern if(while, _, _)  pattern assign(print, _) with 2300=while.stmt# with print.varName="read"  pattern while(variable, _) with call.procName="if"  such that Affects(assign, stmt) with "call"=call.procName  pattern if(_, _, _)  pattern while(if, _)  pattern while(print, _)  pattern if(_, _, _)  such that Affects*(_, assign) with "else"=procedure.procName  pattern if(then, _, _)  pattern assign(variable, _"2800+5300"_)  such that Next*(read, _)  pattern while(_, _) with print.varName="else" with "while"=procedure.procName  such that Modifies(read, variable)  pattern if(variable, _, _)  such that Modifies(assign, variable) with print.stmt#=2200 with variable.varName=procedure.procName with "then"=variable.varName  pattern assign(variable, "read*2500")  such that Calls(procedure, _) with call.stmt#=300  such that Calls*(procedure, procedure)  pattern while(variable, _)  pattern if(_, _, _) with assign.stmt#=6600  pattern while(_, _)  such that Affects*(stmt, assign)  such that Modifies(while, variable)  pattern while(variable, _) with call.stmt#=3000  pattern while(_, _)  such that Calls(procedure, _) with stmt.stmt#=call.stmt#  such that Parent(stmt, 15)  pattern assign(_, _) with "variable"=print.varName  pattern while(_, _)  such that Follows*(read, 21) with assign.stmt#=read.stmt#  pattern if(_, _, _)  pattern if(variable, _, _)  such that Affects*(assign, assign) with print.stmt#=stmt.stmt#  pattern if(variable, _, _)  pattern while(_, _)  such that Affects*(stmt, _) with read.varName=call.procName with while.stmt#=3600  pattern assign(_, _)  pattern assign(_, "1600-7200")  such that Follows*(call, 12)  pattern assign(_, "1700*1500")  pattern if(variable, _, _)  pattern if(procedure, _, _)  pattern if(_, _, _) with read.varName="if"  such that Uses(procedure, "variable")  pattern assign(variable, _)  such that Follows(while, _)  pattern while(variable, _)  pattern if(_, _, _)  pattern assign(print, "4500-1400")  pattern assign(_, _)  such that Next*(if, _)  such that Affects(assign, _)  pattern if(_, _, _) with assign.stmt#=4000  pattern if(variable, _, _) with call.procName="read" with read.varName=variable.varName with 5600=call.stmt# with print.stmt#=print.stmt#  pattern if(variable, _, _)  pattern assign(variable, _)  pattern if(call, _, _)  pattern while(_, _)  pattern assign(variable, "2400/700") with call.stmt#=if.stmt# with print.varName=print.varName with "then"=call.procName with assign.stmt#=4700  pattern while(variable, _) with procedure.procName="call" with read.varName=call.procName  pattern while(_, _) with while.stmt#=while.stmt#  pattern assign(_, _)  pattern assign(call, _"8900*3400"_) with procedure.procName=procedure.procName with stmt.stmt#=while.stmt#  such that Parent(10, read) with "else"=procedure.procName with assign.stmt#=800  pattern assign(constant, _"5000+200"_)  pattern assign(_, _"(1600*6500)*7600"_)  pattern if(_, _, _)  such that Follows(print, _)  such that Affects(stmt, _)  such that Modifies(read, variable)  pattern assign(_, "6900/1700") with "print"=procedure.procName  such that Affects*(18, assign)  pattern assign(_, _"7000/1400"_)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern if(variable, _, _) with procedure.procName="if" with read.varName=read.varName  pattern while(call, _)  pattern while(variable, _)  pattern while(variable, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  such that Calls(_, procedure) with 8700=if.stmt# with print.varName="read"  pattern if(_, _, _)  pattern assign(while, _"4100*900"_) with read.varName="read"  pattern while(variable, _)  pattern if(variable, _, _) with "constant"=procedure.procName  pattern while(if, _)  pattern while(variable, _)  pattern if(read, _, _)  pattern while(read, _) with stmt.stmt#=constant.value  pattern if(variable, _, _)  such that Calls*(procedure, "variable")  pattern if(constant, _, _)  such that Affects(_, stmt)  pattern if(variable, _, _)  such that Uses(procedure, variable)  such that Uses(stmt, variable)  such that Calls("while", procedure) with read.stmt#=if.stmt#  pattern if(variable, _, _)  such that Follows(if, print)  pattern if(assign, _, _) with "then"=print.varName with call.stmt#=1700  such that Affects(stmt, _)  such that Next*(print, _)  such that Next*(print, _)  pattern while(_, _)  pattern if(_, _, _)  pattern if(variable, _, _) with "read"=variable.varName with 5000=if.stmt#  pattern if(else, _, _) with constant.value=7300  pattern if(_, _, _)  pattern assign(variable, _)  such that Uses(15, variable)  pattern assign(_, "6000+8600")  such that Uses(procedure, variable)  such that Parent*(while, _)  pattern assign(_, _)  pattern while(variable, _) with 5400=print.stmt# with "variable"=read.varName  pattern if(print, _, _)  pattern while(variable, _)  such that Calls*(procedure, procedure) with variable.varName="if"  pattern if(_, _, _)  pattern while(variable, _) with "read"=variable.varName with 1700=read.stmt#  pattern assign(variable, _) with procedure.procName="procedure"  pattern if(if, _, _)  such that Follows(assign, call) with stmt.stmt#=while.stmt#  pattern assign(print, "9000+7200")  such that Follows(stmt, 20)  pattern if(variable, _, _) with if.stmt#=if.stmt# with call.stmt#=if.stmt#  such that Uses(call, variable)  such that Affects*(19, stmt)  pattern if(then, _, _) with 6900=constant.value  pattern while(variable, _)  pattern while(_, _)  pattern assign(procedure, _"5200-then"_)  pattern while(variable, _)  such that Next*(25, while) with call.stmt#=read.stmt# with "variable"=read.varName with call.procName="read"  pattern if(variable, _, _) with 2200=call.stmt# with 7300=assign.stmt#  such that Follows(if, call)  such that Calls(procedure, _) with print.varName="else"  such that Follows(print, _) with print.varName=procedure.procName  pattern while(print, _)  pattern if(_, _, _)  pattern if(variable, _, _)  such that Next*(while, 5)  such that Parent*(_, print)  such that Parent(assign, print)  pattern assign(read, "7900+8400")  such that Affects*(assign, _) with "while"=variable.varName  pattern if(variable, _, _) with 1900=stmt.stmt#  pattern if(_, _, _)  such that Calls(_, procedure)  pattern while(variable, _)  such that Calls*(procedure, "call") with constant.value=read.stmt#  pattern assign(variable, _)  pattern assign(assign, _) with print.varName=print.varName  pattern assign(_, _) with procedure.procName=read.varName  pattern while(_, _)  pattern while(if, _)  such that Parent*(assign, assign)  pattern assign(variable, _"3900+3700"_)  pattern assign(variable, _) with print.stmt#=assign.stmt#  such that Follows(assign, call)  pattern assign(read, "4300-1100")  such that Modifies(22, variable)  pattern while(_, _) 

5000
45 - Query 45
variable variable; assign assign; print print; constant constant; stmt stmt; read read; procedure procedure; while while; if if; call call; 
Select <variable, assign, print, constant, stmt, read, procedure, while, if, call> with call.stmt#=3400 with while.stmt#=200 with read.varName=variable.varName  such that Modifies(stmt, variable)  such that Uses(if, variable)  such that Uses(read, "print") with 7100=assign.stmt# with read.varName=print.varName  pattern while(variable, _)  pattern while(call, _)  such that Modifies(17, variable)  such that Affects(assign, _)  such that Calls(procedure, procedure)  such that Parent*(15, call)  pattern while(variable, _) with "then"=read.varName  pattern assign(constant, "2200+4800") with 6400=read.stmt#  pattern assign(_, "6700+4100")  pattern while(variable, _)  such that Calls(procedure, _) with print.stmt#=8900  pattern assign(else, _) with "if"=call.procName  such that Affects*(stmt, _)  pattern assign(print, _"2900*procedure"_) with procedure.procName="read"  such that Calls(procedure, "constant")  such that Uses(24, variable)  such that Calls*(procedure, "procedure") with call.stmt#=1200 with 4200=constant.value  such that Parent*(call, _)  pattern assign(_, _) with assign.stmt#=while.stmt#  pattern if(_, _, _)  such that Calls*(procedure, procedure)  pattern assign(variable, _) with variable.varName="print" with "assign"=call.procName with "variable"=print.varName  such that Follows(22, while)  such that Follows*(_, assign)  pattern assign(_, _"1900*1900"_) with variable.varName="procedure" with "read"=call.procName with procedure.procName=call.procName with print.varName=call.procName with variable.varName="procedure"  pattern while(variable, _)  such that Parent(if, _)  pattern if(_, _, _) with call.stmt#=7000 with procedure.procName=variable.varName  such that Affects*(assign, 25)  such that Next(7, call) with read.stmt#=3800 with print.varName=procedure.procName  pattern while(variable, _)  pattern while(variable, _)  pattern while(variable, _)  pattern if(procedure, _, _)  such that Parent*(20, read) with print.stmt#=7000 with call.procName="while" with print.varName="if" with assign.stmt#=while.stmt#  such that Modifies(stmt, _) with 2000=call.stmt# with procedure.procName="procedure"  pattern while(else, _)  pattern if(else, _, _) with call.procName="if" with call.procName=variable.varName with constant.value=6400  such that Calls*("while", procedure) with "then"=print.varName with call.procName=procedure.procName  pattern assign(assign, "9700+5500")  pattern while(_, _)  such that Follows(_, assign)  such that Parent*(read, _) with variable.varName="variable"  pattern assign(variable, _) with variable.varName=print.varName with if.stmt#=1500  pattern if(variable, _, _)  pattern if(variable, _, _)  such that Uses(while, variable)  pattern while(variable, _) with if.stmt#=7700 with read.varName="procedure"  pattern while(_, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  such that Affects(assign, 24) with call.procName="call"  pattern if(_, _, _) with call.procName=read.varName with constant.value=assign.stmt#  such that Affects(assign, 25)  such that Next*(27, print) with stmt.stmt#=8400 with 5300=while.stmt#  pattern assign(variable, _)  such that Affects(stmt, _)  such that Parent*(5, assign)  pattern while(_, _)  pattern while(variable, _)  such that Follows*(print, 11)  pattern if(variable, _, _)  pattern while(_, _)  such that Uses(print, variable)  pattern assign(variable, "9500*2300")  such that Follows(_, if) with while.stmt#=5000  pattern while(constant, _)  such that Parent*(_, if)  pattern if(variable, _, _)  such that Follows*(assign, 7)  pattern assign(variable, _)  pattern if(_, _, _)  pattern assign(_, "3400/7700")  such that Parent*(call, 26)  pattern while(variable, _)  pattern while(variable, _) with "then"=variable.varName with call.stmt#=4000 with read.varName=read.varName with read.varName=print.varName  such that Uses(24, variable)  pattern while(variable, _)  such that Next*(assign, 1)  pattern if(variable, _, _)  pattern while(call, _)  pattern assign(variable, _"3000/3300"_) with "print"=print.varName  such that Next*(_, call) with print.varName="else"  pattern assign(_, _)  pattern while(variable, _) with call.procName=read.varName with 1400=print.stmt#  such that Calls*(_, procedure) with print.varName="else"  pattern while(then, _)  pattern while(variable, _) with constant.value=read.stmt#  pattern if(procedure, _, _)  pattern while(_, _)  such that Calls*(procedure, procedure) with "then"=print.varName  pattern if(then, _, _)  pattern if(variable, _, _) with call.procName="variable"  pattern if(_, _, _)  such that Follows(if, 19)  pattern if(variable, _, _)  such that Affects(_, stmt) with 9000=if.stmt#  pattern while(else, _) with "call"=variable.varName with 5500=read.stmt#  pattern assign(variable, _)  pattern assign(variable, _)  such that Next*(if, assign) with call.stmt#=5400  such that Uses(procedure, _)  such that Parent*(25, call)  pattern if(_, _, _) with "constant"=procedure.procName  such that Next*(assign, assign) with print.varName="while"  pattern if(while, _, _) with stmt.stmt#=300 with stmt.stmt#=call.stmt# with procedure.procName="call" with 9000=while.stmt#  pattern assign(variable, _"constant/7800"_)  pattern while(variable, _) with "if"=variable.varName  pattern while(print, _)  pattern assign(else, _)  pattern if(procedure, _, _) with "constant"=read.varName with print.varName=procedure.procName  pattern if(_, _, _)  such that Follows*(read, 12)  such that Calls(_, procedure)  pattern if(else, _, _)  such that Calls(_, procedure) with assign.stmt#=call.stmt# with read.varName="assign"  pattern while(else, _) with read.varName=variable.varName  pattern assign(variable, _) with variable.varName=call.procName  such that Affects*(assign, _) with 2000=if.stmt#  pattern while(then, _)  pattern while(variable, _)  pattern while(procedure, _)  such that Affects(stmt, 9)  pattern assign(variable, "200+variable") with constant.value=constant.value  pattern assign(while, "8400*1400")  pattern if(else, _, _)  pattern if(else, _, _)  pattern if(print, _, _)  pattern if(variable, _, _)  pattern assign(constant, "2200+1100")  pattern assign(variable, _"6200+1500"_)  pattern assign(variable, _)  pattern assign(_, "1400/3300")  pattern assign(constant, _)  pattern if(procedure, _, _)  pattern if(constant, _, _)  pattern assign(_, "(8900+7100)/while") with 3300=constant.value  pattern if(variable, _, _)  such that Parent*(stmt, print) with call.procName="assign" with "then"=procedure.procName  such that Affects(assign, assign) with "variable"=read.varName with "else"=print.varName with procedure.procName="procedure"  pattern while(_, _)  pattern if(read, _, _)  pattern while(variable, _)  such that Calls*("then", procedure) with variable.varName=print.varName  pattern assign(print, _"8900*call"_)  pattern while(_, _) with constant.value=8800  such that Follows*(if, 26)  pattern while(variable, _)  such that Next(print, 12)  pattern if(_, _, _)  pattern if(variable, _, _) with procedure.procName="procedure"  pattern assign(_, _"6400*8200"_)  such that Affects*(assign, 26)  such that Parent(_, if)  such that Parent(print, _)  pattern assign(call, "1000/1500") with print.varName=procedure.procName  pattern assign(read, _) with procedure.procName=procedure.procName  pattern while(call, _) with 9000=while.stmt#  such that Follows(assign, 3)  such that Affects(assign, 10)  pattern assign(variable, _"4300-400"_)  such that Affects(stmt, assign)  such that Next*(_, call)  pattern while(variable, _)  pattern if(if, _, _) with while.stmt#=call.stmt#  pattern while(_, _) with if.stmt#=print.stmt# with print.varName=read.varName  pattern while(variable, _)  pattern while(procedure, _) with read.varName="else"  pattern while(_, _)  such that Parent*(read, while)  pattern assign(read, _)  pattern if(call, _, _)  pattern assign(variable, _"400-1800"_) with print.varName=procedure.procName  such that Affects*(stmt, _)  pattern assign(then, _) with assign.stmt#=6600  pattern assign(variable, "9800/8000")  pattern if(constant, _, _)  pattern while(variable, _)  pattern if(variable, _, _)  pattern while(assign, _)  pattern assign(_, _"while+3600"_)  pattern assign(constant, _)  such that Next(_, print)  pattern assign(variable, "8000+procedure")  pattern if(_, _, _)  pattern while(_, _) with print.varName="procedure"  pattern while(_, _)  such that Calls("read", procedure) with read.varName="assign"  pattern if(procedure, _, _)  pattern while(_, _) with 7100=print.stmt#  such that Modifies(call, "then") with variable.varName=call.procName  such that Next(stmt, 16) with read.stmt#=4000 with while.stmt#=while.stmt#  pattern if(print, _, _)  pattern assign(_, _"1500/2300"_)  pattern while(variable, _)  pattern if(variable, _, _)  such that Next(_, assign)  pattern assign(variable, _) with call.procName=variable.varName  pattern if(_, _, _)  such that Calls*("assign", procedure) with "print"=variable.varName with 7900=while.stmt#  pattern assign(variable, "(9600+9000)-400")  such that Next(print, call)  such that Follows(_, assign)  such that Follows(read, _) with print.stmt#=if.stmt# with while.stmt#=7700  such that Affects*(assign, 16)  pattern while(call, _)  pattern while(_, _) with constant.value=read.stmt# with stmt.stmt#=400 with "else"=procedure.procName  pattern assign(_, "9000*8100")  pattern while(_, _)  pattern if(_, _, _)  such that Modifies(assign, variable) with "if"=procedure.procName  pattern assign(_, _)  such that Uses(while, variable)  such that Calls*(procedure, _)  pattern while(_, _) with procedure.procName="then" with if.stmt#=call.stmt#  such that Affects(stmt, assign)  pattern assign(_, _)  such that Follows(read, read)  pattern assign(_, "(8100+7900)/8600")  such that Calls*(procedure, _)  pattern if(variable, _, _) with call.procName=variable.varName with call.stmt#=5900  pattern if(variable, _, _) with print.varName=procedure.procName  pattern assign(_, "9500/800") with stmt.stmt#=call.stmt# with assign.stmt#=400  pattern assign(variable, "4000*3000")  such that Parent(call, 15)  such that Affects(stmt, stmt) with stmt.stmt#=if.stmt# with call.procName=print.varName with read.stmt#=read.stmt# with "if"=variable.varName with stmt.stmt#=5200  such that Next(_, assign)  pattern assign(_, _"7200-9800"_)  such that Calls*(procedure, procedure) with stmt.stmt#=while.stmt# with assign.stmt#=read.stmt#  pattern while(assign, _) with constant.value=1000 with while.stmt#=6700 with variable.varName=print.varName with "then"=print.varName with 6800=while.stmt#  such that Next(stmt, while) with print.varName="read" with "read"=procedure.procName  such that Calls(procedure, "else") with assign.stmt#=6600  pattern assign(variable, _) with while.stmt#=3000  such that Next*(print, assign) with call.procName="assign"  pattern while(variable, _)  pattern assign(_, "while-3100")  pattern assign(variable, "2000/7400") with 5100=print.stmt#  such that Affects(1, stmt) with call.procName=variable.varName  such that Affects*(stmt, _) with 2500=while.stmt# with call.stmt#=8600  such that Next(25, if)  such that Parent(stmt, call)  pattern assign(_, _"6500+7200"_)  such that Uses(7, variable)  pattern assign(variable, _"2500/then"_) with if.stmt#=6300  such that Next(read, 8) with constant.value=read.stmt# with assign.stmt#=1000  such that Follows(17, read) with print.stmt#=read.stmt#  such that Next*(call, _)  pattern if(variable, _, _)  pattern assign(read, _) with 3200=call.stmt#  pattern assign(variable, "8000*variable")  such that Parent*(read, assign) with "call"=read.varName  such that Next*(if, assign)  such that Follows(_, call)  such that Parent*(_, stmt)  pattern assign(variable, "6800+4000")  pattern assign(_, _)  such that Parent*(29, read) with procedure.procName="procedure"  such that Uses(7, variable) with 4100=print.stmt#  pattern if(variable, _, _)  such that Follows*(_, assign) with while.stmt#=call.stmt#  such that Affects(assign, _) with call.procName="while" with 7900=print.stmt#  pattern assign(assign, "2800*8500")  pattern assign(_, _)  pattern assign(read, _) with print.varName=procedure.procName  such that Follows*(4, assign) with assign.stmt#=assign.stmt#  pattern assign(then, _"8000-2800"_)  such that Parent(_, call)  pattern if(variable, _, _)  pattern if(variable, _, _) with variable.varName="while"  such that Next(print, 26)  pattern while(_, _)  pattern if(procedure, _, _)  such that Affects*(14, stmt) with call.stmt#=2800  pattern if(else, _, _)  pattern while(if, _) with call.stmt#=stmt.stmt# with "while"=procedure.procName  pattern if(if, _, _)  pattern assign(_, _"3300-2400"_) with variable.varName="variable"  such that Parent(while, _) with stmt.stmt#=8400  such that Follows*(_, call) with "assign"=read.varName with print.stmt#=if.stmt#  pattern if(_, _, _)  pattern while(read, _) with 5200=assign.stmt#  such that Calls(_, procedure) with 3000=read.stmt# with call.stmt#=call.stmt# with variable.varName="print"  pattern assign(constant, "4100+300")  pattern assign(_, "300-then")  such that Uses(8, variable)  pattern while(_, _)  such that Next*(if, 12) with print.varName=read.varName  such that Follows*(_, assign) with "constant"=print.varName  such that Follows*(while, 3)  pattern while(if, _)  pattern if(assign, _, _)  pattern while(then, _)  pattern while(_, _)  pattern assign(while, "7700+variable")  such that Next*(while, 10) with "while"=print.varName with "call"=variable.varName  pattern while(_, _)  such that Follows(_, if) with constant.value=4200 with read.varName="print" with print.varName="if"  pattern while(_, _)  such that Follows(stmt, _)  such that Follows(_, read)  pattern assign(print, _)  pattern while(_, _) with variable.varName=variable.varName  pattern if(_, _, _)  pattern if(variable, _, _)  pattern if(read, _, _)  pattern while(variable, _)  pattern assign(variable, _) with 9800=while.stmt#  such that Follows(if, 10) with print.stmt#=stmt.stmt#  pattern while(else, _)  pattern assign(_, _)  such that Calls(_, procedure) with print.varName="print"  pattern if(while, _, _)  such that Affects(assign, 4) with while.stmt#=8600  such that Affects*(12, assign) with assign.stmt#=8200  such that Follows*(_, assign)  pattern assign(_, "6000-5800") with assign.stmt#=4200  pattern if(_, _, _)  pattern assign(_, "2500*6600")  such that Affects*(assign, assign) 

5000
46 - Query 46
print print; variable variable; assign assign; call call; constant constant; stmt stmt; read read; if if; while while; procedure procedure; 
Select <print, variable, assign, call, constant, stmt, read, if, while, procedure> with print.stmt#=while.stmt#  pattern if(variable, _, _)  such that Uses(while, variable) with read.varName=variable.varName  pattern assign(_, _)  such that Affects(stmt, stmt)  such that Calls*(_, procedure)  pattern if(read, _, _) with print.stmt#=read.stmt#  pattern if(read, _, _)  such that Affects*(stmt, assign) with call.procName="print" with 8500=constant.value with procedure.procName="then"  pattern if(_, _, _)  such that Follows*(assign, while)  pattern assign(variable, _"6100-1500"_)  such that Next(_, read)  pattern while(_, _) with call.procName=print.varName  pattern if(variable, _, _)  pattern if(_, _, _)  pattern assign(_, "2300-2700")  pattern assign(_, "9600-9600")  pattern assign(variable, "7500/3300")  pattern assign(variable, "100-1400")  such that Parent*(read, 9)  pattern while(variable, _) with "assign"=print.varName  pattern while(_, _)  such that Modifies(stmt, variable) with read.stmt#=call.stmt#  pattern if(variable, _, _) with if.stmt#=1700  such that Modifies(26, variable)  pattern if(_, _, _)  pattern while(variable, _)  such that Parent*(_, print)  pattern if(call, _, _) with print.varName=variable.varName  pattern assign(variable, _"(6500-3000)*8800"_)  pattern if(call, _, _)  pattern if(_, _, _)  pattern while(_, _)  such that Follows*(if, 18)  such that Follows*(read, 9)  pattern if(if, _, _) with print.varName=print.varName  pattern if(_, _, _)  pattern assign(variable, _)  pattern if(_, _, _)  pattern if(assign, _, _)  pattern if(constant, _, _)  pattern while(_, _)  such that Next*(read, 27) with "while"=procedure.procName  pattern while(variable, _)  such that Next(stmt, 1)  pattern assign(variable, _)  pattern while(variable, _)  pattern if(variable, _, _) with call.stmt#=read.stmt#  pattern if(variable, _, _) with read.varName="call"  such that Follows(stmt, _)  pattern if(variable, _, _)  such that Parent*(8, stmt)  such that Follows(print, _) with "if"=procedure.procName  pattern while(if, _)  pattern if(else, _, _)  pattern assign(variable, _)  pattern if(_, _, _)  such that Next*(28, while)  pattern while(else, _)  such that Affects*(stmt, stmt)  such that Follows(_, assign) with 4100=call.stmt#  such that Calls(procedure, "constant") with variable.varName="while"  pattern while(_, _)  pattern if(call, _, _) with stmt.stmt#=2600 with call.stmt#=constant.value  pattern while(print, _)  pattern assign(variable, _)  pattern while(then, _)  pattern if(variable, _, _) with "if"=read.varName  pattern assign(variable, _)  pattern while(print, _)  such that Modifies(read, "call") with "print"=variable.varName  pattern assign(constant, _"(2400*9500)/2200"_)  such that Follows*(print, _) with stmt.stmt#=1200  pattern assign(constant, "9500/4500")  pattern assign(_, _) with read.varName="print" with print.varName=print.varName with assign.stmt#=print.stmt# with stmt.stmt#=7400 with "while"=call.procName  pattern while(_, _)  pattern while(_, _)  pattern if(read, _, _)  such that Calls*(procedure, _)  pattern if(_, _, _) with if.stmt#=print.stmt#  such that Next(_, assign) with constant.value=while.stmt#  pattern while(variable, _)  such that Modifies(print, variable)  such that Calls("then", procedure) with 8600=call.stmt# with while.stmt#=800  such that Affects*(assign, 18)  such that Follows(_, stmt)  pattern while(_, _) with call.procName=procedure.procName  pattern if(_, _, _)  pattern while(variable, _) with "then"=print.varName  pattern while(_, _)  such that Calls(procedure, procedure)  pattern while(variable, _) with "else"=read.varName  pattern assign(_, "6900/4700")  pattern assign(procedure, _) with "else"=print.varName  pattern assign(_, "4600+print") with read.stmt#=200  pattern if(variable, _, _)  pattern while(variable, _)  such that Affects*(_, stmt)  such that Calls*(_, procedure)  pattern while(_, _)  pattern while(_, _)  pattern while(_, _)  such that Affects(_, stmt)  such that Follows*(26, read)  such that Parent(_, assign) with print.stmt#=call.stmt#  pattern while(_, _)  pattern if(variable, _, _) with 7300=read.stmt# with assign.stmt#=6400 with 6100=constant.value  pattern while(variable, _) with "while"=read.varName  such that Follows*(_, print) with "procedure"=variable.varName with call.procName=procedure.procName with read.varName=print.varName  pattern if(_, _, _)  such that Affects*(stmt, 13)  pattern if(print, _, _) with "then"=print.varName with variable.varName=call.procName  pattern while(variable, _)  such that Follows(24, read)  such that Modifies(26, variable)  such that Next(while, _) with call.stmt#=while.stmt#  pattern assign(_, "4200+3800")  pattern while(call, _)  pattern while(read, _)  pattern assign(variable, _"read/2600"_)  such that Follows*(call, 16) with assign.stmt#=if.stmt#  such that Follows*(while, call)  such that Next(11, if)  such that Uses(8, variable)  pattern if(print, _, _)  pattern while(_, _)  pattern while(else, _)  pattern if(variable, _, _)  pattern assign(_, "8900/5800")  pattern assign(then, _)  such that Parent*(_, stmt) with print.stmt#=call.stmt#  pattern while(constant, _) with variable.varName="procedure" with print.varName=variable.varName with "print"=print.varName  such that Parent*(assign, read)  pattern assign(variable, _)  pattern while(variable, _) with constant.value=constant.value with call.procName=print.varName  such that Next*(_, read) with procedure.procName=call.procName  such that Calls*("then", procedure)  pattern assign(then, _)  such that Follows*(assign, assign)  pattern if(variable, _, _)  pattern assign(call, _"9300-4100"_)  such that Calls(procedure, "read")  pattern if(call, _, _)  pattern if(_, _, _)  such that Next(_, read) with variable.varName=call.procName with constant.value=4100 with procedure.procName=variable.varName  such that Affects*(8, assign)  pattern while(variable, _)  such that Follows(while, read)  such that Follows*(while, _)  pattern while(variable, _) with if.stmt#=6100 with procedure.procName=variable.varName  pattern while(_, _)  pattern while(variable, _) with read.stmt#=print.stmt#  pattern while(then, _)  such that Modifies(26, variable) with 7700=while.stmt#  pattern assign(variable, _)  such that Parent(read, read)  pattern if(while, _, _) with 400=if.stmt#  pattern while(_, _)  pattern while(_, _)  such that Modifies(procedure, _)  pattern while(if, _)  such that Follows(stmt, 20)  such that Parent(while, call)  pattern if(variable, _, _)  such that Follows*(assign, while)  pattern while(_, _)  such that Calls(_, procedure) with "assign"=print.varName with "variable"=procedure.procName with print.varName=read.varName with print.varName="while"  pattern assign(procedure, _)  pattern while(else, _)  such that Parent*(while, 20)  pattern assign(while, _"1600/while"_) with 8400=print.stmt#  such that Parent*(print, _)  pattern if(else, _, _) with print.varName=read.varName  such that Uses(20, variable)  pattern if(_, _, _)  such that Next*(_, stmt)  such that Uses(27, variable)  such that Next*(stmt, if) with "then"=variable.varName  such that Next*(_, if) with variable.varName=read.varName  pattern while(constant, _) with if.stmt#=6200 with stmt.stmt#=5300  pattern if(_, _, _)  pattern if(variable, _, _) with "constant"=read.varName  pattern if(_, _, _)  such that Parent(28, if)  pattern while(_, _)  such that Affects(stmt, stmt)  such that Follows(while, _) with print.stmt#=4300  pattern while(_, _)  pattern while(if, _) with stmt.stmt#=8600  pattern if(assign, _, _) with read.varName=read.varName  pattern while(_, _)  pattern while(variable, _)  pattern while(if, _) with read.varName="variable"  pattern if(procedure, _, _)  such that Parent(read, stmt)  such that Modifies(if, variable) with variable.varName="procedure" with assign.stmt#=6400  pattern assign(variable, _)  such that Follows*(_, assign) with while.stmt#=assign.stmt# with 6700=assign.stmt# with call.procName="if"  such that Uses(print, variable)  pattern while(_, _)  such that Affects(stmt, 15)  pattern while(while, _) with 7100=call.stmt#  pattern while(print, _)  such that Follows*(assign, 8) with call.procName="call"  pattern if(variable, _, _)  pattern assign(if, _"600/then"_)  such that Calls*("procedure", procedure)  pattern while(variable, _)  such that Follows(assign, print)  pattern assign(_, _) with 1500=read.stmt# with print.varName=read.varName  such that Affects*(6, assign)  pattern assign(_, _"5100/9600"_)  such that Uses(read, "variable") with print.varName="print"  pattern assign(while, "6900*4500")  pattern if(_, _, _)  such that Parent*(read, stmt)  such that Next(while, call) with stmt.stmt#=1600  pattern assign(variable, _"2200*9300"_)  pattern if(print, _, _)  such that Follows(24, while)  pattern assign(_, _"5300-2100"_)  pattern assign(_, _) with 8000=if.stmt#  such that Parent*(1, while)  such that Parent(_, while)  pattern if(_, _, _) with while.stmt#=7000  such that Parent(print, 29)  such that Parent*(11, print) with "then"=read.varName  pattern if(while, _, _)  pattern assign(call, _)  pattern while(print, _)  pattern while(variable, _)  such that Affects(stmt, _)  pattern assign(variable, "call*4700")  such that Uses(stmt, variable) with 4800=call.stmt#  pattern if(_, _, _)  pattern while(_, _)  such that Follows*(call, 25) with stmt.stmt#=6900  pattern if(while, _, _)  pattern if(then, _, _) with variable.varName=read.varName  pattern while(variable, _)  pattern if(_, _, _)  such that Follows(read, _)  pattern if(_, _, _)  such that Follows(_, print)  pattern while(constant, _) with call.procName=procedure.procName with 9700=while.stmt#  pattern if(call, _, _)  pattern while(_, _)  such that Uses(if, variable) with "assign"=read.varName  pattern assign(variable, "(7500/1900)*7500")  pattern if(variable, _, _)  pattern if(variable, _, _) with 5500=assign.stmt#  pattern assign(while, _"print-700"_)  such that Next(call, while) with 6200=stmt.stmt#  pattern while(_, _) with read.varName="read"  pattern while(assign, _)  pattern assign(variable, _"6400+9900"_)  pattern if(variable, _, _)  pattern while(variable, _)  pattern while(print, _)  such that Follows(_, print)  such that Calls(procedure, procedure)  pattern if(variable, _, _) with "else"=read.varName  pattern while(variable, _) with 400=call.stmt#  pattern while(_, _)  pattern if(variable, _, _)  pattern assign(assign, "(3000+2300)/3100")  pattern assign(_, _"9500*8200"_)  pattern if(while, _, _)  pattern while(variable, _)  pattern assign(_, "6000+1500")  pattern assign(else, _) with call.procName=print.varName  such that Follows*(read, 8)  such that Uses(26, variable) with call.procName="assign"  such that Follows(call, call)  pattern assign(read, _)  such that Parent*(while, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern while(_, _)  pattern if(variable, _, _)  such that Parent*(1, stmt) with procedure.procName="then"  such that Modifies(read, variable)  pattern if(constant, _, _)  pattern assign(_, _)  such that Affects(_, assign) with 3100=assign.stmt# with print.stmt#=constant.value  pattern while(_, _)  pattern if(variable, _, _)  such that Parent(24, stmt) with 5600=assign.stmt#  pattern if(variable, _, _)  such that Next(assign, assign)  pattern assign(variable, _"9500/1000"_)  pattern while(_, _) with read.stmt#=6600 with "constant"=print.varName  such that Follows*(_, stmt) with if.stmt#=6000  such that Follows(while, call) with read.stmt#=assign.stmt#  such that Calls*("variable", procedure)  pattern if(else, _, _) with "call"=call.procName  such that Next*(_, call) with variable.varName=print.varName with variable.varName="read"  such that Next*(26, while) with call.stmt#=constant.value  pattern assign(_, "8000*3800")  pattern if(else, _, _) with "procedure"=print.varName with 6600=if.stmt#  such that Uses(assign, variable) with "read"=call.procName with 1000=call.stmt#  pattern if(_, _, _) with call.procName=read.varName with print.varName="call"  such that Modifies(while, "call")  pattern while(variable, _)  such that Next(_, if)  such that Calls*(procedure, _)  such that Uses(assign, "call")  such that Parent(call, call) with "else"=procedure.procName  such that Modifies(read, variable)  pattern while(variable, _)  pattern if(_, _, _)  pattern if(variable, _, _)  such that Affects(7, stmt) with 6000=assign.stmt# with "constant"=variable.varName with 8400=if.stmt#  pattern assign(_, _)  pattern while(variable, _) with call.stmt#=3000 with "constant"=procedure.procName  pattern while(variable, _)  such that Next(call, 7)  such that Next(_, if)  such that Next(assign, 6)  pattern while(_, _) with print.varName=read.varName with variable.varName=print.varName  pattern if(_, _, _)  pattern assign(_, _)  pattern while(if, _)  pattern if(variable, _, _)  pattern while(then, _) with stmt.stmt#=print.stmt#  pattern assign(_, "7100/8700")  pattern if(variable, _, _)  such that Next(9, if)  pattern while(_, _)  pattern assign(read, _"(9100+3700)-if"_)  such that Uses(procedure, "read")  pattern if(_, _, _)  such that Calls*(procedure, procedure) with if.stmt#=6600  such that Next(_, read)  such that Calls*(procedure, procedure) with "then"=read.varName with 7000=read.stmt#  pattern while(_, _)  pattern while(variable, _)  such that Follows(if, call) with "assign"=variable.varName  pattern assign(variable, "9900-7100") with "read"=call.procName  pattern if(variable, _, _)  pattern assign(variable, _"9000-8000"_)  such that Affects(stmt, stmt)  pattern assign(_, _"1600*9400"_)  such that Calls("else", procedure) with assign.stmt#=700  pattern if(print, _, _)  pattern assign(call, _)  such that Next(read, _)  pattern if(variable, _, _) with procedure.procName=procedure.procName  such that Calls*(procedure, _)  such that Parent(23, stmt)  pattern while(constant, _)  pattern while(variable, _)  such that Affects(assign, _) with stmt.stmt#=assign.stmt#  pattern if(call, _, _)  such that Uses(15, variable)  pattern if(else, _, _)  pattern assign(then, _) with while.stmt#=if.stmt# with procedure.procName="constant" 

5000
47 - Query 47
print print; assign assign; call call; variable variable; constant constant; stmt stmt; read read; if if; while while; procedure procedure; 
Select <print, assign, call, variable, constant, stmt, read, if, while, procedure>  such that Follows*(print, _)  pattern if(while, _, _) with 3700=read.stmt#  such that Uses(procedure, "print")  such that Next*(_, while) with "constant"=print.varName  such that Calls*(procedure, _)  such that Affects*(15, assign) with call.procName=print.varName  pattern assign(procedure, _)  such that Affects*(14, stmt)  pattern if(_, _, _)  pattern while(_, _)  pattern assign(variable, _)  pattern assign(procedure, "5500/4900")  such that Parent(7, call) with 1700=if.stmt#  such that Uses(stmt, _)  such that Next(7, stmt) with print.varName="print"  such that Uses(while, variable) with call.stmt#=while.stmt#  pattern assign(variable, "7500-8300")  pattern if(variable, _, _)  such that Next(if, if)  such that Next(if, _)  such that Next*(16, if) with print.varName=print.varName  such that Next*(_, assign) with read.varName=variable.varName  such that Follows*(15, read)  pattern if(_, _, _)  pattern assign(_, _"9100*variable"_)  pattern assign(variable, _)  pattern if(variable, _, _)  such that Affects(stmt, _)  such that Calls*(procedure, procedure)  pattern while(_, _)  pattern if(constant, _, _)  pattern assign(_, "4700+5800")  pattern assign(variable, _"9500/4500"_)  pattern assign(procedure, _)  pattern assign(_, "3200-3400")  pattern while(_, _) with print.stmt#=print.stmt#  pattern while(variable, _)  pattern while(_, _)  pattern while(_, _)  pattern if(read, _, _)  pattern if(variable, _, _) with 6500=constant.value  pattern assign(_, _)  such that Affects(stmt, _)  pattern if(if, _, _)  pattern if(_, _, _)  pattern if(assign, _, _)  pattern if(_, _, _)  such that Follows*(_, while)  pattern assign(variable, _)  such that Follows*(_, call)  such that Parent*(29, call) with read.varName="while" with stmt.stmt#=read.stmt# with 2800=if.stmt# with call.procName=variable.varName  pattern if(_, _, _)  pattern while(then, _)  pattern assign(if, _)  such that Modifies(stmt, _) with 1700=read.stmt#  such that Next(if, if)  pattern while(variable, _)  pattern if(assign, _, _)  pattern while(_, _) with stmt.stmt#=900 with while.stmt#=7900  pattern if(_, _, _) with print.varName="if"  pattern while(variable, _)  pattern assign(call, _"8600-1800"_)  pattern while(while, _)  pattern assign(_, _)  pattern if(variable, _, _) with while.stmt#=print.stmt#  pattern while(variable, _)  pattern if(_, _, _)  pattern while(_, _)  such that Follows*(call, call)  such that Affects*(assign, _)  such that Follows*(read, _) with assign.stmt#=read.stmt#  pattern if(variable, _, _)  pattern assign(call, _"2300/7800"_)  pattern if(call, _, _)  such that Affects(assign, 27)  pattern while(variable, _)  such that Parent(_, while)  such that Parent(read, 19)  pattern while(_, _)  pattern assign(assign, _)  pattern assign(_, _"100-assign"_)  such that Affects(stmt, stmt) with 700=print.stmt#  pattern while(variable, _) with 7200=read.stmt#  such that Modifies(23, variable)  pattern while(_, _)  pattern if(variable, _, _)  pattern while(_, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern assign(call, _)  pattern if(_, _, _)  such that Next*(if, _)  such that Next*(call, _) with "call"=call.procName  pattern if(_, _, _) with print.stmt#=call.stmt#  such that Affects*(stmt, _)  pattern assign(_, "8700*8300")  such that Follows*(print, _)  pattern assign(variable, _)  such that Calls*(procedure, "else")  such that Uses(print, "assign")  pattern while(variable, _)  pattern while(variable, _)  pattern if(variable, _, _)  pattern if(while, _, _)  pattern assign(variable, _"1900-3200"_)  such that Next*(read, 1)  pattern assign(_, _"4700+4300"_)  such that Affects(_, stmt)  such that Next(1, while)  pattern while(assign, _) with print.stmt#=6600  such that Follows(_, stmt)  pattern while(procedure, _)  such that Uses(read, _)  such that Follows*(_, while) with print.varName=call.procName with read.stmt#=stmt.stmt#  pattern if(constant, _, _)  pattern if(_, _, _)  such that Next*(14, stmt)  such that Affects*(8, stmt) with 5400=while.stmt# with read.stmt#=read.stmt#  pattern if(variable, _, _)  such that Next(while, 4)  pattern assign(variable, _"600-9300"_) with variable.varName=variable.varName  such that Follows*(_, assign) with 3300=print.stmt#  such that Modifies(if, _)  such that Modifies(while, _)  pattern while(_, _)  such that Next*(_, stmt) with stmt.stmt#=read.stmt#  pattern if(variable, _, _)  such that Uses(stmt, "procedure")  pattern if(variable, _, _)  pattern while(_, _)  pattern assign(while, "2500*1400") with while.stmt#=read.stmt#  pattern if(variable, _, _)  pattern if(variable, _, _)  such that Affects*(_, assign) with stmt.stmt#=stmt.stmt#  pattern while(variable, _)  such that Calls*(procedure, procedure) with read.stmt#=3300  such that Next*(if, while) with procedure.procName="call"  such that Affects(stmt, 21) with print.stmt#=100 with print.stmt#=5600  pattern while(_, _) with stmt.stmt#=constant.value with procedure.procName=variable.varName  such that Calls("while", procedure) with read.varName=print.varName with variable.varName="constant"  pattern if(if, _, _) with read.varName="while"  pattern assign(variable, _"9600/6700"_) with 9400=if.stmt#  pattern while(variable, _) with stmt.stmt#=print.stmt#  pattern if(else, _, _)  such that Affects*(stmt, 24)  pattern while(variable, _)  pattern if(variable, _, _)  pattern if(read, _, _)  pattern while(variable, _)  pattern while(_, _)  pattern if(variable, _, _)  pattern while(_, _) with "call"=read.varName with read.varName="call"  pattern while(_, _) with stmt.stmt#=while.stmt#  pattern assign(if, "((4700*1200)/3800)/2700")  pattern assign(_, "1200/4200") with "call"=print.varName  such that Affects*(28, stmt)  such that Affects(assign, 28)  such that Follows(assign, 21) with variable.varName="then" with 400=stmt.stmt#  pattern assign(variable, _)  pattern while(variable, _)  such that Affects(10, assign)  such that Follows(_, read)  pattern while(variable, _)  such that Affects(assign, assign)  such that Follows*(_, stmt) with while.stmt#=while.stmt#  pattern if(read, _, _) with constant.value=1500  pattern assign(variable, "9500-8400")  pattern while(read, _) with call.procName="variable"  such that Affects*(27, assign) with constant.value=5800  such that Next(print, _)  such that Modifies(while, "while")  pattern assign(variable, "9400/8600")  such that Affects*(stmt, assign)  pattern assign(_, _)  pattern while(variable, _)  pattern if(variable, _, _) with constant.value=read.stmt# with if.stmt#=print.stmt#  pattern if(variable, _, _)  pattern while(variable, _)  such that Parent(_, assign) with variable.varName=variable.varName  pattern if(else, _, _)  such that Follows*(read, 23) with stmt.stmt#=9500  pattern assign(_, _)  pattern while(variable, _)  pattern assign(variable, "5500*call") with 4500=while.stmt# with "read"=procedure.procName with stmt.stmt#=read.stmt#  such that Affects*(assign, _) with read.stmt#=9200  such that Calls(procedure, "procedure") with "read"=read.varName  such that Uses(26, variable)  pattern while(variable, _) with if.stmt#=while.stmt#  pattern while(call, _) with read.varName="constant"  such that Affects*(assign, 13)  such that Parent(print, 27)  such that Uses(19, variable) with print.stmt#=read.stmt#  pattern if(assign, _, _)  pattern while(variable, _) with call.procName=print.varName  pattern while(variable, _)  such that Follows*(_, print)  pattern while(variable, _)  such that Uses(procedure, _)  pattern while(constant, _) with 1300=call.stmt#  pattern if(_, _, _)  pattern assign(read, "3700+6400") with assign.stmt#=constant.value with 9600=assign.stmt# with 8600=call.stmt#  pattern if(assign, _, _)  such that Affects*(_, assign) with 9100=constant.value  pattern while(constant, _)  pattern if(variable, _, _) with 7400=if.stmt#  such that Affects(21, stmt) with 1800=constant.value  pattern assign(variable, _"3100*100"_)  such that Parent(while, _)  pattern assign(read, "8800*6400")  such that Affects*(4, assign)  such that Follows(if, 4) with call.procName="while" with 7400=while.stmt#  such that Parent*(call, _)  pattern if(_, _, _) with "if"=print.varName with assign.stmt#=4400  pattern while(_, _)  pattern assign(_, _"1100-2800"_)  such that Uses(6, variable)  pattern if(_, _, _)  pattern while(assign, _)  pattern assign(print, _"800*8500"_)  such that Modifies(if, _)  such that Uses(assign, _) with 300=assign.stmt# with constant.value=stmt.stmt# with read.varName="call"  such that Next*(16, while)  pattern if(variable, _, _)  pattern while(then, _)  pattern while(_, _) with procedure.procName=call.procName with stmt.stmt#=read.stmt# with 5600=call.stmt# with call.procName="procedure"  pattern assign(variable, "2700-1300")  pattern assign(read, _"5200+6500"_) with variable.varName="call"  pattern assign(_, "9000*7500")  pattern if(_, _, _)  such that Parent(27, print)  pattern if(variable, _, _)  such that Next(read, _)  pattern assign(_, "8400/9300")  pattern assign(variable, "(2800+7600)/2900")  pattern while(then, _) with print.varName=variable.varName  pattern if(assign, _, _)  such that Affects*(_, stmt)  pattern while(variable, _)  such that Modifies(16, variable) with call.stmt#=1400 with "assign"=procedure.procName with 8400=stmt.stmt# with 7800=stmt.stmt#  pattern if(variable, _, _)  such that Follows(read, _)  pattern while(_, _)  pattern while(variable, _)  such that Follows(assign, _)  such that Affects(6, stmt)  pattern while(variable, _)  such that Next(stmt, _)  such that Follows*(while, print) with read.varName=read.varName  pattern if(constant, _, _)  pattern while(assign, _) with 900=read.stmt# with "while"=read.varName  pattern assign(assign, _)  such that Follows(assign, 27)  pattern while(_, _) with print.varName="while"  pattern while(variable, _)  pattern if(read, _, _) with 6100=read.stmt#  such that Affects*(stmt, assign) with procedure.procName="else" with "print"=call.procName with procedure.procName="read" with "while"=call.procName  such that Calls(procedure, _)  pattern assign(variable, "(2400/5100)/2000")  such that Affects*(15, assign) with while.stmt#=9800  such that Parent*(while, print) with print.stmt#=while.stmt#  such that Calls(_, procedure) with "variable"=procedure.procName  pattern assign(_, _)  such that Next*(call, _)  such that Uses(while, "while") with stmt.stmt#=6000  pattern if(variable, _, _)  pattern if(variable, _, _) with variable.varName=print.varName  pattern while(if, _) with if.stmt#=5300 with call.stmt#=call.stmt# with 8100=read.stmt# with "while"=print.varName with call.stmt#=stmt.stmt#  pattern while(variable, _) with procedure.procName=read.varName  such that Next(read, 27) with print.stmt#=2500  pattern if(_, _, _) with call.procName=procedure.procName with print.stmt#=5200 with if.stmt#=stmt.stmt# with "assign"=variable.varName with "else"=print.varName  pattern if(call, _, _) with "constant"=print.varName  such that Calls*(_, procedure)  such that Calls(procedure, procedure)  pattern assign(_, _"1700*else"_)  such that Affects(14, stmt)  such that Next(read, 23)  pattern assign(variable, "9700-3200")  pattern if(_, _, _) with "while"=print.varName  pattern assign(while, "7500*call") with call.stmt#=constant.value with read.varName=read.varName  such that Next*(read, 20)  such that Follows*(1, stmt)  pattern assign(_, "9800/2800")  pattern assign(variable, _"1200*8300"_)  such that Calls(procedure, _) with call.procName="read"  such that Calls(_, procedure)  pattern while(_, _) with print.varName=procedure.procName with call.procName="constant"  pattern assign(variable, _"4300-2000"_) with call.procName="while"  such that Follows*(12, read)  pattern while(variable, _)  pattern assign(procedure, _) with "call"=procedure.procName with variable.varName=read.varName with constant.value=stmt.stmt#  pattern assign(_, "6200-4500") with while.stmt#=constant.value  pattern if(variable, _, _)  pattern assign(print, _"5000/4000"_)  such that Calls(procedure, _) with 2200=if.stmt#  pattern assign(variable, _"4700+2500"_) with print.stmt#=7500  pattern assign(read, _"read/7000"_) with call.stmt#=7100  such that Next*(call, 25)  pattern if(variable, _, _)  pattern if(variable, _, _) with assign.stmt#=stmt.stmt# with read.varName="else"  pattern assign(_, _"600+5500"_)  pattern assign(procedure, _"9900/3200"_)  pattern while(assign, _)  such that Affects*(assign, 27)  pattern while(variable, _)  pattern if(variable, _, _)  pattern assign(_, _"assign*6700"_)  such that Affects*(assign, stmt)  such that Follows(3, print) with constant.value=stmt.stmt# with constant.value=constant.value with 5900=stmt.stmt# with "constant"=call.procName  pattern assign(read, _) with call.stmt#=2700  pattern while(_, _)  pattern assign(_, _)  pattern assign(_, _)  such that Parent*(_, while) with read.varName=read.varName  pattern while(_, _) with "constant"=read.varName with print.varName="constant"  pattern while(variable, _) with print.stmt#=4100  pattern assign(variable, _) with call.procName="call"  pattern if(variable, _, _)  pattern if(_, _, _)  pattern assign(if, "3900*variable")  pattern if(_, _, _) with call.stmt#=1900  such that Parent(assign, _)  pattern if(variable, _, _)  such that Follows(8, while) with "then"=read.varName  pattern while(else, _)  such that Modifies(5, variable) with 5200=read.stmt#  pattern while(variable, _) with call.stmt#=5200  such that Next*(while, 19)  pattern while(variable, _)  such that Affects(assign, assign) with print.stmt#=2200  pattern if(_, _, _) with constant.value=read.stmt#  pattern if(_, _, _) with procedure.procName=call.procName  pattern assign(procedure, _"2900+100"_)  pattern assign(variable, _)  pattern assign(variable, "3400-8100")  such that Next*(call, 9)  such that Follows*(print, if)  pattern assign(call, "else-2300")  such that Modifies(read, _)  such that Parent(while, _) with print.varName=read.varName  pattern if(variable, _, _) with print.varName=call.procName  pattern if(variable, _, _) with print.stmt#=9800  such that Uses(read, "read")  such that Uses(if, variable)  pattern while(print, _)  pattern if(variable, _, _) 

5000
48 - Query 48
variable variable; assign assign; constant constant; print print; call call; stmt stmt; read read; if if; while while; procedure procedure; 
Select <variable, assign, constant, print, call, stmt, read, if, while, procedure>  pattern if(else, _, _) with 700=read.stmt# with read.stmt#=4000 with 1800=constant.value  pattern assign(variable, _"3500+4000"_)  pattern while(else, _)  pattern if(_, _, _) with read.varName="if"  such that Next(_, assign) with read.stmt#=4700  such that Modifies(if, variable) with variable.varName="while"  such that Affects*(11, assign)  pattern assign(while, _"1700/7600"_)  pattern assign(while, _)  pattern while(variable, _)  pattern if(while, _, _)  pattern if(call, _, _) with read.stmt#=print.stmt#  pattern assign(call, _"(4200+7900)+1400"_)  pattern assign(read, _) with procedure.procName="call" with print.varName=procedure.procName  pattern if(procedure, _, _)  such that Parent(read, read) with 9200=stmt.stmt#  such that Uses(if, _)  pattern while(_, _) with read.varName=procedure.procName with "assign"=read.varName with procedure.procName=procedure.procName  pattern while(while, _)  pattern if(assign, _, _)  pattern assign(_, "2100+600") with "constant"=variable.varName  pattern assign(constant, _"(if-while)-6800"_) with call.procName="call"  pattern assign(variable, _"3200/8800"_)  such that Calls*(procedure, "assign") with read.stmt#=4200  pattern assign(_, "procedure/6400") with stmt.stmt#=2200 with stmt.stmt#=7200  pattern if(while, _, _)  pattern if(variable, _, _)  pattern assign(variable, "print*2100")  pattern while(then, _)  such that Follows(assign, stmt)  such that Uses(call, _)  pattern while(variable, _) with "while"=call.procName  pattern while(variable, _) with constant.value=7400 with if.stmt#=if.stmt#  such that Calls*(procedure, _) with read.stmt#=if.stmt# with assign.stmt#=assign.stmt#  pattern while(call, _)  pattern assign(constant, _) with "variable"=print.varName  pattern while(variable, _)  such that Next*(_, assign)  pattern assign(constant, "4800-600")  pattern while(then, _)  such that Calls*(procedure, procedure) with read.varName="assign"  such that Follows*(10, if)  such that Uses(19, variable) with "constant"=call.procName  pattern assign(assign, "1800/2800") with print.varName=read.varName  pattern assign(print, _"6700+7500"_) with "variable"=variable.varName  such that Parent(read, call) with "procedure"=print.varName with 9100=while.stmt#  such that Follows(25, call)  pattern while(call, _)  such that Modifies(print, _) with print.varName=variable.varName with procedure.procName=read.varName  pattern if(variable, _, _)  such that Next(call, 14) with procedure.procName=procedure.procName  pattern if(_, _, _)  pattern if(constant, _, _) with 5100=constant.value  pattern if(_, _, _) with 7500=while.stmt#  pattern if(assign, _, _) with print.varName="read"  pattern assign(_, "procedure+8200")  such that Uses(21, variable) with while.stmt#=call.stmt#  such that Follows*(_, stmt)  pattern assign(_, "5800*3200") with read.varName=print.varName with constant.value=read.stmt#  pattern while(variable, _)  such that Follows*(call, _) with assign.stmt#=call.stmt# with 9600=while.stmt#  such that Next*(_, if)  pattern if(read, _, _)  pattern assign(assign, "2600*8900")  pattern assign(_, "procedure*3300")  pattern while(variable, _) with procedure.procName=print.varName  pattern assign(then, _)  pattern assign(variable, _) with call.stmt#=read.stmt#  pattern if(if, _, _)  such that Calls("read", procedure)  such that Parent(stmt, 23)  pattern while(variable, _) with 800=call.stmt#  pattern assign(_, _)  such that Follows(14, read)  pattern if(_, _, _) with stmt.stmt#=while.stmt#  pattern while(constant, _) with procedure.procName="while" with stmt.stmt#=stmt.stmt#  such that Parent*(stmt, while)  such that Next*(print, assign)  such that Affects*(_, stmt)  such that Follows(_, print) with "assign"=call.procName with 5200=call.stmt#  such that Affects*(assign, _)  pattern if(while, _, _)  such that Uses(print, variable)  pattern if(constant, _, _)  pattern if(procedure, _, _)  pattern if(variable, _, _)  pattern if(_, _, _) with print.varName=variable.varName  such that Parent(2, print)  pattern if(print, _, _)  such that Calls(procedure, "else")  pattern while(variable, _) with assign.stmt#=read.stmt#  such that Follows*(9, print) with if.stmt#=if.stmt# with assign.stmt#=8400  such that Next(4, if)  pattern assign(_, _"8700*7500"_)  such that Follows(_, print)  such that Follows*(call, 24) with print.varName="while"  pattern if(_, _, _) with 6600=read.stmt# with print.stmt#=6500  such that Affects(assign, _)  pattern while(_, _)  pattern assign(_, _"4200/8400"_)  pattern assign(then, _"7600-procedure"_) with "else"=read.varName  such that Uses(while, "read") with constant.value=print.stmt#  such that Affects(stmt, 11)  such that Follows*(18, print)  pattern assign(variable, _)  pattern while(_, _)  such that Next(_, assign)  such that Affects(assign, 1) with variable.varName="then" with "call"=read.varName  pattern while(_, _)  such that Uses(if, variable)  pattern while(else, _) with variable.varName=read.varName with assign.stmt#=3900  such that Next*(_, stmt)  such that Calls(procedure, "while")  pattern while(_, _)  pattern if(variable, _, _)  pattern while(_, _) with read.varName=procedure.procName  pattern assign(_, _"1100*4100"_)  pattern if(call, _, _) with while.stmt#=3400  pattern if(_, _, _)  such that Calls*("assign", procedure)  pattern while(constant, _)  pattern if(_, _, _)  pattern while(variable, _) with stmt.stmt#=2800  pattern if(call, _, _) with procedure.procName=read.varName with stmt.stmt#=if.stmt#  such that Uses(procedure, variable)  pattern if(_, _, _)  such that Next*(_, print) with assign.stmt#=assign.stmt#  pattern assign(_, _"3400+9600"_) with print.varName=call.procName  such that Affects(assign, assign)  such that Parent(assign, _)  pattern if(_, _, _) with constant.value=assign.stmt#  such that Next*(16, read) with call.procName=variable.varName  pattern if(_, _, _)  pattern while(print, _)  pattern while(variable, _)  such that Affects(_, assign) with call.procName=print.varName  pattern assign(variable, _) with "else"=procedure.procName  pattern if(_, _, _)  pattern if(_, _, _)  pattern while(variable, _)  such that Follows*(print, _)  pattern if(_, _, _)  pattern assign(variable, _)  such that Parent(call, call)  pattern if(variable, _, _) with 8600=constant.value  pattern assign(call, _"8700-5100"_) with while.stmt#=print.stmt#  pattern while(_, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  such that Uses(if, _)  pattern while(read, _)  such that Calls*(procedure, _)  pattern while(variable, _) with procedure.procName="constant" with "variable"=print.varName  pattern assign(variable, _"(2300/8000)/6600"_) with if.stmt#=assign.stmt#  pattern if(_, _, _)  pattern assign(procedure, _"7200+2200"_)  pattern if(_, _, _) with "print"=procedure.procName  such that Affects*(stmt, _)  pattern while(print, _)  such that Affects(assign, stmt)  such that Follows(read, _)  pattern while(variable, _)  pattern while(variable, _)  pattern assign(variable, _"7100/5100"_)  pattern if(then, _, _) with print.stmt#=4200  such that Uses(if, variable)  such that Next*(6, read)  pattern assign(_, "then-7500")  pattern if(else, _, _)  such that Parent(_, assign)  pattern while(_, _)  pattern assign(constant, _)  such that Next*(if, _) with read.varName=call.procName  pattern assign(_, "8100*2100")  pattern if(variable, _, _)  such that Parent*(stmt, 12)  pattern assign(_, "6900+else") with 9700=constant.value  pattern if(print, _, _) with print.stmt#=stmt.stmt#  pattern if(then, _, _) with procedure.procName=procedure.procName with print.varName=variable.varName  such that Affects(assign, 1) with "constant"=read.varName  pattern assign(while, _"9800+assign"_) with if.stmt#=if.stmt#  pattern while(read, _) with call.procName="assign" with "if"=procedure.procName with call.procName="call" with print.varName="print" with "read"=read.varName  pattern if(print, _, _)  pattern while(variable, _) with assign.stmt#=600  pattern if(_, _, _) with call.procName=procedure.procName  pattern assign(_, "6300*1400")  pattern if(variable, _, _)  such that Affects*(_, stmt)  pattern assign(variable, "5500-800")  pattern while(if, _)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern if(assign, _, _)  such that Affects*(assign, assign) with print.varName="procedure" with if.stmt#=assign.stmt# with 3700=print.stmt#  pattern assign(variable, "while+4400") with read.varName=variable.varName  pattern assign(variable, _)  such that Parent(7, print) with 9300=if.stmt#  pattern while(while, _)  such that Affects(assign, assign) with call.stmt#=4700 with 6600=assign.stmt#  such that Calls(_, procedure) with print.varName=procedure.procName  such that Affects*(stmt, _) with while.stmt#=constant.value  such that Next*(print, 2) with print.varName=read.varName  pattern while(_, _)  pattern if(_, _, _) with while.stmt#=constant.value with 2900=assign.stmt#  pattern if(procedure, _, _) with constant.value=4000 with "then"=call.procName with constant.value=1300 with "read"=procedure.procName with 3100=if.stmt#  pattern if(_, _, _)  such that Parent(18, if)  pattern while(_, _)  pattern if(_, _, _) with call.stmt#=assign.stmt#  pattern while(variable, _)  pattern assign(variable, "(8600*3200)*variable")  pattern if(variable, _, _)  pattern while(_, _)  pattern while(variable, _)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern assign(_, _)  pattern while(assign, _)  pattern if(_, _, _)  pattern if(variable, _, _) with procedure.procName="constant"  such that Calls*("procedure", procedure)  pattern if(print, _, _)  pattern if(variable, _, _)  pattern assign(_, "2300/2100")  such that Follows*(stmt, assign) with while.stmt#=4700  pattern while(variable, _)  such that Follows*(print, stmt) with "if"=read.varName with "if"=procedure.procName  pattern assign(variable, _)  pattern assign(assign, _"2900/1100"_)  such that Calls*(_, procedure)  pattern assign(while, "3600+100")  such that Uses(27, variable) with procedure.procName=call.procName  pattern if(assign, _, _)  such that Follows(if, assign)  pattern assign(variable, "then+6100")  such that Calls(procedure, procedure) with assign.stmt#=1100  such that Next(23, while)  pattern if(variable, _, _) with while.stmt#=stmt.stmt#  such that Modifies(read, "else") with print.stmt#=print.stmt# with 4100=call.stmt#  pattern while(variable, _)  pattern while(_, _)  such that Modifies(while, _)  such that Follows(if, 29)  pattern while(variable, _)  pattern if(variable, _, _)  such that Calls(_, procedure)  such that Calls*(procedure, "call") with procedure.procName=read.varName  pattern if(else, _, _)  pattern assign(_, _"600/7100"_) with read.stmt#=print.stmt#  such that Parent(_, print) with print.stmt#=constant.value  pattern while(variable, _)  pattern if(_, _, _)  such that Modifies(print, "constant")  pattern assign(variable, "9700-3900")  pattern assign(if, _) with call.procName="procedure"  such that Uses(7, variable) with "variable"=variable.varName  pattern if(read, _, _)  pattern assign(call, _"7100*7700"_)  pattern assign(then, _"assign*2100"_)  pattern if(variable, _, _) with "while"=procedure.procName with "call"=print.varName  pattern while(variable, _)  pattern while(variable, _) with 6800=read.stmt#  pattern assign(variable, _) with read.stmt#=constant.value  pattern while(while, _)  pattern if(_, _, _)  pattern while(variable, _)  pattern if(variable, _, _)  such that Uses(read, _) with variable.varName="call" with "variable"=call.procName with "then"=print.varName  such that Follows*(assign, _) with while.stmt#=read.stmt#  pattern while(then, _)  pattern while(variable, _)  pattern assign(variable, _"1500/500"_)  pattern assign(_, "4000*1700") with call.procName="read"  pattern if(_, _, _)  such that Calls(procedure, _)  pattern while(read, _)  pattern if(if, _, _)  pattern while(_, _)  such that Follows(_, if) with call.stmt#=stmt.stmt#  such that Next*(call, _)  pattern assign(_, _"3200+6100"_)  such that Next(read, while)  pattern assign(print, _)  pattern assign(while, _)  pattern while(_, _)  such that Modifies(procedure, variable)  pattern while(_, _)  pattern assign(_, "1000/800")  such that Affects*(stmt, 15)  such that Affects(_, stmt) with if.stmt#=while.stmt#  pattern while(_, _) with while.stmt#=stmt.stmt#  pattern while(while, _)  pattern if(while, _, _) with 3500=constant.value  such that Next(stmt, 23) with read.stmt#=8700 with read.varName=call.procName  such that Calls("constant", procedure) with variable.varName=call.procName  such that Calls(procedure, "constant")  such that Follows*(print, 18) with 5200=call.stmt#  pattern while(_, _)  pattern assign(assign, _)  pattern assign(then, "(7200/1800)-5400")  such that Calls*(procedure, procedure) with "else"=call.procName  pattern assign(constant, _)  pattern assign(variable, _)  pattern if(constant, _, _)  pattern if(variable, _, _) with constant.value=5700  such that Follows(while, _)  pattern assign(_, "4700/9800")  pattern assign(_, "6900-print")  such that Affects*(stmt, stmt) with stmt.stmt#=call.stmt# with "assign"=read.varName with call.stmt#=9300 with "call"=procedure.procName  such that Affects*(assign, stmt)  pattern if(variable, _, _) with stmt.stmt#=if.stmt#  pattern if(variable, _, _)  such that Parent*(print, if) with "assign"=variable.varName  pattern assign(variable, _) with print.varName=read.varName  such that Calls*(procedure, _)  pattern while(_, _)  pattern while(variable, _)  such that Follows*(stmt, 13) with variable.varName="variable"  pattern while(variable, _)  pattern assign(_, "6700+400") with "procedure"=print.varName  pattern while(_, _)  such that Affects*(stmt, _) with stmt.stmt#=constant.value  pattern assign(read, _) with "else"=procedure.procName with procedure.procName="then"  pattern if(_, _, _) with "while"=procedure.procName with "assign"=call.procName  pattern assign(_, _) with "while"=print.varName  pattern while(variable, _) with call.stmt#=1100 with while.stmt#=2500  such that Affects(assign, 3) with assign.stmt#=while.stmt#  pattern while(variable, _)  such that Parent(print, assign)  pattern assign(variable, "2300*call")  such that Affects*(_, stmt)  pattern if(variable, _, _)  pattern while(variable, _)  such that Parent(_, call) with constant.value=2200  pattern while(variable, _) 

5000
49 - Query 49
variable variable; assign assign; constant constant; print print; stmt stmt; read read; procedure procedure; while while; if if; call call; 
Select <variable, assign, constant, print, stmt, read, procedure, while, if, call>  such that Calls("call", procedure) with stmt.stmt#=3500  pattern while(variable, _) with read.stmt#=300  such that Uses(while, variable) with while.stmt#=2500  pattern assign(_, "2500*5000") with 6300=assign.stmt#  pattern assign(variable, "7800*1600") with 1000=read.stmt#  such that Calls*("print", procedure)  pattern while(constant, _)  pattern while(_, _) with constant.value=read.stmt# with call.procName="assign" with read.stmt#=400  such that Affects(stmt, _)  such that Calls*(procedure, procedure)  pattern assign(variable, _)  pattern if(procedure, _, _)  pattern while(variable, _) with call.stmt#=700  pattern if(_, _, _)  pattern while(_, _)  pattern if(variable, _, _)  such that Modifies(16, variable) with procedure.procName=variable.varName  pattern assign(_, _"2700+assign"_) with 9600=print.stmt#  pattern if(variable, _, _)  pattern assign(variable, _"1700-read"_)  pattern while(_, _)  pattern if(_, _, _)  pattern if(call, _, _)  pattern assign(variable, "5500+6400")  pattern if(variable, _, _)  pattern while(variable, _)  pattern while(variable, _)  such that Follows(if, assign) with call.procName="while" with while.stmt#=9500 with "variable"=read.varName with call.procName=variable.varName  such that Affects(2, stmt) with variable.varName="read" with "while"=variable.varName  such that Calls*(procedure, _) with print.stmt#=print.stmt#  pattern if(assign, _, _)  such that Parent*(while, _) with assign.stmt#=4900 with "else"=variable.varName  pattern if(_, _, _) with assign.stmt#=if.stmt#  such that Parent(_, call) with procedure.procName="then"  pattern assign(_, _)  such that Parent*(read, assign)  pattern assign(variable, _)  pattern if(variable, _, _)  such that Next(_, while)  pattern if(variable, _, _)  pattern if(variable, _, _)  such that Follows(_, stmt)  such that Uses(11, variable)  such that Parent(_, print)  such that Uses(if, "procedure") with 4300=stmt.stmt# with print.varName="procedure" with call.stmt#=9000  pattern if(variable, _, _)  pattern while(if, _)  pattern while(variable, _) with stmt.stmt#=assign.stmt#  pattern assign(_, _)  such that Parent*(while, _)  such that Affects(19, assign) with "read"=procedure.procName with print.varName=read.varName  such that Follows(stmt, _) with 6600=constant.value  pattern assign(_, _"5000+5300"_)  such that Parent(print, 11) with if.stmt#=read.stmt#  pattern while(_, _) with print.varName="while"  pattern while(assign, _) with call.procName="call" with print.stmt#=stmt.stmt# with print.stmt#=assign.stmt#  such that Calls*("then", procedure)  pattern assign(constant, "8500-5800")  such that Next*(call, _) with call.stmt#=stmt.stmt#  such that Next(20, assign)  pattern while(_, _) with assign.stmt#=5500 with constant.value=200  such that Uses(call, _)  pattern assign(variable, _"900-4900"_)  pattern if(if, _, _)  pattern while(variable, _) with 2600=if.stmt# with "constant"=call.procName  such that Parent*(_, stmt)  pattern while(variable, _)  pattern if(variable, _, _)  such that Calls("constant", procedure)  pattern while(variable, _)  pattern assign(_, "1800/1800")  pattern if(variable, _, _) with constant.value=1900  such that Parent(read, _) with "procedure"=print.varName with call.procName=procedure.procName with while.stmt#=900  pattern while(if, _)  pattern if(procedure, _, _)  such that Uses(18, variable) with call.procName="assign"  pattern while(_, _) with call.procName="read"  pattern assign(read, "7200-7800")  pattern assign(_, _"(5200+8600)+variable"_) with 1300=read.stmt#  such that Uses(call, _)  such that Affects*(_, stmt)  such that Uses(while, "read")  pattern while(procedure, _)  pattern while(_, _) with constant.value=6500 with 100=read.stmt# with variable.varName=variable.varName  such that Next*(_, print) with procedure.procName="assign"  such that Uses(5, variable)  pattern if(assign, _, _) with "if"=print.varName  pattern assign(variable, "3700+9900")  pattern while(variable, _) with procedure.procName="constant"  pattern if(assign, _, _)  pattern assign(call, _"1000/5300"_) with assign.stmt#=assign.stmt#  pattern if(constant, _, _) with stmt.stmt#=1200 with "procedure"=read.varName  such that Parent(_, if)  such that Modifies(call, _)  pattern while(_, _) with "print"=procedure.procName  pattern assign(read, "6300-3500")  pattern while(_, _) with 3400=call.stmt# with call.procName="assign"  pattern while(then, _)  such that Follows*(1, assign) with 7800=constant.value  pattern assign(variable, _"9900+900"_)  pattern while(assign, _)  such that Affects(stmt, 21)  pattern if(_, _, _)  pattern if(variable, _, _)  such that Parent(if, stmt)  pattern while(variable, _) with "variable"=procedure.procName with assign.stmt#=6000 with call.procName=read.varName  such that Uses(11, variable) with while.stmt#=call.stmt#  pattern while(then, _)  pattern assign(_, _)  pattern if(then, _, _)  pattern while(procedure, _)  such that Next*(read, stmt)  pattern if(_, _, _)  pattern while(variable, _)  such that Follows*(stmt, _)  pattern assign(_, "3000+6800")  pattern if(print, _, _)  pattern while(variable, _)  such that Uses(read, _)  such that Modifies(procedure, "variable") with procedure.procName="then"  pattern if(call, _, _)  pattern if(_, _, _)  pattern while(_, _)  pattern while(else, _)  pattern while(variable, _)  such that Next*(assign, _)  pattern assign(_, "3700/500")  pattern if(_, _, _)  such that Affects(stmt, _) with 3900=if.stmt#  such that Parent(_, if)  pattern while(variable, _) with while.stmt#=8600  pattern while(_, _)  pattern assign(_, "6700*4400")  such that Affects(_, stmt)  pattern assign(variable, _)  pattern assign(_, "4800*4300")  pattern while(print, _) with call.procName="if" with constant.value=assign.stmt#  such that Next(stmt, assign)  such that Parent(call, read) with 5000=assign.stmt#  such that Follows(assign, read)  pattern assign(_, _) with while.stmt#=while.stmt#  such that Modifies(assign, _)  such that Calls*(procedure, "call")  pattern assign(while, _"3800/4000"_)  such that Calls*(procedure, "call")  pattern if(then, _, _) with read.stmt#=9900  such that Parent(while, read)  pattern if(variable, _, _)  such that Next(while, 6) with 3000=while.stmt#  pattern if(procedure, _, _)  pattern while(_, _)  pattern if(variable, _, _)  such that Modifies(stmt, variable)  pattern assign(_, _) with 2300=constant.value  pattern while(_, _) with stmt.stmt#=call.stmt#  pattern if(call, _, _)  pattern if(constant, _, _)  pattern if(_, _, _) with "print"=variable.varName  pattern assign(while, _"6700-while"_)  pattern while(then, _)  such that Parent(if, 9)  such that Follows*(print, _)  pattern while(_, _) with read.varName=read.varName  pattern while(variable, _)  such that Modifies(read, "procedure")  pattern if(variable, _, _) with "while"=print.varName with variable.varName="else" with 2800=call.stmt# with assign.stmt#=print.stmt# with procedure.procName="constant"  such that Affects(assign, _)  pattern if(read, _, _) with while.stmt#=call.stmt#  pattern if(variable, _, _)  pattern while(variable, _)  pattern if(print, _, _) with 4900=call.stmt# with read.stmt#=while.stmt# with call.procName="variable"  pattern if(variable, _, _)  such that Follows*(26, read) with read.varName="procedure"  pattern assign(_, "5900+400") with print.varName=call.procName  pattern assign(_, "8700-8400") with 3100=assign.stmt#  pattern assign(then, "if/constant") with variable.varName="print" with 1500=stmt.stmt#  pattern if(variable, _, _)  pattern while(call, _)  such that Calls(_, procedure)  pattern if(if, _, _)  pattern if(variable, _, _)  such that Modifies(procedure, variable)  pattern while(variable, _) with "variable"=procedure.procName  pattern assign(_, _"5100-1500"_)  pattern while(assign, _)  pattern if(variable, _, _)  such that Next(stmt, 3)  pattern assign(variable, "7300+3400")  pattern if(if, _, _)  pattern if(then, _, _)  pattern assign(_, _)  pattern while(variable, _)  such that Parent(call, 10)  pattern while(_, _) with call.stmt#=call.stmt#  pattern assign(variable, _"9700*4000"_)  such that Modifies(stmt, "procedure")  such that Follows(stmt, print)  such that Parent(read, _) with 6300=print.stmt#  such that Next(while, 23)  pattern while(_, _)  pattern assign(call, _)  pattern assign(_, _"300*procedure"_) with assign.stmt#=9100  such that Affects(_, stmt) with 1000=while.stmt# with "variable"=procedure.procName  pattern assign(procedure, "9000/8500")  pattern while(_, _) with "procedure"=print.varName  pattern assign(constant, _)  pattern while(if, _)  such that Affects(_, assign)  such that Uses(27, variable)  pattern if(_, _, _) with assign.stmt#=5900  pattern if(_, _, _) with procedure.procName="while" with 800=print.stmt#  pattern if(_, _, _)  pattern if(_, _, _)  such that Uses(3, variable)  pattern while(_, _)  such that Calls*(_, procedure)  such that Calls*(_, procedure) with print.varName=procedure.procName  pattern assign(variable, _) with read.varName=read.varName with stmt.stmt#=print.stmt#  pattern if(variable, _, _)  pattern while(_, _) with if.stmt#=3100 with 6000=call.stmt#  such that Follows*(_, assign)  pattern if(variable, _, _) with 9600=stmt.stmt# with print.varName=variable.varName  pattern assign(_, _) with while.stmt#=read.stmt#  such that Follows(20, while)  pattern if(else, _, _)  pattern while(_, _)  pattern assign(then, "2300*2300")  pattern while(call, _) with 4400=while.stmt#  such that Follows(8, call)  such that Uses(29, variable) with assign.stmt#=print.stmt#  such that Next(15, print) with print.varName=variable.varName with if.stmt#=9100  pattern while(variable, _)  such that Parent(_, call)  pattern if(variable, _, _) with print.varName=read.varName  pattern while(constant, _) with variable.varName="else" with if.stmt#=3600  such that Uses(print, "then") with variable.varName="then" with if.stmt#=constant.value  pattern assign(variable, _"2900+1600"_) with procedure.procName="while"  such that Modifies(stmt, _) with print.varName=procedure.procName  such that Parent*(28, assign)  pattern if(print, _, _)  pattern assign(variable, _)  pattern if(variable, _, _) with 800=while.stmt#  pattern if(variable, _, _) with 9000=call.stmt#  pattern assign(variable, _) with print.stmt#=7600 with "else"=procedure.procName with read.stmt#=call.stmt# with "print"=procedure.procName with 6600=if.stmt#  pattern if(_, _, _)  pattern while(variable, _)  pattern if(variable, _, _)  such that Calls*(procedure, _)  pattern if(_, _, _) with procedure.procName=call.procName  pattern while(_, _)  such that Follows(print, _)  such that Next*(if, _)  pattern while(_, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  such that Affects(16, assign)  pattern while(assign, _) with stmt.stmt#=stmt.stmt# with print.varName="assign"  pattern assign(call, _"4900*1100"_) with print.varName=print.varName  such that Modifies(28, variable) with "then"=procedure.procName  pattern while(else, _) with "then"=call.procName  such that Affects(assign, 12) with 7400=constant.value  pattern while(_, _)  pattern while(read, _)  such that Affects(13, stmt) with assign.stmt#=4700  pattern if(assign, _, _)  pattern assign(variable, _"3100+3100"_)  pattern if(read, _, _) with procedure.procName="print"  pattern if(_, _, _)  such that Affects(stmt, _)  pattern assign(variable, _)  pattern if(procedure, _, _)  pattern if(_, _, _)  such that Uses(stmt, "else")  such that Parent*(call, 13)  such that Affects*(_, assign)  pattern assign(_, _) with read.varName="variable"  pattern if(variable, _, _)  pattern while(variable, _)  such that Parent*(read, read) with read.stmt#=read.stmt#  pattern if(_, _, _)  pattern while(variable, _) with assign.stmt#=print.stmt#  pattern while(_, _)  such that Parent*(print, call)  such that Next(while, _) with read.varName="procedure" with 1500=constant.value with if.stmt#=2200  such that Modifies(call, "variable") with call.stmt#=300  pattern if(_, _, _)  pattern assign(while, _) with procedure.procName="call"  such that Parent(read, print)  such that Parent(stmt, if)  pattern while(_, _) with print.stmt#=7100  pattern while(_, _) with "read"=print.varName with print.varName=call.procName  pattern while(variable, _)  such that Calls*(procedure, procedure)  such that Follows(call, while) with if.stmt#=constant.value  such that Uses(22, variable)  such that Next(28, print)  pattern if(variable, _, _)  pattern assign(_, _)  such that Parent(_, call)  pattern if(constant, _, _)  pattern assign(else, _"print+4700"_)  such that Calls*("read", procedure)  pattern if(variable, _, _) with call.procName="variable"  such that Follows(call, while)  pattern while(variable, _)  pattern assign(procedure, _"(9500-7300)+5300"_)  pattern while(_, _)  pattern while(print, _) with call.stmt#=3300 with read.varName="assign"  such that Uses(assign, "call")  pattern if(variable, _, _)  such that Affects(7, assign) with 4900=if.stmt#  pattern if(assign, _, _)  such that Modifies(while, variable)  pattern while(print, _)  pattern assign(then, "500+2800")  such that Calls("constant", procedure)  pattern assign(_, _)  pattern while(_, _)  pattern while(_, _)  pattern if(_, _, _)  pattern while(_, _)  such that Follows(read, _)  such that Follows*(while, _)  pattern if(read, _, _)  such that Affects(8, assign)  pattern if(variable, _, _)  pattern assign(variable, _)  pattern assign(variable, _"9300-8500"_)  such that Modifies(read, "call")  such that Next(call, _)  pattern assign(variable, _)  pattern while(variable, _)  pattern while(_, _)  such that Calls(procedure, _)  pattern if(variable, _, _)  pattern while(assign, _)  pattern if(print, _, _)  pattern if(_, _, _)  pattern assign(variable, "4000-7100")  such that Calls("variable", procedure)  such that Parent*(assign, if)  such that Follows*(_, print) with print.varName=procedure.procName with 8100=constant.value with "then"=call.procName  such that Next(4, read) with "else"=call.procName with print.varName=read.varName  pattern if(variable, _, _) 

5000
50 - Query 50
print print; assign assign; constant constant; variable variable; call call; stmt stmt; read read; if if; while while; procedure procedure; 
Select <print, assign, constant, variable, call, stmt, read, if, while, procedure>  such that Affects*(assign, 27)  pattern assign(variable, _"1400*1400"_) with "else"=print.varName  such that Uses(read, "if") with read.stmt#=8300  such that Parent(18, if) with variable.varName=procedure.procName with print.varName="read" with assign.stmt#=1000 with constant.value=assign.stmt#  pattern assign(_, _"1800*7600"_) with print.varName="while"  pattern assign(_, _) with call.procName=variable.varName  pattern if(read, _, _) with "then"=call.procName  pattern if(_, _, _)  pattern if(variable, _, _)  pattern assign(_, _"3400+6700"_)  pattern while(_, _)  such that Calls(procedure, "while")  such that Calls*(procedure, _)  pattern if(variable, _, _)  pattern while(variable, _)  such that Modifies(while, "print")  pattern while(variable, _) with print.varName=call.procName  such that Parent(print, _)  pattern assign(variable, _"5600-1900"_)  such that Parent*(while, _)  such that Affects(assign, assign)  pattern assign(_, "1600/1100")  pattern while(_, _)  pattern while(call, _)  such that Affects(assign, assign)  pattern while(_, _)  pattern assign(then, _"1800*1700"_) with read.varName="constant"  such that Affects*(stmt, stmt)  pattern assign(_, "3600*6900")  pattern while(print, _)  such that Next*(print, _)  pattern while(_, _) with "if"=procedure.procName  pattern if(constant, _, _)  pattern if(variable, _, _) with 7500=if.stmt#  pattern if(variable, _, _) with variable.varName=procedure.procName with "read"=procedure.procName with constant.value=700  pattern while(variable, _)  pattern assign(variable, "2400+8500")  such that Next(print, while)  such that Uses(call, variable) with 8400=constant.value with variable.varName="if"  pattern assign(variable, _)  such that Follows(assign, stmt) with 4700=call.stmt#  pattern if(_, _, _) with print.varName="constant"  pattern assign(variable, "400-8400")  such that Calls*(procedure, procedure) with variable.varName=procedure.procName with "assign"=read.varName  pattern assign(variable, _) with while.stmt#=read.stmt#  pattern if(variable, _, _) with constant.value=4800 with variable.varName=procedure.procName  pattern assign(_, _"8200+1300"_) with call.procName="then" with procedure.procName=print.varName with call.stmt#=500  pattern while(variable, _)  pattern assign(_, _"9600+800"_)  pattern assign(else, _) with if.stmt#=stmt.stmt#  pattern if(variable, _, _)  such that Parent(call, while) with constant.value=7600 with print.varName="if"  pattern assign(variable, "300*7000")  pattern assign(_, _"8300+8100"_)  pattern while(_, _) with while.stmt#=constant.value with "assign"=call.procName with read.stmt#=4800  such that Next(read, if) with stmt.stmt#=assign.stmt#  such that Parent*(3, while)  such that Modifies(assign, _)  pattern assign(variable, "6700/read")  pattern assign(_, "(6000/3800)*1700")  pattern while(constant, _)  pattern while(procedure, _) with procedure.procName=read.varName  pattern while(variable, _) with procedure.procName=call.procName  such that Calls*(procedure, procedure)  pattern assign(_, _) with "assign"=read.varName with variable.varName="read" with "assign"=read.varName  such that Parent(print, 9) with call.procName="read" with 5100=while.stmt#  such that Modifies(stmt, variable) with 9500=print.stmt#  such that Next(if, assign)  pattern if(variable, _, _) with while.stmt#=9500  pattern if(variable, _, _)  pattern if(_, _, _) with call.procName="constant"  pattern assign(_, _"6300/7500"_)  pattern assign(variable, _"9600+print"_) with constant.value=stmt.stmt#  pattern while(while, _)  pattern while(_, _)  such that Uses(12, variable)  such that Next(call, _)  pattern if(constant, _, _)  pattern while(variable, _)  such that Uses(call, _) with while.stmt#=if.stmt#  such that Uses(stmt, _)  pattern while(variable, _) with while.stmt#=call.stmt# with call.procName=procedure.procName with call.procName="read"  pattern while(variable, _) with procedure.procName="if"  pattern while(variable, _)  pattern assign(_, _)  pattern assign(read, "(9100+call)/4500") with print.stmt#=constant.value  pattern while(assign, _) with assign.stmt#=8700  such that Parent*(21, print) with stmt.stmt#=assign.stmt#  such that Follows*(stmt, 29)  such that Affects*(_, assign) with call.procName=variable.varName  pattern while(variable, _)  such that Follows*(assign, print)  pattern while(_, _)  pattern assign(then, "2700*6300")  pattern if(_, _, _)  pattern while(procedure, _)  pattern if(_, _, _)  pattern while(variable, _)  pattern if(while, _, _)  pattern assign(while, _)  pattern while(variable, _)  pattern while(variable, _)  pattern if(procedure, _, _) with 6900=call.stmt#  pattern while(_, _) with while.stmt#=print.stmt#  pattern assign(_, _"9600+6100"_) with "variable"=procedure.procName with print.varName="constant" with procedure.procName="procedure"  pattern assign(_, _)  pattern while(procedure, _) with 2400=if.stmt# with while.stmt#=5900  such that Follows(_, if)  such that Next(while, _) with print.stmt#=5200  such that Next(if, _)  such that Next(print, while)  such that Affects*(_, assign)  pattern while(variable, _) with 1600=print.stmt#  such that Follows(stmt, 22)  pattern assign(_, "9400+7600") with procedure.procName=call.procName  such that Modifies(25, variable) with 4800=if.stmt#  such that Calls(_, procedure)  pattern while(constant, _)  pattern assign(_, "1700+300") with call.procName=procedure.procName  such that Parent*(_, assign)  pattern while(_, _)  such that Modifies(procedure, _)  such that Follows*(_, stmt)  such that Affects*(12, stmt) with call.procName=procedure.procName  pattern while(variable, _)  such that Calls(procedure, procedure)  pattern if(procedure, _, _)  pattern if(_, _, _)  pattern while(while, _)  such that Calls(procedure, "then")  pattern if(_, _, _)  pattern if(variable, _, _)  pattern while(print, _)  pattern if(_, _, _)  pattern assign(constant, _)  such that Parent(print, _)  such that Affects*(assign, assign)  pattern assign(_, "5800/4500")  pattern assign(then, "600/600") with read.varName="if"  such that Follows(call, _)  such that Parent*(_, stmt)  such that Uses(if, _) with variable.varName="if"  pattern assign(call, "2800-4400")  pattern assign(variable, "6200+while") with read.varName="then"  pattern while(variable, _)  pattern if(_, _, _)  pattern assign(variable, _)  such that Modifies(22, variable) with call.procName="else"  pattern if(variable, _, _) with read.varName="assign" with stmt.stmt#=if.stmt# with procedure.procName="print"  pattern while(_, _) with 5500=if.stmt#  such that Parent*(assign, _) with if.stmt#=if.stmt# with 4700=if.stmt#  pattern assign(_, _"2400-5600"_) with call.stmt#=900  such that Follows*(stmt, _)  such that Parent*(while, stmt)  such that Affects(stmt, _)  pattern while(variable, _)  pattern assign(variable, _"4000+2500"_)  pattern assign(variable, _"5400-3000"_)  such that Follows(assign, 14)  pattern assign(if, "3400-7800") with call.procName=variable.varName  such that Calls(_, procedure)  pattern while(_, _)  pattern if(_, _, _)  pattern if(_, _, _)  such that Affects(_, assign)  such that Follows(read, 6) with "assign"=procedure.procName  such that Parent(15, assign)  pattern if(_, _, _)  pattern assign(while, "1800/2500")  pattern assign(_, _)  pattern if(variable, _, _) with "assign"=variable.varName  such that Next(call, while)  pattern if(call, _, _)  pattern assign(_, _) with "read"=procedure.procName  pattern if(_, _, _) with call.procName=procedure.procName  pattern assign(procedure, "9900-9200")  pattern while(_, _)  pattern while(read, _)  pattern while(variable, _)  pattern assign(variable, _"6100-1000"_)  pattern if(variable, _, _)  such that Parent(stmt, 17)  pattern assign(procedure, _)  pattern if(procedure, _, _)  such that Follows*(print, _)  pattern if(variable, _, _)  pattern assign(then, _) with "call"=read.varName  pattern if(assign, _, _) with 7900=if.stmt# with 2300=stmt.stmt#  pattern assign(variable, _"5100+then"_)  such that Next(while, 16) with "call"=procedure.procName with call.procName="while"  such that Next(stmt, _) with read.stmt#=if.stmt#  such that Next*(_, call)  pattern while(variable, _)  pattern while(_, _)  pattern if(read, _, _) with "read"=variable.varName  pattern assign(_, _)  pattern assign(_, "(if/8400)*1400") with "procedure"=procedure.procName  pattern if(_, _, _)  pattern while(variable, _)  such that Affects(assign, _)  such that Next(assign, stmt)  pattern assign(variable, "9600*3600")  pattern assign(_, _) with "then"=variable.varName  pattern if(_, _, _) with if.stmt#=if.stmt#  pattern while(else, _)  pattern assign(_, _"7300+5900"_)  such that Next*(stmt, 17) with 3300=call.stmt#  pattern while(_, _)  such that Follows*(23, if) with read.varName="then"  pattern assign(print, _)  pattern while(variable, _)  pattern if(else, _, _)  pattern while(variable, _) with "call"=variable.varName  pattern while(_, _)  such that Follows*(read, _)  such that Next*(call, assign)  such that Modifies(assign, variable) with call.procName="print"  such that Calls*(procedure, procedure) with assign.stmt#=5400 with while.stmt#=3200 with constant.value=stmt.stmt#  pattern while(variable, _)  pattern while(variable, _)  such that Follows*(5, if) with 9700=read.stmt#  pattern if(variable, _, _)  pattern while(_, _) with procedure.procName=variable.varName  pattern if(variable, _, _) with variable.varName=print.varName  such that Modifies(21, variable) with variable.varName=procedure.procName with print.stmt#=2700 with procedure.procName="else"  such that Next(stmt, _) with call.stmt#=assign.stmt# with assign.stmt#=1500  pattern if(variable, _, _) with procedure.procName=call.procName  pattern if(_, _, _)  pattern if(_, _, _)  pattern if(assign, _, _)  pattern if(variable, _, _)  pattern if(then, _, _)  pattern while(_, _) with read.varName=procedure.procName  such that Next(6, call)  such that Next(21, while)  pattern if(_, _, _) with 8000=read.stmt#  pattern assign(_, _"3200-8300"_)  such that Modifies(print, variable)  such that Parent*(stmt, 10)  such that Uses(read, _)  such that Parent(read, if)  pattern assign(_, _"(5300-900)/5900"_) with 7700=call.stmt# with 8600=assign.stmt#  pattern if(if, _, _)  such that Parent*(if, _)  pattern assign(variable, _"assign+4100"_)  such that Modifies(assign, "read")  such that Parent(26, assign) with "then"=print.varName  pattern assign(while, _"5400*procedure"_) with "while"=read.varName  pattern assign(while, "((1200-1300)+4800)+3300")  pattern while(variable, _)  pattern while(while, _) with variable.varName=read.varName  pattern while(variable, _) with 3300=constant.value with while.stmt#=constant.value  pattern if(_, _, _) with 3100=read.stmt#  pattern while(assign, _)  pattern while(variable, _) with read.stmt#=7000  pattern if(_, _, _) with print.varName=print.varName  such that Parent(_, print) with read.varName="read"  pattern assign(_, _)  pattern assign(_, "3100+while") with read.varName=call.procName  pattern while(print, _) with call.stmt#=read.stmt# with print.stmt#=6600 with assign.stmt#=read.stmt# with 5900=stmt.stmt#  such that Parent*(read, 26)  pattern while(_, _)  such that Parent(if, while)  pattern assign(variable, "4800+variable") with stmt.stmt#=call.stmt#  such that Affects*(assign, stmt)  pattern assign(_, _"7100/5300"_) with print.varName="then"  pattern if(variable, _, _)  pattern while(_, _) with 1200=if.stmt#  pattern while(_, _) with stmt.stmt#=1900  such that Modifies(20, variable)  such that Parent*(if, _) with print.varName=procedure.procName  pattern assign(_, _)  such that Calls(_, procedure)  such that Next*(assign, _)  such that Next*(while, 4)  pattern while(else, _) with "constant"=print.varName  pattern while(_, _)  pattern while(_, _)  pattern assign(variable, _) with if.stmt#=constant.value  pattern while(call, _) with 7200=while.stmt#  pattern assign(constant, _)  such that Calls*(procedure, _) with 2100=print.stmt#  pattern assign(variable, _"((4800/2200)/2600)-4600"_)  pattern assign(_, "2700+8000") with procedure.procName="call"  such that Follows*(stmt, 28)  pattern if(while, _, _)  such that Calls("else", procedure)  pattern assign(variable, "else/3600")  pattern while(_, _)  pattern while(while, _) with while.stmt#=constant.value  pattern if(variable, _, _) with procedure.procName="procedure"  pattern while(if, _)  pattern while(variable, _)  such that Parent*(27, read) with variable.varName=read.varName with "constant"=call.procName  pattern assign(print, "900+1900")  pattern if(variable, _, _) with while.stmt#=3400  such that Calls("assign", procedure)  such that Next(print, while)  such that Next*(stmt, 24) with "procedure"=read.varName  such that Affects(stmt, stmt)  pattern assign(_, _) with 2700=read.stmt# with "else"=read.varName  such that Modifies(stmt, _)  pattern assign(_, _)  pattern if(variable, _, _)  such that Next(_, read) with "constant"=read.varName  pattern if(_, _, _) with "else"=call.procName  such that Follows*(10, call)  pattern if(_, _, _) with call.procName=read.varName  pattern if(_, _, _)  such that Follows*(_, read) with procedure.procName=print.varName  such that Follows*(_, if)  pattern assign(variable, _"4400+6800"_) with variable.varName=variable.varName  pattern assign(_, _"7200+2300"_) with "call"=variable.varName  such that Next(read, while)  such that Uses(if, variable)  pattern assign(else, "7200+7100")  pattern if(variable, _, _) with "read"=read.varName with "read"=read.varName with 400=print.stmt# with procedure.procName="else"  pattern while(variable, _)  such that Parent(22, stmt) with procedure.procName=variable.varName  pattern while(variable, _)  pattern if(if, _, _) with call.procName="if" with assign.stmt#=if.stmt#  pattern if(variable, _, _)  pattern if(_, _, _) with call.procName=read.varName  pattern if(while, _, _)  pattern while(variable, _) with stmt.stmt#=assign.stmt#  such that Follows*(29, stmt) with variable.varName="procedure"  pattern if(variable, _, _)  such that Parent*(if, 18)  pattern assign(_, _"7700/4200"_)  such that Follows(_, read)  pattern if(if, _, _) with while.stmt#=if.stmt#  pattern if(variable, _, _) with read.varName=print.varName with procedure.procName="print" with read.varName=call.procName  such that Follows(21, while) with 6300=assign.stmt# 

5000
51 - Query 51
assign assign; variable variable; constant constant; print print; stmt stmt; read read; procedure procedure; while while; if if; call call; 
Select <assign, variable, constant, print, stmt, read, procedure, while, if, call> with call.procName=call.procName with while.stmt#=1700  such that Follows(_, stmt)  pattern if(_, _, _) with assign.stmt#=constant.value with stmt.stmt#=4600 with call.procName="constant" with variable.varName=procedure.procName  pattern if(_, _, _)  such that Affects*(assign, 7) with read.stmt#=constant.value with stmt.stmt#=stmt.stmt#  pattern assign(call, _"(2800-2100)/5400"_)  such that Modifies(2, variable)  such that Affects*(29, assign)  pattern if(variable, _, _)  pattern assign(variable, _)  pattern assign(_, _"7200*5600"_) with print.stmt#=2200  pattern while(_, _) with print.stmt#=2000 with 2100=stmt.stmt#  such that Affects(_, assign)  pattern if(variable, _, _)  pattern assign(_, "1300-4700") with read.varName=call.procName  pattern if(variable, _, _) with "variable"=variable.varName  such that Uses(14, variable)  such that Uses(call, "constant")  such that Affects(28, stmt)  pattern while(_, _)  such that Calls("constant", procedure)  pattern if(_, _, _)  pattern while(_, _)  pattern while(variable, _)  such that Follows*(call, 19) with 9100=if.stmt#  such that Next(_, assign) with "print"=variable.varName  pattern while(variable, _) with procedure.procName=call.procName with call.stmt#=if.stmt#  such that Next(read, _)  pattern if(variable, _, _) with 6600=print.stmt# with "else"=print.varName  pattern while(_, _)  such that Parent*(assign, 19)  such that Modifies(read, variable) with stmt.stmt#=stmt.stmt# with call.procName=procedure.procName  such that Parent*(while, _)  such that Modifies(6, variable)  such that Follows(_, if)  pattern assign(variable, "5500*100")  pattern while(_, _)  pattern if(_, _, _)  pattern while(variable, _) with 7600=while.stmt#  pattern if(assign, _, _)  pattern while(_, _) with assign.stmt#=while.stmt# with "variable"=read.varName  such that Parent*(_, while)  pattern if(_, _, _)  such that Parent*(20, stmt)  such that Modifies(read, "print")  such that Next*(assign, 4)  pattern assign(_, _) with 2800=read.stmt# with 5100=call.stmt#  pattern if(_, _, _)  pattern assign(variable, _"3500+then"_)  pattern if(variable, _, _)  pattern if(call, _, _) with if.stmt#=2300 with assign.stmt#=7800 with "print"=print.varName with while.stmt#=3000  pattern assign(_, "9100-6600") with while.stmt#=print.stmt#  such that Next*(print, 1)  pattern if(_, _, _)  pattern while(variable, _)  pattern if(_, _, _) with print.stmt#=7200  pattern if(variable, _, _) with stmt.stmt#=1000  pattern if(_, _, _)  pattern while(_, _)  such that Next*(_, read) with call.procName="then" with "while"=call.procName  such that Next*(17, while)  pattern if(_, _, _) with call.procName="if"  such that Parent(assign, 4)  pattern if(while, _, _)  such that Follows(if, read)  such that Calls*(procedure, procedure)  pattern assign(call, _)  pattern assign(then, "7100+8700")  such that Affects*(stmt, assign)  such that Uses(assign, _)  such that Parent*(9, if)  pattern if(then, _, _)  pattern if(else, _, _)  pattern if(variable, _, _)  pattern assign(variable, _)  such that Parent(13, assign) with print.varName=print.varName  such that Affects(_, assign)  pattern assign(_, "7600/1900") with "read"=variable.varName  pattern assign(call, _)  pattern while(_, _)  such that Affects(assign, _)  such that Next(print, 9)  pattern while(variable, _) with "procedure"=procedure.procName  pattern if(variable, _, _) with call.stmt#=100  pattern if(then, _, _)  pattern while(variable, _) with print.varName="while" with stmt.stmt#=7200 with print.varName="variable"  such that Follows*(stmt, _)  pattern assign(variable, _"1100-7400"_)  pattern while(call, _) with call.stmt#=read.stmt#  such that Parent(assign, _)  such that Affects(29, stmt)  such that Parent(assign, if)  pattern assign(variable, _) with read.stmt#=3200 with assign.stmt#=stmt.stmt#  pattern assign(_, _"(3200-2900)-8000"_)  pattern while(call, _)  pattern assign(variable, "1300-2400")  such that Next*(8, print)  pattern while(variable, _) with print.varName=read.varName  pattern if(procedure, _, _)  pattern while(call, _) with procedure.procName="while" with if.stmt#=9600  such that Calls*(procedure, "constant")  such that Uses(print, variable)  such that Affects(assign, assign)  pattern assign(_, _"8600-1900"_) with call.procName="else" with procedure.procName="constant" with call.procName="then" with print.varName=procedure.procName  such that Modifies(assign, variable)  pattern assign(variable, "8600/9200") with read.varName="read"  such that Calls(_, procedure) with read.varName="read" with procedure.procName="procedure"  pattern assign(read, _) with while.stmt#=if.stmt# with while.stmt#=assign.stmt#  pattern while(_, _)  pattern assign(_, _)  pattern while(variable, _)  such that Calls*(procedure, _)  pattern assign(variable, _)  such that Calls(procedure, procedure) with "read"=read.varName  such that Next*(while, _)  pattern while(print, _)  pattern assign(variable, _"3300*4700"_)  pattern while(variable, _) with variable.varName="while" with 1900=assign.stmt# with call.procName="assign"  pattern if(constant, _, _)  pattern if(_, _, _)  pattern if(else, _, _) with print.varName="then"  pattern assign(_, _) with call.procName="if"  pattern while(_, _) with 1400=while.stmt# with "else"=read.varName  pattern while(variable, _)  pattern assign(variable, _"9800+3700"_)  such that Calls*(procedure, "call")  such that Calls(_, procedure)  such that Follows(while, 29) with "then"=variable.varName  such that Parent(while, _)  pattern assign(variable, _"4300+2900"_)  such that Next(call, 29) with print.stmt#=4000  pattern assign(_, _"7800*9200"_)  such that Next*(while, _)  such that Modifies(25, variable)  pattern while(_, _) with stmt.stmt#=if.stmt# with procedure.procName=call.procName  pattern while(_, _)  such that Modifies(if, _)  such that Uses(print, "call")  pattern while(procedure, _)  such that Calls*(_, procedure)  pattern assign(then, "1400*3400") with read.varName="read"  pattern if(print, _, _) with call.stmt#=7300  pattern if(variable, _, _) with if.stmt#=assign.stmt# with assign.stmt#=1300  pattern if(assign, _, _) with call.procName=print.varName  pattern while(assign, _) with stmt.stmt#=7100  pattern assign(if, _"9500+3100"_)  pattern if(_, _, _) with 4800=assign.stmt#  pattern if(_, _, _) with 400=constant.value  pattern assign(variable, "2300*5500") with while.stmt#=3800 with read.stmt#=assign.stmt# with procedure.procName="while" with call.stmt#=print.stmt#  such that Next(call, 8) with 6600=stmt.stmt#  pattern if(constant, _, _)  pattern while(while, _)  pattern assign(_, _"1200+1000"_)  such that Parent*(call, _)  such that Follows*(while, _) with variable.varName="then"  such that Modifies(print, "print")  pattern assign(_, _)  such that Next*(28, if)  pattern assign(else, "1900+500")  pattern if(variable, _, _) with "variable"=print.varName  pattern while(_, _)  such that Calls(_, procedure)  pattern assign(variable, _)  such that Follows(_, read) with stmt.stmt#=while.stmt#  pattern while(constant, _)  pattern while(variable, _)  pattern if(_, _, _) with 9900=if.stmt#  such that Parent*(_, assign)  such that Affects(assign, _)  pattern assign(assign, _)  pattern if(constant, _, _)  such that Uses(12, variable)  pattern assign(variable, _)  pattern assign(assign, "1500/4300")  pattern assign(call, _)  pattern assign(if, "read/600")  pattern assign(_, _) with call.stmt#=assign.stmt#  pattern if(print, _, _) with assign.stmt#=7000  pattern if(print, _, _)  pattern if(else, _, _) with 800=call.stmt# with while.stmt#=4400 with read.varName=read.varName  pattern while(_, _) with read.stmt#=1700 with call.stmt#=2200  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern while(variable, _)  pattern assign(read, _)  pattern while(variable, _) with variable.varName=variable.varName  pattern while(constant, _)  pattern if(variable, _, _) with "variable"=read.varName with procedure.procName=call.procName  such that Calls(procedure, "read")  such that Follows*(1, print) with variable.varName=procedure.procName with read.varName=print.varName with if.stmt#=if.stmt# with print.stmt#=if.stmt# with print.stmt#=800 with "while"=read.varName  pattern if(_, _, _)  such that Follows*(16, stmt) with 9700=call.stmt#  such that Uses(stmt, "constant")  pattern while(variable, _)  pattern if(variable, _, _)  pattern while(_, _)  such that Parent(if, _) with procedure.procName=print.varName with stmt.stmt#=while.stmt# with call.procName="if" with stmt.stmt#=read.stmt# with procedure.procName="assign"  pattern if(procedure, _, _)  such that Affects(stmt, _) with variable.varName="procedure"  pattern if(variable, _, _)  pattern assign(_, _)  pattern if(read, _, _) with read.stmt#=constant.value  pattern while(variable, _) with call.stmt#=1600  pattern while(call, _)  pattern assign(variable, _)  such that Next*(call, 24) with 2700=print.stmt# with "constant"=print.varName  pattern if(while, _, _)  pattern assign(_, _"8700+7500"_)  such that Parent*(print, 19)  pattern if(_, _, _) with print.varName="else"  pattern while(_, _)  pattern assign(variable, "1900/2900")  pattern while(call, _)  such that Next(if, 18)  such that Parent*(7, while)  pattern while(if, _) with print.stmt#=print.stmt# with call.procName=call.procName  pattern while(_, _) with read.varName="call" with read.varName="read" with call.procName="constant"  pattern while(variable, _)  pattern assign(variable, _"1900+8400"_) with "print"=call.procName  such that Follows(_, assign)  pattern assign(_, _"8400/2100"_)  pattern while(variable, _)  pattern while(variable, _)  pattern while(variable, _)  pattern while(variable, _)  pattern while(print, _) with variable.varName=procedure.procName with variable.varName=read.varName  such that Affects*(_, stmt)  pattern while(variable, _)  pattern while(assign, _) with procedure.procName="print"  such that Calls*(procedure, "print")  such that Calls(procedure, _)  pattern if(procedure, _, _) with call.procName="while"  pattern assign(variable, "7500/7200") with print.varName=read.varName  pattern if(assign, _, _)  pattern assign(_, _"9300*5400"_) with "variable"=print.varName with call.stmt#=4700  pattern assign(_, _)  pattern while(then, _)  pattern if(_, _, _) with "print"=procedure.procName  pattern while(if, _)  pattern if(print, _, _)  pattern if(read, _, _) with print.varName="variable"  pattern while(read, _)  pattern while(while, _)  pattern while(variable, _) with if.stmt#=8400 with print.varName="else"  such that Uses(25, variable)  pattern assign(variable, _"6300/2300"_)  pattern assign(variable, _)  pattern assign(_, _)  such that Follows*(call, call)  pattern if(variable, _, _) with print.stmt#=if.stmt# with read.varName=read.varName  such that Next*(call, 22) with call.stmt#=read.stmt#  pattern assign(variable, _"6300+3100"_)  pattern if(variable, _, _) with read.varName="assign"  pattern if(else, _, _)  pattern while(_, _)  such that Affects*(stmt, stmt) with print.stmt#=6200 with 5700=constant.value  pattern while(_, _)  such that Uses(read, "then")  pattern while(variable, _)  pattern if(_, _, _)  pattern if(_, _, _)  such that Follows*(if, _)  such that Affects(_, assign) with 2800=print.stmt#  pattern assign(if, _"500+variable"_) with stmt.stmt#=call.stmt# with "variable"=procedure.procName  pattern if(_, _, _)  pattern if(_, _, _)  such that Calls(procedure, procedure)  such that Uses(assign, _)  such that Follows(_, stmt)  pattern if(_, _, _)  such that Next(stmt, _)  pattern assign(variable, _)  such that Calls(procedure, procedure)  such that Parent*(_, print) with call.procName="if"  pattern while(_, _)  pattern while(variable, _)  pattern assign(variable, _) with call.procName=call.procName  pattern if(variable, _, _)  such that Calls("else", procedure)  pattern if(assign, _, _)  pattern if(_, _, _)  pattern assign(variable, _)  pattern assign(variable, "1600+7900")  such that Modifies(procedure, variable) with "if"=print.varName with variable.varName="variable" with 1400=assign.stmt#  pattern if(constant, _, _)  pattern if(variable, _, _)  such that Follows*(_, while) with procedure.procName=variable.varName  pattern while(if, _)  such that Affects*(_, assign) with assign.stmt#=call.stmt# with procedure.procName="procedure"  pattern while(variable, _)  pattern while(_, _)  pattern assign(_, _"8000*500"_)  pattern while(_, _) with 8800=if.stmt#  such that Affects*(_, assign) with call.stmt#=print.stmt#  pattern if(_, _, _)  such that Parent*(while, 12) with 4500=assign.stmt#  such that Affects(_, assign)  pattern assign(_, _"1700/print"_) with read.varName="constant"  pattern while(else, _) with "constant"=variable.varName with "if"=read.varName with read.varName="else"  pattern if(_, _, _) with "else"=call.procName  pattern assign(_, _)  pattern while(variable, _) with 600=stmt.stmt#  pattern while(variable, _)  pattern assign(read, _"500*2600"_) with "then"=procedure.procName with stmt.stmt#=if.stmt# with 7500=while.stmt#  pattern if(while, _, _) with constant.value=6200 with read.varName="read"  pattern if(then, _, _)  pattern assign(_, _) with variable.varName=procedure.procName with variable.varName=variable.varName with read.stmt#=3300  pattern assign(while, _"5500/5400"_)  such that Affects(stmt, _)  pattern assign(_, "1700-1600")  such that Follows*(assign, print)  pattern assign(variable, "3600/2100")  pattern while(variable, _) with 8400=constant.value  such that Affects(_, assign)  such that Modifies(9, variable)  such that Calls("else", procedure)  such that Next(read, _)  such that Affects(stmt, assign) with read.varName=variable.varName  pattern if(_, _, _) with 3500=call.stmt# with print.stmt#=print.stmt# with "assign"=variable.varName with "read"=print.varName  pattern while(_, _) with variable.varName="read"  pattern if(_, _, _)  pattern while(call, _) with procedure.procName="print" with if.stmt#=constant.value  pattern assign(_, _) with read.varName=read.varName with procedure.procName=read.varName  pattern assign(variable, _"300/3600"_) 

5000
52 - Query 52
assign assign; variable variable; print print; constant constant; call call; stmt stmt; read read; if if; while while; procedure procedure; 
Select <assign, variable, print, constant, call, stmt, read, if, while, procedure>  pattern assign(then, _)  pattern assign(variable, _)  such that Calls("procedure", procedure)  pattern if(variable, _, _)  such that Next*(read, 1)  pattern if(read, _, _)  pattern while(variable, _)  pattern while(_, _)  such that Next(print, assign)  pattern if(variable, _, _)  pattern if(_, _, _) with "else"=variable.varName  pattern assign(procedure, _"8000+1100"_)  pattern assign(variable, "5200*6300")  pattern assign(variable, "8600*5500")  such that Next*(_, read) with print.varName=read.varName  such that Parent(print, 13) with read.varName=variable.varName with variable.varName=read.varName  pattern assign(print, "(9700/7500)*4300") with "then"=print.varName  pattern if(procedure, _, _)  pattern assign(variable, _)  such that Next*(_, assign)  pattern while(variable, _)  pattern if(variable, _, _) with "then"=variable.varName  such that Parent*(stmt, 21)  pattern while(variable, _)  pattern assign(variable, "7200/6200")  pattern if(variable, _, _) with stmt.stmt#=4000 with if.stmt#=1500  pattern if(else, _, _) with print.stmt#=if.stmt#  pattern assign(variable, _"(3100*4400)/5000"_) with "procedure"=print.varName with 4600=read.stmt#  pattern while(then, _) with 700=if.stmt#  pattern if(while, _, _) with read.varName=procedure.procName  pattern if(variable, _, _)  pattern if(variable, _, _)  such that Calls*("read", procedure)  pattern while(_, _)  such that Calls*("variable", procedure)  such that Parent*(18, assign) with 3200=assign.stmt#  such that Modifies(while, "if")  pattern if(variable, _, _) with read.stmt#=200  pattern while(variable, _) with constant.value=read.stmt#  pattern assign(then, _"4600*5900"_)  such that Affects(assign, _)  pattern if(variable, _, _) with read.varName=procedure.procName  such that Affects(stmt, 11)  pattern while(if, _)  such that Calls(procedure, "while")  such that Calls*(_, procedure)  such that Uses(if, variable)  such that Next*(while, print)  such that Affects(assign, stmt)  pattern assign(constant, _)  such that Parent*(_, stmt)  pattern assign(_, _)  pattern if(read, _, _)  such that Follows(4, while)  pattern while(while, _) with stmt.stmt#=constant.value  pattern assign(procedure, "4600*900")  pattern if(variable, _, _) with call.stmt#=read.stmt#  pattern if(variable, _, _)  such that Parent(read, _) with 100=stmt.stmt# with read.stmt#=8000  pattern if(_, _, _)  pattern if(_, _, _)  pattern while(variable, _) with procedure.procName="assign" with 3400=read.stmt#  pattern if(variable, _, _) with 7800=assign.stmt#  pattern if(_, _, _) with 1900=while.stmt#  pattern while(variable, _) with "procedure"=call.procName  such that Calls*("read", procedure)  pattern assign(procedure, _"while-1900"_)  pattern assign(assign, _) with "procedure"=variable.varName with constant.value=5000  such that Parent*(14, assign) with if.stmt#=4000 with print.varName="else"  such that Next(_, if)  pattern assign(else, _"(else*5400)/2400"_)  pattern while(variable, _)  pattern assign(variable, _"3900-7400"_)  pattern if(then, _, _) with procedure.procName="assign"  such that Follows(print, _)  such that Parent*(10, assign)  such that Uses(call, _)  such that Next(assign, _) with "constant"=print.varName  pattern while(print, _)  pattern assign(variable, _)  pattern while(_, _)  pattern assign(_, _"8700*2400"_) with read.varName=call.procName  such that Next*(while, assign)  pattern assign(_, _)  pattern assign(then, _)  pattern assign(call, _)  pattern if(_, _, _)  such that Parent*(stmt, _)  such that Affects*(1, assign) with 6900=read.stmt#  such that Parent(_, assign) with read.varName="procedure"  such that Parent(call, assign)  such that Uses(assign, variable)  pattern if(_, _, _)  such that Affects(10, stmt) with variable.varName=print.varName with 200=print.stmt#  such that Uses(stmt, variable)  such that Affects*(23, stmt)  such that Calls*("then", procedure)  pattern while(variable, _) with read.varName=print.varName  pattern if(variable, _, _)  such that Follows(if, _)  pattern if(variable, _, _)  such that Parent*(if, _)  such that Uses(call, "constant")  pattern while(variable, _)  such that Parent*(print, 8) with "call"=procedure.procName  pattern while(else, _)  pattern while(_, _)  pattern assign(call, _"200/1100"_)  such that Follows*(read, 25) with "print"=variable.varName  pattern if(variable, _, _) with if.stmt#=7700  pattern assign(variable, "9200-5900")  pattern while(_, _)  such that Parent(_, assign) with 3000=print.stmt#  pattern while(assign, _)  pattern while(call, _)  pattern if(_, _, _)  pattern assign(variable, _)  such that Next(assign, _)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern assign(assign, "variable-800")  pattern if(assign, _, _)  pattern assign(_, _)  pattern assign(constant, _)  pattern if(variable, _, _)  such that Parent(while, assign) with while.stmt#=stmt.stmt#  pattern if(variable, _, _)  pattern while(then, _)  pattern if(_, _, _) with print.stmt#=7300  pattern while(variable, _)  such that Follows*(24, call)  such that Follows(_, while) with read.varName=read.varName with constant.value=2600 with call.procName=read.varName  pattern if(variable, _, _)  pattern assign(variable, "300-4300") with constant.value=4800 with stmt.stmt#=assign.stmt#  such that Uses(call, "assign")  pattern while(if, _)  pattern while(variable, _)  such that Calls(_, procedure)  pattern while(_, _)  pattern if(variable, _, _)  pattern while(_, _)  pattern while(variable, _) with read.stmt#=7900  pattern while(variable, _)  pattern if(variable, _, _) with "assign"=read.varName  pattern while(_, _) with constant.value=3500  such that Follows(while, print) with call.procName=variable.varName with 500=constant.value  pattern while(constant, _)  such that Follows*(assign, 21) with procedure.procName=call.procName  pattern if(_, _, _)  such that Next*(_, print) with read.varName="else"  pattern if(_, _, _)  pattern while(_, _)  pattern if(_, _, _)  such that Calls*(procedure, procedure)  pattern while(_, _)  pattern if(_, _, _)  such that Follows*(_, if)  such that Calls*(procedure, procedure)  pattern while(_, _)  pattern assign(procedure, _"300+9400"_)  such that Calls*(procedure, _)  pattern assign(print, _)  such that Calls("then", procedure)  pattern if(variable, _, _) with read.varName="constant"  pattern while(_, _)  pattern if(procedure, _, _)  pattern assign(_, _"8100/procedure"_)  pattern assign(_, "5200*9900")  such that Next(while, 13)  pattern if(_, _, _)  pattern if(_, _, _)  such that Follows(while, 19) with call.stmt#=2200  such that Parent*(_, if)  pattern while(variable, _) with stmt.stmt#=5600  pattern while(else, _) with call.stmt#=1100  pattern while(variable, _)  pattern while(variable, _) with call.procName="else" with assign.stmt#=2500  pattern while(variable, _) with assign.stmt#=while.stmt# with constant.value=read.stmt# with constant.value=stmt.stmt# with variable.varName=procedure.procName  pattern assign(variable, _"1500-2300"_) with "if"=procedure.procName  such that Modifies(read, "read")  such that Follows(stmt, 8) with constant.value=1000  such that Uses(read, "variable") with variable.varName=read.varName  such that Next*(_, assign) with "assign"=variable.varName with call.procName="while" with variable.varName="if"  such that Follows(if, print)  pattern assign(_, "print-3100")  such that Next*(_, assign)  pattern while(variable, _) with constant.value=6300  pattern assign(constant, "3500-else")  pattern while(_, _) with print.stmt#=stmt.stmt#  such that Next(call, _) with "assign"=procedure.procName  such that Modifies(stmt, "while")  pattern if(_, _, _) with variable.varName=procedure.procName  pattern assign(_, _)  pattern assign(print, _"9100*3700"_)  pattern assign(variable, _)  such that Affects*(4, stmt)  pattern assign(else, _"2600-5500"_)  such that Follows(_, assign)  such that Affects(_, stmt)  pattern if(else, _, _)  pattern if(_, _, _)  pattern if(_, _, _)  pattern assign(variable, "2100+if")  pattern if(_, _, _) with print.stmt#=6600  such that Calls*(procedure, procedure)  pattern assign(_, "(6600/6400)-9300")  pattern while(_, _)  such that Parent*(11, if)  such that Parent*(print, _) with print.varName="read"  pattern assign(variable, _)  such that Parent(_, read)  pattern assign(_, _)  pattern if(variable, _, _)  pattern assign(variable, "4300/8600") with procedure.procName="constant" with variable.varName="constant"  pattern assign(_, _) with call.procName=call.procName  pattern assign(_, _)  pattern while(while, _)  pattern assign(_, _"6100+5000"_) with assign.stmt#=stmt.stmt#  pattern if(_, _, _) with print.varName="while" with read.varName=read.varName with 4400=assign.stmt# with read.stmt#=6300  such that Parent*(stmt, call)  pattern assign(else, "7900-constant")  pattern assign(constant, "8700/6400") with 3700=constant.value  such that Parent*(3, while)  pattern if(variable, _, _)  such that Affects*(29, stmt) with assign.stmt#=assign.stmt#  such that Parent*(_, assign)  such that Next*(if, _)  such that Follows(if, _) with 5300=assign.stmt#  pattern if(_, _, _)  such that Parent(print, _) with 1500=if.stmt# with procedure.procName="assign"  such that Parent(print, _) with "else"=variable.varName with "if"=print.varName  pattern assign(constant, _)  pattern if(_, _, _)  pattern while(constant, _) with "assign"=procedure.procName  pattern if(_, _, _)  such that Uses(4, variable)  pattern assign(variable, _)  such that Parent*(if, 2)  such that Parent(stmt, 17)  pattern while(print, _)  pattern while(_, _)  such that Parent*(if, assign)  pattern while(_, _)  pattern while(while, _) with print.stmt#=9800  such that Calls*(_, procedure) with call.stmt#=assign.stmt#  such that Affects*(stmt, 3)  pattern if(variable, _, _)  pattern assign(variable, _) with stmt.stmt#=assign.stmt#  such that Modifies(print, "read") with call.procName="print"  such that Uses(call, variable)  such that Uses(7, variable) with read.stmt#=read.stmt# with assign.stmt#=3800  pattern assign(_, _"4100-procedure"_) with call.procName="if"  pattern assign(variable, "9600/3300")  pattern while(if, _)  pattern assign(variable, _"3300/600"_)  pattern assign(_, _)  pattern if(_, _, _)  pattern assign(call, _) with 4200=assign.stmt# with call.stmt#=8000 with print.stmt#=8400  pattern if(variable, _, _)  pattern while(_, _)  pattern assign(else, _)  pattern assign(variable, _)  pattern if(constant, _, _)  pattern if(variable, _, _)  pattern while(else, _)  such that Affects(_, assign) with stmt.stmt#=6300  such that Parent*(stmt, _)  pattern if(variable, _, _) with procedure.procName="constant"  pattern while(variable, _) with read.varName=print.varName with "procedure"=call.procName  such that Calls(_, procedure)  such that Next*(if, _)  pattern while(variable, _) with assign.stmt#=while.stmt#  pattern assign(variable, "procedure*2400")  such that Next(stmt, 14)  pattern while(while, _)  pattern if(_, _, _)  pattern while(variable, _)  such that Parent(stmt, 1) with 5500=while.stmt#  pattern if(variable, _, _) with procedure.procName=procedure.procName  pattern assign(variable, _)  such that Parent*(if, read)  pattern assign(_, _) with call.procName="variable" with call.procName=print.varName with variable.varName=read.varName with 5300=print.stmt#  pattern while(variable, _)  pattern if(print, _, _) with constant.value=7700  such that Parent*(_, print) with 9500=stmt.stmt#  pattern assign(while, "7800-2900") with print.stmt#=while.stmt# with procedure.procName="then" with print.stmt#=call.stmt#  pattern if(variable, _, _)  pattern while(variable, _) with variable.varName="print"  pattern if(variable, _, _)  pattern assign(constant, _) with 8600=if.stmt#  pattern if(call, _, _)  pattern while(print, _)  pattern if(_, _, _) with 9000=stmt.stmt# with print.stmt#=assign.stmt#  pattern if(assign, _, _)  pattern assign(variable, _"3300/1100"_) with print.stmt#=9300  such that Parent(print, 2)  pattern if(while, _, _)  pattern if(else, _, _) with print.varName=procedure.procName  such that Affects*(stmt, assign) with procedure.procName="variable"  pattern if(variable, _, _)  pattern while(variable, _) with stmt.stmt#=call.stmt#  pattern if(variable, _, _)  pattern while(variable, _)  pattern assign(variable, "if/9500")  pattern while(variable, _)  pattern assign(_, "9900-4200")  such that Modifies(read, _)  such that Next*(14, while)  pattern assign(_, _"9400/8000"_) with constant.value=3300 with print.stmt#=read.stmt# with stmt.stmt#=read.stmt#  such that Next*(read, 7) with "print"=procedure.procName with stmt.stmt#=7000  such that Parent(_, stmt)  pattern assign(variable, _) with call.stmt#=4300  pattern if(print, _, _)  such that Modifies(print, variable)  pattern assign(_, _)  such that Next*(_, read) with if.stmt#=assign.stmt#  pattern assign(_, _"5000*4900"_) with stmt.stmt#=9500  pattern while(_, _)  such that Modifies(assign, _)  pattern while(while, _)  such that Parent(print, stmt) with 8500=constant.value with read.stmt#=2100  pattern assign(variable, _)  pattern if(if, _, _)  pattern while(variable, _) with 3000=print.stmt# with procedure.procName=print.varName with if.stmt#=if.stmt# with assign.stmt#=2400 with assign.stmt#=8900 with variable.varName="call" with 500=print.stmt# with print.varName=variable.varName  pattern while(_, _) with if.stmt#=stmt.stmt# with assign.stmt#=print.stmt#  pattern if(_, _, _) with 4200=if.stmt#  such that Next*(call, if) with print.varName="variable"  pattern assign(_, _"5600+8400"_)  such that Calls*("else", procedure)  pattern assign(variable, "6700+700")  such that Affects(stmt, assign) with 700=stmt.stmt#  pattern while(while, _) with if.stmt#=500  pattern while(then, _) with print.varName=variable.varName  such that Next*(_, if)  pattern if(_, _, _) with if.stmt#=4600  pattern if(variable, _, _)  such that Uses(5, variable) with stmt.stmt#=1200 with call.procName="procedure"  pattern assign(_, "9100+6500") with call.stmt#=assign.stmt#  pattern while(_, _) with constant.value=6500 with variable.varName=read.varName  pattern if(variable, _, _)  pattern assign(variable, _) 

5000
53 - Query 53
variable variable; assign assign; print print; constant constant; call call; stmt stmt; read read; if if; while while; procedure procedure; 
Select <variable, assign, print, constant, call, stmt, read, if, while, procedure>  pattern assign(variable, _)  such that Next*(if, if)  pattern while(variable, _) with read.varName=procedure.procName  pattern if(if, _, _)  pattern assign(_, "3700+assign")  pattern assign(variable, _)  pattern while(assign, _)  pattern assign(variable, "call*procedure")  pattern assign(if, "8700*call")  such that Calls*("else", procedure) with 6700=read.stmt# with print.stmt#=while.stmt#  pattern assign(_, "2900/1500") with constant.value=if.stmt#  such that Next(stmt, 24)  such that Next(_, read)  pattern assign(print, "7300-8900")  pattern assign(then, _)  such that Next(_, if)  pattern while(variable, _)  pattern assign(_, _"(8800-5100)/8100"_)  pattern assign(_, "2200/600")  such that Calls*("constant", procedure)  pattern assign(_, _)  such that Uses(while, "call")  pattern while(variable, _) with 6600=assign.stmt# with "call"=procedure.procName  pattern if(variable, _, _)  such that Affects(assign, stmt)  pattern assign(constant, _"4300/8400"_)  such that Uses(procedure, "read") with print.varName="print"  pattern if(_, _, _)  pattern while(then, _)  such that Follows(read, _)  such that Affects(assign, stmt)  such that Uses(procedure, "if")  such that Follows(_, while)  such that Uses(while, variable)  pattern assign(_, _"2600*1500"_)  pattern if(_, _, _)  pattern while(variable, _)  such that Modifies(print, variable)  pattern while(variable, _)  pattern while(print, _)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern if(procedure, _, _)  pattern while(read, _)  such that Modifies(4, variable)  pattern assign(_, _)  such that Modifies(call, "procedure") with print.stmt#=constant.value  pattern assign(while, _)  pattern while(variable, _)  pattern assign(else, "4300*2500") with read.varName="read"  such that Affects(_, assign) with print.varName=read.varName with read.stmt#=6900  such that Follows*(print, 7)  pattern if(_, _, _)  such that Parent(stmt, 5)  such that Affects(assign, _)  pattern assign(_, _)  pattern while(variable, _)  pattern while(constant, _)  pattern assign(_, _"400+3700"_) with assign.stmt#=while.stmt# with "assign"=procedure.procName with read.varName=call.procName  such that Calls*("constant", procedure)  pattern if(assign, _, _)  pattern while(while, _) with "variable"=call.procName  pattern if(_, _, _)  such that Affects(assign, 7)  such that Calls(procedure, procedure) with variable.varName="variable"  pattern assign(_, _) with print.stmt#=read.stmt#  pattern if(variable, _, _)  pattern while(variable, _)  such that Affects*(8, stmt) with call.stmt#=7700 with read.varName="assign" with while.stmt#=while.stmt#  such that Calls("if", procedure)  pattern while(variable, _) with "constant"=print.varName with "procedure"=print.varName  pattern if(_, _, _) with variable.varName=read.varName with 9400=print.stmt# with assign.stmt#=stmt.stmt#  pattern while(_, _)  such that Calls*(_, procedure)  pattern assign(_, _"5500-7300"_)  such that Parent*(_, assign)  such that Parent*(read, 25)  pattern assign(variable, "1800*7900")  such that Parent(assign, _) with variable.varName="constant"  pattern while(call, _)  pattern while(while, _) with 9600=while.stmt# with "while"=call.procName  pattern assign(_, _)  pattern if(variable, _, _)  pattern while(read, _)  pattern while(_, _)  such that Uses(15, variable)  pattern assign(_, _"6100/7100"_)  such that Calls*(procedure, "else")  pattern while(_, _)  pattern assign(variable, "read*8000")  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern while(_, _) with procedure.procName=call.procName  pattern if(_, _, _) with constant.value=9400 with "variable"=print.varName  such that Parent*(while, 9)  pattern while(_, _)  pattern while(variable, _) with print.varName=print.varName  such that Follows(call, _)  pattern if(else, _, _)  such that Affects(stmt, _)  pattern assign(variable, _) with stmt.stmt#=800 with call.procName=read.varName  pattern assign(_, _"(5200+300)*400"_)  such that Calls*(procedure, procedure)  pattern assign(_, _)  pattern assign(else, _"7400-assign"_)  pattern if(_, _, _)  pattern if(else, _, _) with constant.value=call.stmt#  pattern assign(procedure, _"6700+9800"_) with stmt.stmt#=stmt.stmt#  such that Affects*(15, stmt)  such that Parent*(print, 26)  such that Next(17, assign) with variable.varName=procedure.procName with print.varName="while"  pattern while(procedure, _)  such that Calls(_, procedure)  pattern if(print, _, _) with call.procName="else" with 3700=if.stmt# with "procedure"=read.varName  pattern while(_, _) with read.stmt#=700  such that Follows*(28, stmt)  pattern if(variable, _, _) with 1500=if.stmt# with "else"=variable.varName  pattern if(_, _, _) with "assign"=call.procName  pattern assign(call, _)  pattern assign(_, _)  pattern if(variable, _, _)  such that Follows(stmt, 5) with variable.varName="print" with 9800=constant.value  pattern assign(else, _)  pattern if(variable, _, _)  pattern assign(_, _)  such that Next(while, 23)  such that Calls*(procedure, _)  pattern while(then, _)  such that Affects*(_, assign)  pattern while(variable, _)  such that Calls*(_, procedure)  pattern while(_, _)  pattern while(else, _) with if.stmt#=4600  pattern if(variable, _, _)  pattern if(variable, _, _) with variable.varName=call.procName with "else"=read.varName with print.varName=print.varName  pattern assign(variable, "3200-800")  pattern while(variable, _)  such that Follows(18, read)  pattern assign(variable, _)  such that Next*(read, 1)  pattern if(_, _, _)  such that Follows(_, print)  pattern if(call, _, _)  pattern if(_, _, _)  pattern if(_, _, _)  pattern while(_, _) with "call"=read.varName  such that Follows*(assign, stmt) with read.varName="call" with assign.stmt#=1300  pattern while(while, _)  such that Calls(procedure, _) with "read"=print.varName  pattern assign(_, _"9900+6100"_) with assign.stmt#=7100  such that Calls*(procedure, procedure)  such that Follows*(13, call) with print.varName=read.varName with "variable"=variable.varName with if.stmt#=2600  pattern assign(_, _"3100-7400"_)  pattern while(variable, _)  pattern while(variable, _)  such that Uses(call, "call")  such that Calls(procedure, procedure)  pattern while(call, _) with "if"=call.procName  pattern if(read, _, _) with "else"=procedure.procName with call.stmt#=3300  pattern assign(variable, _)  pattern while(variable, _)  such that Modifies(print, "if") with call.procName="variable"  such that Calls*("if", procedure)  pattern assign(_, _"9500*6400"_)  such that Uses(stmt, "if") with variable.varName="constant"  pattern while(variable, _)  such that Calls*(_, procedure) with "constant"=variable.varName  pattern if(_, _, _) with "if"=procedure.procName  such that Affects(_, stmt)  pattern while(_, _) with read.varName=read.varName  such that Parent*(call, 23)  such that Next*(print, _) with constant.value=7700  pattern if(variable, _, _)  pattern while(variable, _)  pattern if(procedure, _, _) with constant.value=2500  pattern if(_, _, _)  such that Parent(print, _)  pattern while(then, _)  pattern assign(variable, _)  pattern assign(_, _)  such that Affects(2, assign)  such that Affects(27, stmt) with procedure.procName=read.varName with read.varName="while" with 3200=while.stmt#  such that Affects*(assign, _)  pattern assign(variable, _)  pattern if(_, _, _) with variable.varName=print.varName  pattern assign(_, _"variable*9900"_)  such that Modifies(print, variable)  pattern assign(variable, "5900*1100")  such that Affects*(assign, 24)  pattern assign(_, _"(else-variable)+8100"_) with 2300=call.stmt#  such that Parent*(8, read)  pattern if(_, _, _)  pattern assign(_, "500+1400")  pattern if(_, _, _)  pattern if(_, _, _) with 9100=print.stmt#  such that Follows(read, print)  pattern while(variable, _)  pattern while(else, _)  pattern while(call, _)  such that Calls(procedure, procedure)  such that Follows*(assign, stmt)  pattern if(variable, _, _)  such that Parent(28, if)  such that Calls(procedure, "else")  pattern while(variable, _)  such that Affects(assign, _) with "else"=read.varName with 5700=print.stmt# with "read"=print.varName with 3000=read.stmt# with "procedure"=print.varName  pattern if(_, _, _)  such that Parent(while, _)  pattern assign(_, "7200+1800")  such that Parent(_, if)  such that Follows(stmt, if)  pattern while(variable, _)  pattern if(_, _, _)  pattern while(variable, _)  pattern assign(variable, _) with variable.varName=print.varName with call.procName=variable.varName  pattern if(_, _, _) with "print"=print.varName  such that Affects*(assign, 22) with 2200=assign.stmt# with read.stmt#=600  pattern while(_, _) with "call"=procedure.procName with 9100=stmt.stmt#  such that Next(3, call) with "variable"=procedure.procName with while.stmt#=constant.value with 2700=assign.stmt#  pattern while(_, _)  such that Follows*(_, while)  such that Next*(call, 16)  such that Calls*(procedure, procedure)  pattern assign(then, "1200+constant")  such that Affects*(stmt, _)  such that Parent*(_, print) with assign.stmt#=call.stmt# with while.stmt#=read.stmt#  such that Uses(13, variable)  pattern while(_, _) with print.varName="constant" with variable.varName=procedure.procName  pattern if(variable, _, _)  pattern while(variable, _)  pattern if(_, _, _)  pattern if(_, _, _)  such that Follows*(while, call)  pattern assign(_, _"3800/200"_)  pattern while(procedure, _) with 600=stmt.stmt# with "call"=call.procName with constant.value=assign.stmt#  such that Affects(_, stmt)  such that Follows(assign, _)  such that Next*(12, while)  such that Affects(stmt, 27)  such that Affects(stmt, 5) with 8900=call.stmt#  such that Affects(_, assign) with stmt.stmt#=2900 with read.stmt#=6000 with 2600=stmt.stmt#  such that Calls(_, procedure) with stmt.stmt#=300 with procedure.procName=read.varName  such that Follows*(call, if) with read.varName=read.varName  pattern while(constant, _) with print.varName=read.varName with "read"=variable.varName with constant.value=100  such that Uses(10, variable)  such that Next(read, _) with call.procName=variable.varName with assign.stmt#=4900  pattern if(variable, _, _) with call.procName="procedure" with procedure.procName=print.varName with stmt.stmt#=constant.value  pattern assign(variable, _) with 6900=if.stmt#  such that Uses(call, "print")  pattern if(then, _, _)  pattern while(_, _)  pattern if(variable, _, _) with read.stmt#=1200  pattern if(variable, _, _)  pattern while(variable, _)  such that Calls("then", procedure)  pattern assign(constant, _"read*7500"_)  such that Affects(stmt, assign) with variable.varName="call"  pattern assign(_, _"7900*800"_)  pattern while(print, _)  pattern while(variable, _)  such that Parent(stmt, 4) with read.stmt#=1300  pattern while(then, _)  such that Affects(stmt, _)  pattern while(_, _)  pattern assign(variable, "4600*8100") with variable.varName="procedure"  pattern while(call, _)  pattern assign(variable, _)  such that Modifies(23, variable) with while.stmt#=600 with variable.varName="if"  such that Affects(stmt, stmt)  pattern if(variable, _, _) with read.varName="call"  pattern assign(variable, _"2800-4300"_)  pattern if(variable, _, _) with read.varName=procedure.procName with call.procName="if"  pattern if(assign, _, _) with if.stmt#=2100 with read.varName="print"  such that Calls("procedure", procedure)  such that Calls*(procedure, _)  such that Affects(20, assign)  such that Parent(print, 16) with "if"=procedure.procName  pattern assign(if, "8700-if")  pattern while(while, _) with "else"=call.procName with procedure.procName=print.varName  pattern while(while, _)  such that Calls*("then", procedure)  pattern while(variable, _)  pattern while(read, _)  pattern assign(_, _) with stmt.stmt#=print.stmt#  such that Affects*(assign, _) with procedure.procName=call.procName  pattern assign(procedure, "5300-print")  such that Next(assign, _)  such that Next(_, stmt)  such that Uses(print, variable)  pattern if(while, _, _)  pattern while(print, _)  such that Parent*(stmt, 27)  such that Uses(stmt, _)  pattern if(if, _, _)  such that Uses(print, variable)  pattern if(assign, _, _) with assign.stmt#=print.stmt#  such that Calls(procedure, _)  such that Calls*(_, procedure) with while.stmt#=8600  pattern assign(procedure, _"9900/6500"_) with if.stmt#=1100  pattern while(call, _) with call.stmt#=3900 with read.varName=call.procName  such that Calls*(procedure, "procedure")  pattern while(variable, _)  such that Uses(assign, _) with read.varName=print.varName with if.stmt#=9300  such that Next(if, if) with read.varName=print.varName with read.varName="if"  pattern while(_, _)  pattern assign(_, "then*5800") with call.procName=variable.varName  pattern while(_, _)  such that Affects(stmt, stmt) with call.procName="variable" with "print"=variable.varName  pattern if(if, _, _)  pattern while(variable, _)  pattern if(print, _, _) with while.stmt#=9600  such that Next*(18, call)  pattern while(if, _) with procedure.procName=read.varName  pattern assign(_, "(9900-1800)*4200")  pattern assign(variable, "1200+2100")  such that Next(11, print)  pattern while(_, _)  pattern while(_, _)  pattern assign(_, "3000/3900")  pattern while(then, _)  pattern assign(_, _) with stmt.stmt#=call.stmt#  such that Uses(call, _)  pattern assign(_, "3600-2300")  pattern while(_, _)  pattern while(variable, _)  such that Uses(print, _)  pattern assign(variable, _)  such that Affects(stmt, 9) with 2500=if.stmt# with "while"=read.varName with "assign"=read.varName  such that Affects(stmt, 21)  such that Affects(stmt, 16)  such that Calls(_, procedure) with call.stmt#=assign.stmt# with "if"=print.varName  pattern assign(if, _"7200*9700"_)  pattern if(variable, _, _) with assign.stmt#=6700 with call.stmt#=assign.stmt# with call.stmt#=assign.stmt#  pattern assign(assign, _"while*2400"_) with print.stmt#=1000  pattern assign(variable, _) with call.stmt#=4700 with if.stmt#=3800  pattern while(variable, _)  pattern if(variable, _, _) with variable.varName=call.procName  pattern if(variable, _, _)  such that Parent(_, print)  such that Modifies(stmt, _) with read.stmt#=read.stmt# with procedure.procName=procedure.procName with constant.value=if.stmt# with while.stmt#=9000 

5000
54 - Query 54
variable variable; assign assign; print print; constant constant; stmt stmt; read read; procedure procedure; if if; while while; call call; 
Select <variable, assign, print, constant, stmt, read, procedure, if, while, call>  pattern assign(variable, _"5400-6200"_)  pattern if(_, _, _)  pattern if(variable, _, _)  pattern while(call, _) with call.stmt#=if.stmt#  pattern if(_, _, _) with read.varName=call.procName  pattern while(_, _)  such that Affects*(6, assign) with call.stmt#=assign.stmt#  pattern if(_, _, _)  such that Parent(stmt, 28) with while.stmt#=4400  pattern assign(variable, "2300-7600")  pattern while(_, _)  pattern while(variable, _) with 300=while.stmt#  such that Affects*(stmt, 27) with call.procName="call"  pattern while(call, _) with read.varName=read.varName  pattern while(_, _)  such that Calls*(procedure, procedure)  pattern while(_, _)  such that Calls*(procedure, "while")  such that Uses(1, variable)  pattern while(variable, _)  pattern while(print, _)  pattern assign(then, "read*1600")  such that Next*(stmt, call) with 2000=stmt.stmt#  pattern while(_, _)  pattern assign(call, _"3600+2600"_)  pattern while(then, _) with 5200=assign.stmt# with 1900=if.stmt#  such that Modifies(while, variable)  pattern while(variable, _) with read.stmt#=print.stmt#  such that Affects*(stmt, 5)  such that Next(assign, 19)  such that Calls*(procedure, _)  such that Parent*(16, assign) with 4500=read.stmt#  pattern if(read, _, _)  such that Parent(while, _) with print.varName=procedure.procName with procedure.procName="read"  pattern while(print, _)  pattern assign(print, _"3900+7800"_)  pattern while(variable, _) with "while"=print.varName with 1500=call.stmt#  pattern assign(variable, _"8400*3400"_)  pattern while(read, _)  pattern assign(_, "5100-1800")  pattern while(assign, _) with read.stmt#=7600  such that Next(if, _)  such that Uses(24, variable)  pattern assign(print, _"(600/7600)-4200"_) with "assign"=read.varName  pattern while(variable, _)  such that Modifies(3, variable) with "else"=variable.varName  pattern while(variable, _) with assign.stmt#=7300 with constant.value=6900  pattern assign(variable, "9100/3400")  pattern while(variable, _) with print.varName="call"  such that Parent(_, read) with assign.stmt#=400  pattern if(then, _, _) with "while"=variable.varName  pattern while(variable, _)  pattern assign(variable, _"1200*4100"_)  pattern while(else, _)  pattern assign(_, "(1200-3800)*5900") with 2800=read.stmt# with assign.stmt#=stmt.stmt#  such that Uses(25, variable)  such that Next(18, read)  pattern assign(else, "7800/4100") with "then"=print.varName  pattern if(else, _, _)  pattern assign(procedure, _"1500*5200"_)  such that Parent*(read, 8) with 3700=while.stmt#  pattern if(_, _, _)  such that Follows*(19, if)  pattern while(_, _)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern if(variable, _, _)  pattern assign(variable, "9300/3900")  pattern if(_, _, _)  such that Calls(procedure, "if")  pattern assign(_, "8800*900") with if.stmt#=read.stmt#  pattern if(if, _, _)  pattern while(variable, _) with print.stmt#=300 with call.procName=read.varName  pattern while(variable, _) with 2300=assign.stmt#  pattern if(assign, _, _)  pattern if(read, _, _) with print.stmt#=6900  such that Uses(stmt, "procedure")  such that Calls(procedure, procedure) with print.stmt#=while.stmt# with 8300=if.stmt# with read.stmt#=1200 with while.stmt#=stmt.stmt#  pattern while(constant, _) with print.stmt#=8600  pattern assign(variable, _)  such that Calls(procedure, procedure)  pattern if(then, _, _)  pattern assign(variable, _)  pattern assign(constant, "4200-6700")  pattern while(_, _) with variable.varName=variable.varName  such that Parent(call, _) with procedure.procName="call" with read.varName="assign"  such that Next(while, if) with while.stmt#=if.stmt#  such that Next*(read, 24)  pattern while(_, _)  pattern assign(_, "6700+9700")  such that Next*(stmt, _)  pattern assign(variable, _)  pattern assign(_, _) with 5500=assign.stmt#  pattern if(else, _, _)  pattern assign(print, _)  pattern while(_, _)  pattern while(variable, _)  pattern assign(variable, "4800-then")  such that Calls*(procedure, "if") with 1800=stmt.stmt#  pattern while(variable, _)  pattern if(_, _, _)  pattern if(_, _, _) with call.stmt#=5900  pattern assign(call, "4000-3900") with "constant"=print.varName with read.varName=read.varName  pattern if(if, _, _)  such that Uses(assign, "call")  such that Follows(if, _)  pattern while(_, _)  such that Next(2, call)  such that Follows*(_, assign)  such that Next*(_, print)  pattern while(procedure, _) with 2300=while.stmt#  pattern while(then, _)  pattern if(print, _, _)  pattern assign(variable, _"9600+700"_)  pattern assign(_, _) with print.stmt#=stmt.stmt# with variable.varName=call.procName  such that Modifies(2, variable) with print.stmt#=constant.value  such that Follows(if, 23)  such that Affects(25, stmt) with procedure.procName=read.varName with constant.value=8700  such that Calls(_, procedure)  such that Follows(6, assign)  pattern if(then, _, _) with procedure.procName=call.procName  pattern assign(assign, _)  pattern assign(if, _"3200-7200"_)  such that Parent*(assign, read) with read.stmt#=7400  pattern while(_, _)  pattern assign(_, _)  such that Next(read, 11)  pattern if(variable, _, _)  pattern assign(variable, _)  such that Parent*(if, _) with variable.varName="procedure"  such that Affects*(_, assign) with while.stmt#=while.stmt#  such that Follows(print, _) with call.procName="procedure"  pattern if(_, _, _)  pattern if(while, _, _)  pattern while(variable, _) with 1100=read.stmt#  such that Follows*(read, _)  pattern while(variable, _) with call.procName="variable" with variable.varName="procedure"  pattern while(call, _)  pattern if(then, _, _) with print.stmt#=stmt.stmt# with 1500=read.stmt#  such that Calls*(procedure, _) with print.stmt#=5700 with 5400=read.stmt#  pattern assign(variable, "(4700/assign)-4300")  such that Calls(procedure, "then")  such that Follows(8, if) with read.varName=variable.varName  pattern while(variable, _) with 7200=while.stmt# with "while"=print.varName  pattern while(variable, _)  such that Follows*(_, read)  pattern while(call, _)  such that Modifies(while, variable) with stmt.stmt#=2700  such that Uses(call, _) with assign.stmt#=2500  pattern if(_, _, _)  pattern while(variable, _)  pattern while(variable, _)  such that Next(assign, assign)  pattern assign(variable, _"6500*7400"_)  pattern assign(_, _"3400/2000"_) with 1400=assign.stmt# with procedure.procName="constant" with stmt.stmt#=call.stmt#  pattern while(_, _) with while.stmt#=assign.stmt#  pattern if(variable, _, _)  such that Follows*(while, _) with 3600=print.stmt#  pattern if(_, _, _)  such that Uses(5, variable)  pattern if(read, _, _)  such that Follows(while, 26)  pattern if(_, _, _)  pattern assign(_, "4800/1200") with print.varName=call.procName with stmt.stmt#=call.stmt# with print.varName=variable.varName  pattern if(_, _, _)  pattern while(_, _)  pattern if(print, _, _)  pattern while(if, _)  pattern assign(_, _"2900/300"_)  pattern assign(variable, _)  pattern assign(while, _)  pattern while(variable, _)  pattern if(variable, _, _) with 7900=while.stmt#  pattern while(variable, _)  such that Uses(assign, variable)  such that Next*(call, call)  pattern if(_, _, _) with "if"=print.varName with "read"=procedure.procName with 4200=constant.value  pattern while(then, _) with constant.value=assign.stmt#  pattern while(variable, _)  pattern while(_, _)  pattern if(variable, _, _) with while.stmt#=9400 with variable.varName=call.procName  such that Affects*(stmt, stmt)  pattern if(variable, _, _) with variable.varName="variable"  such that Follows*(_, stmt)  pattern while(procedure, _)  pattern while(_, _)  pattern while(else, _)  such that Follows(1, print)  pattern assign(_, "4900-3400") with if.stmt#=print.stmt#  pattern while(_, _)  pattern if(_, _, _) with "print"=read.varName with variable.varName="else" with "else"=read.varName  pattern assign(if, "(1400-1100)*2300") with while.stmt#=read.stmt#  pattern if(print, _, _)  such that Modifies(16, variable)  pattern assign(_, _"900-3600"_) with "call"=procedure.procName  such that Next(19, call)  pattern assign(variable, _"8700*8200"_) with assign.stmt#=stmt.stmt#  pattern assign(_, "2800/4400")  pattern if(else, _, _)  pattern assign(procedure, _)  such that Uses(14, variable)  pattern assign(variable, _"2900*9100"_)  pattern assign(variable, _) with "if"=read.varName  such that Modifies(3, variable)  pattern if(print, _, _) with constant.value=6100  such that Affects(_, stmt)  pattern if(procedure, _, _) with print.varName="while"  such that Uses(while, "read") with 4400=constant.value with print.stmt#=1900 with if.stmt#=8700 with variable.varName=call.procName with call.procName=call.procName  such that Next*(read, while)  pattern while(variable, _)  pattern while(_, _)  such that Next*(while, 4)  such that Parent(print, 11) with call.stmt#=7000 with call.procName="call"  such that Calls*(procedure, procedure)  such that Calls*(procedure, _)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern assign(variable, _"4400+9100"_) with procedure.procName="if" with variable.varName=print.varName  such that Follows(while, 10)  pattern while(variable, _)  such that Modifies(if, "while") with 8300=while.stmt#  such that Modifies(read, variable)  pattern assign(assign, _) with call.stmt#=8800  such that Modifies(18, variable)  pattern assign(_, "2900-2600") with stmt.stmt#=constant.value  pattern if(variable, _, _) with 2800=assign.stmt#  pattern if(_, _, _) with stmt.stmt#=call.stmt#  pattern if(variable, _, _) with read.varName=procedure.procName with print.varName=procedure.procName  such that Uses(26, variable)  pattern assign(_, "600/1500") with call.stmt#=if.stmt#  pattern if(_, _, _)  such that Follows(if, 6)  pattern if(assign, _, _)  pattern while(_, _)  pattern while(call, _)  such that Follows*(stmt, if)  pattern assign(read, "800*5600")  pattern while(assign, _)  such that Calls*(procedure, _) with "print"=read.varName  pattern if(else, _, _) with if.stmt#=while.stmt# with read.stmt#=4500  pattern assign(variable, _"2700-1800"_)  pattern assign(while, "4200/7700")  such that Calls(procedure, procedure)  such that Affects(_, assign) with variable.varName=call.procName  pattern while(assign, _) with call.procName="if"  such that Affects*(stmt, _) with call.procName="then"  pattern assign(variable, _"4600+2000"_)  pattern while(variable, _)  such that Calls("print", procedure) with while.stmt#=if.stmt#  pattern assign(constant, _"4500*4300"_) with stmt.stmt#=9800  pattern assign(variable, "variable*6200")  pattern if(_, _, _) with 5000=print.stmt#  pattern assign(_, "3400+3600") with assign.stmt#=7300  pattern while(variable, _) with constant.value=assign.stmt#  such that Affects(28, assign)  pattern assign(_, "1900-3400") with 500=print.stmt# with procedure.procName=call.procName with 900=stmt.stmt#  pattern while(else, _)  such that Calls(_, procedure)  pattern while(constant, _)  pattern if(variable, _, _) with print.varName=variable.varName  pattern if(_, _, _)  such that Parent*(assign, print)  such that Uses(while, _)  pattern assign(variable, _"3100+1300"_) with variable.varName="else"  pattern while(_, _)  pattern assign(_, _"300*7600"_) with 1300=while.stmt# with print.varName="read"  pattern while(variable, _)  such that Modifies(while, _)  such that Parent(_, if)  pattern assign(else, "3200*7800")  pattern assign(variable, _"7800/500"_)  pattern while(variable, _)  such that Calls*(_, procedure)  such that Calls*(procedure, _)  such that Follows(11, while)  such that Affects*(_, stmt)  pattern assign(variable, _"4600-6300"_)  such that Parent*(call, 22) with constant.value=7400  such that Next(while, read) with procedure.procName=print.varName  such that Affects*(stmt, 17)  pattern assign(_, _"8100+7700"_)  pattern if(variable, _, _) with procedure.procName=read.varName  pattern if(_, _, _) with if.stmt#=1500  pattern if(_, _, _)  pattern if(_, _, _)  pattern if(_, _, _) with read.stmt#=8900  pattern while(variable, _)  pattern if(variable, _, _)  pattern while(_, _) with "call"=read.varName  pattern if(if, _, _)  such that Follows(read, print) with call.procName="variable" with 2300=print.stmt# with "print"=print.varName with if.stmt#=read.stmt# with 100=constant.value with "call"=call.procName  pattern while(procedure, _) with assign.stmt#=constant.value with 4200=read.stmt# with "else"=call.procName with call.procName="if"  pattern if(constant, _, _)  such that Affects(assign, _)  such that Calls(_, procedure)  pattern assign(variable, _"5100+8300"_) with print.varName=read.varName with print.stmt#=stmt.stmt# with stmt.stmt#=8300  pattern assign(variable, _) with 8000=print.stmt# with call.procName=variable.varName  pattern while(_, _)  such that Follows*(_, stmt)  pattern assign(print, _"8500+7600"_) with if.stmt#=if.stmt# with "then"=print.varName  pattern while(variable, _)  such that Modifies(print, _)  such that Affects(stmt, assign)  such that Modifies(print, variable)  pattern while(_, _) with print.varName="procedure"  pattern assign(_, "(9400-6900)-3800")  pattern while(variable, _)  such that Next*(while, _) with if.stmt#=2100  pattern assign(then, "9100-200") with stmt.stmt#=if.stmt# with print.stmt#=while.stmt# with if.stmt#=while.stmt#  such that Calls(procedure, "constant")  such that Next(_, while)  such that Modifies(1, variable)  pattern while(variable, _)  pattern assign(procedure, _)  such that Calls*(procedure, _)  such that Uses(7, variable)  pattern if(_, _, _)  such that Parent*(8, stmt) with stmt.stmt#=call.stmt#  pattern assign(read, _"7600/3300"_)  such that Affects(_, stmt)  pattern assign(then, "7400+9200")  pattern assign(if, "9600+7700") with read.varName="if"  pattern if(variable, _, _) with "read"=procedure.procName with "call"=read.varName  pattern while(else, _) with read.stmt#=print.stmt#  pattern assign(variable, _"if/4500"_) with 4700=assign.stmt# with constant.value=read.stmt#  pattern while(variable, _)  pattern if(_, _, _) with 6400=stmt.stmt#  pattern if(variable, _, _)  pattern while(call, _)  such that Uses(read, variable)  pattern assign(variable, "procedure/3900")  such that Affects(stmt, stmt)  pattern assign(variable, _"4900*7300"_) 

5000
55 - Query 55
assign assign; variable variable; print print; constant constant; stmt stmt; read read; procedure procedure; while while; if if; call call; 
Select <assign, variable, print, constant, stmt, read, procedure, while, if, call>  pattern assign(_, "3000*500")  pattern while(variable, _)  such that Affects*(stmt, _)  pattern assign(while, _)  pattern if(variable, _, _)  pattern if(_, _, _) with print.stmt#=1200  such that Parent*(call, stmt) with variable.varName="else"  pattern if(_, _, _) with "read"=print.varName  such that Follows*(read, _)  pattern assign(_, _)  pattern while(_, _) with "then"=print.varName  pattern if(_, _, _)  pattern assign(variable, _) with print.varName="constant"  pattern while(assign, _)  pattern while(assign, _) with "assign"=print.varName  pattern assign(variable, "6100*constant")  such that Modifies(27, variable)  pattern assign(variable, _)  such that Calls(procedure, "then") with 5100=constant.value with procedure.procName=procedure.procName with constant.value=read.stmt#  such that Calls*("read", procedure)  pattern assign(variable, _) with procedure.procName=print.varName  such that Next*(if, stmt)  such that Affects(stmt, _)  such that Calls*(procedure, "call")  pattern assign(then, _"8500/6300"_) with read.varName=print.varName with print.varName=read.varName  pattern if(_, _, _)  pattern while(_, _)  such that Next(_, assign)  such that Modifies(print, _)  such that Parent*(call, if)  pattern if(variable, _, _) with call.stmt#=3600  pattern if(_, _, _) with 8400=while.stmt# with stmt.stmt#=8400  such that Follows*(print, _)  pattern if(_, _, _)  pattern if(if, _, _) with call.procName=read.varName  such that Uses(if, _)  pattern if(_, _, _)  such that Affects(_, assign) with variable.varName="print" with assign.stmt#=assign.stmt#  such that Modifies(stmt, "if")  pattern if(_, _, _) with if.stmt#=7100 with variable.varName=procedure.procName with stmt.stmt#=print.stmt#  such that Affects(stmt, stmt)  such that Follows(16, call) with call.procName=print.varName  pattern while(_, _) with call.stmt#=6300 with variable.varName="while"  pattern assign(variable, _"2200-7400"_)  pattern while(read, _)  pattern if(variable, _, _)  such that Follows*(while, _)  such that Follows*(read, _) with if.stmt#=2500  such that Calls("read", procedure)  pattern assign(variable, _)  such that Calls("constant", procedure) with assign.stmt#=2400  pattern assign(read, "5200+1300")  pattern assign(constant, _"700/1400"_)  such that Parent*(call, stmt)  pattern if(constant, _, _)  pattern if(then, _, _) with call.procName=variable.varName  such that Follows*(assign, _) with read.varName="assign"  pattern while(call, _)  such that Affects*(_, stmt)  pattern assign(variable, _"9400/4800"_)  pattern while(variable, _)  pattern assign(_, _) with print.stmt#=1500  such that Follows*(_, read)  such that Calls*(procedure, procedure)  pattern assign(_, _"8600-9900"_) with call.procName="constant"  pattern if(variable, _, _)  pattern while(read, _)  pattern while(variable, _) with "procedure"=print.varName  pattern if(constant, _, _)  such that Calls(procedure, procedure)  pattern assign(variable, _)  pattern assign(variable, "2400*2000")  such that Calls*(_, procedure)  pattern while(variable, _) with if.stmt#=500  such that Follows(_, call)  such that Affects*(13, assign)  pattern while(while, _)  such that Uses(17, variable) with print.stmt#=300  such that Modifies(assign, _)  pattern assign(call, "constant+7900")  pattern assign(if, _)  pattern while(read, _) with assign.stmt#=read.stmt# with procedure.procName=call.procName with call.stmt#=8600  pattern if(call, _, _)  such that Modifies(stmt, _)  pattern if(then, _, _)  pattern assign(variable, "100-3100")  such that Uses(read, variable) with print.varName=print.varName  pattern if(variable, _, _) with read.varName="else"  such that Calls(_, procedure) with 4500=print.stmt# with variable.varName="while"  pattern if(else, _, _)  such that Calls("while", procedure) with print.varName=read.varName  pattern while(then, _)  such that Calls("while", procedure) with constant.value=constant.value  such that Parent(assign, call)  such that Calls*(_, procedure) with print.varName=procedure.procName  pattern while(_, _)  pattern if(variable, _, _)  such that Modifies(if, _)  pattern if(_, _, _)  pattern if(variable, _, _)  pattern while(_, _)  pattern assign(variable, "1900*100")  pattern while(_, _)  pattern assign(variable, "1600-9800")  pattern while(_, _) with print.varName=call.procName  pattern while(print, _)  such that Calls(procedure, "procedure")  pattern assign(_, "200/5100")  pattern if(_, _, _)  pattern while(_, _) with read.stmt#=1200  pattern if(constant, _, _)  such that Next(stmt, 7) with "then"=print.varName with "call"=print.varName with assign.stmt#=read.stmt#  pattern if(variable, _, _)  pattern assign(_, _"(6700+1600)-6300"_)  pattern assign(variable, _"7200/2600"_)  such that Follows*(19, while) with assign.stmt#=call.stmt#  pattern while(_, _) with assign.stmt#=while.stmt#  such that Uses(print, _) with read.stmt#=call.stmt# with 1200=if.stmt#  pattern assign(procedure, _"5700*7000"_)  pattern if(variable, _, _)  pattern while(variable, _) with "while"=variable.varName with procedure.procName="call"  pattern assign(procedure, _"read*5400"_)  pattern if(variable, _, _)  such that Parent*(read, _) with print.varName=print.varName  such that Calls(_, procedure)  pattern while(variable, _) with while.stmt#=7600  pattern while(assign, _)  such that Modifies(stmt, variable) with 8300=if.stmt#  pattern if(variable, _, _)  pattern assign(_, _)  such that Modifies(while, variable) with call.procName="else"  such that Next*(_, read)  such that Parent(29, stmt)  such that Modifies(while, variable)  pattern assign(variable, _"9400/procedure"_)  pattern while(call, _)  such that Modifies(while, "while")  pattern while(variable, _)  such that Uses(stmt, "assign")  such that Uses(while, variable)  such that Follows(if, call)  pattern if(if, _, _)  pattern assign(_, _"4800/3000"_)  pattern while(_, _) with print.varName="variable"  pattern assign(variable, _"6300-1800"_) with procedure.procName="while"  pattern while(_, _) with call.procName="assign"  pattern assign(if, _)  pattern assign(_, _"5100/4600"_) with read.stmt#=6600 with while.stmt#=7500 with "else"=call.procName with stmt.stmt#=8300  such that Uses(print, _)  such that Follows(_, assign)  pattern while(variable, _)  pattern while(assign, _)  such that Calls*(procedure, procedure) with procedure.procName="while"  such that Next*(print, if)  such that Affects(_, stmt)  pattern while(_, _)  such that Modifies(assign, _) with print.varName=variable.varName  pattern assign(constant, _"2100+5500"_)  such that Next*(24, if)  pattern assign(while, _)  pattern assign(_, "constant*3100")  such that Calls("read", procedure)  pattern while(_, _)  such that Parent*(call, 10)  such that Next*(22, while)  pattern if(procedure, _, _)  pattern if(_, _, _)  pattern assign(variable, _)  such that Affects*(stmt, _)  such that Uses(1, variable) with stmt.stmt#=if.stmt#  pattern assign(while, _"5800/5600"_)  pattern if(assign, _, _)  pattern assign(variable, "9600+5100") with variable.varName="while"  such that Follows(assign, _) with procedure.procName=procedure.procName  pattern if(_, _, _)  pattern while(variable, _)  pattern while(variable, _) with "variable"=procedure.procName  pattern while(constant, _) with while.stmt#=7000  such that Affects(14, stmt) with 6500=while.stmt# with print.stmt#=read.stmt#  such that Affects*(_, assign)  pattern while(if, _) with 3400=stmt.stmt#  pattern assign(_, _"(if-700)-7200"_) with 3200=constant.value  pattern while(_, _)  pattern assign(print, _) with constant.value=5100  pattern if(call, _, _) with 1000=stmt.stmt#  pattern assign(_, _)  pattern if(variable, _, _)  pattern while(_, _)  such that Next*(stmt, 14) with 3600=print.stmt#  pattern assign(_, "1000*9100")  such that Affects*(stmt, 5)  pattern if(then, _, _) with variable.varName=print.varName  such that Affects*(_, stmt) with read.varName="else"  pattern if(_, _, _) with 2300=print.stmt#  pattern assign(if, _"(4600/8800)-1400"_)  such that Calls(_, procedure) with read.stmt#=3600 with "then"=variable.varName  pattern while(_, _)  pattern if(_, _, _)  pattern while(print, _) with stmt.stmt#=4400  such that Calls(procedure, _) with while.stmt#=200  pattern assign(variable, _"8800+7900"_) with read.varName="if" with procedure.procName=call.procName with read.varName=read.varName  such that Affects(2, stmt)  pattern if(variable, _, _)  such that Modifies(16, variable) with read.stmt#=3200  such that Calls*(procedure, _)  such that Modifies(14, variable)  such that Next(16, if)  such that Parent(print, _)  pattern while(while, _)  such that Follows*(_, stmt) with procedure.procName=procedure.procName  pattern assign(variable, _)  such that Uses(23, variable) with call.stmt#=while.stmt#  pattern if(variable, _, _) with print.stmt#=4300 with print.varName="procedure" with assign.stmt#=9100 with print.varName=procedure.procName  pattern if(variable, _, _)  such that Modifies(28, variable) with print.varName="constant" with read.stmt#=2700  pattern if(constant, _, _)  pattern if(_, _, _) with variable.varName="while" with read.stmt#=7700  pattern while(assign, _)  pattern if(_, _, _)  pattern assign(while, _) with 7100=print.stmt#  pattern if(_, _, _) with read.stmt#=500  pattern assign(variable, "4400-8900")  pattern assign(_, _"600/6500"_)  pattern if(if, _, _) with procedure.procName="constant" with assign.stmt#=call.stmt#  pattern if(variable, _, _) with call.procName=print.varName with procedure.procName="read"  pattern if(_, _, _) with call.stmt#=6000  pattern while(variable, _)  pattern assign(variable, _"4200*1600"_)  such that Next*(while, 29)  such that Follows(_, stmt)  such that Next(if, read)  pattern if(read, _, _) with print.varName="else"  such that Modifies(4, variable)  pattern while(variable, _)  such that Affects*(11, stmt)  pattern if(variable, _, _) with "if"=call.procName  pattern if(variable, _, _)  pattern while(variable, _) with call.procName=read.varName  pattern if(variable, _, _) with stmt.stmt#=6100  pattern assign(variable, _)  such that Uses(assign, "variable")  such that Next(call, print) with 7800=constant.value  such that Affects*(stmt, 24)  such that Affects(assign, assign) with call.procName="call" with variable.varName="then"  pattern assign(variable, "(5900+3100)/9800")  such that Calls(procedure, procedure)  pattern if(read, _, _)  such that Uses(if, "read") with assign.stmt#=7200  pattern while(variable, _)  pattern while(variable, _)  pattern if(variable, _, _)  pattern assign(_, "(8000*8300)/1600")  pattern if(read, _, _)  pattern assign(_, _) with procedure.procName=read.varName with constant.value=if.stmt#  pattern if(variable, _, _) with print.stmt#=5900  pattern while(_, _)  pattern if(procedure, _, _)  pattern assign(_, _"else/6600"_)  pattern if(print, _, _)  pattern while(variable, _) with 6900=assign.stmt#  such that Modifies(print, _) with assign.stmt#=3400  pattern while(_, _)  such that Uses(call, _)  such that Affects*(stmt, 26) with 6300=assign.stmt# with stmt.stmt#=assign.stmt#  such that Affects*(assign, stmt)  such that Uses(call, variable)  pattern if(call, _, _) with call.stmt#=call.stmt# with print.varName=read.varName  such that Follows*(_, assign)  pattern assign(read, _"4100*8400"_)  such that Affects*(22, stmt) with "then"=call.procName  pattern if(if, _, _) with print.varName=call.procName with print.stmt#=6300  pattern assign(print, _)  pattern assign(_, _)  such that Parent(read, 28)  pattern if(variable, _, _) with read.stmt#=if.stmt#  such that Uses(10, variable)  pattern assign(then, _"1400/2900"_) with "variable"=read.varName  pattern assign(then, _) with print.stmt#=4500  such that Calls(procedure, procedure)  pattern while(variable, _)  pattern assign(_, _)  pattern while(variable, _) with procedure.procName=procedure.procName  pattern while(_, _) with call.procName="assign"  pattern if(print, _, _)  pattern assign(variable, "5400-while")  pattern while(variable, _)  pattern if(_, _, _) with if.stmt#=assign.stmt# with 5800=if.stmt#  pattern while(print, _) with procedure.procName="variable"  such that Calls*(procedure, _)  pattern if(_, _, _)  such that Next*(while, 21) with 9700=read.stmt# with constant.value=stmt.stmt# with "else"=read.varName  pattern while(_, _) with 7300=read.stmt# with 5300=stmt.stmt#  such that Modifies(20, variable)  such that Parent*(call, assign) with print.varName=print.varName with print.stmt#=stmt.stmt# with if.stmt#=300  such that Calls(procedure, _)  such that Next*(if, while)  pattern if(while, _, _) with variable.varName="read" with while.stmt#=print.stmt#  such that Uses(17, variable)  pattern while(_, _)  pattern assign(variable, "8800/4700") with read.stmt#=9900  such that Follows(23, print)  pattern while(_, _)  pattern assign(_, _)  pattern if(_, _, _) with procedure.procName="print" with "read"=call.procName  pattern if(_, _, _)  pattern while(variable, _) with call.stmt#=read.stmt#  such that Next(if, _)  pattern assign(variable, _) with procedure.procName="assign"  pattern assign(_, _"(3500*6100)+7100"_)  such that Modifies(call, variable)  pattern while(variable, _)  pattern while(_, _)  pattern while(_, _)  pattern assign(variable, _)  pattern if(_, _, _)  pattern assign(variable, _"(8700+5300)-3400"_) with print.varName="print" with "if"=procedure.procName  such that Parent*(_, print)  such that Parent*(if, 9)  pattern while(variable, _) with 3300=constant.value with read.varName="if"  such that Follows*(_, read)  such that Calls*(procedure, procedure)  such that Next*(assign, read)  pattern while(_, _)  pattern assign(_, _"6600/constant"_)  such that Next*(call, 14) with print.varName=print.varName  such that Affects*(stmt, _)  pattern assign(_, _)  such that Modifies(assign, "variable")  pattern while(then, _)  such that Affects*(stmt, 11)  pattern if(_, _, _)  such that Next(print, _) with procedure.procName=read.varName  pattern assign(constant, "8800/1600")  pattern while(_, _) with variable.varName=call.procName  such that Affects*(15, stmt) with "constant"=call.procName with 4700=stmt.stmt#  pattern while(_, _) with procedure.procName=call.procName  pattern while(else, _)  pattern while(variable, _) with variable.varName="print"  pattern while(_, _) 

5000
56 - Query 56
variable variable; print print; assign assign; constant constant; stmt stmt; read read; procedure procedure; if if; while while; call call; 
Select <variable, print, assign, constant, stmt, read, procedure, if, while, call>  pattern if(variable, _, _) with print.stmt#=if.stmt#  pattern while(_, _)  pattern assign(variable, _) with variable.varName="assign"  pattern while(variable, _) with stmt.stmt#=2900  pattern assign(variable, _"700/3800"_)  pattern if(_, _, _)  pattern assign(then, _)  such that Next*(11, read) with call.stmt#=while.stmt# with variable.varName="else"  such that Calls(procedure, _)  pattern if(while, _, _) with 1700=if.stmt#  pattern while(read, _)  pattern assign(variable, _"2500-2500"_)  pattern assign(_, "8100-6900")  pattern if(constant, _, _)  such that Modifies(19, variable)  pattern assign(_, _) with "read"=variable.varName  such that Calls(procedure, _)  such that Follows(if, 3) with if.stmt#=7200  pattern assign(variable, _"8500+8900"_)  pattern while(while, _)  such that Parent*(_, assign) with "print"=procedure.procName  such that Uses(13, variable)  such that Uses(if, _)  pattern if(_, _, _)  pattern if(procedure, _, _)  such that Affects(12, assign)  pattern while(else, _) with print.varName="then" with procedure.procName="call"  pattern while(variable, _) with call.procName=print.varName  pattern while(_, _)  pattern if(variable, _, _) with assign.stmt#=6400  pattern if(_, _, _)  pattern while(variable, _)  pattern assign(variable, "200/4200")  pattern assign(_, _)  such that Affects*(_, assign)  pattern assign(variable, "then-3500") with call.stmt#=2100 with "assign"=procedure.procName  pattern while(_, _) with 8400=assign.stmt#  pattern assign(variable, "6300-3100") with read.stmt#=print.stmt#  such that Affects(assign, _) with assign.stmt#=400 with 3800=read.stmt#  pattern while(_, _)  such that Uses(print, _)  pattern if(then, _, _) with variable.varName="constant"  pattern if(variable, _, _)  pattern if(procedure, _, _) with stmt.stmt#=print.stmt#  pattern assign(variable, _)  pattern assign(procedure, _"1600-7900"_)  pattern if(variable, _, _)  pattern assign(_, _"read*4600"_)  such that Calls(procedure, "assign")  such that Next*(print, 8)  pattern assign(variable, _) with if.stmt#=call.stmt#  pattern assign(assign, _"6700+1200"_)  such that Modifies(7, variable)  such that Affects*(stmt, stmt) with if.stmt#=3000  such that Uses(assign, _) with read.stmt#=3600  pattern if(variable, _, _)  pattern assign(variable, _"900*8100"_)  pattern if(read, _, _) with "if"=procedure.procName  pattern assign(_, "((6200-4500)/5700)*9100")  such that Parent*(_, call)  such that Calls(procedure, "procedure") with 5000=assign.stmt#  such that Affects*(_, stmt)  pattern assign(_, _)  such that Follows(if, _)  pattern if(variable, _, _)  such that Uses(3, variable)  pattern if(variable, _, _)  such that Parent*(_, print)  such that Modifies(18, variable)  such that Uses(18, variable) with variable.varName="assign"  pattern assign(_, _"2900*6200"_) with variable.varName="constant"  pattern if(_, _, _)  pattern assign(if, "6500/print")  such that Next(assign, stmt) with read.stmt#=stmt.stmt#  such that Follows*(_, stmt)  such that Affects(assign, _)  pattern assign(_, _"((3000/2900)/7800)/8000"_)  such that Follows*(6, read)  pattern if(read, _, _)  pattern while(variable, _)  such that Calls*("call", procedure) with 8400=assign.stmt# with constant.value=9500 with read.varName=print.varName with print.varName=read.varName with stmt.stmt#=call.stmt#  pattern if(_, _, _)  pattern if(while, _, _)  pattern assign(_, "2500+5700")  such that Next(call, assign)  such that Affects*(_, assign)  pattern if(print, _, _) with 3800=read.stmt#  such that Follows(while, print) with stmt.stmt#=print.stmt#  such that Next(call, 26)  pattern assign(_, "3300*2100") with print.varName="procedure"  pattern assign(_, "3200*1100") with constant.value=2500  pattern if(while, _, _)  pattern assign(print, "5900-7300")  such that Next(_, assign)  pattern while(then, _) with print.stmt#=if.stmt#  pattern while(variable, _)  pattern while(if, _)  pattern assign(read, _"(100/6600)-4600"_) with assign.stmt#=3900  pattern if(assign, _, _)  such that Next(print, stmt) with stmt.stmt#=stmt.stmt# with print.varName="variable"  pattern while(_, _)  pattern if(variable, _, _)  pattern while(_, _)  such that Follows(read, call)  pattern assign(_, _"6000*700"_) with procedure.procName=procedure.procName  such that Parent(_, call) with constant.value=stmt.stmt# with read.varName="constant"  such that Uses(23, variable)  pattern while(print, _) with 3400=if.stmt# with read.varName="while"  pattern while(variable, _) with 1400=constant.value  pattern assign(variable, _"4100+5000"_)  pattern assign(_, "700/100")  pattern while(_, _)  pattern while(_, _)  such that Uses(print, _)  pattern if(assign, _, _) with "procedure"=procedure.procName  pattern if(_, _, _)  such that Calls(procedure, "if")  pattern if(_, _, _)  pattern if(procedure, _, _)  such that Follows(7, call)  such that Next*(stmt, 22) with procedure.procName=variable.varName with stmt.stmt#=7300  such that Parent(assign, 18) with constant.value=call.stmt# with print.stmt#=while.stmt#  such that Follows(assign, call)  pattern assign(read, _"if+5500"_)  pattern if(_, _, _)  such that Modifies(while, _)  pattern if(then, _, _) with print.varName="variable"  pattern while(variable, _)  pattern while(_, _)  such that Affects(20, stmt)  pattern assign(_, _"9400+4400"_) with "while"=print.varName  pattern while(constant, _)  pattern if(_, _, _)  pattern assign(procedure, "7300+if") with procedure.procName="variable"  such that Follows(read, stmt)  pattern while(read, _)  such that Parent(26, call) with call.procName=call.procName with 200=stmt.stmt#  pattern if(variable, _, _)  pattern assign(_, "5900+7700")  such that Calls(procedure, "else") with "then"=variable.varName  such that Parent*(if, 15)  pattern if(_, _, _)  such that Parent*(_, if) with read.stmt#=constant.value  such that Uses(print, variable) with call.procName=call.procName  pattern if(while, _, _)  such that Follows*(1, print)  such that Parent*(if, print)  pattern assign(_, _"9800/1000"_) with 9300=stmt.stmt#  pattern if(call, _, _) with print.varName="if"  pattern assign(then, _"5200/300"_) with print.varName=call.procName  pattern while(_, _)  pattern if(_, _, _) with variable.varName="assign"  such that Next*(assign, while)  pattern while(constant, _) with variable.varName=variable.varName  pattern while(_, _) with procedure.procName="else"  pattern assign(variable, _"8200+5200"_) with 4000=while.stmt#  pattern assign(procedure, _"8800-1000"_) with read.stmt#=6500  pattern while(_, _)  pattern assign(_, _"8300*1500"_)  pattern if(_, _, _)  pattern assign(_, "9900-2500")  pattern while(variable, _) with "constant"=read.varName with variable.varName="read" with procedure.procName="variable" with print.varName="read"  pattern assign(then, _"2600/9700"_)  pattern assign(variable, "1000*5100")  such that Follows*(assign, _)  pattern assign(_, "3900*variable")  such that Calls*(procedure, procedure)  pattern while(variable, _)  such that Follows(print, _)  pattern if(read, _, _) with procedure.procName="while"  such that Affects(_, assign)  such that Affects*(assign, assign)  such that Follows(print, 15)  pattern while(variable, _)  pattern while(assign, _)  pattern assign(variable, _) with call.procName="variable"  pattern if(_, _, _) with print.varName="procedure"  such that Modifies(if, "read")  such that Affects*(23, assign) with read.varName=read.varName  pattern assign(if, _) with call.stmt#=2100 with call.procName=call.procName  pattern assign(_, "1300/9200")  pattern while(variable, _)  such that Affects(_, stmt)  pattern while(variable, _) with if.stmt#=call.stmt#  pattern assign(else, _) with stmt.stmt#=constant.value with "call"=variable.varName with "print"=print.varName with "then"=print.varName  pattern if(variable, _, _)  such that Next*(while, _) with procedure.procName=call.procName  such that Calls*(procedure, procedure)  pattern if(_, _, _)  pattern while(variable, _) with if.stmt#=2100  such that Follows(read, _) with call.procName="while" with print.varName="constant" with read.stmt#=assign.stmt#  pattern assign(variable, _) with procedure.procName="call"  pattern if(_, _, _) with "then"=procedure.procName  pattern if(variable, _, _)  such that Next*(_, print) with read.varName=read.varName  such that Calls*("read", procedure)  pattern if(variable, _, _) with while.stmt#=call.stmt#  pattern assign(constant, _)  pattern assign(variable, _) with constant.value=7800  such that Calls*(_, procedure)  such that Next*(_, print)  pattern while(variable, _)  pattern assign(print, _) with call.procName="assign"  pattern if(while, _, _)  pattern if(_, _, _) with "while"=read.varName with print.stmt#=4900 with 2200=call.stmt#  such that Uses(print, variable)  pattern if(_, _, _)  such that Uses(if, "then")  pattern if(_, _, _)  pattern assign(variable, _) with 3000=print.stmt#  pattern if(_, _, _)  pattern if(variable, _, _)  pattern assign(_, _) with read.varName=read.varName  such that Next(while, stmt) with "constant"=procedure.procName with 7500=if.stmt#  pattern if(_, _, _)  pattern assign(_, "800+3100") with 4400=constant.value  such that Parent(read, read)  pattern if(variable, _, _)  pattern if(read, _, _)  pattern while(variable, _)  pattern while(variable, _)  such that Follows(print, _)  pattern while(variable, _) with constant.value=600  pattern assign(_, "4600*6700")  such that Uses(2, variable)  pattern if(assign, _, _) with procedure.procName="then"  such that Follows(9, call)  such that Modifies(while, variable)  pattern if(print, _, _)  pattern if(procedure, _, _) with 2800=call.stmt#  pattern if(_, _, _)  pattern assign(_, "constant*3800") with call.procName="else"  such that Next(23, print)  pattern assign(_, _"4100+6400"_)  pattern if(_, _, _)  pattern if(print, _, _) with "call"=procedure.procName  such that Modifies(call, variable)  pattern if(variable, _, _) with while.stmt#=while.stmt# with print.varName="variable"  pattern assign(variable, "7900/5600") with print.varName=read.varName  such that Calls(_, procedure)  pattern assign(variable, "6800+7100")  pattern if(if, _, _) with print.stmt#=6700  such that Parent(assign, if)  such that Follows*(print, _)  such that Next(21, call)  pattern if(variable, _, _)  such that Follows(read, while) with assign.stmt#=assign.stmt# with call.procName="print"  pattern if(variable, _, _) with procedure.procName=call.procName  pattern while(then, _) with call.procName=print.varName  pattern while(_, _)  such that Calls(procedure, "print")  such that Next(read, 13)  such that Next(_, if)  such that Modifies(assign, "print")  pattern while(_, _) with "procedure"=call.procName  pattern if(variable, _, _)  such that Calls*(procedure, "while") with while.stmt#=if.stmt#  pattern while(_, _) with print.stmt#=print.stmt# with read.stmt#=5100 with "variable"=read.varName  such that Calls*(procedure, _)  pattern if(variable, _, _)  such that Modifies(stmt, "if")  pattern if(variable, _, _) with call.stmt#=print.stmt#  pattern if(_, _, _)  pattern if(constant, _, _) with variable.varName=procedure.procName  such that Uses(assign, "print")  such that Parent(_, while) with assign.stmt#=2600  such that Parent(stmt, read) with 2200=read.stmt#  such that Uses(call, variable) with read.varName=read.varName  pattern assign(print, _)  such that Affects*(assign, 26)  pattern if(if, _, _)  pattern assign(print, _"3600-4200"_)  pattern while(_, _)  pattern if(_, _, _)  pattern assign(constant, "8000+5400")  pattern if(variable, _, _)  pattern if(variable, _, _) with while.stmt#=3800 with print.varName="constant"  pattern assign(variable, _)  pattern while(_, _) with while.stmt#=3700  pattern if(_, _, _)  such that Parent(13, read)  such that Next(call, print)  pattern if(call, _, _) with call.stmt#=if.stmt# with print.varName=call.procName  pattern assign(variable, "while/constant") with if.stmt#=5000  such that Uses(12, variable)  such that Parent*(5, call)  pattern assign(_, "else-200")  pattern assign(variable, "1000*8800")  such that Follows(_, if) with "read"=procedure.procName  such that Uses(print, variable) with 2600=stmt.stmt#  such that Calls(procedure, _)  pattern if(_, _, _) with constant.value=5500  pattern if(variable, _, _) with 8000=assign.stmt# with "procedure"=read.varName  pattern assign(read, "900+3500")  pattern if(variable, _, _)  such that Calls("print", procedure)  pattern assign(assign, _"8900+4500"_)  such that Follows(while, _) with "variable"=procedure.procName with "call"=read.varName  pattern while(read, _)  such that Uses(call, _) with "print"=print.varName  such that Next(read, read)  such that Next*(_, while) with print.varName=procedure.procName  pattern if(procedure, _, _)  pattern assign(variable, "5500+1500") with constant.value=3800  such that Next*(call, _)  pattern if(variable, _, _)  such that Follows*(assign, 23)  pattern while(variable, _)  pattern while(_, _)  pattern while(_, _)  pattern while(_, _) with "assign"=variable.varName with variable.varName=call.procName  pattern if(_, _, _) with 1100=stmt.stmt# with 1000=read.stmt#  pattern assign(procedure, _) with call.stmt#=7900  pattern while(_, _) with procedure.procName=read.varName  such that Calls("procedure", procedure)  pattern if(_, _, _)  such that Follows*(_, if)  such that Parent(24, stmt)  such that Calls*("call", procedure)  pattern while(while, _)  pattern if(else, _, _)  pattern while(_, _)  pattern while(_, _)  pattern if(variable, _, _)  pattern while(_, _)  such that Affects*(_, stmt) with 300=constant.value with call.stmt#=if.stmt#  pattern assign(_, _"2500/4900"_)  pattern while(variable, _)  pattern if(variable, _, _)  pattern if(variable, _, _) with "read"=read.varName with 2100=constant.value with "while"=procedure.procName  such that Calls*("procedure", procedure)  pattern while(variable, _)  pattern if(_, _, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern assign(_, _)  such that Follows*(if, _) with "assign"=variable.varName with variable.varName="then"  such that Parent(if, _) with print.stmt#=2500  pattern assign(_, _"9500+8800"_) with read.varName="else" with call.stmt#=3700  pattern if(variable, _, _)  such that Calls*(procedure, procedure)  pattern while(_, _) 

5000
57 - Query 57
variable variable; assign assign; print print; constant constant; stmt stmt; read read; procedure procedure; if if; while while; call call; 
Select <variable, assign, print, constant, stmt, read, procedure, if, while, call>  pattern if(variable, _, _)  pattern while(variable, _) with while.stmt#=read.stmt#  pattern if(variable, _, _)  pattern assign(_, _"4000+7200"_)  pattern if(_, _, _)  such that Modifies(11, variable)  pattern if(_, _, _) with "call"=print.varName with 5500=call.stmt#  pattern while(_, _)  pattern while(procedure, _)  pattern assign(_, "1300/2800")  pattern if(constant, _, _)  pattern if(variable, _, _)  such that Parent*(read, 18)  pattern if(variable, _, _)  pattern if(_, _, _) with read.varName="variable"  pattern while(variable, _)  such that Affects*(stmt, assign) with assign.stmt#=call.stmt#  such that Affects(stmt, stmt) with "procedure"=call.procName  such that Affects*(assign, _) with 7200=call.stmt# with 9900=constant.value with constant.value=7400  such that Follows*(10, while)  pattern assign(variable, _"9900-700"_) with print.varName="variable" with constant.value=7300 with stmt.stmt#=1600 with 3900=read.stmt# with variable.varName=print.varName  pattern assign(procedure, "3500+5900")  pattern assign(_, _"5900+6000"_)  pattern if(variable, _, _)  such that Follows*(_, if)  pattern while(_, _) with print.stmt#=1500  pattern while(if, _)  pattern while(_, _)  such that Next(17, call) with while.stmt#=stmt.stmt#  pattern assign(variable, _)  pattern if(_, _, _)  pattern if(_, _, _)  such that Next*(_, while)  such that Uses(procedure, variable) with call.stmt#=3300  pattern while(assign, _)  such that Parent(_, assign)  pattern while(constant, _)  such that Calls*(procedure, procedure)  such that Calls*(_, procedure) with assign.stmt#=if.stmt#  such that Follows*(_, call) with procedure.procName=variable.varName  such that Uses(3, variable) with "assign"=read.varName  pattern while(_, _)  such that Affects(assign, assign)  pattern assign(_, "4900-4700")  such that Parent(while, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern assign(_, "9500+7600")  pattern assign(variable, _)  pattern if(variable, _, _)  pattern while(variable, _)  such that Affects*(_, assign)  pattern if(_, _, _)  such that Parent(13, assign) with read.stmt#=1900  such that Follows*(_, assign)  such that Parent*(7, read)  such that Affects(assign, _)  pattern assign(variable, _)  pattern while(_, _) with "constant"=procedure.procName  pattern while(_, _) with print.stmt#=constant.value  pattern assign(_, _"8700+8500"_)  pattern if(call, _, _) with "if"=call.procName with 300=assign.stmt#  such that Next*(_, while) with call.stmt#=9700  pattern while(read, _) with variable.varName=call.procName with procedure.procName=variable.varName  pattern if(_, _, _)  pattern assign(_, "(6000+4100)-6500")  such that Parent*(assign, if) with constant.value=stmt.stmt#  pattern while(call, _)  such that Calls*(procedure, "constant") with "then"=print.varName with variable.varName=variable.varName with read.stmt#=constant.value with "variable"=print.varName  pattern if(variable, _, _)  pattern while(variable, _) with read.varName="assign" with 500=assign.stmt#  pattern if(_, _, _)  pattern if(_, _, _)  pattern if(_, _, _)  pattern if(_, _, _) with read.varName="then"  pattern if(variable, _, _) with 300=read.stmt#  pattern assign(while, _) with while.stmt#=call.stmt#  pattern assign(_, _) with read.stmt#=4800  pattern if(_, _, _)  pattern assign(variable, _"4900/1000"_)  pattern assign(_, "4600-3500")  such that Next(20, print) with print.varName="print" with call.stmt#=stmt.stmt# with "constant"=call.procName  pattern while(_, _) with while.stmt#=print.stmt# with "else"=read.varName  such that Affects*(assign, stmt) with print.varName=print.varName  pattern assign(variable, _)  such that Parent*(read, if) with stmt.stmt#=read.stmt# with 1900=assign.stmt#  pattern if(then, _, _)  pattern if(variable, _, _) with 5100=assign.stmt# with 300=if.stmt# with while.stmt#=5800  such that Calls*("variable", procedure)  pattern if(print, _, _) with 2500=assign.stmt#  pattern while(variable, _)  pattern assign(_, _"4800/7000"_)  such that Modifies(call, variable) with stmt.stmt#=2100 with print.stmt#=if.stmt#  pattern if(variable, _, _) with if.stmt#=constant.value  pattern while(then, _)  pattern if(variable, _, _)  such that Follows(16, if) with print.varName="constant" with "variable"=variable.varName  such that Follows(stmt, read)  such that Affects*(12, assign) with read.stmt#=2800  pattern while(_, _) with call.procName="constant" with read.varName=read.varName  pattern while(_, _) with stmt.stmt#=4900 with "call"=procedure.procName  pattern if(variable, _, _)  such that Uses(if, variable)  pattern while(_, _) with call.procName="variable"  pattern if(_, _, _)  such that Affects*(stmt, _) with 9500=if.stmt# with call.procName=variable.varName  pattern if(while, _, _) with constant.value=3300  pattern while(constant, _)  such that Parent(while, print)  pattern if(_, _, _)  such that Follows*(9, assign)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern assign(read, _"4400-while"_)  such that Follows*(stmt, 1)  pattern while(constant, _)  pattern while(_, _)  such that Modifies(assign, "else")  pattern while(_, _) with 8900=while.stmt#  pattern while(print, _) with procedure.procName="call" with "assign"=read.varName with read.varName="procedure"  pattern if(_, _, _)  pattern while(procedure, _)  pattern assign(constant, "1300/900")  pattern if(assign, _, _)  pattern if(else, _, _)  pattern assign(_, _"2000/1000"_)  pattern if(variable, _, _)  such that Next*(call, _) with call.stmt#=500 with if.stmt#=100  pattern if(_, _, _) with 5000=while.stmt#  pattern while(_, _)  pattern assign(constant, _"8200+8100"_)  pattern if(_, _, _) with call.stmt#=call.stmt#  pattern if(read, _, _)  pattern if(call, _, _)  pattern while(_, _)  pattern while(if, _) with "read"=call.procName with 2100=stmt.stmt# with "call"=procedure.procName  such that Affects*(stmt, _)  pattern assign(variable, "1100+8000") with call.stmt#=3600 with procedure.procName="variable"  pattern if(variable, _, _) with variable.varName="procedure"  pattern while(procedure, _)  such that Next(while, read)  pattern if(print, _, _)  such that Next(4, if)  such that Calls*(procedure, _)  such that Affects*(_, assign)  pattern assign(variable, _"9000+1800"_)  pattern assign(_, _"2000-7800"_) with call.stmt#=7800  pattern while(then, _)  pattern assign(variable, "6600+9400")  pattern while(while, _) with "print"=variable.varName  pattern while(_, _) with print.stmt#=5400 with assign.stmt#=4200 with stmt.stmt#=stmt.stmt#  pattern while(_, _)  such that Follows*(call, 9)  pattern if(read, _, _) with "if"=print.varName  pattern if(variable, _, _)  such that Uses(23, variable) with "call"=procedure.procName  pattern while(then, _) with 500=if.stmt# with procedure.procName="while"  such that Modifies(call, _)  pattern if(_, _, _)  pattern if(_, _, _)  pattern assign(variable, _) with 6800=print.stmt#  pattern if(variable, _, _)  pattern while(_, _)  pattern while(constant, _)  such that Calls*(procedure, procedure) with 7300=assign.stmt#  pattern assign(if, _) with 9600=print.stmt#  such that Follows(read, stmt) with constant.value=print.stmt# with call.procName=procedure.procName with 500=if.stmt# with procedure.procName=variable.varName  such that Affects(assign, _) with procedure.procName="call" with "else"=print.varName  such that Modifies(stmt, _)  such that Calls*(_, procedure) with while.stmt#=while.stmt#  pattern if(call, _, _)  pattern assign(_, _"(6300/assign)+7500"_) with "print"=variable.varName  such that Next*(if, _)  such that Calls*(_, procedure) with variable.varName="constant"  pattern if(then, _, _) with "print"=variable.varName with 2100=assign.stmt#  such that Parent*(if, 26)  pattern while(_, _) with procedure.procName="read" with print.varName=call.procName with 6200=assign.stmt#  such that Affects*(stmt, _)  pattern if(then, _, _)  pattern if(_, _, _)  such that Parent(12, read)  such that Follows*(_, assign)  pattern while(_, _)  such that Affects*(stmt, assign) with 8900=assign.stmt#  such that Next*(stmt, print)  pattern assign(_, "7700/7900") with 900=constant.value  pattern while(variable, _)  pattern if(read, _, _)  such that Uses(procedure, _)  such that Affects*(stmt, 22)  pattern if(if, _, _)  such that Modifies(read, variable) with variable.varName=variable.varName  such that Uses(while, _)  such that Parent*(if, _) with "print"=print.varName  pattern if(variable, _, _)  such that Follows*(28, read)  pattern if(variable, _, _)  pattern while(_, _)  such that Follows(_, read)  pattern if(procedure, _, _)  such that Parent(_, print) with variable.varName=read.varName  pattern while(_, _)  such that Follows*(call, 28)  pattern if(_, _, _) with "if"=call.procName with read.varName=call.procName with stmt.stmt#=if.stmt#  such that Parent(18, read)  pattern assign(_, "1100*9300")  pattern while(assign, _)  pattern while(_, _) with print.varName=call.procName with call.procName="else" with "read"=read.varName  pattern while(variable, _) with call.procName=procedure.procName  pattern if(else, _, _) with stmt.stmt#=7300  pattern while(_, _)  pattern if(_, _, _)  pattern assign(variable, _"5800-8000"_)  pattern while(_, _)  such that Follows*(_, assign) with procedure.procName="call"  such that Modifies(read, _)  pattern assign(call, _"read+2000"_)  such that Follows(if, 12)  such that Modifies(read, "assign")  such that Modifies(assign, "print") with procedure.procName="if"  pattern if(_, _, _)  pattern if(variable, _, _)  such that Affects(stmt, _)  such that Parent(call, 21) with "read"=call.procName with "print"=variable.varName with "while"=variable.varName  such that Affects*(assign, 28)  pattern assign(variable, "2000+1600") with read.stmt#=2000  pattern assign(while, _)  pattern while(print, _)  such that Next*(read, call) with print.stmt#=read.stmt#  pattern assign(_, "(9500-assign)-6600")  pattern while(_, _)  pattern if(constant, _, _)  such that Follows(while, while)  such that Parent*(read, 27)  pattern assign(_, _"3400-variable"_) with read.stmt#=3600 with while.stmt#=read.stmt#  pattern assign(variable, "6300/4900")  such that Uses(2, variable) with assign.stmt#=constant.value  pattern while(variable, _)  pattern if(variable, _, _)  such that Uses(while, "print")  pattern if(_, _, _)  pattern if(else, _, _)  pattern if(procedure, _, _)  such that Calls*(procedure, _)  such that Calls*(procedure, "procedure")  pattern if(_, _, _) with assign.stmt#=print.stmt#  such that Calls(_, procedure)  pattern while(_, _)  pattern if(variable, _, _)  such that Next*(while, print)  such that Next*(stmt, 25)  pattern if(_, _, _)  pattern if(variable, _, _)  pattern assign(_, _"7800/2900"_)  such that Parent*(call, _)  pattern assign(variable, _"6000+1600"_)  pattern assign(print, _"200-2300"_)  such that Parent*(print, read)  pattern if(variable, _, _) with call.stmt#=read.stmt#  such that Affects*(28, assign)  pattern if(constant, _, _)  such that Affects(23, stmt) with 3500=read.stmt#  such that Affects(assign, _) with stmt.stmt#=400 with read.stmt#=7900  pattern assign(variable, _) with print.stmt#=9900 with stmt.stmt#=6300  pattern if(variable, _, _)  pattern assign(variable, _)  pattern if(variable, _, _)  pattern while(_, _)  pattern assign(variable, _"700+1300"_)  such that Next(_, while)  such that Parent*(stmt, read)  pattern while(if, _) with 6000=call.stmt#  such that Next(9, call) with print.varName="procedure" with assign.stmt#=6300  pattern assign(_, _"3900-500"_) with print.varName=procedure.procName  pattern assign(variable, "5300+6500")  pattern while(variable, _)  pattern assign(then, "6500/6200") with assign.stmt#=stmt.stmt#  such that Parent*(_, stmt) with "print"=print.varName  such that Affects(_, assign) with constant.value=while.stmt# with while.stmt#=while.stmt#  pattern while(_, _)  pattern if(call, _, _)  such that Affects(_, assign)  such that Modifies(stmt, "constant")  such that Uses(5, variable)  pattern while(_, _) with read.stmt#=700 with "print"=procedure.procName  pattern assign(variable, _) with if.stmt#=5400  pattern while(_, _) with read.varName="call"  pattern assign(_, _) with procedure.procName=call.procName  pattern if(if, _, _)  pattern while(variable, _)  such that Affects*(assign, 10) with procedure.procName="procedure"  such that Next*(print, print)  such that Modifies(6, variable) with 9200=constant.value  such that Next(_, assign)  such that Calls(_, procedure) with assign.stmt#=6500  such that Affects(stmt, 29)  pattern if(variable, _, _)  such that Follows(2, read)  pattern assign(assign, "(variable*9000)-1500")  pattern if(if, _, _)  such that Parent(read, _)  pattern if(variable, _, _) with 3300=constant.value with stmt.stmt#=5800 with procedure.procName="read"  pattern while(variable, _)  pattern if(_, _, _)  pattern if(while, _, _)  such that Uses(22, variable)  such that Uses(while, _)  pattern assign(variable, "9600-8300")  pattern while(then, _)  pattern assign(variable, _"9300+5000"_)  pattern if(variable, _, _)  such that Next*(_, assign)  such that Parent(read, while)  pattern while(variable, _)  such that Affects(stmt, _)  pattern assign(variable, _) with print.varName=variable.varName  pattern if(then, _, _) with "assign"=print.varName with while.stmt#=print.stmt#  pattern assign(variable, _"3000/8600"_)  pattern if(_, _, _)  such that Follows*(stmt, read)  pattern while(_, _) with call.stmt#=assign.stmt# with variable.varName="else"  pattern while(constant, _)  such that Calls*(procedure, procedure)  pattern if(if, _, _)  pattern assign(_, _"6300-800"_)  pattern while(constant, _) with "if"=print.varName  such that Follows(24, if)  such that Follows(_, while)  pattern if(call, _, _)  such that Follows(_, if)  pattern assign(_, _"4700*6800"_) with while.stmt#=1200 with constant.value=if.stmt#  such that Calls*(procedure, procedure)  such that Parent*(read, print)  pattern while(print, _)  pattern assign(print, _)  such that Affects*(_, stmt)  such that Calls(procedure, _)  such that Affects(_, assign) 

5000
58 - Query 58
variable variable; print print; assign assign; constant constant; stmt stmt; read read; procedure procedure; if if; while while; call call; 
Select <variable, print, assign, constant, stmt, read, procedure, if, while, call>  pattern if(if, _, _)  pattern while(variable, _) with "assign"=call.procName  such that Uses(stmt, "assign")  such that Parent(while, 15) with print.varName=procedure.procName with "then"=variable.varName  pattern while(_, _)  pattern if(_, _, _)  pattern assign(variable, _"9000/2900"_)  pattern while(variable, _)  pattern if(else, _, _)  such that Affects*(stmt, assign)  pattern while(variable, _) with procedure.procName=call.procName  pattern assign(variable, "8700*2200")  such that Uses(while, _)  such that Next(25, stmt)  such that Parent(stmt, 26)  pattern if(variable, _, _)  such that Modifies(4, variable)  such that Follows*(assign, print)  pattern if(read, _, _) with procedure.procName=variable.varName  such that Affects*(assign, 26)  pattern while(variable, _) with "then"=variable.varName  pattern assign(_, _"6500-5600"_)  pattern if(variable, _, _) with print.varName=procedure.procName with 3500=if.stmt#  such that Affects*(assign, _)  such that Affects(assign, assign) with stmt.stmt#=assign.stmt#  pattern assign(variable, _)  pattern while(_, _) with print.varName="constant" with "then"=read.varName  such that Parent(call, call)  pattern while(variable, _)  pattern if(variable, _, _)  pattern assign(variable, _)  such that Follows*(while, while)  pattern if(while, _, _) with call.procName=call.procName  pattern while(_, _) with stmt.stmt#=9500  pattern if(variable, _, _)  pattern assign(variable, _"3500-2700"_) with constant.value=5900  pattern assign(_, _"then*2700"_) with variable.varName=read.varName  pattern assign(print, "1700/100")  pattern while(procedure, _)  pattern assign(variable, "1900/1100")  pattern assign(while, _)  pattern if(variable, _, _) with constant.value=while.stmt#  such that Next(assign, _)  pattern if(_, _, _) with stmt.stmt#=stmt.stmt#  pattern while(constant, _)  pattern while(_, _)  pattern assign(_, "5800/9700")  pattern while(variable, _)  such that Follows(if, 6)  pattern if(print, _, _) with print.varName="else"  such that Follows*(_, read)  pattern assign(_, "6400*9700")  such that Calls(procedure, procedure)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern while(_, _) with stmt.stmt#=if.stmt#  such that Follows*(_, assign)  such that Next(20, if)  such that Parent*(if, while)  such that Follows*(assign, _)  pattern if(variable, _, _) with if.stmt#=8500 with 3800=assign.stmt# with if.stmt#=print.stmt#  such that Modifies(procedure, "else")  pattern if(constant, _, _) with "else"=procedure.procName  such that Affects*(assign, assign) with constant.value=500 with read.varName="while"  pattern while(_, _)  such that Calls*(procedure, "constant")  such that Next(_, while)  such that Uses(6, variable)  such that Calls*(procedure, "variable")  pattern if(_, _, _)  pattern if(_, _, _) with "else"=read.varName with read.varName="constant"  pattern while(call, _) with 9000=read.stmt#  pattern if(variable, _, _)  pattern while(_, _)  pattern while(print, _)  pattern assign(variable, _"8400*then"_)  such that Calls(procedure, procedure) with call.procName="then"  pattern if(constant, _, _)  pattern while(_, _)  pattern while(_, _)  pattern if(variable, _, _) with print.stmt#=300 with print.varName="then" with 100=while.stmt# with if.stmt#=6000  such that Modifies(2, variable)  pattern assign(_, "6600+5900")  such that Uses(print, "call") with "then"=print.varName  pattern assign(if, "1100-6100")  such that Affects(stmt, 22)  such that Calls("assign", procedure)  such that Parent*(call, stmt) with "variable"=variable.varName  such that Parent(while, _)  such that Affects(assign, 29)  pattern while(_, _)  such that Uses(print, "then") with print.varName="variable"  such that Uses(procedure, variable)  pattern assign(_, "3000*5400")  pattern if(variable, _, _)  pattern assign(variable, _)  pattern assign(_, "200-4500")  pattern if(read, _, _)  such that Modifies(call, _)  such that Uses(stmt, variable)  such that Uses(read, _)  pattern while(assign, _) with procedure.procName="while"  pattern if(variable, _, _) with "constant"=call.procName  such that Uses(6, variable)  pattern if(if, _, _)  such that Next(read, call)  pattern while(_, _)  pattern assign(print, _"700/print"_) with 4400=while.stmt#  pattern while(constant, _)  such that Calls(_, procedure)  pattern if(print, _, _)  such that Next(read, assign)  such that Next(stmt, 26) with assign.stmt#=4100  such that Modifies(25, variable)  pattern if(then, _, _)  pattern assign(_, _) with stmt.stmt#=4400  such that Parent*(while, _)  pattern while(_, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  such that Affects(stmt, stmt) with call.procName="then"  such that Parent*(_, stmt)  pattern while(variable, _)  such that Affects(assign, _)  such that Affects(_, assign) with print.varName="if"  such that Parent*(stmt, 26) with while.stmt#=assign.stmt# with procedure.procName=call.procName  such that Affects(17, assign)  pattern while(procedure, _)  pattern assign(_, _"2400+600"_) with print.varName="print" with read.varName=read.varName with read.varName=read.varName with print.varName=print.varName  pattern while(variable, _) with "while"=call.procName  pattern if(_, _, _) with call.procName=print.varName with if.stmt#=6200  pattern assign(variable, _) with while.stmt#=3400 with "assign"=call.procName  pattern assign(variable, _"5000-800"_)  pattern while(variable, _)  pattern while(variable, _) with "while"=procedure.procName  pattern while(variable, _) with 2300=print.stmt#  such that Next(stmt, read) with while.stmt#=300  pattern while(constant, _) with print.varName=call.procName  pattern while(read, _)  pattern while(_, _) with while.stmt#=7400 with "constant"=variable.varName  pattern while(variable, _)  pattern assign(variable, _)  pattern while(then, _)  such that Follows(stmt, print)  such that Parent*(10, read)  pattern if(assign, _, _) with stmt.stmt#=print.stmt#  pattern while(_, _)  pattern assign(else, "400-4500")  pattern while(_, _)  pattern assign(_, _)  pattern assign(variable, _"1400-8400"_)  such that Calls*(procedure, "constant")  pattern while(then, _)  such that Affects(17, assign)  pattern while(procedure, _)  pattern while(assign, _)  pattern assign(_, _"7400-2700"_) with "else"=variable.varName  pattern while(_, _) with 6800=call.stmt# with print.varName="call"  such that Follows(9, print) with 200=stmt.stmt# with call.procName="read"  pattern assign(_, _)  such that Follows*(15, while)  pattern while(variable, _)  pattern while(variable, _)  such that Uses(procedure, _)  pattern while(_, _)  pattern if(_, _, _)  pattern while(variable, _) with call.stmt#=constant.value  pattern assign(variable, "2600*800")  pattern while(_, _) with "constant"=procedure.procName  pattern if(variable, _, _) with read.stmt#=while.stmt#  such that Calls(procedure, procedure) with print.varName=call.procName  pattern if(variable, _, _)  pattern assign(_, "3500/4100")  pattern if(variable, _, _) with 3700=if.stmt#  pattern assign(variable, _)  pattern if(_, _, _) with variable.varName="else" with 6300=constant.value  pattern if(_, _, _) with read.stmt#=7700 with while.stmt#=5800  pattern assign(then, _"9200/if"_)  pattern if(call, _, _) with print.varName=call.procName with stmt.stmt#=5900  such that Next*(if, _)  pattern assign(then, "((1500*2300)*1200)-constant")  such that Modifies(read, variable)  pattern if(variable, _, _)  such that Uses(procedure, _)  such that Affects*(_, stmt)  such that Parent(assign, 18)  pattern assign(print, _)  such that Follows(read, print) with assign.stmt#=600  such that Next*(_, stmt) with 5400=if.stmt# with variable.varName="then"  such that Next(26, if) with 3800=assign.stmt#  such that Uses(stmt, "read")  pattern if(_, _, _) with "read"=call.procName  pattern while(_, _)  such that Next(_, if) with procedure.procName="if"  pattern assign(constant, _)  pattern assign(read, "7900/9400")  such that Follows(_, while) with while.stmt#=stmt.stmt# with "call"=call.procName  such that Uses(if, _)  pattern assign(_, _"(1100+1200)+6500"_)  such that Follows(25, print) with "procedure"=print.varName with if.stmt#=while.stmt#  pattern if(print, _, _)  such that Follows(print, 4)  pattern while(_, _) with 6600=assign.stmt# with 9900=while.stmt#  pattern assign(_, _"if-7800"_)  pattern if(variable, _, _)  such that Uses(procedure, variable)  pattern assign(variable, _"8300/5000"_)  pattern assign(assign, _"7400+8600"_)  pattern if(variable, _, _) with "if"=procedure.procName with print.varName="else"  such that Follows(24, read) with print.stmt#=4200  pattern assign(read, "1700*4000")  pattern if(variable, _, _)  pattern assign(then, _)  such that Follows*(read, print)  such that Calls(procedure, procedure)  pattern if(variable, _, _) with if.stmt#=while.stmt#  such that Affects*(stmt, assign)  pattern while(_, _)  such that Next(assign, _) with 4900=while.stmt# with if.stmt#=6100  pattern assign(call, "while-3200")  pattern while(variable, _)  such that Affects(assign, assign)  pattern if(_, _, _) with print.varName="print" with 7900=if.stmt#  pattern while(call, _)  pattern assign(_, "9000-9700")  pattern assign(variable, _"9100-call"_)  pattern if(variable, _, _) with variable.varName="print" with "procedure"=call.procName  pattern while(variable, _) with 200=constant.value  pattern if(print, _, _)  pattern if(variable, _, _) with "if"=procedure.procName  pattern while(variable, _)  pattern assign(variable, "7200/8600") with 300=read.stmt#  pattern while(_, _)  pattern while(_, _)  pattern if(variable, _, _)  such that Uses(read, variable) with "procedure"=read.varName with variable.varName="call"  pattern while(_, _)  such that Calls*(procedure, "else")  such that Next*(assign, 13)  pattern while(read, _) with call.procName=call.procName with print.varName="assign"  such that Uses(while, _) with "constant"=variable.varName  pattern if(_, _, _)  such that Follows*(29, call)  pattern if(_, _, _) with if.stmt#=3800 with 1800=if.stmt#  pattern while(then, _) with constant.value=assign.stmt#  pattern if(_, _, _)  pattern assign(procedure, _"6800/5400"_)  pattern while(variable, _)  such that Follows(call, 19)  such that Calls*(procedure, procedure)  pattern if(variable, _, _)  pattern while(variable, _) with call.procName="variable"  such that Next(call, 20)  pattern if(variable, _, _)  pattern assign(_, "(4500+800)*read") with constant.value=while.stmt#  pattern assign(print, _"3500/100"_)  such that Follows(_, while)  such that Follows(22, stmt) with read.stmt#=stmt.stmt# with constant.value=1600  such that Calls("constant", procedure)  pattern assign(variable, _"1200*while"_)  such that Follows(stmt, if)  pattern if(variable, _, _) with read.varName="while"  such that Follows(10, assign)  pattern if(_, _, _)  such that Next*(26, call)  such that Calls(_, procedure) with read.varName="read" with assign.stmt#=7400  such that Follows*(read, _) with call.stmt#=700  pattern while(print, _)  pattern if(_, _, _) with while.stmt#=while.stmt#  pattern assign(if, _"200/8400"_)  pattern if(_, _, _)  such that Calls(procedure, procedure)  pattern if(_, _, _)  pattern while(_, _)  such that Affects*(stmt, assign) with "call"=variable.varName with call.procName="else" with "then"=procedure.procName with print.varName=call.procName  such that Next(assign, print)  pattern assign(variable, _)  pattern if(variable, _, _) with call.procName="while" with stmt.stmt#=3800  such that Calls*("read", procedure) with print.varName=call.procName  pattern assign(variable, _)  such that Uses(print, _) with constant.value=call.stmt# with "variable"=variable.varName  pattern if(_, _, _)  pattern if(_, _, _)  pattern if(variable, _, _) with variable.varName=procedure.procName  pattern while(variable, _)  pattern while(_, _) with "else"=variable.varName  pattern while(_, _)  pattern assign(_, _)  pattern while(_, _)  such that Calls*(procedure, procedure)  pattern assign(then, _)  pattern assign(variable, "7800+3600")  such that Affects(2, assign)  pattern if(if, _, _) with stmt.stmt#=4700 with variable.varName=variable.varName  such that Affects(assign, 6) with 5400=stmt.stmt# with 5700=assign.stmt#  such that Affects*(stmt, 21)  pattern assign(call, _"1800+3600"_) with "if"=variable.varName  pattern if(then, _, _)  pattern assign(_, "5700+5300")  such that Uses(23, variable) with assign.stmt#=6000  pattern if(variable, _, _) with variable.varName="else" with "while"=variable.varName  such that Uses(29, variable)  pattern assign(variable, "1600+100")  pattern if(_, _, _) with call.procName=print.varName with stmt.stmt#=7500  pattern while(_, _) with variable.varName=call.procName  pattern if(variable, _, _)  pattern if(call, _, _)  pattern assign(_, _) with "call"=call.procName with 8200=if.stmt#  pattern assign(variable, "400/5100")  such that Affects(stmt, 24)  pattern assign(_, "1100-3300")  such that Calls(procedure, _) with call.procName=call.procName  such that Affects(_, assign)  pattern if(_, _, _)  such that Follows(if, 22)  such that Calls*("constant", procedure)  pattern while(read, _) with procedure.procName=call.procName with 2100=assign.stmt#  pattern assign(_, _) with 300=constant.value  pattern assign(_, "2200/assign")  such that Follows(25, if) with read.varName=read.varName with while.stmt#=print.stmt#  such that Uses(call, _)  such that Parent(print, if) with assign.stmt#=stmt.stmt#  such that Calls("then", procedure)  pattern if(assign, _, _)  pattern assign(constant, _"8400/3900"_) with "print"=procedure.procName with "else"=call.procName with 3500=read.stmt# with read.varName=variable.varName with "constant"=read.varName with stmt.stmt#=8300 with 9900=while.stmt#  such that Parent(while, stmt)  such that Follows*(_, stmt) with procedure.procName="read"  such that Modifies(stmt, _)  pattern if(_, _, _) with "assign"=print.varName  pattern if(variable, _, _)  pattern if(procedure, _, _) with print.stmt#=8000 with "read"=procedure.procName  pattern assign(variable, _) with procedure.procName=call.procName with read.varName=procedure.procName  pattern if(variable, _, _)  such that Follows(_, read) with 8600=constant.value  pattern if(_, _, _) with call.procName=read.varName 

5000
59 - Query 59
variable variable; assign assign; constant constant; print print; call call; stmt stmt; read read; if if; while while; procedure procedure; 
Select <variable, assign, constant, print, call, stmt, read, if, while, procedure>  such that Parent(read, _)  pattern while(variable, _)  pattern if(variable, _, _)  pattern assign(_, _"2400+7400"_)  such that Calls(procedure, _)  such that Affects(assign, assign)  such that Modifies(12, variable) with variable.varName=procedure.procName  pattern while(variable, _)  pattern assign(_, _"2600+2400"_) with "assign"=variable.varName  pattern assign(variable, _"8000+3300"_)  such that Affects(27, stmt)  pattern while(variable, _) with constant.value=1600  pattern assign(procedure, "2600/6900")  pattern if(if, _, _) with 9200=constant.value  such that Next*(assign, 12)  pattern while(_, _)  such that Next(stmt, _)  such that Next(_, print) with call.procName="constant" with 5200=call.stmt#  such that Next*(12, if)  pattern if(if, _, _) with 4100=call.stmt#  pattern while(_, _) with variable.varName=call.procName  pattern assign(variable, _"3600+8800"_)  such that Next*(assign, _) with 300=read.stmt#  such that Parent*(_, if)  such that Parent(_, read)  pattern assign(variable, _)  pattern if(variable, _, _)  such that Modifies(while, variable)  such that Parent(print, _)  such that Parent*(print, while)  pattern while(_, _)  such that Affects*(assign, 11)  such that Parent(_, call)  pattern if(call, _, _)  pattern if(_, _, _)  pattern while(if, _) with call.procName="else"  pattern assign(while, _)  such that Next(20, print)  such that Affects(stmt, _)  pattern if(variable, _, _)  such that Affects*(stmt, _) with "then"=procedure.procName  such that Parent*(assign, _) with if.stmt#=constant.value  pattern while(_, _) with variable.varName=read.varName with read.varName=procedure.procName  pattern if(assign, _, _)  pattern if(while, _, _)  pattern while(else, _)  such that Uses(15, variable) with 3500=call.stmt#  such that Parent*(if, _) with variable.varName=print.varName  pattern while(read, _) with 4100=call.stmt#  such that Calls(procedure, "read") with read.varName=read.varName  pattern if(procedure, _, _)  pattern while(variable, _)  pattern assign(variable, "4200+6000") with 2800=assign.stmt#  pattern if(_, _, _)  pattern assign(variable, _"2400+6900"_)  pattern while(variable, _)  such that Calls("call", procedure)  pattern assign(variable, "400/4600")  such that Parent*(12, read)  pattern if(_, _, _) with while.stmt#=print.stmt#  such that Follows(while, assign)  pattern if(constant, _, _)  pattern assign(procedure, "2500-4700")  pattern assign(then, "5200+7100")  such that Calls*(procedure, procedure)  such that Uses(29, variable) with print.varName="if"  such that Affects(assign, _)  such that Parent*(read, while)  pattern while(_, _)  pattern if(variable, _, _)  such that Next(call, if)  pattern while(constant, _)  pattern if(else, _, _)  pattern if(_, _, _) with while.stmt#=6800  pattern if(_, _, _) with assign.stmt#=read.stmt# with assign.stmt#=300  pattern if(variable, _, _)  such that Calls*(procedure, procedure)  pattern while(if, _)  pattern assign(_, _"600-2700"_)  such that Modifies(read, "while")  pattern assign(variable, _"(3800/constant)+8500"_)  pattern assign(_, _"6700-procedure"_) with variable.varName=read.varName  pattern while(variable, _)  pattern assign(_, "6200-1500")  pattern while(_, _)  pattern assign(variable, _"8100-3700"_) with read.varName=variable.varName  pattern assign(_, "1200*3800")  pattern assign(_, _"9200/2200"_) with while.stmt#=assign.stmt#  pattern assign(_, _)  pattern if(print, _, _)  pattern assign(variable, _"4800-constant"_)  such that Follows*(if, print)  such that Next(read, 25)  pattern assign(_, "8900/9300")  pattern assign(_, _"7400*2500"_)  such that Affects(stmt, stmt)  pattern if(procedure, _, _)  such that Next*(read, _)  such that Next*(_, stmt)  such that Modifies(while, "if")  pattern if(_, _, _)  pattern assign(_, _"((2200/400)-4100)+else"_)  pattern assign(variable, _)  pattern if(_, _, _)  pattern assign(read, _"1300*2400"_) with "constant"=print.varName with print.varName=variable.varName  pattern if(procedure, _, _)  pattern if(variable, _, _)  pattern assign(_, "4300/900")  pattern while(variable, _)  pattern assign(_, _"5000/4800"_) with print.stmt#=5200  pattern while(variable, _) with 2400=constant.value with if.stmt#=4700  pattern if(then, _, _) with procedure.procName="print"  such that Parent*(10, print)  pattern if(_, _, _)  pattern if(variable, _, _) with while.stmt#=constant.value with variable.varName=print.varName with constant.value=constant.value  pattern while(_, _)  pattern while(variable, _)  pattern assign(_, _)  pattern assign(assign, _)  pattern while(then, _)  such that Parent(while, _)  such that Uses(assign, "call")  pattern while(variable, _) with 900=assign.stmt#  such that Uses(18, variable)  such that Parent*(print, while) with 4000=while.stmt#  pattern while(read, _)  pattern assign(_, _"3100+600"_)  pattern while(variable, _) with "else"=call.procName with constant.value=stmt.stmt#  such that Parent(_, print) with print.varName=variable.varName  such that Affects(_, stmt) with if.stmt#=7000  pattern assign(_, "else*2300")  pattern if(variable, _, _) with if.stmt#=8200 with procedure.procName=procedure.procName  pattern while(_, _) with print.varName=read.varName  such that Affects(assign, 20)  pattern if(_, _, _)  such that Next*(stmt, _)  pattern while(_, _) with variable.varName="print"  pattern if(_, _, _)  pattern assign(then, _)  pattern assign(variable, _)  pattern if(variable, _, _) with "assign"=procedure.procName  pattern assign(_, _"6400/400"_)  pattern while(_, _)  pattern if(variable, _, _)  pattern while(print, _)  such that Follows(assign, read)  pattern while(assign, _) with assign.stmt#=9900  pattern if(variable, _, _)  such that Calls(procedure, procedure) with print.stmt#=600 with procedure.procName="procedure" with procedure.procName="then"  pattern if(then, _, _) with "call"=variable.varName with 5700=while.stmt#  such that Parent*(_, while) with stmt.stmt#=while.stmt# with while.stmt#=5100  pattern if(else, _, _)  pattern assign(variable, _)  pattern if(_, _, _)  such that Next(stmt, _)  pattern if(_, _, _)  pattern while(_, _)  such that Affects*(stmt, 11)  pattern while(variable, _) with "else"=read.varName with "variable"=call.procName with assign.stmt#=5500 with while.stmt#=900 with read.varName="print"  such that Modifies(procedure, variable)  pattern if(variable, _, _)  such that Calls(procedure, procedure)  pattern if(then, _, _) with print.varName="constant"  pattern while(_, _)  such that Calls(procedure, _)  pattern assign(read, "5300/5100") with "else"=variable.varName  pattern if(_, _, _)  pattern while(variable, _)  pattern if(if, _, _)  such that Parent*(assign, 12) with variable.varName="assign"  pattern assign(_, _) with "variable"=procedure.procName with read.stmt#=1200  pattern assign(_, _)  such that Next*(assign, _)  such that Next*(assign, stmt)  pattern while(variable, _)  such that Parent*(print, print) with variable.varName="then" with print.stmt#=4800  pattern assign(variable, _"1200*4800"_)  pattern while(_, _)  such that Parent*(call, _)  such that Next*(while, _)  such that Calls*(procedure, _) with 7800=if.stmt# with assign.stmt#=1500 with procedure.procName=variable.varName with 9200=if.stmt#  pattern while(constant, _)  such that Parent*(stmt, if)  such that Modifies(assign, "constant") with read.stmt#=8900 with print.stmt#=print.stmt#  pattern assign(_, "700+6500")  pattern while(while, _) with print.varName=read.varName  pattern if(_, _, _)  pattern assign(call, _"2200+7000"_)  pattern while(read, _)  pattern assign(variable, _"3500/3400"_) with 9100=call.stmt# with stmt.stmt#=2600 with call.procName=procedure.procName  pattern while(_, _) with print.varName=call.procName with procedure.procName=read.varName  pattern while(variable, _) with 8200=stmt.stmt#  pattern if(variable, _, _)  pattern while(variable, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern if(else, _, _)  pattern if(_, _, _) with procedure.procName="call"  pattern while(_, _) with 2800=stmt.stmt# with "if"=print.varName  pattern assign(variable, "1200-7000")  pattern while(variable, _)  pattern if(_, _, _)  pattern assign(if, _"then/then"_) with print.stmt#=while.stmt#  pattern while(variable, _) with read.stmt#=4000  pattern if(_, _, _)  pattern while(_, _)  such that Affects*(stmt, 7) with "variable"=print.varName with variable.varName="else" with call.stmt#=stmt.stmt# with "else"=call.procName with stmt.stmt#=6600  such that Calls(_, procedure) with 2300=stmt.stmt#  such that Modifies(while, _) with call.procName="assign" with "if"=call.procName  such that Follows(assign, assign)  pattern while(_, _)  pattern assign(_, _)  pattern if(else, _, _)  such that Parent*(while, _)  pattern if(if, _, _)  pattern while(variable, _)  such that Affects*(stmt, _)  pattern while(read, _) with "assign"=read.varName with print.varName=variable.varName  such that Calls("while", procedure) with "variable"=variable.varName  such that Next(stmt, read)  pattern while(_, _)  pattern assign(then, _) with while.stmt#=2100 with read.stmt#=9100 with call.procName=read.varName  pattern while(if, _)  pattern if(_, _, _) with constant.value=600  pattern while(call, _)  pattern if(_, _, _)  pattern while(_, _) with while.stmt#=8900 with procedure.procName="call"  pattern assign(assign, _"4500/6400"_)  pattern while(variable, _)  pattern while(variable, _)  such that Parent(assign, 26)  pattern if(_, _, _) with call.stmt#=8500  pattern if(assign, _, _) with 5300=if.stmt# with "assign"=print.varName  pattern while(variable, _)  pattern while(variable, _)  pattern if(else, _, _)  pattern while(_, _) with procedure.procName=print.varName  such that Follows(_, stmt) with if.stmt#=print.stmt#  such that Uses(call, "else")  such that Follows(26, print) with 8700=call.stmt#  pattern assign(variable, _)  such that Calls(procedure, _)  pattern if(variable, _, _)  pattern if(constant, _, _)  pattern assign(while, _"1400+9700"_)  pattern while(print, _)  such that Uses(17, variable)  pattern assign(_, "6300/1100")  such that Follows*(stmt, while)  pattern while(variable, _) with call.procName=print.varName  such that Follows*(_, while)  pattern while(variable, _) with constant.value=constant.value  such that Parent(stmt, 12) with if.stmt#=100  pattern while(else, _)  such that Parent(print, 14)  such that Uses(print, variable)  such that Uses(if, variable)  pattern if(variable, _, _)  pattern if(variable, _, _) with call.procName="else"  pattern while(_, _) with read.varName="then"  such that Next*(_, assign)  pattern while(while, _)  pattern assign(variable, _)  such that Affects*(assign, 5)  pattern if(variable, _, _)  pattern while(variable, _)  pattern while(_, _)  pattern while(then, _)  such that Affects(_, assign)  such that Modifies(28, variable)  such that Uses(27, variable)  such that Calls(procedure, procedure) with 2900=if.stmt#  such that Affects(assign, 2)  pattern while(_, _)  pattern while(_, _)  such that Calls(_, procedure) with assign.stmt#=call.stmt#  such that Affects(stmt, _)  such that Calls*(_, procedure)  such that Next*(print, _)  such that Affects*(17, assign)  pattern if(while, _, _)  pattern assign(variable, _"3200+constant"_)  pattern while(variable, _)  such that Next*(stmt, print)  such that Parent(if, assign) with 2900=while.stmt#  such that Follows*(if, 24)  pattern if(_, _, _)  such that Calls*(procedure, "if")  pattern while(_, _)  pattern assign(then, "2700-7400") with procedure.procName=print.varName with procedure.procName=print.varName  such that Parent(9, assign) with call.stmt#=if.stmt#  pattern assign(variable, "1100-4900")  such that Calls*(procedure, "if")  such that Affects(assign, _)  such that Calls*(procedure, procedure) with variable.varName="procedure"  such that Affects(assign, 5)  such that Parent(assign, read)  such that Parent*(stmt, 24)  pattern while(_, _)  such that Affects*(5, stmt)  such that Modifies(25, variable)  such that Uses(3, variable)  pattern if(_, _, _) with "print"=call.procName with print.varName="variable"  pattern while(variable, _)  pattern while(_, _) with "variable"=read.varName  pattern if(call, _, _)  pattern if(variable, _, _)  pattern assign(variable, "5000+2700") with variable.varName=read.varName  pattern if(_, _, _) with "read"=print.varName  pattern while(call, _)  pattern assign(_, "variable-9900")  pattern while(else, _)  such that Calls*("if", procedure)  pattern if(_, _, _) with read.stmt#=2500  such that Modifies(stmt, _)  such that Parent(while, _) with stmt.stmt#=constant.value  such that Affects*(stmt, _)  pattern while(variable, _)  such that Next(8, print) with print.stmt#=6000  such that Parent*(print, 29) with procedure.procName=read.varName  such that Calls(procedure, _) with "constant"=variable.varName  pattern assign(_, "9700/4700")  pattern assign(variable, _"4600-8600"_) with assign.stmt#=read.stmt#  pattern assign(_, "(9600-while)-3000")  pattern while(_, _)  pattern if(constant, _, _) with call.stmt#=8400  pattern assign(variable, "9700+4900")  such that Follows(13, assign) with read.varName="else"  pattern while(variable, _)  such that Affects(stmt, stmt)  such that Calls(procedure, "read")  pattern while(_, _) with while.stmt#=2700 with assign.stmt#=while.stmt#  pattern while(else, _) with call.stmt#=3100  pattern assign(_, _) with print.varName="while" with "assign"=variable.varName  pattern if(assign, _, _) with assign.stmt#=read.stmt# with assign.stmt#=4400  pattern assign(assign, _)  pattern if(read, _, _)  pattern if(variable, _, _)  such that Parent(stmt, 4)  pattern if(_, _, _) with 3700=constant.value with 6700=if.stmt#  such that Calls*(procedure, procedure)  pattern if(procedure, _, _)  such that Calls(procedure, procedure)  pattern assign(assign, _)  such that Parent(_, call) with print.varName="then"  such that Next*(print, _)  pattern if(assign, _, _)  pattern if(_, _, _) with "assign"=variable.varName  pattern while(_, _) with call.procName=procedure.procName with "constant"=print.varName  such that Follows(stmt, call) with constant.value=read.stmt#  pattern if(variable, _, _)  pattern if(then, _, _) with print.varName="call" 

5000
60 - Query 60
assign assign; print print; constant constant; call call; variable variable; stmt stmt; read read; if if; while while; procedure procedure; 
Select <assign, print, constant, call, variable, stmt, read, if, while, procedure>  such that Next(while, if)  pattern assign(then, _)  pattern assign(constant, _"300/300"_) with procedure.procName="while" with procedure.procName="call" with 9600=if.stmt# with print.varName="constant" with constant.value=9000 with stmt.stmt#=constant.value  pattern assign(if, _) with procedure.procName="call" with call.stmt#=assign.stmt#  pattern if(_, _, _) with stmt.stmt#=4800  pattern while(_, _) with while.stmt#=stmt.stmt#  pattern while(_, _) with stmt.stmt#=assign.stmt#  pattern assign(constant, "2200+9000") with read.stmt#=while.stmt#  pattern while(call, _)  pattern assign(_, _"3600-read"_)  pattern while(call, _)  pattern while(_, _) with constant.value=print.stmt#  such that Modifies(call, variable)  pattern while(variable, _)  pattern if(if, _, _) with 6400=read.stmt#  pattern if(_, _, _) with print.stmt#=read.stmt# with call.procName="variable"  pattern while(while, _)  pattern assign(_, "9500-200")  pattern assign(variable, _"8000/900"_)  pattern if(call, _, _)  such that Modifies(while, "while") with variable.varName="assign" with "variable"=read.varName  such that Uses(print, _)  pattern assign(_, _)  pattern if(variable, _, _) with procedure.procName=variable.varName with "read"=read.varName  pattern if(_, _, _) with if.stmt#=2300  pattern while(variable, _)  such that Modifies(5, variable)  pattern assign(_, _)  pattern while(call, _)  such that Modifies(call, variable)  pattern if(variable, _, _)  pattern while(variable, _)  pattern assign(_, "1300/9900")  such that Calls(procedure, _) with print.varName=print.varName with read.varName=read.varName with "call"=read.varName  pattern assign(while, _)  pattern assign(variable, _"7300*7400"_)  such that Parent*(print, read) with read.varName="if" with "procedure"=read.varName  such that Calls(procedure, _)  pattern while(variable, _)  such that Follows(17, if)  such that Calls(procedure, procedure)  pattern if(constant, _, _)  such that Follows*(stmt, 22)  such that Calls(procedure, "procedure") with print.stmt#=stmt.stmt#  pattern if(variable, _, _)  such that Calls(procedure, _)  such that Parent*(_, print)  pattern while(variable, _)  such that Modifies(stmt, variable) with variable.varName=call.procName with constant.value=6800  such that Next(read, if)  such that Affects*(assign, stmt)  pattern if(_, _, _) with read.stmt#=constant.value with print.stmt#=constant.value with "constant"=read.varName  pattern while(variable, _)  such that Calls*(procedure, procedure)  such that Next*(while, _) with if.stmt#=4500 with print.varName="while"  such that Calls(procedure, _) with print.varName="then" with constant.value=if.stmt# with print.stmt#=9600 with call.procName="variable"  such that Affects(assign, stmt) with assign.stmt#=9900 with assign.stmt#=500  pattern if(_, _, _)  pattern assign(_, _"1100*8900"_) with variable.varName="constant"  such that Follows*(read, _)  such that Calls*("procedure", procedure) with read.stmt#=9500  pattern assign(_, "2400-1100")  pattern if(variable, _, _)  pattern assign(print, _)  pattern while(variable, _) with variable.varName="assign"  pattern while(variable, _) with read.stmt#=constant.value  pattern if(constant, _, _)  pattern assign(procedure, _"4700*5200"_)  such that Parent(_, print) with assign.stmt#=print.stmt# with call.procName="else"  such that Follows*(read, 15) with print.varName=procedure.procName with call.stmt#=4200  such that Next(assign, _)  such that Calls(procedure, "read")  such that Parent(_, if)  pattern if(_, _, _)  pattern assign(_, "5800-2500")  pattern if(variable, _, _) with call.stmt#=3500 with variable.varName="constant"  such that Next*(_, assign)  pattern if(variable, _, _)  pattern while(variable, _)  such that Follows(_, call)  such that Uses(while, "call")  pattern assign(variable, "1100*1300") with call.procName="call"  pattern while(_, _) with "print"=read.varName  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern assign(variable, _)  pattern if(_, _, _)  such that Parent*(if, _) with "if"=procedure.procName  pattern if(_, _, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern assign(_, "3500/9600")  such that Uses(while, _)  pattern assign(constant, _) with print.varName="else"  such that Affects(stmt, _)  such that Affects*(stmt, 7) with call.stmt#=while.stmt# with if.stmt#=call.stmt# with 4200=read.stmt#  such that Parent(print, _) with procedure.procName=read.varName  such that Parent(_, while)  pattern while(else, _)  pattern assign(_, "3800+6100")  pattern if(_, _, _)  such that Uses(print, _) with stmt.stmt#=read.stmt#  pattern if(_, _, _)  pattern if(call, _, _)  pattern if(variable, _, _) with read.varName=call.procName  pattern while(read, _)  pattern if(call, _, _) with print.varName="while"  pattern assign(then, _)  such that Parent*(9, read)  such that Parent*(12, call)  such that Affects*(assign, assign) with read.varName="call"  pattern assign(variable, _"(7900+5500)*5800"_) with assign.stmt#=if.stmt# with variable.varName="constant"  such that Affects*(assign, _)  such that Affects(assign, stmt)  pattern while(_, _)  pattern assign(variable, "((6000/8900)/4600)/9000")  pattern while(_, _)  pattern assign(_, _"5800-3400"_)  pattern if(procedure, _, _)  such that Affects*(stmt, _) with "variable"=call.procName with call.procName=print.varName with read.stmt#=print.stmt#  such that Calls*(procedure, _)  such that Next*(26, while)  such that Next*(4, assign) with stmt.stmt#=while.stmt#  such that Next*(while, if) with read.varName=call.procName  pattern if(variable, _, _)  pattern if(print, _, _)  such that Next(if, 12)  such that Affects*(_, stmt)  pattern while(_, _) with variable.varName="else"  such that Affects*(_, stmt) with read.varName=print.varName  such that Next*(call, if)  such that Calls*(procedure, procedure)  pattern while(_, _)  pattern if(procedure, _, _)  such that Uses(22, variable)  pattern while(variable, _)  such that Affects*(stmt, 17)  pattern if(else, _, _)  pattern assign(variable, "1500+4500")  pattern while(_, _)  pattern assign(variable, "(3800*1300)-9400")  such that Follows(if, _)  such that Calls*("if", procedure)  pattern if(_, _, _)  such that Calls*(_, procedure) with 2000=assign.stmt#  pattern assign(while, "3700/100")  pattern while(_, _)  such that Next*(_, print) with if.stmt#=3900  pattern while(_, _)  pattern while(assign, _) with procedure.procName="then" with read.varName=procedure.procName with stmt.stmt#=if.stmt#  pattern if(variable, _, _)  pattern if(_, _, _) with read.stmt#=3400  pattern assign(procedure, _)  pattern assign(read, _) with read.stmt#=stmt.stmt# with call.procName="if"  pattern while(variable, _)  pattern while(variable, _)  such that Uses(stmt, variable)  such that Affects(28, assign) with print.varName=read.varName  pattern assign(constant, "7000+9200")  such that Parent(21, stmt) with read.varName="call"  pattern while(_, _)  pattern while(variable, _)  pattern while(_, _)  such that Calls*(procedure, procedure) with 9600=read.stmt#  pattern while(print, _) with if.stmt#=6800  pattern assign(variable, _)  pattern assign(_, _"5300-7900"_)  pattern while(_, _)  pattern assign(variable, _)  pattern assign(variable, _"7200-7900"_)  pattern while(_, _) with "if"=call.procName  such that Next*(8, stmt) with "assign"=call.procName  pattern while(while, _) with stmt.stmt#=constant.value with variable.varName="constant" with call.stmt#=stmt.stmt# with procedure.procName="while" with read.stmt#=5000 with print.stmt#=if.stmt#  pattern if(assign, _, _) with stmt.stmt#=read.stmt#  such that Modifies(if, _)  such that Parent(while, while)  such that Affects(12, assign) with read.stmt#=assign.stmt# with "variable"=print.varName  pattern if(assign, _, _)  pattern while(variable, _) with print.varName="if" with 5700=if.stmt#  pattern if(if, _, _)  pattern assign(constant, _"3900-5200"_)  pattern while(variable, _) with procedure.procName=variable.varName  pattern assign(read, "1400+100")  pattern while(else, _)  pattern assign(variable, _"6600*900"_) with 8100=while.stmt# with procedure.procName=call.procName  pattern assign(_, "4000-5400")  such that Calls(procedure, "variable") with constant.value=if.stmt#  pattern while(_, _) with constant.value=1000  pattern if(variable, _, _) with "read"=procedure.procName with 3100=if.stmt#  pattern while(variable, _)  pattern if(else, _, _)  pattern assign(else, _"7000-8700"_)  pattern assign(variable, "constant-1700")  such that Uses(if, "then")  pattern if(then, _, _)  pattern assign(variable, "5500-6200")  pattern while(if, _) with "if"=procedure.procName with stmt.stmt#=print.stmt# with constant.value=constant.value with "else"=print.varName  pattern if(assign, _, _)  such that Parent*(while, 8) with procedure.procName=variable.varName  pattern while(constant, _)  pattern if(if, _, _) with variable.varName=procedure.procName  pattern if(_, _, _)  such that Next(if, call)  pattern while(_, _)  such that Uses(print, variable)  pattern if(constant, _, _)  such that Uses(read, _) with "constant"=call.procName  pattern if(variable, _, _)  pattern if(then, _, _)  pattern assign(_, _)  pattern while(_, _)  such that Next(18, print)  such that Follows*(_, while) with print.varName=procedure.procName  such that Parent*(26, call)  such that Follows(3, assign)  pattern if(if, _, _)  pattern assign(variable, "100-5700")  pattern if(while, _, _)  pattern while(_, _)  such that Parent(print, 29)  such that Calls(procedure, procedure)  such that Calls*("else", procedure)  such that Next(assign, 12) with "constant"=print.varName  such that Follows*(if, assign) with "then"=print.varName  pattern if(print, _, _)  pattern while(_, _)  such that Uses(print, _)  such that Follows(print, _) with read.stmt#=print.stmt#  pattern assign(print, _"4000/2100"_)  such that Affects(assign, assign)  pattern while(_, _) with 5400=call.stmt#  pattern if(read, _, _) with assign.stmt#=2000 with variable.varName=print.varName  pattern while(variable, _)  pattern if(_, _, _)  pattern while(while, _)  pattern while(_, _) with call.procName="constant"  pattern assign(constant, "4000*3600")  pattern assign(_, "1800+5200") with call.procName=procedure.procName  pattern while(_, _)  pattern if(variable, _, _)  pattern while(read, _)  such that Next*(read, 1)  pattern if(variable, _, _)  such that Affects*(assign, stmt) with if.stmt#=stmt.stmt#  pattern if(variable, _, _)  pattern if(_, _, _)  pattern while(assign, _)  pattern if(_, _, _) with "print"=print.varName  pattern if(_, _, _)  such that Modifies(stmt, variable) with procedure.procName="while" with print.stmt#=read.stmt#  pattern if(variable, _, _) with read.stmt#=assign.stmt# with 3400=print.stmt# with 6000=assign.stmt# with "procedure"=call.procName  such that Follows*(if, _)  pattern assign(while, "while+1300") with print.varName=read.varName  pattern assign(_, _"8100/9900"_)  pattern if(_, _, _) with 8600=print.stmt#  such that Uses(read, variable)  pattern assign(_, _)  pattern if(else, _, _) with 4300=if.stmt# with while.stmt#=assign.stmt# with call.procName=call.procName with constant.value=7700  such that Uses(assign, "assign")  pattern while(variable, _) with constant.value=3900 with print.varName="then"  pattern assign(else, "9300/2200")  pattern if(procedure, _, _)  such that Follows*(print, _)  pattern while(variable, _) with variable.varName="else" with "assign"=print.varName  such that Follows*(stmt, _)  pattern if(_, _, _)  such that Parent(_, stmt) with print.stmt#=5900  such that Modifies(20, variable)  such that Next*(print, _) with 2400=stmt.stmt# with assign.stmt#=9200  such that Calls(procedure, _)  pattern while(_, _) with assign.stmt#=5300 with while.stmt#=print.stmt# with 7600=assign.stmt# with "then"=procedure.procName  pattern assign(variable, _)  pattern while(while, _)  pattern while(variable, _)  pattern assign(constant, _) with variable.varName="read"  pattern assign(variable, _"8900-print"_)  pattern if(_, _, _)  such that Modifies(procedure, "print")  pattern assign(variable, _) with "assign"=variable.varName with call.procName=variable.varName  pattern if(call, _, _)  such that Affects*(stmt, 8) with call.stmt#=3900 with print.varName=print.varName with 1600=constant.value  pattern while(_, _)  pattern while(variable, _)  such that Follows(_, read)  such that Next*(assign, read)  pattern while(else, _)  pattern if(then, _, _)  such that Follows(3, call)  pattern if(_, _, _)  pattern if(variable, _, _)  such that Calls*("call", procedure)  pattern if(variable, _, _)  such that Follows*(print, _)  pattern if(variable, _, _)  pattern assign(_, _"5000*then"_) with 8000=assign.stmt# with "variable"=procedure.procName  such that Next(_, stmt) with read.varName="if"  pattern assign(_, _)  pattern if(variable, _, _)  pattern assign(variable, "4000-6000")  pattern while(_, _)  pattern while(procedure, _)  pattern while(variable, _)  such that Follows(while, 14) with print.varName=variable.varName with "while"=procedure.procName  such that Next*(assign, _)  such that Calls(procedure, _) with 1100=print.stmt#  pattern while(variable, _) with read.stmt#=3800  such that Parent(read, while)  pattern assign(_, "5000*1800")  such that Modifies(procedure, "variable")  pattern assign(variable, _"400+variable"_) with call.procName=print.varName  pattern if(while, _, _)  such that Calls*("constant", procedure)  pattern assign(assign, _"5000+5000"_)  pattern if(variable, _, _)  such that Parent*(23, stmt) with constant.value=call.stmt#  pattern if(_, _, _)  such that Calls(procedure, _)  such that Calls*("then", procedure)  pattern while(variable, _)  such that Calls*(procedure, _)  such that Next(if, 7) with "if"=read.varName with 4900=assign.stmt#  pattern if(while, _, _)  such that Follows(while, stmt) with read.varName=read.varName  such that Parent*(21, while)  pattern assign(variable, _)  pattern while(procedure, _)  such that Parent*(call, call) with "constant"=print.varName with call.stmt#=while.stmt#  pattern while(if, _)  pattern assign(_, "5400/4800") with 7400=print.stmt# with read.stmt#=while.stmt#  pattern assign(_, _) with "read"=variable.varName  pattern if(variable, _, _) with variable.varName="constant" with call.stmt#=read.stmt# 

5000
61 - Query 61
assign assign; variable variable; constant constant; call call; print print; stmt stmt; read read; while while; if if; procedure procedure; 
Select <assign, variable, constant, call, print, stmt, read, while, if, procedure>  pattern assign(print, _"4900-5800"_) with 9800=read.stmt#  pattern assign(_, _"call+1400"_)  pattern assign(variable, _"700-4900"_)  such that Follows(2, assign)  such that Affects(stmt, _)  pattern while(variable, _) with assign.stmt#=constant.value with procedure.procName="while"  pattern assign(variable, _)  pattern assign(variable, _) with variable.varName="assign"  pattern assign(_, _"800*if"_) with call.procName=variable.varName with assign.stmt#=5700  pattern assign(_, "2900-3300") with read.stmt#=4200  such that Next(call, _)  pattern while(call, _) with read.varName="variable" with "assign"=call.procName with read.stmt#=9500  such that Uses(18, variable) with "read"=procedure.procName  such that Affects(assign, stmt)  such that Modifies(28, variable) with procedure.procName=call.procName with call.stmt#=read.stmt#  pattern assign(variable, _)  pattern while(variable, _) with call.procName=variable.varName  pattern if(assign, _, _)  pattern while(call, _)  such that Parent(_, if)  pattern if(variable, _, _) with read.stmt#=7300 with call.procName=print.varName  pattern assign(_, _)  such that Uses(assign, "read") with variable.varName=print.varName  pattern while(variable, _)  pattern if(_, _, _)  such that Modifies(print, _) with if.stmt#=if.stmt#  pattern while(if, _)  such that Calls*(procedure, _) with print.varName="variable"  pattern while(_, _) with 2500=while.stmt#  pattern assign(variable, _) with call.stmt#=assign.stmt#  pattern while(procedure, _)  such that Parent*(stmt, _)  pattern if(_, _, _)  such that Calls(procedure, "variable")  such that Calls(procedure, "variable")  pattern if(read, _, _) with 7500=stmt.stmt# with "call"=variable.varName  pattern assign(variable, _)  pattern if(variable, _, _)  such that Follows*(stmt, print) with "assign"=call.procName  such that Next(_, read)  such that Parent*(print, call)  pattern if(_, _, _) with print.stmt#=assign.stmt# with 5000=stmt.stmt#  pattern if(variable, _, _)  pattern assign(assign, _)  such that Calls*(procedure, "assign")  such that Uses(stmt, _)  such that Affects*(5, assign) with 5300=read.stmt# with variable.varName=call.procName  pattern assign(variable, _"(500*3700)/3900"_)  pattern assign(else, _"((5000-2100)/3700)-6600"_)  pattern if(while, _, _)  such that Follows*(stmt, 28) with "variable"=procedure.procName with 2200=assign.stmt#  pattern assign(variable, _"2500*4800"_)  pattern if(_, _, _) with 7700=assign.stmt#  pattern if(variable, _, _) with "constant"=procedure.procName  such that Affects(stmt, 3) with read.stmt#=while.stmt#  pattern if(variable, _, _)  pattern if(_, _, _)  pattern while(variable, _) with "procedure"=variable.varName  pattern if(print, _, _) with if.stmt#=3200  pattern assign(variable, _"(4600+600)-5500"_)  such that Modifies(26, variable)  pattern while(_, _)  pattern assign(assign, "5200*9000")  pattern while(_, _)  such that Affects*(stmt, assign) with "else"=call.procName with "print"=print.varName  pattern if(variable, _, _)  such that Affects(2, assign)  pattern if(variable, _, _)  such that Affects(_, assign)  such that Uses(stmt, _) with variable.varName="print" with read.varName=call.procName with 7500=read.stmt# with procedure.procName="read"  pattern while(variable, _)  such that Calls*(procedure, procedure)  such that Follows*(if, 2)  such that Parent*(if, if)  pattern if(variable, _, _)  such that Follows(_, read) with print.varName=print.varName  pattern while(assign, _)  pattern while(if, _)  such that Next*(_, call)  pattern while(constant, _) with 100=assign.stmt#  such that Modifies(assign, variable) with "if"=procedure.procName with procedure.procName="read" with variable.varName=call.procName  such that Affects*(stmt, 7)  pattern while(variable, _) with "read"=variable.varName with print.stmt#=while.stmt# with assign.stmt#=if.stmt#  such that Affects*(stmt, _)  pattern assign(variable, "9800-4700")  pattern while(variable, _) with if.stmt#=read.stmt# with "read"=read.varName with "then"=print.varName with "while"=procedure.procName  pattern assign(procedure, _) with read.stmt#=print.stmt#  such that Follows*(19, stmt)  such that Calls*(procedure, "variable")  such that Next(read, 28)  pattern while(_, _)  pattern while(variable, _)  such that Next(25, stmt)  pattern while(_, _)  such that Follows(5, if) with print.stmt#=constant.value with 8100=while.stmt#  pattern assign(variable, _)  pattern while(call, _)  pattern if(_, _, _)  pattern if(then, _, _)  pattern if(_, _, _)  such that Affects*(assign, stmt)  such that Next*(23, read)  pattern while(variable, _)  pattern assign(_, "9000*8500")  such that Parent*(assign, _)  pattern assign(_, _)  pattern if(_, _, _) with while.stmt#=3700  such that Follows*(18, stmt)  such that Affects(27, stmt)  pattern assign(then, _) with variable.varName="call"  pattern while(_, _)  pattern while(while, _)  such that Parent(_, assign)  pattern if(_, _, _) with procedure.procName="variable"  such that Affects*(assign, 2) with call.stmt#=call.stmt#  such that Follows(print, 25)  pattern assign(variable, "5300-5400")  such that Uses(4, variable)  pattern while(_, _)  pattern while(variable, _)  pattern assign(call, _"constant+2900"_)  pattern assign(variable, _"8300-4500"_) with "variable"=call.procName with constant.value=while.stmt#  pattern assign(variable, "6700*7600")  pattern assign(variable, _"2100*900"_) with while.stmt#=7500  such that Modifies(stmt, "then")  pattern if(variable, _, _)  such that Modifies(if, variable)  pattern while(if, _) with 9100=call.stmt#  pattern while(variable, _) with print.varName="call"  such that Modifies(while, variable)  pattern assign(variable, _) with constant.value=3000  such that Parent(_, read)  such that Affects*(assign, _) with 8200=assign.stmt#  such that Follows(27, while)  such that Calls*(procedure, "if")  pattern while(_, _)  such that Next*(if, 5) with read.varName="read"  pattern while(_, _)  such that Calls*(procedure, "constant")  pattern assign(read, _"3500/7400"_)  pattern assign(else, _)  pattern while(_, _)  such that Calls*(procedure, procedure) with read.varName="then"  such that Modifies(stmt, _)  pattern if(_, _, _)  pattern if(call, _, _) with read.stmt#=print.stmt# with procedure.procName=call.procName  pattern if(_, _, _) with variable.varName=procedure.procName  such that Calls(procedure, procedure)  pattern if(print, _, _)  pattern if(variable, _, _)  such that Modifies(14, variable)  such that Affects(_, assign) with assign.stmt#=constant.value with "else"=print.varName  pattern assign(variable, _"7100*6100"_) with "print"=print.varName with read.varName=procedure.procName  such that Next(stmt, print) with 4800=stmt.stmt#  pattern if(if, _, _)  pattern while(variable, _) with "then"=variable.varName with 1100=read.stmt#  such that Modifies(if, variable)  such that Parent*(call, read)  such that Parent(_, read)  pattern if(else, _, _)  pattern if(while, _, _)  pattern if(_, _, _) with call.procName="read" with call.procName=variable.varName  pattern while(_, _)  pattern if(_, _, _)  such that Affects*(assign, _)  pattern if(constant, _, _) with 8500=if.stmt#  pattern if(_, _, _)  pattern while(while, _)  pattern if(variable, _, _) with variable.varName="while"  pattern if(read, _, _)  pattern assign(_, _)  pattern while(read, _)  such that Follows(23, assign) with call.stmt#=constant.value  pattern if(_, _, _)  pattern while(read, _)  such that Parent*(stmt, read)  pattern while(assign, _)  pattern if(if, _, _) with call.stmt#=400 with procedure.procName=print.varName  pattern while(print, _) with stmt.stmt#=if.stmt#  pattern while(variable, _)  such that Affects*(assign, 11)  such that Affects*(_, stmt)  pattern assign(variable, "9500-3300") with call.stmt#=6200  such that Parent*(assign, _)  such that Modifies(while, variable) with call.stmt#=2600 with constant.value=assign.stmt#  such that Next*(read, while)  pattern if(_, _, _)  such that Calls(procedure, "procedure")  pattern while(_, _) with print.varName=procedure.procName  such that Follows*(5, while)  pattern while(variable, _) with procedure.procName=call.procName  pattern while(variable, _)  such that Follows(print, stmt)  pattern while(constant, _)  such that Next(_, if)  such that Modifies(if, _)  pattern assign(_, "6800+6400")  such that Follows*(print, read)  pattern if(_, _, _) with 6600=assign.stmt#  pattern if(read, _, _)  pattern assign(variable, "8800/3200")  such that Parent*(_, print)  such that Next(_, assign)  such that Affects*(_, assign) with read.stmt#=stmt.stmt#  pattern while(_, _) with variable.varName=read.varName  pattern if(variable, _, _) with variable.varName=print.varName with while.stmt#=assign.stmt#  pattern if(variable, _, _)  pattern if(_, _, _)  pattern assign(variable, "4900-7700")  pattern while(variable, _)  such that Parent(assign, 7) with 7400=call.stmt#  pattern while(variable, _)  pattern if(_, _, _) with "constant"=print.varName with assign.stmt#=print.stmt#  pattern assign(print, _"(6100+8300)*6900"_)  pattern if(_, _, _)  such that Calls(procedure, _) with procedure.procName=variable.varName  pattern while(_, _)  such that Parent(print, _)  pattern assign(_, _)  such that Affects(16, stmt) with while.stmt#=read.stmt# with "variable"=print.varName  such that Follows*(print, 23) with if.stmt#=if.stmt#  such that Next*(print, 21)  such that Next*(read, call) with stmt.stmt#=800  pattern if(variable, _, _) with 4300=constant.value  pattern assign(variable, "1300+2500")  pattern if(if, _, _) with 3300=if.stmt#  pattern assign(_, "100+call") with 9800=print.stmt#  such that Parent*(read, assign)  pattern assign(_, _)  pattern if(variable, _, _)  pattern assign(_, _)  such that Affects(stmt, stmt)  pattern if(_, _, _)  pattern assign(_, _"2300+2900"_)  pattern if(then, _, _)  such that Modifies(call, "procedure") with constant.value=call.stmt# with "assign"=print.varName  pattern assign(_, "(1300+9000)/7600")  pattern while(variable, _)  such that Parent(stmt, _)  pattern while(variable, _)  pattern while(variable, _)  pattern assign(variable, _"4800*else"_)  pattern while(variable, _)  pattern assign(read, _)  such that Uses(assign, variable)  pattern while(else, _)  pattern assign(then, _)  such that Next(print, _) with variable.varName="call"  such that Calls(_, procedure)  pattern while(constant, _)  pattern if(variable, _, _)  such that Calls*(procedure, procedure)  such that Affects*(23, assign) with read.stmt#=4400  such that Calls*(procedure, _) with variable.varName=variable.varName  pattern while(if, _) with print.stmt#=4200 with 300=constant.value with "call"=read.varName  such that Modifies(read, "variable")  pattern while(procedure, _)  pattern if(_, _, _)  such that Calls*(procedure, _) with if.stmt#=while.stmt# with read.stmt#=while.stmt# with 9000=constant.value  pattern while(variable, _)  pattern if(else, _, _)  such that Next*(if, _)  pattern if(variable, _, _)  such that Parent*(print, _) with while.stmt#=if.stmt# with assign.stmt#=1000  such that Follows*(_, stmt)  pattern assign(variable, _) with stmt.stmt#=while.stmt#  pattern while(variable, _)  pattern while(_, _)  pattern while(call, _)  such that Calls(procedure, "constant")  pattern if(variable, _, _)  pattern assign(constant, "1000-7700")  pattern assign(_, _)  such that Calls(procedure, procedure)  pattern if(variable, _, _) with read.stmt#=1800  pattern if(variable, _, _)  pattern if(call, _, _)  pattern assign(variable, "5000+2600")  pattern if(_, _, _)  pattern if(_, _, _) with procedure.procName="assign" with variable.varName=call.procName  such that Next*(_, read) with 7200=if.stmt# with assign.stmt#=6900  pattern if(if, _, _)  pattern while(variable, _) with variable.varName="if"  pattern while(then, _) with 200=call.stmt# with variable.varName="print" with "assign"=call.procName  pattern while(variable, _)  pattern if(variable, _, _) with variable.varName=procedure.procName  pattern if(variable, _, _)  such that Uses(read, _) with 5900=read.stmt# with procedure.procName="print" with read.varName=procedure.procName  pattern while(variable, _)  pattern while(_, _) with "constant"=procedure.procName  pattern while(then, _)  such that Next(_, call)  pattern assign(variable, "1500*7300")  pattern if(assign, _, _) with if.stmt#=9900  such that Follows*(_, if) with print.varName="then" with stmt.stmt#=5200  pattern if(_, _, _) with print.varName=call.procName with "call"=read.varName with read.stmt#=1900 with if.stmt#=5900  such that Affects*(14, stmt)  pattern if(variable, _, _)  pattern while(while, _)  pattern while(variable, _) with "call"=print.varName  pattern if(print, _, _) with "call"=read.varName  pattern assign(_, "1800/4800") with assign.stmt#=read.stmt# with if.stmt#=400  such that Modifies(procedure, variable)  such that Parent*(while, assign)  pattern assign(variable, _"2600*9200"_)  such that Follows*(_, assign) with while.stmt#=call.stmt# with 8400=constant.value  pattern while(variable, _)  such that Parent(call, print) with read.varName=variable.varName with read.varName=call.procName with read.stmt#=print.stmt#  pattern assign(variable, _"3400+9200"_) with procedure.procName="assign"  such that Calls(procedure, _)  pattern if(variable, _, _)  pattern if(print, _, _)  pattern while(procedure, _) with "constant"=read.varName with print.varName="print"  pattern while(_, _)  such that Follows(while, 11)  such that Modifies(8, variable)  pattern if(_, _, _)  pattern assign(_, "(1800+1600)-500") with call.procName=read.varName  pattern if(print, _, _)  pattern while(variable, _)  such that Affects(assign, 4) with procedure.procName="if"  pattern assign(variable, _)  pattern assign(_, _"6100+5300"_)  pattern assign(else, _"(3800*7100)-print"_)  pattern assign(while, _) with 4900=constant.value with call.procName=call.procName with read.varName="while"  pattern if(print, _, _)  pattern if(_, _, _)  such that Modifies(read, _)  such that Next(read, _)  pattern while(_, _)  such that Calls(procedure, procedure)  such that Modifies(assign, "procedure")  such that Affects*(assign, stmt) with print.varName=call.procName with call.stmt#=2500  pattern if(variable, _, _)  such that Modifies(20, variable)  such that Affects*(assign, 19) with 4900=while.stmt# with procedure.procName="variable" 

5000
62 - Query 62
variable variable; assign assign; print print; call call; constant constant; stmt stmt; read read; if if; while while; procedure procedure; 
Select <variable, assign, print, call, constant, stmt, read, if, while, procedure>  pattern if(variable, _, _) with procedure.procName=variable.varName  such that Parent*(while, 21) with read.stmt#=100  pattern assign(variable, "6700/4500")  such that Follows(_, while)  pattern while(variable, _)  pattern if(_, _, _)  pattern if(_, _, _)  pattern if(then, _, _) with print.stmt#=1500  pattern while(_, _)  such that Next*(_, while)  such that Parent*(5, stmt)  such that Parent(call, while) with print.stmt#=read.stmt#  pattern if(constant, _, _) with while.stmt#=9900  such that Parent(while, _)  such that Follows(stmt, print)  such that Parent*(_, stmt) with 3200=print.stmt#  pattern if(variable, _, _) with while.stmt#=print.stmt#  pattern if(if, _, _) with print.stmt#=assign.stmt#  pattern if(_, _, _) with call.stmt#=5800  such that Modifies(call, variable)  such that Next*(_, call)  pattern if(_, _, _)  pattern while(_, _)  pattern while(variable, _)  pattern while(variable, _) with 3300=constant.value  pattern while(procedure, _)  pattern assign(_, _) with 5000=stmt.stmt#  pattern if(_, _, _)  pattern while(_, _) with "call"=call.procName  such that Parent(_, print)  pattern assign(_, _"6900+8600"_)  pattern if(read, _, _)  such that Next(if, read)  pattern while(variable, _)  such that Next*(if, 18)  such that Parent*(while, _)  such that Next(while, stmt)  pattern while(variable, _) with "variable"=call.procName  pattern while(constant, _)  such that Calls*(procedure, "constant") with read.stmt#=if.stmt# with constant.value=while.stmt# with variable.varName="constant" with read.varName=procedure.procName  pattern if(_, _, _) with print.varName=read.varName with 6800=constant.value with "read"=procedure.procName  pattern assign(variable, _"variable*500"_) with read.varName=print.varName  pattern while(_, _) with 3300=constant.value with 7700=call.stmt#  pattern assign(then, "constant-procedure") with "then"=variable.varName  such that Calls*(procedure, procedure)  such that Calls(procedure, _) with 5200=assign.stmt# with while.stmt#=while.stmt# with 4500=stmt.stmt#  such that Modifies(print, "if") with "call"=call.procName  such that Modifies(stmt, variable) with call.procName="assign"  pattern if(then, _, _) with 4400=stmt.stmt#  pattern assign(print, _)  pattern if(else, _, _) with read.varName="if"  pattern while(_, _)  such that Modifies(call, "read") with 5800=read.stmt# with "if"=print.varName  pattern assign(_, _)  pattern if(_, _, _) with variable.varName=variable.varName  pattern while(_, _)  pattern assign(_, "2500+900")  pattern assign(read, _"7500+7600"_)  pattern assign(variable, "2900+5900") with variable.varName="read"  pattern assign(_, _"else/if"_) with "if"=read.varName  pattern while(variable, _)  pattern assign(variable, _) with call.procName="then" with if.stmt#=constant.value  pattern assign(else, "1100-6600")  pattern if(_, _, _) with call.procName=procedure.procName with read.stmt#=read.stmt#  such that Next(assign, 8)  pattern if(variable, _, _)  pattern while(variable, _)  such that Affects*(_, assign)  such that Next*(10, if)  pattern if(_, _, _)  such that Affects(stmt, _) with procedure.procName="else"  pattern if(variable, _, _) with assign.stmt#=constant.value with print.varName="then" with 2700=assign.stmt#  pattern assign(_, _"2200+2900"_)  such that Affects*(stmt, stmt)  pattern assign(_, "2200+while") with 2600=read.stmt# with while.stmt#=200 with call.stmt#=while.stmt#  pattern if(_, _, _)  pattern if(_, _, _)  such that Modifies(if, _)  such that Affects*(assign, _)  such that Parent*(read, assign)  pattern assign(variable, _)  pattern while(read, _)  pattern assign(variable, "1900+1700") with 9200=while.stmt#  pattern if(constant, _, _) with "procedure"=print.varName with read.varName="variable" with "while"=call.procName  pattern assign(_, _)  pattern if(variable, _, _)  pattern while(variable, _)  pattern assign(call, "7700/7500") with 8900=if.stmt# with 9000=call.stmt#  such that Follows*(11, while)  such that Modifies(13, variable)  pattern while(else, _)  pattern assign(variable, _) with "print"=read.varName with if.stmt#=print.stmt#  such that Uses(20, variable)  pattern assign(_, _"3200-1000"_)  such that Uses(print, variable)  such that Affects(stmt, _)  such that Parent*(stmt, print)  such that Parent(13, print) with "call"=variable.varName  pattern if(variable, _, _) with 9900=if.stmt#  pattern if(variable, _, _) with call.procName="variable"  pattern while(variable, _)  pattern assign(while, "5600-6500")  such that Affects*(_, stmt)  such that Affects*(stmt, 5)  pattern assign(if, _)  pattern assign(variable, _"1500-4900"_)  pattern if(procedure, _, _)  such that Affects(stmt, 2)  pattern if(variable, _, _)  pattern assign(if, "(2400-3600)/1700")  such that Next*(_, stmt) with variable.varName=variable.varName  pattern while(variable, _)  such that Parent*(while, _)  such that Calls*(_, procedure)  pattern if(assign, _, _)  such that Calls(procedure, _)  such that Affects*(stmt, assign) with 500=call.stmt#  pattern assign(_, _)  such that Next*(_, read)  such that Parent(call, 14)  such that Modifies(procedure, "constant")  pattern if(_, _, _)  pattern while(_, _)  such that Uses(read, variable) with print.varName="print"  such that Next*(16, while) with while.stmt#=while.stmt#  pattern if(variable, _, _)  such that Next(_, stmt)  pattern assign(if, _) with call.procName="call"  pattern if(variable, _, _)  pattern assign(else, _"4800*100"_)  such that Next*(if, 11)  such that Affects(21, assign)  such that Modifies(while, _) with "print"=call.procName with print.stmt#=5700 with print.varName="variable"  pattern assign(variable, _)  such that Affects*(21, stmt) with print.stmt#=4300  pattern assign(_, _)  pattern while(_, _)  such that Affects(_, stmt) with constant.value=1400 with "variable"=call.procName  such that Next(call, print)  such that Follows(print, while)  pattern assign(assign, _"9100+6800"_)  pattern if(print, _, _) with "procedure"=call.procName  pattern if(_, _, _)  such that Modifies(while, _) with print.varName="assign"  pattern if(while, _, _)  pattern assign(variable, _)  pattern while(_, _)  pattern if(procedure, _, _) with 4500=assign.stmt#  such that Follows(_, assign) with 1700=print.stmt# with stmt.stmt#=print.stmt# with 6900=call.stmt#  pattern if(assign, _, _)  such that Modifies(if, "else")  pattern if(_, _, _)  such that Follows*(if, 13)  pattern if(variable, _, _) with 2000=read.stmt#  pattern assign(read, "(then-7900)*5300")  such that Follows*(18, if) with variable.varName=read.varName with variable.varName=read.varName with while.stmt#=assign.stmt# with procedure.procName="call"  such that Uses(procedure, _) with constant.value=read.stmt# with 2300=call.stmt# with stmt.stmt#=read.stmt#  pattern while(procedure, _)  pattern if(else, _, _) with print.varName=read.varName with "variable"=read.varName  such that Uses(assign, variable) with call.stmt#=read.stmt# with "constant"=print.varName  such that Affects*(stmt, _)  pattern if(assign, _, _)  pattern while(constant, _)  pattern if(_, _, _)  pattern assign(assign, "8900-3500")  pattern while(variable, _)  pattern assign(else, "4900+6400")  such that Affects(assign, _)  such that Affects*(assign, 13)  such that Follows(read, _) with read.stmt#=6000 with "else"=call.procName  such that Next*(while, print)  pattern assign(variable, _"6000/8600"_) with stmt.stmt#=9200  such that Next*(stmt, _)  pattern while(variable, _) with "read"=read.varName  pattern if(variable, _, _)  pattern assign(_, _"2800*7300"_)  such that Affects(stmt, 17) with 3300=constant.value  such that Follows*(_, stmt)  such that Follows(read, 5)  such that Uses(29, variable)  pattern assign(variable, _)  pattern while(_, _)  such that Follows*(22, read)  pattern while(variable, _)  pattern assign(variable, "(2400+5600)*8300")  such that Follows*(if, 4)  such that Next*(stmt, 12) with read.varName=variable.varName with while.stmt#=assign.stmt# with procedure.procName=procedure.procName  pattern while(print, _)  pattern if(_, _, _) with constant.value=6200  pattern assign(print, _) with variable.varName="call"  such that Affects(stmt, assign)  such that Next*(3, read)  pattern assign(variable, _)  pattern assign(variable, _"(9400+procedure)+1500"_) with variable.varName=variable.varName  pattern if(_, _, _)  pattern assign(variable, "9600*5500") with call.stmt#=if.stmt#  such that Calls*("variable", procedure)  such that Uses(print, "else")  pattern assign(assign, _"5900/assign"_) with print.stmt#=assign.stmt# with stmt.stmt#=9500  such that Affects*(assign, _)  pattern while(variable, _)  pattern while(procedure, _)  pattern while(variable, _) with while.stmt#=7900  pattern if(_, _, _)  such that Modifies(procedure, "constant")  pattern assign(variable, _)  such that Calls*(procedure, _) with print.stmt#=while.stmt# with call.stmt#=print.stmt#  pattern assign(variable, _"5100/2400"_) with assign.stmt#=2300 with "assign"=variable.varName  pattern while(_, _)  pattern while(variable, _)  pattern if(_, _, _)  pattern while(_, _) with print.stmt#=3900 with variable.varName="read" with print.stmt#=7400  pattern assign(variable, _"3900-2600"_)  pattern while(_, _)  pattern while(then, _)  pattern while(_, _)  pattern assign(variable, _"while*7400"_) with variable.varName="read"  pattern if(_, _, _)  such that Follows(read, 3)  pattern while(_, _) with 6900=read.stmt#  such that Uses(print, _)  pattern assign(_, _)  such that Calls*(procedure, "read") with stmt.stmt#=read.stmt#  pattern assign(variable, _)  such that Uses(while, _)  pattern while(else, _)  such that Calls*(procedure, "then")  pattern assign(variable, "500+1500")  such that Parent*(_, call)  pattern if(variable, _, _)  pattern if(_, _, _) with read.varName="else"  pattern while(_, _)  pattern assign(variable, _) with constant.value=100  such that Parent(read, 29)  pattern assign(_, _) with procedure.procName=print.varName with 6900=while.stmt# with stmt.stmt#=stmt.stmt# with print.stmt#=7700  pattern assign(variable, "7300+8600")  such that Next*(6, print)  pattern assign(variable, _"300*3100"_)  such that Follows*(3, assign)  such that Parent(_, assign)  pattern while(_, _)  such that Uses(stmt, variable) with "constant"=read.varName  pattern while(variable, _) with print.stmt#=call.stmt# with assign.stmt#=4000 with 4800=call.stmt#  pattern while(_, _) with print.stmt#=1600 with variable.varName="constant"  such that Follows*(9, assign) with 4300=constant.value with call.procName=call.procName with variable.varName=call.procName  pattern assign(else, _"1900+6000"_) with variable.varName="else" with read.varName="print" with read.varName=call.procName  pattern assign(read, "4000+4500")  such that Calls("variable", procedure)  pattern while(variable, _) with print.stmt#=call.stmt#  pattern if(constant, _, _)  such that Calls*(procedure, _)  pattern if(if, _, _) with read.varName=print.varName with print.stmt#=1400  pattern assign(_, _"9300/300"_)  such that Next(print, 16)  such that Follows*(_, stmt) with procedure.procName=read.varName with assign.stmt#=call.stmt#  pattern assign(variable, _"3700*9000"_)  such that Modifies(assign, _)  pattern assign(constant, _"6600/2400"_)  such that Uses(procedure, "print")  such that Follows*(2, assign)  pattern assign(_, "(3900*9300)/7100")  such that Next*(_, read)  such that Modifies(while, _)  pattern if(assign, _, _)  pattern if(while, _, _) with call.stmt#=while.stmt#  pattern if(variable, _, _)  pattern while(_, _)  pattern if(call, _, _)  pattern assign(_, _"7400-3200"_) with if.stmt#=3200  such that Parent(assign, 11) with print.varName="procedure"  such that Uses(print, variable) with read.varName="read"  pattern assign(constant, _"6500*1600"_)  such that Parent(_, stmt)  such that Follows(_, read)  such that Calls*(procedure, _) with stmt.stmt#=2500 with variable.varName=print.varName  pattern if(variable, _, _)  such that Next*(6, if)  such that Follows(read, call) with stmt.stmt#=5400 with 3100=assign.stmt#  pattern if(_, _, _)  such that Uses(while, "while")  such that Affects*(stmt, assign)  pattern while(variable, _)  such that Affects*(assign, 1)  pattern while(_, _)  pattern if(variable, _, _) with procedure.procName=variable.varName  pattern if(variable, _, _)  pattern if(assign, _, _)  such that Modifies(if, "read")  pattern if(procedure, _, _)  pattern assign(variable, _"(7500*1500)+500"_) with while.stmt#=2700  pattern assign(variable, _"9700+1500"_)  pattern if(constant, _, _)  pattern while(_, _)  pattern if(variable, _, _) with "variable"=procedure.procName  pattern if(call, _, _)  pattern if(_, _, _)  pattern assign(if, _"constant-1000"_) with stmt.stmt#=5300 with read.varName=variable.varName  pattern while(variable, _)  such that Follows(read, 27)  pattern while(call, _) with 9200=print.stmt#  pattern while(procedure, _) with stmt.stmt#=assign.stmt#  pattern while(variable, _)  such that Next*(read, assign)  such that Next*(_, if)  pattern if(variable, _, _)  pattern assign(_, _)  pattern while(variable, _) with variable.varName=procedure.procName  such that Affects(stmt, 21)  such that Affects*(_, stmt) with print.varName=variable.varName with call.procName="assign"  pattern if(variable, _, _) with 8200=constant.value  such that Follows*(call, read) with print.varName="procedure"  such that Next(stmt, 23)  pattern assign(then, "6000/9500")  such that Follows(13, call)  pattern while(_, _)  pattern while(variable, _)  such that Next*(_, print) with assign.stmt#=3600  such that Follows*(stmt, 14) with variable.varName="print"  such that Affects(5, assign)  pattern while(variable, _)  such that Follows(read, while)  such that Follows(read, _)  such that Calls*(_, procedure)  pattern while(procedure, _)  pattern if(_, _, _)  pattern if(if, _, _)  such that Follows*(if, read) with constant.value=print.stmt#  pattern if(call, _, _) with variable.varName=read.varName with stmt.stmt#=7000  such that Affects(assign, stmt) with 7100=if.stmt# with 8700=constant.value with procedure.procName="constant"  such that Parent*(while, assign)  pattern assign(variable, "variable*9400")  pattern while(assign, _) with 2500=assign.stmt#  pattern if(variable, _, _)  pattern while(variable, _) with read.varName="variable"  such that Modifies(procedure, "if") 

5000
63 - Query 63
print print; variable variable; constant constant; assign assign; call call; stmt stmt; read read; while while; if if; procedure procedure; 
Select <print, variable, constant, assign, call, stmt, read, while, if, procedure>  such that Parent*(while, _) with "procedure"=procedure.procName with "print"=read.varName with constant.value=9800  pattern while(_, _)  pattern if(print, _, _)  such that Parent(_, if) with 4500=constant.value with print.varName="print"  pattern assign(variable, _"(1400-while)*1200"_)  pattern if(variable, _, _) with while.stmt#=6700  such that Modifies(while, _)  pattern while(_, _) with print.stmt#=1600 with "then"=print.varName with "variable"=call.procName with call.procName=read.varName  pattern while(assign, _)  pattern while(read, _)  such that Follows(stmt, 8)  pattern assign(else, _"(7300+7100)+1700"_) with call.stmt#=2700 with print.stmt#=5700 with assign.stmt#=6400  pattern assign(variable, "while-4500")  pattern while(variable, _)  pattern if(procedure, _, _)  such that Parent(_, call)  such that Next(_, assign)  pattern while(_, _) with 9300=while.stmt#  pattern if(variable, _, _)  such that Modifies(assign, variable)  such that Affects*(stmt, stmt)  such that Next*(_, read)  pattern if(procedure, _, _)  pattern if(while, _, _)  pattern assign(assign, "2700-variable") with print.varName=print.varName with 7400=constant.value with 3900=if.stmt#  pattern if(call, _, _) with variable.varName="variable" with read.varName=call.procName  such that Calls(procedure, _)  pattern if(if, _, _)  pattern while(_, _) with 9700=call.stmt# with "constant"=procedure.procName  pattern while(_, _)  such that Next(_, call)  such that Uses(10, variable)  pattern while(constant, _)  pattern assign(call, "3700/6100") with variable.varName="while"  pattern while(if, _)  pattern while(variable, _)  pattern while(_, _)  pattern if(_, _, _)  such that Modifies(print, variable)  pattern while(_, _)  such that Modifies(16, variable)  pattern assign(_, _"6000*read"_)  such that Follows(call, _)  pattern assign(variable, "(500-4800)*5100")  pattern while(variable, _)  such that Follows(_, if)  pattern assign(_, _) with "assign"=read.varName  pattern if(_, _, _) with constant.value=7800 with "else"=procedure.procName  pattern if(variable, _, _)  pattern assign(variable, _"constant*assign"_)  pattern assign(read, _"3600-7300"_) with stmt.stmt#=stmt.stmt# with call.stmt#=6900 with "then"=read.varName with stmt.stmt#=while.stmt#  pattern while(call, _) with "call"=procedure.procName with print.varName=print.varName with "variable"=read.varName  pattern if(if, _, _) with 700=print.stmt# with procedure.procName=read.varName  pattern assign(_, _)  pattern if(assign, _, _)  such that Follows(read, 15) with read.varName="procedure"  pattern assign(while, _"5700-4900"_)  pattern if(variable, _, _)  such that Follows(stmt, print) with call.procName="if"  pattern while(_, _)  pattern assign(then, "3300/4500") with procedure.procName=variable.varName  such that Parent*(stmt, _)  pattern assign(variable, _"7100*6800"_) with read.stmt#=6800  pattern assign(variable, _) with call.procName="read"  such that Affects*(18, stmt)  such that Affects(9, stmt) with 1000=stmt.stmt# with "constant"=variable.varName  pattern while(_, _)  such that Uses(3, variable) with 3500=while.stmt# with call.procName="procedure"  pattern if(_, _, _)  such that Follows*(_, read)  pattern while(then, _)  pattern while(if, _)  pattern assign(constant, _)  pattern assign(if, _)  pattern if(read, _, _)  pattern while(read, _)  pattern if(_, _, _)  such that Affects*(15, stmt)  pattern while(variable, _) with variable.varName="variable"  pattern if(print, _, _) with procedure.procName=variable.varName  pattern assign(_, _)  pattern while(variable, _)  pattern assign(_, "8600+5700")  such that Parent(read, read)  pattern while(call, _) with 7200=read.stmt#  such that Affects(stmt, 9)  such that Affects(stmt, 27)  such that Next*(print, assign) with read.varName="while"  pattern while(variable, _) with 600=call.stmt#  pattern assign(_, "9800*8700") with 100=stmt.stmt# with "read"=read.varName  pattern while(variable, _) with read.varName=call.procName  pattern if(_, _, _)  pattern if(variable, _, _)  such that Next*(read, _)  pattern assign(variable, "1500/1800")  pattern if(while, _, _)  such that Next(stmt, _) with procedure.procName=read.varName with constant.value=print.stmt#  pattern assign(variable, "6900/2000")  pattern while(read, _)  pattern assign(variable, "600+9900")  such that Calls(_, procedure)  such that Modifies(stmt, _)  such that Next*(_, read)  such that Next*(print, _)  pattern while(variable, _) with call.procName="constant"  pattern assign(else, _"else/7000"_) with 200=print.stmt#  pattern assign(variable, "400/4300") with variable.varName=read.varName  pattern assign(_, _"8500+6600"_)  such that Parent(7, print)  such that Follows(stmt, _)  pattern while(variable, _)  pattern if(then, _, _)  pattern if(then, _, _) with variable.varName="then"  pattern assign(read, _"2100*400"_)  pattern if(_, _, _)  pattern if(_, _, _)  such that Affects(assign, 16)  pattern assign(_, _)  such that Next(assign, read)  pattern if(_, _, _)  pattern while(variable, _)  pattern assign(_, _"6600+2000"_)  pattern if(_, _, _)  such that Parent(assign, while)  pattern if(variable, _, _)  such that Calls*(procedure, "else") with if.stmt#=4000  pattern while(variable, _)  such that Parent(while, _) with call.stmt#=5200 with call.stmt#=assign.stmt#  such that Next*(read, while)  pattern while(then, _) with call.stmt#=7400 with call.procName="while"  pattern while(_, _)  pattern while(_, _)  pattern while(read, _)  such that Modifies(if, variable)  such that Parent(while, 15)  pattern assign(procedure, "8500*variable")  such that Next(read, while)  such that Calls*(procedure, _) with print.varName=read.varName  pattern while(variable, _) with 9600=assign.stmt# with "while"=procedure.procName  pattern while(assign, _) with 5100=print.stmt#  such that Next(call, _)  pattern while(procedure, _)  such that Affects(stmt, 23)  such that Parent(while, 14)  pattern while(_, _)  pattern while(variable, _)  such that Affects*(stmt, _) with procedure.procName=read.varName  such that Modifies(while, _)  pattern if(while, _, _)  pattern while(read, _) with read.varName=variable.varName with "assign"=procedure.procName  pattern assign(variable, _)  such that Next*(20, assign)  such that Parent(call, stmt)  such that Next*(print, 4) with print.stmt#=8300  pattern assign(_, "200-7800") with while.stmt#=print.stmt#  pattern while(_, _)  pattern assign(_, _"7300/2900"_)  pattern if(variable, _, _)  pattern while(_, _) with "if"=procedure.procName  pattern while(variable, _) with "constant"=print.varName with procedure.procName=procedure.procName with read.varName="call" with procedure.procName=print.varName  pattern assign(_, "6300-3200")  pattern while(_, _)  pattern assign(_, _"(1800*2500)-100"_)  such that Parent*(_, if) with read.varName="call"  pattern assign(_, _)  such that Modifies(25, variable) with "call"=procedure.procName with "procedure"=variable.varName with "variable"=read.varName with variable.varName="call"  such that Calls*(procedure, "procedure")  pattern while(constant, _) with 8200=assign.stmt#  such that Affects(_, assign)  pattern assign(assign, "1200*7700") with "call"=print.varName with call.procName="procedure"  such that Parent(29, if)  such that Parent(print, _) with call.stmt#=stmt.stmt#  pattern while(variable, _) with constant.value=print.stmt#  pattern if(variable, _, _) with call.procName="read"  pattern if(call, _, _)  pattern if(call, _, _) with print.varName=read.varName  such that Uses(5, variable)  pattern if(constant, _, _)  pattern while(_, _) with "call"=print.varName with call.procName="constant"  pattern while(_, _)  pattern if(read, _, _)  such that Follows*(call, _) with stmt.stmt#=900 with call.procName=call.procName  pattern assign(variable, _"5400+1200"_)  such that Parent(5, print) with print.stmt#=6600  such that Follows(_, if)  such that Next(while, 9)  pattern assign(else, _"4500-7100"_)  pattern if(constant, _, _)  such that Calls*(procedure, _)  such that Follows*(_, call)  pattern while(_, _)  pattern assign(variable, "(7800+5300)-read") with "while"=call.procName  such that Next*(18, while)  such that Uses(call, _)  pattern if(_, _, _)  pattern assign(_, _"9500+procedure"_) with variable.varName=read.varName  such that Follows*(6, print)  pattern assign(_, _"(5000-9900)+7000"_) with "call"=call.procName with call.stmt#=3100  such that Uses(27, variable)  such that Next*(21, if)  pattern while(_, _)  such that Uses(while, _)  such that Next*(while, _)  such that Follows*(call, if) with while.stmt#=3500  pattern assign(variable, "5300/8300") with if.stmt#=print.stmt#  pattern if(assign, _, _)  pattern assign(variable, _) with stmt.stmt#=assign.stmt#  pattern assign(variable, "8300*2500")  pattern if(_, _, _)  pattern assign(if, "((700/3700)-5700)/2200") with procedure.procName=read.varName  such that Calls*(procedure, "while")  pattern assign(variable, _)  such that Next(_, if)  pattern if(_, _, _) with procedure.procName=call.procName  pattern assign(_, "(1400/constant)/4800")  pattern assign(_, "(9200/5200)/3500")  pattern if(variable, _, _) with read.varName=procedure.procName  pattern assign(variable, "8500-5700")  pattern assign(if, _)  pattern assign(variable, _) with 3800=constant.value  such that Parent*(print, _)  pattern if(variable, _, _)  such that Affects*(_, assign)  such that Next(_, print)  pattern if(variable, _, _) with procedure.procName=variable.varName  pattern assign(_, "2600/2500")  pattern if(print, _, _)  pattern if(_, _, _) with assign.stmt#=assign.stmt# with constant.value=1200  such that Calls*(_, procedure) with "print"=procedure.procName with call.procName=print.varName  pattern while(variable, _) with print.varName="constant"  pattern while(print, _)  pattern if(constant, _, _)  pattern while(_, _)  such that Affects*(assign, _) with "if"=read.varName with procedure.procName=procedure.procName with if.stmt#=4300 with "read"=procedure.procName  pattern if(procedure, _, _)  pattern if(_, _, _)  pattern if(_, _, _)  such that Modifies(assign, "procedure")  pattern assign(variable, _"4700/2700"_)  such that Follows(if, 4)  such that Parent(26, stmt) with while.stmt#=5000  such that Modifies(17, variable)  such that Calls*(procedure, "while")  such that Follows*(print, _) with print.stmt#=9000  pattern if(variable, _, _)  such that Affects(assign, _)  pattern if(_, _, _) with variable.varName="assign"  such that Affects*(20, assign)  pattern while(read, _)  pattern assign(_, "8700+4000") with if.stmt#=7000 with assign.stmt#=800  pattern assign(if, _)  pattern assign(variable, "variable*7100")  pattern if(variable, _, _)  pattern if(while, _, _)  such that Parent*(print, 20)  such that Modifies(call, "while")  such that Follows(14, assign)  pattern while(variable, _)  such that Parent(if, 21) with variable.varName="assign"  pattern while(constant, _)  pattern while(constant, _) with call.stmt#=read.stmt#  pattern if(variable, _, _)  such that Parent(print, _)  pattern while(call, _) with 4000=constant.value with call.procName="assign"  pattern if(else, _, _)  pattern if(then, _, _)  pattern while(variable, _) with "constant"=print.varName  pattern if(variable, _, _)  pattern while(variable, _) with print.varName=call.procName with 4000=while.stmt#  pattern while(_, _) with while.stmt#=read.stmt#  pattern if(_, _, _)  such that Calls("assign", procedure)  such that Affects*(assign, 1)  pattern assign(_, "4100-call") with read.varName="procedure"  such that Next*(if, assign) with read.varName=print.varName with print.stmt#=200  pattern while(variable, _) with "else"=read.varName with 9600=stmt.stmt#  pattern if(variable, _, _)  pattern if(read, _, _)  pattern assign(procedure, "9600/8300")  pattern while(_, _)  such that Follows*(read, _) with 6700=read.stmt#  such that Follows*(while, 13)  pattern assign(_, "(8600*5400)*2900")  such that Next(assign, 12)  pattern while(variable, _) with stmt.stmt#=6400  pattern if(call, _, _)  pattern assign(variable, "9700/1400")  pattern while(variable, _) with constant.value=while.stmt#  pattern assign(variable, "9000+procedure") with while.stmt#=5600  such that Parent*(17, while) with print.varName="else"  pattern assign(variable, "3100-4900")  pattern if(assign, _, _) with assign.stmt#=read.stmt# with read.varName="while"  such that Affects(6, stmt)  such that Parent(while, _)  such that Affects*(13, assign)  such that Affects(stmt, 9)  pattern assign(if, _"variable-9200"_) with print.varName=call.procName  such that Next*(21, stmt)  pattern if(variable, _, _)  such that Next(23, if) with "then"=call.procName  pattern if(then, _, _) with procedure.procName="variable" with "read"=variable.varName  pattern if(_, _, _) with print.varName=print.varName  pattern assign(variable, _)  such that Affects(_, assign)  such that Next*(if, while)  pattern while(call, _)  such that Calls*("constant", procedure) with stmt.stmt#=1500 with 2000=call.stmt#  pattern assign(print, _"3800/1300"_)  such that Uses(12, variable)  such that Next(_, while)  pattern while(_, _)  such that Affects*(20, stmt)  pattern assign(variable, "2600+8200")  pattern if(_, _, _)  such that Uses(17, variable)  pattern assign(_, "6900/6900")  pattern if(_, _, _)  pattern while(variable, _)  such that Follows*(_, while)  such that Affects(stmt, _)  such that Calls*(procedure, "if") with if.stmt#=read.stmt# with print.stmt#=2800 with 1400=call.stmt#  pattern assign(variable, _"7200-1600"_)  pattern while(variable, _) with call.procName="variable" with "if"=procedure.procName  pattern while(_, _) with read.stmt#=if.stmt# with call.procName="constant"  such that Modifies(read, _)  pattern while(_, _) with 4400=print.stmt# with stmt.stmt#=4300  such that Uses(call, "while") with call.stmt#=print.stmt# with "variable"=procedure.procName with print.stmt#=3800  pattern assign(_, _"1400*8600"_)  such that Affects(_, stmt)  pattern if(_, _, _)  pattern if(_, _, _)  pattern if(else, _, _)  pattern while(else, _) with call.stmt#=9700  such that Calls*(_, procedure)  pattern if(_, _, _)  pattern while(_, _) with call.stmt#=read.stmt#  pattern assign(variable, _"(8800/3300)*print"_)  pattern assign(if, _)  such that Next(_, assign)  pattern while(call, _) 

5000
64 - Query 64
assign assign; variable variable; print print; call call; constant constant; stmt stmt; read read; if if; while while; procedure procedure; 
Select <assign, variable, print, call, constant, stmt, read, if, while, procedure> with stmt.stmt#=assign.stmt# with "read"=procedure.procName  pattern if(_, _, _)  pattern while(constant, _)  pattern while(_, _) with stmt.stmt#=assign.stmt#  pattern while(variable, _)  pattern if(variable, _, _)  pattern assign(variable, _"(2700+4700)-900"_) with print.varName=variable.varName  pattern while(constant, _) with procedure.procName=call.procName  such that Parent*(_, print)  pattern while(variable, _)  pattern while(_, _)  such that Modifies(while, variable) with if.stmt#=assign.stmt#  such that Calls(_, procedure)  such that Calls*(procedure, procedure) with "print"=read.varName with constant.value=assign.stmt#  pattern assign(else, _"1700*8800"_) with 1400=print.stmt#  pattern while(_, _)  such that Modifies(5, variable) with 6500=assign.stmt# with read.varName=procedure.procName with assign.stmt#=assign.stmt# with variable.varName=read.varName with read.stmt#=assign.stmt#  pattern if(_, _, _)  pattern while(variable, _) with if.stmt#=while.stmt# with if.stmt#=read.stmt# with assign.stmt#=3700  such that Calls(procedure, _)  pattern if(variable, _, _) with "assign"=call.procName  pattern if(_, _, _)  pattern while(variable, _)  pattern assign(variable, _"4500+1500"_)  pattern assign(constant, "then*6400")  such that Affects*(_, assign)  pattern if(variable, _, _)  pattern if(while, _, _)  such that Affects*(stmt, _)  pattern assign(call, _"8000-5400"_) with call.procName=variable.varName  pattern while(read, _)  pattern assign(_, _)  such that Calls*(procedure, procedure)  pattern if(variable, _, _) with print.stmt#=stmt.stmt# with 8500=if.stmt# with 9600=print.stmt#  such that Affects*(assign, 9)  pattern if(constant, _, _)  such that Next*(3, assign)  pattern assign(variable, "900/8800")  pattern while(_, _)  pattern if(variable, _, _)  such that Next*(call, call) with procedure.procName=variable.varName with "while"=procedure.procName  pattern while(variable, _)  pattern while(call, _)  such that Calls*(procedure, procedure)  pattern assign(read, _"800+9400"_)  pattern if(_, _, _)  pattern assign(variable, _"constant/6500"_) with print.varName=procedure.procName with read.varName=read.varName  such that Calls*(procedure, procedure) with assign.stmt#=if.stmt#  pattern if(variable, _, _)  such that Follows*(assign, 14)  pattern assign(else, _)  pattern if(variable, _, _) with 6100=while.stmt#  such that Next(if, 14) with assign.stmt#=assign.stmt# with "variable"=print.varName with if.stmt#=assign.stmt#  pattern if(_, _, _) with constant.value=8300 with read.varName="while"  pattern while(variable, _) with variable.varName="print" with 8400=print.stmt#  such that Affects(stmt, _) with call.procName="procedure" with procedure.procName="if"  pattern assign(variable, "7000-400")  such that Calls(_, procedure) with procedure.procName="while" with call.procName=print.varName  such that Follows(_, if)  such that Modifies(read, "assign")  such that Next*(while, assign) with while.stmt#=assign.stmt# with 2600=assign.stmt#  such that Parent*(print, if)  such that Next(_, assign)  such that Follows(call, 20) with print.stmt#=if.stmt#  such that Follows*(call, call)  pattern while(variable, _)  such that Parent*(while, _)  such that Parent*(assign, assign) with 8900=print.stmt#  pattern while(_, _)  pattern assign(_, "2800*3000")  such that Affects*(assign, 3)  pattern while(procedure, _) with stmt.stmt#=2600 with stmt.stmt#=stmt.stmt#  pattern assign(procedure, "9100-variable") with procedure.procName=print.varName  such that Affects*(_, assign) with read.varName="print" with print.varName=read.varName with 9900=constant.value  pattern while(variable, _)  pattern if(constant, _, _)  pattern assign(variable, "7000+2900")  such that Calls(procedure, procedure)  pattern if(_, _, _)  pattern if(variable, _, _) with variable.varName=procedure.procName  pattern if(variable, _, _)  such that Calls(procedure, "assign")  pattern assign(variable, _)  pattern while(variable, _)  pattern while(while, _)  pattern while(constant, _) with "call"=variable.varName with 9200=call.stmt#  pattern if(print, _, _) with print.varName="if"  such that Affects(assign, 23)  pattern assign(_, "2400*3400")  pattern assign(_, "5400-1900") with read.stmt#=8300  such that Next*(read, call)  such that Affects(stmt, 5)  such that Modifies(while, "print")  pattern assign(_, _)  pattern assign(_, "8000*600")  such that Calls*(procedure, "print")  pattern assign(_, _)  pattern assign(procedure, "900*4200") with while.stmt#=9000  such that Parent*(_, print) with "if"=procedure.procName  such that Parent*(assign, print) with procedure.procName="print"  such that Calls(procedure, "then") with read.varName="then"  pattern while(assign, _)  pattern if(_, _, _)  such that Calls*(procedure, procedure) with constant.value=1800  pattern if(_, _, _)  pattern while(_, _)  pattern assign(constant, _) with stmt.stmt#=4900 with 2500=print.stmt#  pattern if(variable, _, _)  pattern assign(variable, _) with variable.varName=procedure.procName with while.stmt#=5400  pattern assign(_, _"else+2600"_)  such that Parent*(if, _)  pattern while(_, _)  pattern while(_, _)  pattern while(_, _)  pattern if(_, _, _)  pattern while(variable, _)  such that Modifies(read, _) with 500=stmt.stmt# with procedure.procName=variable.varName  pattern if(variable, _, _) with print.stmt#=2700 with 3600=call.stmt#  such that Follows*(if, _) with procedure.procName=read.varName  pattern if(_, _, _) with procedure.procName=read.varName with "print"=procedure.procName  such that Parent(5, call)  such that Affects*(20, assign) with call.procName=read.varName with "else"=call.procName with read.varName=procedure.procName  such that Calls*("call", procedure)  such that Next(print, _)  such that Calls(_, procedure)  such that Affects*(9, stmt)  pattern while(variable, _) with variable.varName=read.varName  pattern assign(variable, "9700*6600") with assign.stmt#=assign.stmt# with variable.varName=read.varName with print.varName=print.varName  pattern while(_, _)  pattern assign(if, _) with assign.stmt#=if.stmt#  pattern if(print, _, _)  pattern if(_, _, _) with while.stmt#=5500 with print.varName="procedure" with call.stmt#=call.stmt# with 1000=assign.stmt#  such that Affects(_, assign)  pattern if(procedure, _, _)  pattern if(_, _, _)  pattern if(variable, _, _)  pattern assign(assign, "(3800/2400)/2600")  pattern while(print, _) with read.stmt#=8800  pattern assign(variable, _"(5000*5900)+constant"_)  pattern while(variable, _) with 600=print.stmt#  such that Parent(print, if)  such that Next*(1, while)  pattern while(variable, _)  pattern assign(_, "4500+9600")  pattern assign(_, "while+9200")  pattern assign(read, _"5800*if"_)  pattern if(variable, _, _)  pattern if(_, _, _)  such that Next(if, 24)  pattern assign(variable, _"(700*8900)+3100"_)  pattern while(_, _)  such that Calls(procedure, procedure)  pattern if(print, _, _)  such that Affects(assign, 28)  pattern while(variable, _)  pattern while(variable, _) with call.procName="then" with stmt.stmt#=print.stmt#  pattern assign(read, _)  pattern if(call, _, _)  pattern assign(_, _"2600*2900"_)  pattern assign(_, _)  such that Affects*(assign, assign)  pattern if(_, _, _)  such that Calls(procedure, "call")  pattern while(variable, _) with 2700=call.stmt#  such that Modifies(assign, _)  pattern if(variable, _, _)  pattern while(variable, _) with variable.varName="if" with 3000=while.stmt# with "constant"=print.varName with call.stmt#=7700  such that Next(print, _)  pattern if(_, _, _)  such that Calls(procedure, "then")  pattern assign(_, _) with procedure.procName="print"  pattern if(_, _, _)  such that Follows*(assign, if)  pattern if(variable, _, _) with call.procName="variable"  pattern while(variable, _)  pattern while(_, _)  such that Parent*(read, 12)  such that Next*(_, read) with print.varName=print.varName  pattern assign(variable, _"4300/8800"_)  pattern while(_, _)  such that Next*(read, _)  such that Follows(stmt, 17)  pattern while(variable, _)  such that Affects(assign, 22)  such that Calls*("if", procedure)  pattern if(variable, _, _)  such that Affects*(assign, assign)  such that Affects(stmt, assign)  pattern while(_, _)  pattern while(while, _) with 8300=stmt.stmt# with call.procName="then"  pattern if(variable, _, _) with while.stmt#=print.stmt#  pattern assign(_, _"(4500-7000)*2400"_) with print.varName=call.procName  pattern while(_, _)  pattern while(variable, _)  pattern while(variable, _)  such that Next(print, 12)  such that Affects*(_, assign)  pattern if(print, _, _)  such that Affects(assign, 26)  such that Calls(_, procedure) with 2600=if.stmt#  pattern assign(variable, _"2800*6800"_)  such that Parent*(5, call) with print.stmt#=8900  such that Calls(procedure, procedure)  such that Modifies(7, variable)  pattern assign(_, _"7900/8000"_)  such that Affects*(_, assign)  pattern if(then, _, _)  pattern if(constant, _, _) with "procedure"=read.varName with read.varName="constant" with print.stmt#=3900 with stmt.stmt#=stmt.stmt#  pattern assign(_, _"3800/2600"_)  such that Calls*("variable", procedure)  such that Follows(23, print)  such that Uses(while, _)  pattern if(if, _, _)  such that Affects*(stmt, _) with while.stmt#=7300  pattern assign(variable, _)  pattern assign(_, _"2700/7700"_)  pattern assign(variable, "400-6000")  pattern if(variable, _, _) with "constant"=call.procName  pattern while(variable, _)  such that Next*(stmt, while)  pattern while(variable, _) with "constant"=procedure.procName  such that Modifies(procedure, variable)  pattern assign(_, "1400+else")  pattern if(_, _, _)  pattern if(variable, _, _) with print.stmt#=while.stmt#  pattern while(_, _)  such that Calls*(_, procedure)  such that Calls(procedure, procedure)  such that Affects*(_, stmt) with procedure.procName="if"  such that Next(if, 23) with read.varName="procedure"  pattern while(_, _)  pattern if(_, _, _)  such that Parent(_, print) with call.procName=variable.varName with call.stmt#=call.stmt#  pattern if(else, _, _)  pattern while(variable, _) with 9700=read.stmt#  pattern assign(variable, "7200+6500")  such that Follows(if, 14)  pattern if(variable, _, _) with variable.varName="assign"  such that Calls*("if", procedure) with read.varName="call" with variable.varName=call.procName  such that Affects*(16, stmt)  such that Affects*(23, stmt)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern assign(variable, _"5000*7500"_)  pattern while(_, _)  such that Next*(_, if)  pattern if(variable, _, _)  pattern assign(_, _)  such that Parent*(20, stmt) with "assign"=variable.varName with 900=print.stmt#  pattern while(read, _)  pattern assign(variable, _"5900-9600"_)  pattern if(variable, _, _)  pattern assign(then, "9300*print")  pattern while(_, _) with print.varName=variable.varName  such that Uses(11, variable) with call.procName=variable.varName  such that Next*(read, call)  such that Next(if, _)  pattern assign(_, _"2600/8400"_)  such that Follows*(print, 17) with "if"=call.procName  pattern assign(variable, _)  such that Next(stmt, 22)  pattern if(variable, _, _)  pattern while(print, _)  pattern if(print, _, _) with assign.stmt#=assign.stmt#  pattern if(_, _, _)  pattern while(assign, _) with read.varName="variable"  such that Modifies(stmt, _)  pattern assign(_, _)  such that Parent*(_, if)  pattern assign(variable, _"2100*8300"_)  pattern assign(variable, "6700*8700") with "if"=variable.varName with 3800=stmt.stmt#  pattern if(variable, _, _) with 8500=stmt.stmt#  such that Affects*(25, stmt)  such that Next*(print, assign) with 2300=print.stmt#  pattern while(variable, _)  such that Calls("constant", procedure)  pattern while(read, _) with constant.value=print.stmt# with 5200=stmt.stmt#  such that Parent(14, while) with 9200=call.stmt#  pattern while(while, _)  such that Follows(assign, _)  pattern assign(variable, _)  such that Follows(assign, _)  pattern while(variable, _)  pattern if(_, _, _)  pattern while(_, _)  such that Next(25, call)  pattern while(variable, _)  pattern assign(_, _)  such that Calls(procedure, "then") with variable.varName="call" with stmt.stmt#=4100 with "if"=print.varName with "while"=variable.varName with constant.value=2200  such that Modifies(stmt, "print") with print.stmt#=constant.value  such that Affects(assign, stmt) with 8900=print.stmt#  such that Calls*(procedure, "else")  pattern while(read, _)  such that Affects*(assign, _) with while.stmt#=8300  pattern assign(variable, _"then/8000"_)  pattern if(variable, _, _)  pattern while(constant, _) with "call"=print.varName with call.procName=procedure.procName with call.procName=read.varName  pattern while(_, _)  pattern while(if, _) with stmt.stmt#=constant.value  pattern if(variable, _, _) with print.varName="read" with variable.varName="assign"  such that Uses(procedure, "read")  such that Affects(stmt, 22) with read.varName=print.varName with procedure.procName="while"  pattern while(while, _)  pattern if(variable, _, _)  pattern while(call, _)  pattern if(while, _, _) with stmt.stmt#=9900  such that Next(24, assign)  such that Affects(assign, stmt) with variable.varName="variable" with print.varName="print" with read.stmt#=6300  such that Affects(_, assign)  such that Follows(while, _)  such that Uses(procedure, variable)  such that Calls*(procedure, procedure) with read.varName="read"  such that Uses(17, variable) with constant.value=4200 with "print"=print.varName  such that Calls(procedure, _)  pattern assign(variable, _)  pattern if(while, _, _)  pattern if(read, _, _)  such that Affects(5, stmt)  pattern if(_, _, _) with call.procName=call.procName with 9800=constant.value  pattern if(_, _, _)  pattern assign(_, _)  such that Calls*(procedure, _)  pattern assign(variable, _)  pattern if(constant, _, _)  such that Affects(stmt, _)  such that Affects(assign, stmt) with read.varName=procedure.procName  such that Follows(read, 8)  pattern if(variable, _, _) with 2400=constant.value  pattern assign(_, "800+if")  such that Next(while, print) with stmt.stmt#=6700 with print.varName="procedure" with while.stmt#=3200 with if.stmt#=7500 with procedure.procName=read.varName  pattern if(variable, _, _) with variable.varName="while"  pattern assign(variable, _"read/procedure"_)  pattern assign(_, _) with if.stmt#=print.stmt#  such that Uses(read, "call")  pattern if(procedure, _, _)  pattern assign(_, _"then-2800"_)  pattern while(else, _) 

5000
65 - Query 65
print print; assign assign; constant constant; variable variable; stmt stmt; read read; procedure procedure; while while; if if; call call; 
Select <print, assign, constant, variable, stmt, read, procedure, while, if, call>  such that Parent*(print, 16) with 6100=assign.stmt#  pattern while(variable, _)  pattern assign(while, _) with 4800=constant.value  pattern assign(_, "3200-7300")  pattern while(variable, _)  pattern if(_, _, _)  pattern while(_, _)  pattern assign(while, "9700+3200")  such that Next(if, 4)  such that Follows(read, _) with call.stmt#=constant.value  pattern if(read, _, _) with "if"=call.procName  pattern assign(_, _"else-3400"_)  such that Modifies(stmt, "variable")  such that Calls*(procedure, _)  pattern while(_, _) with call.procName=call.procName  pattern assign(_, "7900-8100") with "variable"=print.varName  such that Parent(print, 27)  pattern if(variable, _, _)  such that Parent(_, assign) with procedure.procName=variable.varName  such that Affects*(stmt, 9)  such that Calls(procedure, procedure)  pattern assign(print, _)  pattern assign(variable, "8800-5800")  pattern if(then, _, _)  pattern assign(constant, "5700+1400") with read.varName="procedure" with procedure.procName=call.procName  pattern while(variable, _)  such that Parent*(read, _) with call.stmt#=constant.value  pattern if(variable, _, _) with assign.stmt#=400  pattern if(else, _, _)  pattern while(_, _)  such that Follows(print, print)  pattern if(procedure, _, _) with call.stmt#=while.stmt#  pattern while(variable, _)  such that Calls*(procedure, "assign")  pattern while(variable, _)  pattern if(_, _, _)  such that Calls*(procedure, "call")  such that Follows(_, while) with assign.stmt#=7600  pattern assign(print, "5300/3400")  such that Next*(print, _)  such that Affects*(_, assign) with variable.varName=read.varName  pattern if(procedure, _, _) with constant.value=2400  such that Parent*(14, read) with "while"=read.varName with procedure.procName=procedure.procName  pattern while(_, _)  pattern while(_, _) with read.stmt#=assign.stmt#  pattern if(variable, _, _)  pattern assign(variable, _)  such that Parent*(assign, 8)  pattern if(variable, _, _) with stmt.stmt#=assign.stmt# with "then"=variable.varName  such that Follows*(27, read)  such that Next(_, assign)  such that Uses(if, variable)  such that Follows*(while, stmt)  such that Calls(procedure, _) with read.varName=procedure.procName with call.procName=print.varName  pattern while(else, _)  pattern assign(else, _"5400*7000"_)  pattern assign(else, "5600+2500") with variable.varName="call" with constant.value=while.stmt# with "then"=read.varName  pattern while(variable, _)  pattern if(variable, _, _) with variable.varName=call.procName with call.procName=procedure.procName  pattern assign(read, _"6400+9300"_)  such that Parent(_, while) with assign.stmt#=while.stmt#  such that Affects(5, assign)  pattern assign(_, _"variable+9100"_)  pattern while(_, _)  pattern if(read, _, _) with variable.varName="variable" with 5500=read.stmt# with call.procName=print.varName  pattern assign(constant, "9200+if")  pattern while(call, _)  pattern assign(procedure, "then-800") with procedure.procName=variable.varName  such that Follows(call, 13)  such that Follows*(while, while)  pattern assign(variable, _"7400-6700"_) with constant.value=assign.stmt#  pattern assign(variable, _)  such that Follows(read, _)  pattern while(_, _)  pattern if(variable, _, _)  pattern assign(print, _)  pattern while(variable, _)  pattern assign(_, _)  pattern while(variable, _)  pattern while(then, _) with read.stmt#=1500  such that Calls(procedure, "assign") with 200=read.stmt# with read.varName="read"  pattern assign(variable, _"1500/6400"_)  such that Follows*(while, call)  such that Parent*(while, _) with 5200=stmt.stmt#  pattern while(procedure, _)  such that Follows*(7, print) with variable.varName=read.varName  pattern while(_, _)  pattern if(if, _, _)  such that Next(while, stmt) with print.stmt#=if.stmt#  such that Calls(procedure, "else") with stmt.stmt#=constant.value  pattern while(variable, _)  pattern assign(_, "1800/3800")  pattern assign(read, "8900*500") with "if"=print.varName  pattern assign(then, _"7800-3500"_)  such that Parent(if, _) with call.stmt#=stmt.stmt#  such that Follows*(25, print) with 7500=stmt.stmt#  pattern while(variable, _) with variable.varName=print.varName  pattern if(print, _, _) with print.varName=read.varName  pattern assign(_, _)  pattern assign(_, _"2700-2000"_)  such that Calls*(procedure, _) with procedure.procName=variable.varName with read.varName=print.varName with read.varName="print"  pattern while(_, _) with "constant"=variable.varName  such that Calls("procedure", procedure)  such that Follows*(assign, _)  such that Follows*(_, assign)  such that Next(13, while) with procedure.procName=variable.varName  pattern while(_, _)  pattern if(_, _, _)  pattern while(if, _) with read.stmt#=while.stmt#  pattern if(variable, _, _) with read.varName="assign"  pattern assign(read, _"read-2800"_)  such that Affects*(13, stmt) with variable.varName=read.varName with variable.varName=call.procName  pattern if(variable, _, _)  pattern if(variable, _, _) with "call"=procedure.procName  pattern while(_, _)  pattern while(constant, _)  such that Next*(print, _)  such that Uses(28, variable)  such that Calls*(procedure, procedure) with call.stmt#=7200  pattern assign(_, "2600-6300")  pattern while(else, _)  pattern assign(_, _) with procedure.procName=print.varName  such that Affects(_, assign)  pattern while(variable, _)  pattern while(while, _)  pattern assign(variable, _)  pattern while(variable, _)  such that Follows*(8, if)  pattern assign(variable, _"8600-print"_) with "constant"=variable.varName  such that Follows*(print, 23)  pattern while(variable, _)  such that Modifies(11, variable)  such that Affects*(assign, 20)  pattern assign(then, _"(9700/1500)+8300"_) with print.varName=variable.varName  pattern assign(read, _)  pattern while(variable, _) with 1600=print.stmt#  pattern assign(procedure, _"2700+4400"_)  pattern assign(then, "8400/1200") with print.varName="procedure"  pattern if(constant, _, _)  pattern assign(assign, "7200*7400")  pattern if(variable, _, _) with call.procName="constant"  such that Next(stmt, stmt)  pattern if(print, _, _) with 2000=stmt.stmt# with while.stmt#=print.stmt#  pattern while(variable, _)  such that Parent(assign, _)  pattern assign(if, _"8900-if"_)  such that Follows(if, 20)  pattern if(if, _, _) with variable.varName="call"  such that Parent*(assign, read) with print.varName=print.varName with 1100=print.stmt# with "constant"=print.varName  such that Affects(15, stmt) with if.stmt#=print.stmt#  pattern while(_, _) with 5400=call.stmt# with "read"=call.procName with print.varName=call.procName with print.varName=print.varName  pattern if(_, _, _) with "call"=call.procName with assign.stmt#=call.stmt#  pattern assign(variable, "9100+8900")  pattern if(_, _, _)  pattern while(variable, _)  such that Uses(24, variable)  such that Next(assign, while)  pattern assign(assign, _)  such that Calls*(procedure, _)  pattern while(read, _)  pattern while(_, _)  such that Calls(procedure, "constant") with while.stmt#=6900 with 800=if.stmt#  pattern while(_, _)  such that Affects*(_, assign)  such that Uses(procedure, variable)  pattern if(_, _, _)  such that Follows*(stmt, _) with call.procName=print.varName with procedure.procName="read"  pattern while(assign, _)  such that Uses(assign, _)  pattern while(_, _) with assign.stmt#=1800 with "variable"=call.procName  pattern if(variable, _, _)  pattern while(print, _)  pattern assign(else, "9600*5200")  pattern assign(_, "constant/7200") with if.stmt#=if.stmt#  pattern assign(read, "2600/500")  pattern while(then, _) with 4400=stmt.stmt#  pattern while(variable, _)  such that Follows*(_, if) with call.procName=print.varName  such that Next*(assign, _)  such that Follows(while, while) with "while"=procedure.procName with read.varName="read"  pattern while(_, _)  such that Affects*(stmt, stmt)  pattern assign(variable, "7200/8800")  such that Follows*(11, print)  pattern if(_, _, _)  pattern while(variable, _)  pattern while(variable, _)  pattern assign(assign, "6700-7400") with "while"=read.varName  pattern while(_, _)  pattern assign(then, _) with 6900=assign.stmt#  pattern while(_, _) with "if"=print.varName with variable.varName="constant"  pattern if(read, _, _)  such that Next*(11, print)  pattern while(_, _)  such that Follows(_, read) with print.varName="else"  pattern if(read, _, _)  pattern if(variable, _, _)  pattern assign(_, "((3500*variable)*8400)/4200")  pattern assign(variable, "variable-6200") with "read"=call.procName  such that Parent*(read, _) with if.stmt#=while.stmt#  such that Calls*(procedure, procedure)  such that Parent*(_, while)  pattern while(_, _) with "print"=read.varName  such that Affects(_, stmt) with call.procName=read.varName  pattern while(_, _)  pattern while(_, _) with procedure.procName=variable.varName  such that Affects*(stmt, _)  such that Affects*(12, assign) with read.stmt#=while.stmt#  pattern if(variable, _, _) with constant.value=while.stmt#  pattern while(if, _) with stmt.stmt#=call.stmt#  pattern while(variable, _) with call.procName=variable.varName  pattern if(_, _, _)  pattern while(variable, _) with 9300=if.stmt#  pattern while(variable, _) with stmt.stmt#=constant.value  pattern while(variable, _)  pattern assign(variable, _) with print.varName=read.varName with while.stmt#=400  pattern if(read, _, _)  pattern if(assign, _, _) with "assign"=read.varName  pattern if(_, _, _)  pattern assign(else, _) with 8000=assign.stmt# with 9100=if.stmt#  such that Parent*(stmt, while) with assign.stmt#=5600  such that Follows*(while, if)  pattern while(else, _)  pattern while(variable, _) with "assign"=variable.varName  pattern if(if, _, _)  pattern while(print, _)  pattern assign(print, _)  pattern assign(variable, "900*4400") with 5300=call.stmt# with "procedure"=variable.varName with "else"=read.varName  pattern assign(procedure, _"7000+7300"_)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern assign(constant, _"4800-7100"_)  pattern while(variable, _) with while.stmt#=read.stmt#  pattern if(_, _, _) with read.stmt#=7600 with read.stmt#=8100 with print.varName="variable"  pattern while(constant, _)  such that Follows(_, if) with call.procName=print.varName  pattern if(variable, _, _) with call.stmt#=while.stmt#  such that Calls(procedure, procedure)  such that Follows*(2, stmt)  pattern while(if, _)  pattern assign(variable, _"2500-5600"_)  such that Next(if, 18)  pattern while(variable, _)  such that Affects*(8, stmt) with call.stmt#=constant.value with while.stmt#=print.stmt#  pattern while(_, _)  such that Parent*(21, while)  such that Parent*(26, call)  such that Follows(if, 3)  pattern while(_, _)  such that Uses(7, variable)  pattern assign(variable, "9800*8000")  pattern assign(print, _"1600*9100"_) with "assign"=variable.varName with "call"=print.varName with call.procName="while"  pattern assign(then, "9500*4000")  pattern assign(_, _) with stmt.stmt#=3800  pattern while(variable, _)  pattern while(_, _)  such that Next*(while, 1)  pattern if(variable, _, _) with print.varName=variable.varName  pattern assign(variable, "5400/9900")  such that Calls*(_, procedure) with assign.stmt#=3700  pattern if(variable, _, _) with call.procName="read" with read.varName="if" with print.varName="assign" with variable.varName=call.procName  such that Uses(if, variable) with read.stmt#=2100  such that Parent(read, _) with variable.varName="assign"  pattern assign(variable, _"1100-6800"_)  pattern if(variable, _, _) with "read"=print.varName with while.stmt#=assign.stmt# with 7000=constant.value  pattern if(constant, _, _) with constant.value=read.stmt# with read.varName="print"  such that Follows*(while, _) with call.procName=print.varName  such that Follows*(stmt, assign)  pattern assign(variable, _)  pattern assign(_, "2200/600")  pattern if(_, _, _)  such that Parent*(_, assign)  pattern while(_, _) with procedure.procName="print"  pattern while(variable, _)  pattern if(_, _, _) with if.stmt#=call.stmt# with read.stmt#=4100  pattern assign(variable, _)  such that Affects*(assign, stmt)  pattern if(while, _, _) with "call"=print.varName with variable.varName=call.procName  pattern while(_, _)  pattern while(variable, _)  pattern while(_, _)  pattern if(procedure, _, _) with stmt.stmt#=if.stmt#  pattern while(_, _)  such that Next*(if, 4) with call.stmt#=600  such that Modifies(print, variable)  such that Modifies(procedure, _) with constant.value=constant.value with if.stmt#=7500 with if.stmt#=while.stmt# with 1900=assign.stmt# with print.varName="while"  pattern while(else, _)  pattern while(then, _)  pattern assign(_, _)  such that Modifies(assign, "while") with 9900=constant.value with procedure.procName="call"  pattern assign(variable, "1900-3400")  such that Uses(while, _)  pattern assign(_, _"6000+1300"_)  pattern assign(variable, _)  pattern assign(constant, "800*assign") with 6700=read.stmt# with 6200=constant.value with 5400=while.stmt#  pattern while(read, _)  pattern assign(_, _"procedure/1200"_)  such that Follows(if, _)  pattern assign(_, _"8400+8100"_)  pattern while(while, _) with print.varName=call.procName  such that Next(23, read)  pattern assign(constant, "1000/5600") with "constant"=variable.varName  pattern assign(_, _)  such that Follows(_, if) with "procedure"=print.varName with call.procName="while" with "call"=print.varName  pattern assign(then, _"5500-2200"_)  pattern while(_, _)  such that Uses(read, "else")  such that Affects(_, assign)  such that Modifies(stmt, "assign")  pattern while(_, _)  pattern while(variable, _)  pattern if(constant, _, _) with call.procName="then"  such that Next(print, 19) with procedure.procName=print.varName with "print"=read.varName  pattern if(_, _, _)  pattern assign(if, "(800*6700)+3400") with "if"=procedure.procName  such that Follows(print, if)  such that Modifies(print, variable)  pattern while(_, _) with 1800=if.stmt#  pattern assign(call, _)  pattern assign(variable, _)  pattern while(variable, _)  such that Parent*(assign, assign)  pattern while(if, _)  pattern while(assign, _) with "then"=procedure.procName  such that Uses(print, "read")  such that Calls(procedure, "print")  pattern while(procedure, _) with call.stmt#=5800  such that Affects*(stmt, stmt)  pattern assign(variable, "300+3200")  pattern assign(variable, _"1100*1700"_)  pattern if(variable, _, _) with 7800=constant.value  such that Follows(_, if) 

5000
66 - Query 66
variable variable; assign assign; call call; print print; constant constant; stmt stmt; read read; while while; if if; procedure procedure; 
Select <variable, assign, call, print, constant, stmt, read, while, if, procedure>  pattern while(_, _) with "constant"=procedure.procName with procedure.procName=variable.varName  pattern while(while, _) with stmt.stmt#=assign.stmt# with if.stmt#=call.stmt#  such that Next(7, while) with read.varName="if"  pattern while(variable, _)  pattern while(variable, _) with call.procName=print.varName  pattern if(_, _, _)  pattern assign(_, "call/700") with 3000=read.stmt#  pattern while(procedure, _) with while.stmt#=5700 with "call"=print.varName with if.stmt#=assign.stmt#  pattern if(_, _, _)  pattern assign(variable, _)  pattern assign(procedure, "7700*4700")  such that Affects(assign, 3)  pattern while(variable, _)  pattern if(variable, _, _)  such that Parent(16, if) with "variable"=variable.varName with "while"=print.varName  pattern if(variable, _, _) with procedure.procName="call"  pattern while(procedure, _)  such that Parent(9, call)  such that Affects(stmt, 19)  such that Calls("else", procedure)  pattern assign(_, _) with call.stmt#=stmt.stmt# with 9700=print.stmt# with print.varName=call.procName  pattern if(_, _, _)  pattern assign(_, "(800-2200)+2500")  pattern while(_, _)  pattern assign(procedure, _)  pattern if(_, _, _)  pattern while(procedure, _) with 7400=while.stmt#  pattern while(call, _) with read.stmt#=1100 with 3200=read.stmt# with read.varName=read.varName  pattern assign(_, "(3800/7500)*1200")  pattern if(variable, _, _)  pattern assign(_, "9900*6800")  pattern assign(_, _"100+4000"_) with while.stmt#=4300 with call.procName=call.procName  pattern while(if, _)  such that Affects(_, assign)  pattern if(variable, _, _) with "if"=variable.varName  pattern if(variable, _, _)  such that Uses(24, variable)  such that Calls(procedure, "else")  pattern assign(variable, "((8900+6700)*5400)-500")  pattern while(_, _)  such that Next*(read, 16)  pattern if(variable, _, _)  pattern while(_, _) with print.varName="variable" with 2300=if.stmt#  such that Next(read, assign)  pattern if(_, _, _)  pattern if(_, _, _)  pattern if(procedure, _, _)  pattern if(variable, _, _)  pattern assign(print, _)  pattern assign(_, _)  pattern while(variable, _)  such that Parent(24, print)  pattern while(while, _)  such that Uses(13, variable) with constant.value=assign.stmt# with procedure.procName="variable" with constant.value=4300  pattern while(variable, _)  such that Parent(_, while)  pattern if(_, _, _)  pattern assign(_, _)  pattern if(variable, _, _)  pattern while(else, _)  pattern if(variable, _, _) with "else"=variable.varName  pattern if(_, _, _) with stmt.stmt#=5000  pattern assign(variable, _)  pattern if(_, _, _)  such that Parent(_, while) with "procedure"=call.procName  such that Follows*(call, 28)  pattern assign(variable, _"1000/5700"_)  pattern while(variable, _)  pattern while(variable, _)  pattern assign(_, _)  pattern assign(print, _"3500+2200"_) with if.stmt#=call.stmt# with variable.varName="assign" with constant.value=print.stmt# with while.stmt#=5300 with call.procName=read.varName  pattern while(_, _)  pattern if(variable, _, _)  pattern assign(_, "5200+6800")  pattern assign(variable, "7000/300")  pattern assign(variable, "1500-4700") with 9200=while.stmt#  such that Affects*(stmt, _)  such that Parent*(call, _)  pattern while(procedure, _)  such that Calls(procedure, procedure)  pattern if(_, _, _)  such that Affects(stmt, _) with variable.varName=print.varName  pattern while(variable, _) with assign.stmt#=3900  pattern while(_, _)  pattern while(_, _)  pattern assign(_, _"8400+1000"_)  such that Modifies(13, variable)  pattern while(variable, _)  such that Parent*(assign, while)  pattern if(variable, _, _)  pattern while(variable, _) with while.stmt#=7300 with print.varName="variable"  pattern assign(variable, _"8600/5800"_)  pattern assign(constant, "4500+7500")  pattern assign(variable, _"200+8400"_)  pattern assign(_, "variable+1100") with call.stmt#=print.stmt#  such that Calls*(_, procedure) with "read"=call.procName  pattern if(_, _, _)  pattern if(constant, _, _)  pattern while(_, _)  pattern if(variable, _, _)  such that Follows(read, 29)  such that Modifies(while, variable) with procedure.procName="then"  pattern while(variable, _) with 9600=read.stmt# with read.varName=procedure.procName with if.stmt#=8100  such that Follows(_, assign)  such that Follows*(read, _)  pattern if(procedure, _, _)  pattern assign(variable, _) with variable.varName="then"  pattern if(assign, _, _) with if.stmt#=print.stmt# with stmt.stmt#=if.stmt#  such that Next(10, while)  pattern while(_, _)  pattern assign(_, _)  pattern assign(then, _)  such that Parent(1, print)  pattern if(_, _, _) with 6200=stmt.stmt# with 4100=while.stmt#  pattern assign(_, "9700-9200")  such that Affects*(_, stmt)  pattern assign(_, _) with if.stmt#=constant.value  such that Affects(_, assign) with variable.varName="assign" with read.varName="if"  such that Modifies(stmt, "constant")  pattern while(print, _)  pattern while(assign, _) with call.procName=call.procName with assign.stmt#=4400  pattern assign(variable, _"6500+9300"_)  such that Next*(24, assign)  such that Parent*(assign, 22)  pattern assign(constant, _) with 9700=if.stmt#  such that Parent(while, call)  pattern while(assign, _)  pattern if(then, _, _)  pattern assign(read, _) with 1600=constant.value with procedure.procName="call"  such that Affects*(assign, stmt) with 8900=constant.value  pattern while(variable, _)  such that Uses(assign, "if")  such that Parent*(print, assign)  pattern assign(variable, _"9300+6100"_)  pattern if(_, _, _)  pattern while(_, _)  pattern assign(_, _"9000-8200"_)  pattern while(variable, _)  pattern while(_, _) with while.stmt#=700  pattern while(_, _) with "constant"=print.varName  such that Next*(stmt, print)  such that Calls(procedure, _) with constant.value=read.stmt#  pattern while(_, _) with 9100=print.stmt# with "call"=procedure.procName  pattern if(variable, _, _)  pattern assign(_, _)  pattern assign(variable, _)  pattern assign(read, "9100+4800")  pattern if(variable, _, _)  such that Next*(stmt, while)  such that Affects*(assign, 10)  pattern assign(_, _)  such that Parent(17, print) with assign.stmt#=3300 with if.stmt#=4800  pattern while(_, _)  pattern assign(_, "(3500+2600)*9000")  pattern while(variable, _)  pattern while(_, _)  pattern if(variable, _, _)  pattern while(variable, _) with print.varName="variable"  such that Calls(procedure, procedure) with call.procName="then"  pattern if(variable, _, _)  pattern while(_, _)  pattern while(_, _)  such that Modifies(while, _)  such that Follows*(_, stmt)  pattern if(variable, _, _)  pattern if(_, _, _) with "while"=print.varName with 1600=stmt.stmt# with variable.varName="print"  pattern while(_, _)  pattern if(_, _, _)  pattern while(_, _) with if.stmt#=call.stmt#  such that Modifies(assign, variable)  pattern assign(_, _)  such that Parent*(stmt, 10) with read.varName=read.varName with if.stmt#=constant.value  such that Follows(_, assign)  pattern while(constant, _)  pattern assign(else, _"9800/then"_)  pattern while(variable, _)  such that Modifies(procedure, _)  pattern if(call, _, _)  pattern while(_, _)  pattern if(_, _, _) with variable.varName=read.varName  such that Follows*(24, stmt) with while.stmt#=9100  such that Next*(4, stmt) with variable.varName="constant"  pattern while(constant, _) with 400=call.stmt# with 7500=while.stmt# with 3400=if.stmt# with if.stmt#=7200  such that Next(read, assign)  pattern if(_, _, _)  such that Affects*(stmt, 15)  such that Next*(print, 11)  pattern assign(_, _"((constant+3800)*5700)/1700"_)  pattern if(_, _, _) with stmt.stmt#=constant.value  pattern assign(variable, _)  pattern if(call, _, _)  pattern while(assign, _)  such that Modifies(7, variable) with assign.stmt#=5700  pattern assign(variable, _"3700-8000"_) with "assign"=procedure.procName with 9500=constant.value  pattern while(variable, _)  pattern if(_, _, _)  pattern assign(_, _"2200/variable"_) with "procedure"=variable.varName  such that Calls*(_, procedure)  pattern while(variable, _)  such that Next*(10, assign)  such that Follows(21, call)  such that Calls*(procedure, procedure) with "if"=call.procName  pattern while(variable, _)  pattern while(variable, _)  pattern assign(procedure, "procedure/1000")  pattern if(variable, _, _) with stmt.stmt#=call.stmt#  such that Uses(10, variable) with 1900=call.stmt# with 7800=while.stmt#  pattern while(_, _)  pattern while(then, _) with read.varName=call.procName  pattern while(variable, _)  such that Next*(stmt, _)  pattern assign(constant, _"2700/5400"_)  pattern if(then, _, _)  pattern while(variable, _)  pattern while(variable, _) with variable.varName="then" with "else"=print.varName  pattern assign(_, _) with procedure.procName=call.procName  pattern while(_, _)  such that Next*(print, _)  such that Follows*(22, while)  pattern assign(procedure, _) with call.procName=read.varName  such that Affects*(_, stmt)  pattern if(_, _, _)  pattern while(_, _)  pattern while(variable, _)  pattern if(variable, _, _) with assign.stmt#=constant.value with print.varName="variable" with 8800=print.stmt#  such that Parent*(2, call) with while.stmt#=constant.value with procedure.procName="print"  pattern while(then, _)  pattern while(else, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern while(_, _) with while.stmt#=while.stmt# with constant.value=read.stmt#  pattern assign(_, _"else-variable"_) with "then"=read.varName with variable.varName="read" with print.varName="read"  pattern if(variable, _, _)  pattern while(variable, _)  pattern while(variable, _) with print.stmt#=assign.stmt#  pattern assign(variable, "1900+8800") with print.stmt#=5400  pattern assign(_, _"6300*3200"_) with procedure.procName=call.procName with read.varName=call.procName  such that Uses(28, variable)  pattern if(_, _, _) with if.stmt#=8500  pattern assign(_, _"7600*1600"_) with call.stmt#=1400 with "read"=call.procName  pattern while(_, _)  such that Follows(read, _)  such that Parent*(while, if) with 500=stmt.stmt#  pattern if(_, _, _) with call.stmt#=6400  pattern assign(call, _) with 7400=constant.value with "call"=variable.varName  pattern while(_, _)  such that Follows*(if, read) with procedure.procName=print.varName  pattern assign(_, _"8100*5100"_)  such that Parent(_, assign)  pattern if(_, _, _) with "else"=call.procName  such that Next*(_, stmt)  such that Follows(print, while)  pattern assign(call, _)  such that Uses(read, "variable")  pattern while(variable, _) with "while"=call.procName with stmt.stmt#=if.stmt#  pattern if(variable, _, _)  pattern while(variable, _)  pattern if(assign, _, _)  pattern while(_, _)  such that Uses(while, "if")  such that Modifies(assign, variable) with call.procName="procedure"  pattern if(variable, _, _)  pattern assign(_, _)  pattern if(_, _, _)  such that Modifies(if, _)  pattern assign(_, _)  such that Follows*(if, 19)  pattern while(variable, _) with assign.stmt#=7200  pattern if(print, _, _) with 8100=assign.stmt#  such that Next(_, print)  such that Affects(assign, _) with print.stmt#=6000  pattern if(_, _, _)  pattern assign(variable, _"300/9500"_)  such that Follows*(read, 24)  pattern if(_, _, _)  such that Parent*(_, stmt) with call.stmt#=assign.stmt#  such that Next(_, stmt) with read.varName="if"  such that Calls*(procedure, "read")  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern if(read, _, _)  pattern if(_, _, _)  pattern if(variable, _, _)  pattern if(assign, _, _)  pattern if(_, _, _)  such that Uses(call, _)  pattern assign(_, "(3400*7600)*7600") with call.procName="variable"  pattern assign(variable, "1400/5600")  pattern assign(variable, _"2100-else"_)  pattern while(constant, _)  such that Parent*(stmt, if)  pattern assign(variable, _"500+6800"_)  such that Modifies(if, variable)  pattern if(variable, _, _)  pattern assign(_, _) with 8900=read.stmt# with call.stmt#=assign.stmt#  such that Affects*(stmt, stmt)  pattern assign(_, _"3900*2000"_) with call.procName="while"  such that Uses(call, variable)  such that Parent(while, _)  such that Calls*(procedure, "then")  pattern assign(_, _"2100*7300"_) with print.varName="if"  such that Modifies(read, variable) with 600=assign.stmt#  such that Affects(assign, 28) with 8300=stmt.stmt#  pattern while(print, _)  pattern if(_, _, _)  such that Next*(while, while)  pattern if(else, _, _)  pattern while(else, _) with print.stmt#=9000  such that Modifies(24, variable)  pattern assign(_, _"7000+200"_)  pattern while(_, _)  pattern assign(_, _) with call.procName="while"  such that Calls*(procedure, _)  pattern if(call, _, _)  such that Parent*(assign, print) with print.varName="if" with call.procName=variable.varName with variable.varName=read.varName  pattern while(then, _)  such that Next(stmt, 22)  such that Next(read, _) with call.procName=procedure.procName  such that Parent*(4, assign)  such that Follows(stmt, _)  pattern if(variable, _, _)  pattern while(print, _)  such that Follows(_, read)  pattern assign(variable, "2400-2500")  such that Follows(_, print) with 5800=call.stmt#  pattern if(variable, _, _)  pattern if(variable, _, _) with print.varName=print.varName with call.stmt#=while.stmt#  such that Parent(8, stmt)  pattern assign(_, _) with while.stmt#=8600  pattern if(_, _, _)  pattern assign(variable, _"3700*5500"_)  such that Calls*(procedure, "variable") with "variable"=variable.varName  such that Affects(18, assign)  such that Parent(5, call)  such that Parent*(18, read) with 1800=stmt.stmt#  pattern while(else, _)  such that Calls*(procedure, "if")  pattern assign(while, "5600-3400")  pattern while(constant, _) with procedure.procName="then" with print.stmt#=4600  such that Next*(read, while)  pattern assign(procedure, _"2600*7500"_)  such that Uses(12, variable) with constant.value=7300  such that Follows(3, stmt)  pattern while(assign, _)  such that Parent*(_, if)  pattern while(variable, _) with print.stmt#=7000  such that Parent(stmt, 21)  pattern assign(_, "(1500+2900)+8100")  such that Modifies(while, "print") 

5000
67 - Query 67
assign assign; print print; variable variable; call call; constant constant; stmt stmt; read read; if if; while while; procedure procedure; 
Select <assign, print, variable, call, constant, stmt, read, if, while, procedure> with read.varName=read.varName  pattern assign(_, "else*7100")  such that Next(_, print)  such that Parent(_, stmt)  such that Follows(read, stmt)  such that Calls(_, procedure)  pattern if(variable, _, _)  pattern if(call, _, _) with stmt.stmt#=7800 with "procedure"=procedure.procName with read.stmt#=if.stmt#  pattern while(_, _) with "call"=variable.varName with stmt.stmt#=1600  such that Parent*(while, read)  such that Next*(_, while)  pattern if(_, _, _)  pattern if(variable, _, _)  such that Follows(print, if)  such that Follows(_, if) with "while"=print.varName  pattern assign(variable, _"1900/7700"_)  such that Affects(stmt, 11) with "while"=variable.varName  pattern while(constant, _)  such that Next(call, while) with 2100=while.stmt# with "while"=print.varName  pattern assign(read, "3500*4600")  pattern while(_, _) with if.stmt#=8900  such that Next(17, stmt) with print.varName="call"  such that Calls(procedure, _) with "else"=procedure.procName with call.procName="while"  such that Parent(_, print)  pattern while(read, _) with read.stmt#=stmt.stmt#  pattern assign(_, _)  such that Affects*(19, assign)  pattern assign(call, "2600+else")  pattern while(_, _)  pattern while(variable, _)  such that Calls*(_, procedure) with "then"=call.procName  pattern if(variable, _, _) with procedure.procName=print.varName with 4000=assign.stmt# with call.stmt#=print.stmt#  pattern while(_, _)  such that Uses(assign, "if") with variable.varName=call.procName with 7900=print.stmt# with while.stmt#=read.stmt#  such that Affects*(8, stmt)  pattern assign(read, _"9100+while"_)  pattern assign(procedure, "9400+else") with "else"=procedure.procName  pattern assign(_, _) with stmt.stmt#=100  pattern if(_, _, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern if(variable, _, _) with "else"=read.varName with 4000=if.stmt#  pattern assign(variable, _)  pattern while(variable, _)  pattern assign(variable, "5500+4400") with call.stmt#=constant.value  pattern assign(else, "4400*1100")  pattern assign(_, _"9700-4500"_)  pattern if(_, _, _)  pattern assign(_, "1600/else") with "assign"=call.procName  pattern if(variable, _, _) with if.stmt#=4400  such that Affects*(stmt, 4)  pattern assign(_, _"3000-3100"_) with read.varName="call"  such that Affects*(assign, _) with read.varName=procedure.procName  pattern assign(variable, _)  pattern while(variable, _) with procedure.procName="else"  pattern if(_, _, _)  pattern while(_, _)  such that Uses(while, "if")  pattern if(_, _, _)  such that Follows*(_, if)  pattern if(variable, _, _)  pattern assign(variable, _) with call.stmt#=while.stmt# with "while"=call.procName  pattern while(procedure, _) with variable.varName=print.varName  such that Affects*(_, assign) with print.stmt#=constant.value  pattern assign(variable, _"(3900+4600)+5300"_)  pattern if(read, _, _)  such that Affects(23, stmt) with constant.value=constant.value  pattern if(_, _, _) with "assign"=call.procName  such that Modifies(15, variable) with stmt.stmt#=call.stmt#  pattern assign(variable, _"800+4700"_) with "procedure"=procedure.procName with 6300=if.stmt# with print.stmt#=while.stmt#  pattern if(variable, _, _) with stmt.stmt#=3900  such that Parent(assign, _) with print.varName="call"  such that Next(while, call)  pattern while(read, _)  pattern if(variable, _, _)  such that Parent*(_, read)  pattern if(_, _, _)  pattern while(variable, _)  pattern while(variable, _) with "then"=call.procName  pattern assign(_, "7600*7300")  pattern assign(_, "8700+7000") with read.varName=variable.varName  pattern if(if, _, _)  pattern if(_, _, _) with 7200=constant.value  pattern if(if, _, _)  pattern assign(variable, "2300/7300")  pattern while(variable, _)  pattern while(_, _) with "constant"=read.varName  pattern assign(_, _"9800+7600"_) with variable.varName=call.procName  pattern if(variable, _, _)  pattern while(procedure, _) with call.procName="constant"  pattern while(call, _) with 4900=if.stmt#  such that Affects(stmt, _) with read.stmt#=if.stmt# with stmt.stmt#=while.stmt# with 9500=if.stmt#  such that Affects*(stmt, assign) with while.stmt#=2100  pattern if(variable, _, _) with print.varName="read"  pattern while(variable, _) with procedure.procName="else" with print.varName=variable.varName  pattern assign(if, _) with procedure.procName="call"  pattern if(print, _, _)  pattern assign(_, "8500+8000") with print.stmt#=9000 with stmt.stmt#=assign.stmt#  such that Uses(stmt, variable) with print.varName="if"  pattern while(variable, _)  pattern while(_, _)  pattern if(variable, _, _)  pattern if(_, _, _) with print.varName="then" with while.stmt#=assign.stmt#  pattern assign(variable, _) with "read"=procedure.procName  pattern while(constant, _)  pattern assign(variable, _"assign+1600"_)  pattern if(variable, _, _)  such that Modifies(read, _)  pattern if(_, _, _)  pattern while(while, _)  pattern assign(assign, _"9000*1100"_)  such that Modifies(print, "if")  pattern assign(variable, _)  pattern if(procedure, _, _)  pattern if(_, _, _) with 5700=stmt.stmt#  pattern while(_, _) with 3500=stmt.stmt#  such that Modifies(call, _) with "print"=variable.varName  such that Follows(call, read) with call.procName=variable.varName  pattern while(_, _)  such that Calls*(procedure, procedure)  pattern if(_, _, _)  such that Uses(28, variable)  pattern assign(variable, _)  such that Calls*(procedure, _)  pattern assign(_, _"800*3600"_)  such that Uses(if, _)  such that Calls*(procedure, procedure)  pattern assign(assign, _)  pattern if(_, _, _)  pattern while(variable, _)  such that Modifies(29, variable)  such that Next(23, read) with 1000=call.stmt#  pattern assign(print, "4400+print") with "assign"=call.procName  such that Uses(if, "then") with 3000=read.stmt# with procedure.procName=procedure.procName  pattern assign(_, "4000/5700") with "then"=procedure.procName with assign.stmt#=3300  pattern assign(variable, _"1800+else"_)  such that Affects*(assign, assign)  pattern if(_, _, _) with read.varName=procedure.procName  pattern if(constant, _, _)  pattern while(variable, _)  such that Modifies(call, _) with stmt.stmt#=if.stmt#  pattern while(_, _)  pattern assign(_, "9300+9700")  pattern while(_, _)  such that Follows(stmt, _)  pattern if(variable, _, _)  such that Affects*(assign, stmt) with 5800=constant.value  such that Modifies(while, variable)  pattern assign(variable, _"5200*3200"_)  pattern if(read, _, _)  pattern assign(variable, "8500+7300")  pattern while(_, _)  pattern assign(variable, _) with 4100=while.stmt#  pattern assign(while, _"8300*4000"_)  pattern assign(variable, _)  pattern while(variable, _) with call.procName=print.varName  pattern while(variable, _)  pattern assign(call, _"6500+9200"_) with if.stmt#=constant.value with 200=if.stmt# with variable.varName=print.varName  pattern if(variable, _, _)  such that Next(_, while)  pattern assign(assign, _)  such that Calls*("procedure", procedure) with if.stmt#=7100 with 9800=stmt.stmt#  pattern while(_, _) with "variable"=read.varName  such that Next(stmt, 1)  pattern while(variable, _) with procedure.procName="if"  such that Follows(assign, print) with stmt.stmt#=7300  such that Calls*(_, procedure)  pattern while(_, _)  such that Parent(stmt, 6) with print.varName="else"  such that Follows*(while, 17)  such that Affects(stmt, stmt)  pattern assign(variable, _"6300-8000"_)  such that Follows(_, print) with 7000=assign.stmt#  such that Affects*(assign, 24) with 7300=constant.value with read.stmt#=9100 with call.stmt#=if.stmt# with 3000=constant.value  pattern if(_, _, _) with procedure.procName=print.varName  such that Uses(procedure, "constant")  such that Next(_, if)  such that Next*(10, stmt)  such that Parent(_, stmt) with call.stmt#=400  such that Uses(13, variable) with print.stmt#=8900  such that Calls("procedure", procedure)  pattern while(variable, _)  such that Follows*(stmt, _)  pattern if(while, _, _)  pattern while(variable, _)  pattern if(constant, _, _)  such that Follows(2, stmt) with "variable"=procedure.procName  such that Affects(stmt, 8)  such that Affects*(stmt, stmt)  such that Parent*(call, _)  such that Calls*(procedure, _)  pattern while(constant, _)  such that Parent(read, 13)  such that Modifies(print, variable) with "variable"=read.varName with "print"=print.varName  pattern if(_, _, _)  pattern if(_, _, _) with procedure.procName=call.procName  such that Modifies(12, variable)  pattern while(_, _) with "else"=procedure.procName  such that Parent*(_, read)  such that Calls*(procedure, "variable")  such that Next(while, _)  pattern assign(if, "1100-300")  such that Calls*(procedure, _) with if.stmt#=2400  pattern assign(variable, "call+3200")  pattern assign(_, _)  pattern if(then, _, _)  pattern if(variable, _, _)  pattern while(_, _)  such that Follows*(call, _) with 9100=print.stmt#  pattern if(variable, _, _)  such that Modifies(call, "assign") with while.stmt#=print.stmt#  pattern if(then, _, _) with print.stmt#=while.stmt#  such that Calls(procedure, "read")  pattern assign(variable, "2100+7900")  pattern assign(variable, _)  pattern while(variable, _)  such that Next*(23, assign)  such that Affects*(_, assign) with "if"=procedure.procName  pattern assign(variable, "9700+2100")  such that Follows*(assign, while)  pattern while(_, _)  such that Next*(_, read)  pattern while(procedure, _)  pattern if(call, _, _)  pattern assign(variable, _)  such that Modifies(assign, variable)  such that Next*(read, _)  pattern assign(print, _"2800-4200"_) with constant.value=5100  pattern while(print, _) with variable.varName="call" with 1000=read.stmt#  pattern if(assign, _, _)  pattern assign(_, _"7500*7100"_)  pattern if(_, _, _)  pattern assign(call, _"1900+4200"_)  pattern if(_, _, _) with 7900=print.stmt#  pattern while(assign, _)  pattern if(_, _, _)  pattern if(variable, _, _) with stmt.stmt#=stmt.stmt# with 5500=stmt.stmt#  such that Follows*(if, _) with procedure.procName="while" with print.varName="read"  pattern while(constant, _)  pattern if(variable, _, _) with call.procName=read.varName  pattern assign(_, _"500+5900"_) with "procedure"=print.varName  such that Calls(procedure, _)  pattern assign(_, _"1500+6400"_)  pattern assign(variable, "2300+1000")  pattern while(variable, _)  such that Follows(while, 11) with "while"=procedure.procName  such that Calls*(procedure, "while")  such that Uses(procedure, _)  pattern if(variable, _, _) with call.procName="else"  pattern if(variable, _, _) with print.stmt#=5900  pattern while(_, _)  pattern if(read, _, _) with read.stmt#=while.stmt#  pattern while(variable, _) with print.varName=variable.varName  pattern assign(_, "while/3300") with if.stmt#=5500  pattern if(variable, _, _)  pattern if(variable, _, _)  such that Parent(while, _)  pattern while(variable, _)  such that Calls(_, procedure) with while.stmt#=stmt.stmt#  such that Follows(print, while)  pattern if(variable, _, _)  pattern if(variable, _, _)  such that Calls(procedure, procedure)  such that Modifies(read, _)  pattern assign(call, _)  such that Calls(procedure, procedure) with stmt.stmt#=print.stmt#  pattern if(variable, _, _) with "assign"=print.varName with "procedure"=variable.varName with procedure.procName="then"  pattern while(_, _)  such that Uses(read, _)  such that Parent*(stmt, _)  such that Calls*(procedure, procedure) with call.procName=call.procName  pattern while(_, _)  pattern while(variable, _)  such that Uses(procedure, "variable") with print.stmt#=7500 with call.procName="assign"  pattern if(variable, _, _)  such that Follows*(call, 7)  pattern if(procedure, _, _) with while.stmt#=call.stmt# with read.stmt#=7000  pattern assign(while, _) with call.procName=print.varName with variable.varName=print.varName  such that Affects*(stmt, 20) with while.stmt#=while.stmt#  pattern if(variable, _, _) with read.varName="constant"  pattern if(_, _, _)  pattern assign(_, _)  pattern if(variable, _, _)  pattern assign(_, "2200-2100") with constant.value=6900 with 9000=read.stmt# with 5700=call.stmt# with 6800=if.stmt# with 7800=stmt.stmt#  pattern if(else, _, _) with if.stmt#=constant.value with variable.varName="call"  pattern while(_, _)  such that Follows(if, _)  such that Calls(_, procedure)  pattern while(if, _) with print.varName=read.varName  pattern if(variable, _, _) with 3200=while.stmt#  pattern while(_, _) with "print"=procedure.procName  pattern if(_, _, _)  such that Follows(assign, read)  pattern assign(variable, "while-2300")  such that Uses(read, variable)  pattern assign(variable, "7200/7100")  pattern while(call, _) with 4100=constant.value  pattern assign(_, "5400/4200")  such that Follows*(17, while)  such that Modifies(4, variable)  such that Affects(assign, _) with procedure.procName=procedure.procName  such that Affects(_, assign)  pattern if(_, _, _)  such that Follows(22, while)  such that Follows(_, stmt)  pattern assign(_, _)  pattern assign(_, _"8500+8800"_) with 2600=constant.value  pattern assign(if, _) with stmt.stmt#=9000 with assign.stmt#=if.stmt#  pattern while(variable, _) with read.stmt#=6300 with read.varName=procedure.procName with constant.value=6300 with while.stmt#=5300  such that Uses(22, variable)  pattern while(variable, _)  pattern while(print, _) with 1800=read.stmt#  pattern if(variable, _, _)  such that Parent*(call, read)  such that Affects(assign, 17)  such that Uses(print, variable)  pattern assign(print, _"6300+7500"_)  such that Uses(if, variable)  such that Parent(assign, _)  such that Affects(_, stmt) with constant.value=9400  pattern if(procedure, _, _)  pattern if(variable, _, _) with print.varName="while" with variable.varName="while"  pattern assign(_, _)  pattern if(variable, _, _)  pattern while(variable, _)  pattern if(_, _, _)  such that Uses(call, variable)  such that Modifies(28, variable)  pattern while(variable, _)  such that Uses(call, _)  pattern assign(assign, _)  pattern while(procedure, _) with procedure.procName=procedure.procName with 1400=call.stmt#  such that Calls*(_, procedure) with read.varName="else" with call.procName="read" with print.stmt#=4700  pattern if(print, _, _)  pattern while(variable, _) with stmt.stmt#=while.stmt# 

5000
68 - Query 68
variable variable; assign assign; print print; call call; constant constant; stmt stmt; read read; if if; while while; procedure procedure; 
Select <variable, assign, print, call, constant, stmt, read, if, while, procedure>  such that Calls*(procedure, _)  pattern if(_, _, _)  such that Next*(if, _)  such that Parent(read, _)  such that Calls(procedure, "else")  pattern while(_, _) with if.stmt#=7800  pattern assign(variable, "(5300*5900)/700") with while.stmt#=5100  such that Parent(print, call)  pattern if(_, _, _)  such that Uses(procedure, _) with call.procName=print.varName  pattern if(else, _, _) with call.stmt#=8700  pattern assign(variable, _"7400/call"_)  such that Uses(if, _) with 3500=assign.stmt#  pattern assign(_, _)  such that Calls*(procedure, "if")  such that Affects(stmt, _)  such that Follows*(_, read)  pattern assign(_, "9400*6200")  pattern if(else, _, _)  pattern while(assign, _)  pattern if(else, _, _)  such that Parent(_, print)  such that Affects*(26, stmt)  pattern if(variable, _, _)  pattern assign(_, "(6300*300)+300")  such that Parent(if, 29)  such that Modifies(procedure, variable)  pattern assign(_, "1000+9000") with variable.varName="variable"  such that Modifies(print, variable)  such that Uses(stmt, variable) with 8600=while.stmt# with call.stmt#=2100  such that Uses(stmt, variable)  such that Parent(_, stmt) with stmt.stmt#=print.stmt# with constant.value=800 with "assign"=call.procName  pattern while(_, _) with 900=assign.stmt#  pattern if(variable, _, _) with read.varName="variable" with "while"=call.procName  pattern assign(_, "7500-5800")  pattern if(variable, _, _)  such that Modifies(14, variable)  such that Calls*(_, procedure)  pattern if(variable, _, _) with 7900=constant.value with 9400=read.stmt#  such that Affects(_, assign)  pattern assign(_, "6300*9800")  pattern while(variable, _)  such that Follows*(4, call)  pattern if(_, _, _) with constant.value=if.stmt# with procedure.procName=variable.varName  pattern assign(variable, _"8000/300"_)  pattern if(_, _, _) with call.stmt#=7100  such that Next*(read, _)  pattern if(call, _, _)  such that Calls(procedure, _) with assign.stmt#=assign.stmt#  such that Next*(while, 13)  pattern assign(call, _"2100*2200"_)  such that Affects(5, stmt)  such that Affects(stmt, _)  pattern while(variable, _)  pattern if(_, _, _)  such that Affects*(8, assign) with print.varName=procedure.procName  such that Follows(_, read) with call.procName=variable.varName with stmt.stmt#=2900  pattern if(variable, _, _)  pattern if(variable, _, _) with 300=while.stmt#  pattern while(variable, _)  pattern while(_, _)  such that Modifies(stmt, _)  such that Next*(print, _) with if.stmt#=constant.value  pattern if(assign, _, _)  such that Uses(print, "constant") with assign.stmt#=constant.value with call.stmt#=if.stmt# with "constant"=procedure.procName  pattern if(_, _, _)  such that Calls*(_, procedure)  such that Follows*(while, while)  pattern while(procedure, _)  such that Follows*(19, read)  pattern assign(variable, _"8100*1000"_)  pattern while(variable, _)  pattern assign(variable, _"2900+5200"_)  such that Parent(read, _) with read.stmt#=constant.value  pattern if(_, _, _)  pattern while(variable, _)  such that Next(while, stmt)  such that Next*(while, 12)  such that Calls(procedure, "while") with read.stmt#=7700  pattern assign(variable, _)  pattern assign(assign, "5100-6100")  pattern assign(_, "1900*assign") with "read"=call.procName with print.stmt#=2000  pattern assign(variable, _"4300+9700"_)  pattern while(else, _)  pattern while(variable, _)  such that Uses(stmt, variable)  pattern assign(variable, "9100+5400")  pattern if(_, _, _)  pattern while(variable, _)  pattern assign(_, "7600+3400") with read.varName=call.procName  such that Calls(procedure, _)  such that Follows(_, print)  such that Affects(28, stmt)  such that Next(call, 29)  pattern assign(while, _) with assign.stmt#=constant.value  pattern if(print, _, _)  pattern while(_, _)  such that Follows(_, while)  pattern while(_, _)  such that Parent(_, stmt)  pattern if(variable, _, _)  pattern assign(variable, _) with print.stmt#=if.stmt# with procedure.procName="print"  such that Next*(9, call)  pattern assign(_, _"8100*9800"_)  pattern assign(if, _"assign/3400"_)  pattern while(while, _)  pattern assign(_, _)  pattern assign(variable, _)  pattern while(variable, _) with read.stmt#=read.stmt# with print.varName=variable.varName  pattern if(_, _, _)  pattern if(assign, _, _) with call.stmt#=assign.stmt# with 9100=read.stmt# with print.varName=print.varName with "while"=variable.varName  pattern while(_, _)  pattern while(_, _)  pattern if(read, _, _)  pattern assign(_, "6900-9300")  pattern assign(_, _"6700+3200"_)  pattern assign(_, _)  pattern while(call, _)  pattern while(procedure, _)  pattern assign(_, _"5200/6500"_)  pattern assign(variable, _"then-9600"_)  pattern if(_, _, _)  pattern assign(_, _"2300+5600"_)  pattern if(if, _, _)  pattern assign(variable, "2600*5500")  pattern if(variable, _, _)  such that Parent*(call, assign) with call.stmt#=print.stmt#  pattern while(_, _)  pattern assign(assign, _"9000-9300"_)  pattern assign(variable, "5200+5300")  pattern while(variable, _)  such that Calls(procedure, "then") with assign.stmt#=if.stmt#  pattern assign(_, _"9800*1900"_) with variable.varName=variable.varName with variable.varName=variable.varName with stmt.stmt#=constant.value  pattern assign(call, _) with 2400=if.stmt#  such that Affects*(assign, 6)  such that Calls(procedure, procedure) with 7600=stmt.stmt# with "call"=print.varName  pattern while(_, _)  pattern if(variable, _, _)  such that Next*(assign, 13)  such that Calls*(procedure, _) with 5300=assign.stmt#  pattern while(variable, _)  pattern if(_, _, _)  such that Affects(assign, 16)  pattern if(_, _, _) with 3500=print.stmt#  such that Modifies(if, variable)  pattern if(print, _, _)  pattern assign(procedure, "3300-procedure") with call.procName=print.varName with constant.value=if.stmt# with "print"=procedure.procName with 3000=if.stmt#  pattern if(variable, _, _) with while.stmt#=stmt.stmt# with 7000=while.stmt#  pattern if(variable, _, _)  pattern if(while, _, _)  such that Follows*(_, stmt) with constant.value=8300 with variable.varName="call"  such that Calls(procedure, _)  such that Uses(while, "if")  pattern assign(variable, _"3800/5800"_)  pattern if(variable, _, _)  pattern while(print, _) with assign.stmt#=2700  pattern while(variable, _) with read.stmt#=100  pattern assign(read, "8400*9100")  pattern while(variable, _)  pattern while(procedure, _)  such that Uses(if, _) with while.stmt#=8700 with print.varName="else"  pattern assign(variable, _"(6000*4500)*5700"_)  pattern while(variable, _)  such that Calls*(procedure, procedure) with procedure.procName=read.varName  pattern if(variable, _, _)  pattern assign(print, _"9900-700"_)  pattern if(variable, _, _)  pattern assign(variable, _)  pattern if(assign, _, _) with stmt.stmt#=stmt.stmt# with variable.varName=variable.varName  pattern assign(else, _"constant*900"_) with if.stmt#=while.stmt#  pattern if(variable, _, _)  such that Next*(if, while) with "else"=call.procName  such that Modifies(print, "then")  pattern assign(constant, _"9700+7300"_) with assign.stmt#=1800  such that Next*(stmt, 19)  pattern if(_, _, _) with read.varName="then"  pattern if(while, _, _) with "variable"=variable.varName with constant.value=5900  such that Modifies(assign, _)  pattern while(_, _)  such that Follows*(assign, 19) with if.stmt#=stmt.stmt# with call.stmt#=constant.value  pattern assign(_, "5300-800")  such that Calls(procedure, "while")  such that Parent(if, stmt) with stmt.stmt#=while.stmt# with "call"=read.varName with variable.varName=read.varName with 5000=while.stmt#  pattern assign(variable, "9700-3600") with procedure.procName="if"  pattern if(_, _, _)  such that Next*(if, read)  pattern while(then, _)  pattern assign(variable, _)  pattern if(while, _, _)  such that Next*(assign, print) with 8400=stmt.stmt#  such that Follows(stmt, stmt)  pattern if(variable, _, _)  pattern if(variable, _, _)  such that Parent*(while, read)  pattern assign(variable, _)  pattern assign(variable, _)  pattern if(else, _, _)  such that Modifies(if, _) with "procedure"=procedure.procName with read.varName="if"  pattern assign(procedure, _) with 1600=while.stmt#  pattern assign(variable, "8900-5600") with procedure.procName="variable"  pattern assign(_, _"9200*8900"_)  pattern if(constant, _, _) with "else"=variable.varName  such that Modifies(25, variable) with read.stmt#=3400  such that Parent(stmt, while) with print.stmt#=if.stmt#  such that Follows*(if, 13)  such that Affects*(stmt, assign)  pattern if(variable, _, _)  pattern if(if, _, _)  pattern assign(if, _)  such that Follows*(2, stmt)  pattern if(call, _, _)  pattern assign(else, _) with procedure.procName=procedure.procName  such that Affects*(assign, _)  such that Affects(assign, assign)  such that Affects(stmt, assign)  pattern while(call, _)  pattern assign(else, _"9000*5800"_) with 5000=call.stmt# with constant.value=400  pattern if(variable, _, _)  pattern assign(if, _"4600+600"_) with constant.value=stmt.stmt#  pattern while(variable, _)  such that Modifies(stmt, _)  such that Parent(assign, _) with call.stmt#=4600  pattern assign(variable, _"1200/2500"_) with call.procName="procedure" with constant.value=9300 with call.procName="procedure"  pattern assign(_, "8300-5300") with 8900=assign.stmt#  such that Parent(print, print)  such that Modifies(assign, variable) with read.stmt#=6600  pattern while(constant, _)  such that Parent(print, _)  pattern if(variable, _, _)  such that Parent(_, assign) with "print"=read.varName  pattern assign(variable, "(8000-2200)/6700")  pattern if(variable, _, _) with while.stmt#=read.stmt#  pattern if(_, _, _)  pattern while(_, _) with read.stmt#=constant.value  pattern if(variable, _, _)  pattern while(variable, _)  pattern while(procedure, _)  pattern while(variable, _)  such that Follows(_, if)  such that Follows*(stmt, 9) with 3500=print.stmt# with call.stmt#=read.stmt# with 4600=constant.value with call.procName="else" with print.stmt#=call.stmt#  pattern assign(assign, _)  pattern assign(_, _) with variable.varName=read.varName  such that Follows(if, 26)  pattern assign(call, "3000+4900")  such that Calls(_, procedure)  pattern while(variable, _)  pattern assign(variable, _)  pattern while(_, _)  pattern if(else, _, _) with call.procName="read"  such that Affects*(stmt, _) with procedure.procName="procedure"  such that Next*(19, assign) with 8000=assign.stmt# with procedure.procName="call" with 8700=print.stmt# with print.varName=read.varName  such that Calls*(procedure, _) with "print"=variable.varName  pattern if(variable, _, _)  such that Affects*(stmt, _)  such that Follows(7, print) with assign.stmt#=3300 with print.stmt#=7400  pattern while(_, _)  pattern assign(variable, "2400-7100")  pattern while(variable, _) with constant.value=assign.stmt# with 7300=if.stmt# with read.varName=read.varName with constant.value=6000  pattern assign(variable, _)  pattern while(_, _)  such that Follows(_, if)  such that Modifies(read, "print")  pattern assign(variable, _)  pattern if(_, _, _)  such that Parent*(read, _) with read.varName=procedure.procName with constant.value=5900  pattern assign(_, _)  pattern assign(variable, _)  pattern if(constant, _, _)  pattern while(variable, _) with print.varName=call.procName  pattern while(else, _)  pattern while(variable, _)  pattern assign(variable, _"7700+8800"_)  pattern assign(_, _"6400*2400"_)  pattern if(variable, _, _)  pattern assign(_, "1100+1000")  pattern while(variable, _) with if.stmt#=3800  such that Modifies(if, _)  pattern while(variable, _) with stmt.stmt#=while.stmt# with print.varName="call"  pattern if(_, _, _) with if.stmt#=print.stmt#  pattern assign(variable, _"7000*5900"_)  such that Affects(stmt, assign) with "if"=procedure.procName with assign.stmt#=3000 with stmt.stmt#=5800  pattern assign(_, "procedure+constant")  pattern while(variable, _)  pattern assign(print, _"6500*9600"_)  such that Affects(assign, assign)  such that Uses(stmt, "else")  pattern if(then, _, _) with variable.varName="then"  pattern if(constant, _, _) with read.varName=variable.varName with "read"=call.procName with assign.stmt#=5800  such that Next(25, assign)  such that Parent(_, stmt)  such that Affects*(stmt, assign)  pattern assign(procedure, "5800+6700")  pattern assign(while, _) with print.varName=call.procName  pattern if(variable, _, _)  pattern assign(variable, "8900+900") with while.stmt#=9900 with read.stmt#=if.stmt# with procedure.procName="procedure" with print.stmt#=500  pattern while(_, _) with 8300=while.stmt#  pattern assign(call, "7000+9200")  pattern assign(variable, "1200*5000") with "else"=read.varName  pattern while(variable, _)  such that Modifies(stmt, _) with "print"=call.procName with read.stmt#=print.stmt#  such that Calls*(_, procedure)  such that Calls*("if", procedure) with 4000=assign.stmt# with 5500=print.stmt# with assign.stmt#=5100  such that Next*(_, while)  pattern assign(variable, _) with 5600=read.stmt#  pattern assign(variable, _)  pattern assign(print, _"(2300/100)*700"_) with "print"=read.varName  pattern while(if, _)  such that Next(read, print)  pattern assign(variable, _)  pattern while(variable, _)  such that Modifies(stmt, _)  pattern assign(if, "4600*5900")  pattern assign(variable, _) with constant.value=3800  pattern while(_, _)  pattern assign(variable, _)  such that Follows(read, while) with 1200=print.stmt# with variable.varName="variable"  pattern assign(_, "200/4700")  pattern if(_, _, _)  pattern while(read, _)  such that Affects*(assign, stmt) with call.procName=call.procName  pattern if(if, _, _)  pattern while(variable, _)  pattern assign(variable, _"4400/print"_)  pattern while(variable, _) with 8800=call.stmt# with "call"=call.procName  such that Calls*(procedure, "else")  such that Affects*(stmt, assign)  pattern while(_, _) with print.varName=call.procName with 8100=assign.stmt#  such that Affects(_, assign)  such that Follows(print, _)  pattern if(_, _, _) with constant.value=if.stmt#  such that Next*(_, while)  such that Uses(while, variable)  such that Parent(if, _)  such that Next(5, while)  such that Calls(_, procedure)  pattern if(variable, _, _)  such that Next*(while, _)  pattern while(_, _)  such that Follows*(if, while)  pattern if(_, _, _)  such that Calls(procedure, _)  pattern assign(variable, _)  pattern if(variable, _, _) 

5000
69 - Query 69
print print; assign assign; constant constant; variable variable; stmt stmt; read read; procedure procedure; while while; if if; call call; 
Select <print, assign, constant, variable, stmt, read, procedure, while, if, call>  such that Next(call, print)  pattern assign(procedure, "4200/6800") with 1100=while.stmt# with constant.value=assign.stmt# with "print"=print.varName  pattern if(else, _, _)  pattern while(read, _)  pattern if(read, _, _)  such that Follows(read, _)  pattern assign(if, _)  pattern assign(variable, _)  pattern if(variable, _, _)  such that Parent*(if, 11)  pattern while(variable, _)  such that Next(print, 4)  pattern if(variable, _, _) with call.procName=read.varName  such that Next*(_, stmt)  pattern if(while, _, _) with if.stmt#=2900  pattern while(print, _) with if.stmt#=print.stmt#  pattern assign(variable, _)  such that Next(stmt, 4)  pattern assign(_, _"7300/5400"_)  pattern assign(_, "8700*800")  such that Modifies(while, variable) with print.varName=call.procName with call.procName="else"  pattern assign(variable, "7500+1000")  pattern while(_, _)  such that Uses(if, "constant")  such that Follows(_, assign)  pattern while(if, _)  pattern if(call, _, _) with constant.value=print.stmt# with procedure.procName=procedure.procName  pattern while(_, _)  pattern while(_, _)  pattern if(_, _, _)  such that Follows(12, print)  pattern if(variable, _, _) with print.varName=procedure.procName  pattern assign(_, _)  pattern assign(_, _"4100/3000"_)  pattern if(variable, _, _)  pattern while(variable, _) with read.varName="if" with call.procName="print" with call.stmt#=constant.value  such that Next(read, _) with "procedure"=call.procName  pattern while(_, _)  pattern assign(then, _"7100-9700"_)  pattern while(variable, _)  such that Next(if, stmt)  pattern if(then, _, _) with 8800=print.stmt#  pattern while(variable, _)  such that Next(_, print)  such that Affects*(stmt, assign) with "call"=procedure.procName  such that Follows(7, while) with "procedure"=procedure.procName  pattern assign(while, _"6600-2900"_) with read.stmt#=3500 with variable.varName=print.varName with print.stmt#=600  such that Uses(procedure, "assign")  such that Next*(stmt, 4)  such that Follows*(print, 3)  such that Modifies(17, variable)  such that Follows(15, read)  such that Modifies(assign, _) with "else"=procedure.procName  such that Affects(assign, stmt) with procedure.procName="call"  pattern assign(_, "8900/3300")  pattern while(_, _)  such that Parent(stmt, 4)  such that Follows(_, while)  pattern assign(variable, "9300/4600")  pattern if(variable, _, _) with if.stmt#=7600  such that Parent(2, print)  such that Parent*(10, while)  pattern if(variable, _, _)  pattern assign(variable, _"(8500+3700)+3200"_) with "variable"=print.varName  pattern if(if, _, _)  pattern if(_, _, _)  pattern while(_, _)  pattern assign(variable, _"7100+9500"_) with read.stmt#=print.stmt#  pattern while(variable, _)  pattern assign(call, _"(4800*3900)-7100"_) with while.stmt#=4300  pattern while(while, _)  pattern assign(_, "2500-3600")  pattern if(variable, _, _)  pattern assign(variable, _) with call.procName="variable"  pattern if(variable, _, _)  pattern assign(variable, "2200*7300")  such that Next(while, if)  pattern if(_, _, _)  pattern while(_, _) with call.stmt#=5200 with "read"=call.procName  pattern assign(variable, "4900*4400") with print.varName="procedure"  such that Calls*(procedure, "if")  pattern while(if, _)  pattern while(variable, _)  pattern assign(_, "8300*4400")  pattern assign(print, _)  pattern while(_, _) with print.varName=procedure.procName  pattern while(variable, _)  pattern assign(call, _)  pattern assign(else, "5800+7000") with "print"=variable.varName with "procedure"=read.varName  pattern if(variable, _, _) with assign.stmt#=call.stmt# with print.varName="call"  pattern if(_, _, _)  pattern while(_, _) with print.stmt#=read.stmt#  pattern assign(while, _)  such that Affects*(stmt, stmt) with read.varName=read.varName  pattern while(variable, _) with print.varName="variable" with if.stmt#=9300  pattern while(variable, _) with print.stmt#=2300  pattern assign(variable, "3000*2800")  pattern assign(assign, _)  pattern assign(constant, "3100*7400")  such that Affects*(_, assign)  pattern assign(assign, _"100/else"_) with while.stmt#=print.stmt#  such that Calls(_, procedure)  pattern if(variable, _, _) with 800=read.stmt# with stmt.stmt#=8100  pattern assign(_, _"(1500-4300)-9500"_) with call.procName=call.procName  such that Calls(_, procedure)  such that Next*(_, while)  pattern if(variable, _, _)  pattern assign(variable, _"2600*100"_)  such that Follows(29, call) with constant.value=9800 with read.varName="if"  pattern if(while, _, _)  pattern while(while, _) with variable.varName=read.varName  pattern while(_, _)  such that Next(16, call)  such that Parent*(assign, 28)  pattern assign(then, "print+7200")  pattern assign(_, _"3400+7700"_)  pattern assign(_, _"7800*9900"_)  pattern while(variable, _) with 9200=assign.stmt# with variable.varName=read.varName  pattern while(variable, _)  pattern while(variable, _)  such that Parent*(print, assign) with procedure.procName=call.procName  such that Calls(_, procedure)  pattern assign(variable, _"4200-7700"_)  pattern if(procedure, _, _)  such that Affects*(assign, 17)  pattern if(_, _, _)  such that Next(read, read)  pattern if(_, _, _) with read.varName="while"  pattern assign(_, "(procedure+7600)-2100")  such that Parent(13, stmt) with print.varName="assign" with 6700=while.stmt#  such that Parent(assign, _)  pattern assign(procedure, _"8600*1900"_)  pattern assign(assign, _)  pattern while(variable, _) with print.varName=read.varName  pattern if(_, _, _)  such that Affects*(_, stmt) with read.stmt#=5300  pattern while(variable, _)  pattern if(_, _, _)  pattern if(_, _, _) with read.varName="while" with 2600=call.stmt#  such that Next*(read, _)  such that Parent(stmt, _)  pattern while(_, _)  pattern if(variable, _, _)  pattern assign(variable, "4200/2900")  such that Uses(23, variable) with print.stmt#=8700  such that Next(_, call)  pattern assign(read, _"4700/7900"_)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern if(procedure, _, _)  pattern while(procedure, _) with read.stmt#=call.stmt#  pattern if(assign, _, _) with print.varName="variable" with print.stmt#=read.stmt#  pattern if(variable, _, _)  pattern assign(variable, "4400-1500")  pattern assign(constant, "8100-7900") with print.varName="print"  such that Follows(call, 29)  pattern assign(variable, _"200+7300"_)  pattern if(procedure, _, _) with 3600=constant.value  pattern while(then, _) with 6400=print.stmt#  such that Parent*(_, stmt)  such that Next(_, if) with procedure.procName="constant"  pattern assign(read, _"9100-5000"_) with print.stmt#=2300  pattern assign(call, "7900-5600")  pattern while(variable, _)  pattern while(variable, _)  such that Next*(print, call)  such that Parent(call, _)  such that Parent*(call, assign) with read.stmt#=while.stmt#  pattern while(assign, _)  such that Next*(call, call)  pattern while(_, _)  such that Calls(_, procedure) with read.varName=print.varName  such that Next(while, _) with while.stmt#=3300 with procedure.procName=call.procName  such that Uses(stmt, "procedure") with 4600=assign.stmt# with procedure.procName="read"  pattern if(print, _, _)  such that Modifies(procedure, variable) with 9500=constant.value  pattern while(while, _) with assign.stmt#=4400 with "constant"=read.varName  pattern while(variable, _)  pattern while(variable, _) with read.varName="while"  pattern while(_, _)  pattern assign(if, _"9700-1000"_) with 7000=call.stmt#  pattern while(procedure, _) with 200=if.stmt#  such that Next(print, _)  such that Modifies(call, "variable") with 3600=assign.stmt# with constant.value=7400 with variable.varName="then"  pattern while(variable, _) with "assign"=read.varName with call.procName=read.varName  such that Follows(26, call)  pattern while(variable, _)  pattern if(variable, _, _)  pattern while(variable, _)  such that Parent(6, read) with if.stmt#=call.stmt#  pattern if(_, _, _)  pattern assign(_, "6300+8500") with procedure.procName="constant"  such that Affects*(stmt, _)  such that Modifies(call, "call")  pattern assign(call, _"1400/5100"_)  such that Next*(print, call) with constant.value=stmt.stmt#  such that Follows*(stmt, _)  such that Next(read, if)  pattern assign(then, _"6600+1100"_)  such that Follows*(call, _)  such that Modifies(stmt, "if")  pattern while(_, _) with read.varName="else"  pattern while(constant, _)  pattern while(_, _) with read.varName="else"  pattern if(variable, _, _)  pattern while(call, _) with read.varName="constant"  such that Modifies(if, variable)  pattern if(variable, _, _)  pattern assign(variable, _"4800*8500"_)  such that Affects*(stmt, stmt)  pattern assign(call, _"1400-9200"_)  pattern while(variable, _) with "else"=variable.varName with 800=if.stmt# with 9100=constant.value  pattern while(_, _)  pattern if(variable, _, _)  pattern if(constant, _, _)  pattern assign(variable, _"5600/read"_)  such that Parent(_, assign)  such that Next*(11, assign)  pattern while(variable, _) with read.varName="assign"  such that Uses(procedure, variable) with read.varName="variable"  such that Modifies(7, variable)  pattern while(_, _)  pattern while(procedure, _)  such that Calls*(procedure, procedure)  pattern if(variable, _, _)  such that Follows*(call, 9)  pattern while(variable, _) with "print"=print.varName  pattern while(procedure, _) with 2600=read.stmt#  pattern if(variable, _, _)  such that Parent(while, _) with call.procName=call.procName  such that Affects(stmt, stmt) with 6400=read.stmt#  such that Calls*("variable", procedure) with 6900=while.stmt#  pattern while(variable, _) with assign.stmt#=5400  such that Next*(if, print)  such that Modifies(call, variable)  such that Affects*(_, assign)  pattern if(procedure, _, _) with assign.stmt#=if.stmt#  such that Modifies(read, "while") with 2900=stmt.stmt#  pattern assign(call, _) with "then"=variable.varName  pattern if(procedure, _, _) with 1700=while.stmt# with "assign"=call.procName with "procedure"=read.varName  such that Calls("print", procedure) with procedure.procName="procedure"  pattern while(_, _)  pattern assign(_, _)  such that Affects*(stmt, _)  pattern assign(while, _"8800-6400"_)  pattern if(variable, _, _)  pattern assign(constant, _"5600*4800"_)  pattern if(call, _, _)  pattern assign(_, _) with "while"=procedure.procName  pattern if(if, _, _)  pattern assign(_, _"print-2600"_) with call.stmt#=4900  pattern if(print, _, _)  pattern while(_, _)  pattern if(else, _, _)  pattern while(variable, _)  pattern while(variable, _) with 2200=constant.value  pattern if(variable, _, _) with 9200=stmt.stmt# with "variable"=variable.varName with "then"=read.varName  such that Parent*(19, if)  pattern while(variable, _)  pattern assign(variable, _"400/9500"_)  such that Parent*(_, while)  pattern assign(variable, "5200/6100")  such that Affects*(stmt, 4)  pattern assign(variable, _"9300/6900"_)  pattern while(variable, _)  such that Follows*(_, stmt) with variable.varName="while" with assign.stmt#=1600 with read.stmt#=3400 with if.stmt#=read.stmt# with while.stmt#=print.stmt# with print.stmt#=stmt.stmt#  pattern if(variable, _, _)  pattern if(procedure, _, _) with read.stmt#=2000  such that Next(print, _) with while.stmt#=constant.value  such that Follows(_, if) with "call"=read.varName  such that Next(19, if) with "constant"=procedure.procName with procedure.procName="constant"  such that Calls(procedure, _) with print.stmt#=read.stmt#  pattern if(while, _, _)  such that Parent(_, read)  such that Calls("call", procedure)  such that Next*(stmt, _)  pattern assign(variable, _"900*1300"_)  pattern if(variable, _, _)  such that Follows*(print, 11)  pattern assign(constant, _"5700-else"_)  pattern assign(call, _)  such that Follows*(call, 17) with stmt.stmt#=3600  such that Calls(procedure, procedure)  pattern assign(read, _"(3900-5800)*1200"_) with variable.varName="while"  pattern if(variable, _, _) with 9900=stmt.stmt#  pattern if(_, _, _)  pattern assign(_, "7100-5300") with 3500=constant.value  pattern if(read, _, _)  pattern assign(variable, _"5600-3000"_)  pattern assign(call, _"2600+5700"_)  pattern while(_, _) with read.varName=procedure.procName  pattern while(if, _)  pattern while(_, _) with while.stmt#=if.stmt#  pattern while(read, _) with stmt.stmt#=100  pattern assign(constant, _"7400*4300"_)  pattern assign(_, _) with 6300=call.stmt#  pattern assign(variable, _"2500-5600"_)  pattern assign(variable, "(5500+print)+3200")  such that Follows*(if, 25)  pattern if(print, _, _)  pattern while(variable, _)  pattern if(constant, _, _)  pattern while(variable, _)  pattern assign(if, _"then*9600"_) with read.varName=procedure.procName  such that Follows(if, 25) with assign.stmt#=assign.stmt#  pattern if(assign, _, _) with assign.stmt#=1600  pattern if(variable, _, _)  pattern assign(variable, "6100+2400")  pattern if(variable, _, _) with constant.value=6000  pattern if(variable, _, _)  pattern assign(variable, _"7300-8300"_)  such that Calls*(procedure, procedure)  pattern if(variable, _, _) with variable.varName="procedure" with "if"=print.varName with read.stmt#=print.stmt# with if.stmt#=read.stmt# with while.stmt#=1600  pattern assign(_, _)  pattern assign(call, _)  pattern while(_, _) with procedure.procName=procedure.procName with "read"=print.varName  pattern while(variable, _) with "procedure"=variable.varName  pattern while(_, _) with read.varName="variable"  pattern assign(read, _)  pattern while(call, _)  such that Follows(if, 2) with print.varName="if"  such that Next(assign, _)  pattern if(variable, _, _) with print.varName=call.procName  such that Affects*(stmt, 20) with "call"=print.varName  pattern assign(read, _"while-100"_)  pattern while(_, _)  pattern assign(_, "5200+900") with call.stmt#=print.stmt# with call.procName="variable"  pattern while(else, _)  pattern if(variable, _, _)  such that Modifies(while, _)  pattern if(_, _, _) with assign.stmt#=stmt.stmt#  such that Follows*(stmt, stmt)  pattern while(constant, _) with 6100=assign.stmt#  such that Next(assign, _)  pattern if(constant, _, _)  pattern while(print, _)  pattern if(variable, _, _)  such that Next(stmt, assign)  pattern while(call, _)  pattern assign(variable, _"3100-2300"_)  pattern assign(_, _)  pattern while(_, _)  pattern if(constant, _, _)  pattern assign(variable, "9200+9400")  pattern if(else, _, _) with read.stmt#=while.stmt# 

5000
70 - Query 70
print print; assign assign; variable variable; constant constant; stmt stmt; read read; procedure procedure; while while; if if; call call; 
Select <print, assign, variable, constant, stmt, read, procedure, while, if, call> with print.stmt#=2600  such that Calls(_, procedure) with "variable"=read.varName with call.procName="constant"  pattern while(call, _)  pattern assign(_, _"(if*8100)+8200"_)  pattern if(else, _, _)  pattern while(_, _)  pattern if(else, _, _)  pattern while(variable, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern assign(variable, _)  pattern assign(constant, "600*5700") with constant.value=assign.stmt#  pattern while(else, _)  pattern while(_, _)  such that Affects(5, stmt) with call.procName=read.varName  such that Follows*(call, _)  pattern while(_, _) with call.procName=read.varName  such that Calls*(procedure, procedure) with assign.stmt#=4700  such that Affects(4, assign) with 5500=constant.value  such that Next(stmt, 17) with call.procName=read.varName  pattern assign(variable, "400-3800")  such that Modifies(while, variable) with read.varName=variable.varName  such that Affects*(_, assign)  pattern while(_, _)  such that Affects*(stmt, assign)  such that Uses(assign, _)  pattern if(_, _, _)  such that Follows*(_, print)  pattern assign(_, "100-700")  such that Follows(_, assign) with call.procName=variable.varName  pattern while(variable, _)  pattern while(variable, _) with print.varName="else"  pattern assign(variable, _)  pattern if(print, _, _)  pattern if(procedure, _, _) with call.stmt#=5500  such that Next(assign, 22) with variable.varName="constant" with 8200=if.stmt#  such that Uses(20, variable)  such that Modifies(2, variable) with 4900=print.stmt#  such that Calls*(_, procedure)  pattern if(_, _, _) with read.stmt#=stmt.stmt# with 8300=stmt.stmt# with stmt.stmt#=5600 with assign.stmt#=8700 with print.varName="procedure"  such that Calls*(procedure, _)  pattern while(print, _) with call.procName="if"  such that Uses(stmt, _)  pattern assign(variable, _"2200-1100"_) with variable.varName=read.varName  pattern assign(_, _)  such that Modifies(if, "assign")  pattern assign(variable, _"300-4100"_)  pattern assign(variable, _"(constant-1000)-6700"_) with while.stmt#=1100  pattern while(variable, _)  pattern while(_, _)  pattern while(_, _) with read.varName=print.varName  pattern assign(variable, _)  such that Affects*(stmt, stmt) with read.varName=procedure.procName with variable.varName="call"  such that Modifies(stmt, variable)  pattern while(variable, _) with stmt.stmt#=if.stmt#  pattern while(variable, _)  pattern assign(variable, _)  pattern assign(while, _"2300/8100"_)  pattern while(read, _)  such that Next*(stmt, 1)  pattern assign(variable, "9600*900") with print.varName=call.procName with read.varName="procedure"  pattern assign(variable, _)  pattern assign(_, _)  pattern if(_, _, _) with 1800=constant.value with call.stmt#=print.stmt# with 7100=constant.value with constant.value=4600  pattern if(read, _, _) with "variable"=print.varName with call.procName=read.varName with 8000=assign.stmt# with procedure.procName=call.procName  pattern assign(variable, "6800-3200")  pattern assign(call, _)  pattern if(_, _, _)  pattern if(while, _, _)  pattern if(if, _, _)  pattern if(_, _, _)  pattern if(_, _, _)  pattern if(_, _, _)  pattern assign(variable, _"3100-else"_)  pattern if(else, _, _) with 3900=stmt.stmt#  pattern while(_, _)  pattern while(procedure, _) with call.stmt#=print.stmt#  pattern assign(variable, _)  pattern if(then, _, _)  pattern while(_, _)  pattern if(assign, _, _)  pattern while(variable, _) with call.stmt#=stmt.stmt#  pattern while(_, _)  pattern while(_, _) with "else"=print.varName  pattern while(variable, _) with read.stmt#=call.stmt#  pattern assign(while, _"5800+8900"_)  pattern if(_, _, _)  pattern while(else, _)  such that Next*(27, print) with 4800=if.stmt#  pattern if(_, _, _) with "constant"=read.varName  such that Affects*(1, assign) with assign.stmt#=4900 with print.varName=variable.varName with stmt.stmt#=5600  pattern while(_, _)  pattern if(variable, _, _)  pattern assign(_, _)  pattern assign(while, _"5200+6300"_)  such that Affects*(stmt, 7)  pattern assign(variable, "1000+assign")  such that Parent*(2, call)  such that Modifies(assign, variable)  such that Next(_, call) with if.stmt#=600 with 8600=stmt.stmt# with "while"=procedure.procName  pattern if(_, _, _)  such that Modifies(procedure, "constant")  pattern if(variable, _, _)  such that Next*(call, _)  such that Follows*(while, _)  such that Follows(_, print)  pattern while(while, _) with print.stmt#=6800 with constant.value=stmt.stmt#  such that Next(while, call)  such that Next*(if, _) with print.stmt#=8600 with assign.stmt#=8300  pattern if(else, _, _) with call.stmt#=9500 with 4100=while.stmt# with constant.value=if.stmt#  pattern while(print, _) with variable.varName=call.procName with "constant"=procedure.procName with "while"=procedure.procName  such that Next*(print, 24)  pattern if(_, _, _)  such that Modifies(read, variable)  such that Calls(procedure, _) with constant.value=5600  pattern while(variable, _)  such that Follows(13, stmt)  pattern while(else, _) with print.varName="call"  pattern while(_, _) with 8700=assign.stmt#  pattern if(if, _, _)  pattern while(_, _)  pattern assign(_, _"6000+8800"_) with 8700=print.stmt# with "then"=variable.varName  pattern assign(variable, "3900+4900")  such that Uses(while, _)  pattern while(_, _)  pattern if(if, _, _)  such that Next(_, while) with constant.value=read.stmt#  such that Next*(assign, _) with if.stmt#=constant.value  such that Parent*(stmt, _)  pattern assign(constant, _) with stmt.stmt#=5300  pattern if(variable, _, _)  such that Follows*(28, stmt)  pattern while(_, _)  such that Follows*(print, _) with stmt.stmt#=constant.value  such that Affects(stmt, _)  such that Modifies(5, variable)  pattern while(_, _) with "variable"=procedure.procName  pattern if(_, _, _)  such that Follows*(_, stmt)  pattern assign(else, _"9700*8900"_) with constant.value=9200  pattern if(_, _, _)  such that Next*(if, _)  pattern while(constant, _)  pattern while(_, _) with 5200=constant.value  such that Modifies(if, _) with "while"=procedure.procName with "print"=variable.varName  pattern while(variable, _)  pattern while(_, _)  such that Follows*(while, stmt)  such that Affects*(stmt, 28) with 5100=while.stmt#  pattern if(_, _, _)  pattern while(variable, _)  pattern if(_, _, _)  pattern if(_, _, _)  such that Next*(20, call) with call.procName="then" with procedure.procName=variable.varName with call.procName="call" with "constant"=procedure.procName  pattern if(then, _, _)  such that Affects*(stmt, _)  pattern if(variable, _, _) with stmt.stmt#=2800 with 3300=assign.stmt# with procedure.procName="assign" with variable.varName="procedure"  such that Calls*(procedure, _)  pattern while(constant, _) with constant.value=constant.value  such that Calls("then", procedure)  pattern if(procedure, _, _)  pattern assign(_, _) with procedure.procName=variable.varName with print.stmt#=assign.stmt#  pattern while(_, _) with read.stmt#=9500  pattern if(variable, _, _)  pattern while(then, _)  pattern while(variable, _) with read.stmt#=3600  such that Follows(while, _) with stmt.stmt#=stmt.stmt#  pattern while(variable, _)  pattern if(variable, _, _)  pattern if(constant, _, _)  pattern assign(_, _"6800/9200"_) with 4200=call.stmt#  pattern assign(variable, _"3700/2000"_) with read.varName=variable.varName  such that Next(print, 2)  pattern assign(then, _) with read.varName=print.varName  such that Follows(assign, 20)  such that Next(8, while) with "read"=call.procName  pattern if(variable, _, _)  pattern assign(_, _)  pattern assign(variable, _"400+4100"_) with variable.varName="procedure" with "procedure"=read.varName  pattern while(variable, _) with "read"=variable.varName  pattern if(_, _, _)  such that Parent*(_, assign)  pattern if(_, _, _)  such that Parent*(if, while) with 4000=while.stmt#  pattern if(_, _, _)  pattern assign(variable, _"8600/7300"_)  pattern while(variable, _) with stmt.stmt#=2900 with 2600=constant.value  pattern while(_, _)  pattern assign(call, "5400+6200")  such that Next(stmt, 11)  pattern while(variable, _)  pattern while(variable, _)  pattern assign(variable, _) with if.stmt#=call.stmt#  such that Affects*(_, stmt) with "else"=procedure.procName with "read"=read.varName with "assign"=print.varName  pattern assign(_, _)  pattern if(variable, _, _) with variable.varName="variable" with variable.varName=procedure.procName  pattern assign(if, "1200*800") with read.varName="then"  such that Next(if, _) with procedure.procName="constant"  pattern assign(if, "(then+2200)/3900")  such that Uses(stmt, "while")  pattern while(assign, _) with 4200=if.stmt#  pattern assign(variable, _"500+6400"_)  pattern if(_, _, _)  pattern if(_, _, _)  such that Calls*(procedure, procedure) with 6100=stmt.stmt#  pattern while(assign, _) with print.stmt#=2500  such that Affects(assign, 24)  such that Affects(11, assign)  pattern assign(_, _"print*2500"_)  such that Calls*(_, procedure) with stmt.stmt#=stmt.stmt#  pattern assign(variable, _"4200*1500"_)  such that Follows*(call, if) with "procedure"=print.varName with print.stmt#=call.stmt# with variable.varName="constant"  such that Parent*(_, while)  such that Calls*("if", procedure) with "procedure"=procedure.procName  such that Follows*(print, if)  pattern if(call, _, _)  such that Calls*("if", procedure)  pattern assign(_, _"900+700"_)  pattern while(_, _) with read.stmt#=while.stmt#  pattern if(print, _, _)  pattern assign(_, "8900/4800")  such that Affects*(_, stmt)  pattern while(variable, _)  such that Calls("if", procedure)  pattern assign(constant, _)  such that Modifies(if, _)  pattern assign(call, _) with call.stmt#=9200  such that Calls*("while", procedure)  such that Parent(while, call) with read.varName=call.procName  pattern assign(variable, _) with 9700=stmt.stmt# with "procedure"=read.varName  pattern assign(call, _) with variable.varName="call"  pattern if(_, _, _) with constant.value=2100  pattern if(_, _, _) with while.stmt#=while.stmt#  such that Parent*(while, call)  such that Affects*(stmt, _)  pattern while(variable, _) with if.stmt#=while.stmt#  such that Parent(read, read) with "call"=call.procName  pattern if(_, _, _)  pattern assign(print, "4400*8400") with 6600=if.stmt#  such that Parent*(8, assign)  such that Calls(procedure, _)  pattern if(variable, _, _)  such that Modifies(assign, _)  pattern while(variable, _) with assign.stmt#=call.stmt#  such that Next*(18, print)  such that Follows*(if, 24) with variable.varName="else"  such that Affects(stmt, 16)  such that Uses(24, variable)  pattern assign(variable, _)  such that Affects(26, stmt) with call.procName=procedure.procName with 2700=call.stmt#  pattern assign(while, "1200/9300")  such that Uses(read, "if") with variable.varName="constant"  pattern while(variable, _)  pattern if(_, _, _)  pattern if(variable, _, _) with print.varName=read.varName  pattern while(assign, _)  such that Calls("read", procedure)  such that Next(while, read) with constant.value=constant.value  such that Calls*(_, procedure)  such that Modifies(while, variable)  such that Affects(_, stmt)  pattern if(while, _, _) with procedure.procName="read"  pattern if(assign, _, _) with procedure.procName=call.procName  pattern if(variable, _, _)  such that Modifies(call, variable) with while.stmt#=3200  such that Uses(procedure, _)  such that Next*(if, stmt)  pattern if(call, _, _)  such that Calls(procedure, procedure)  such that Follows*(while, _) with procedure.procName=print.varName with 7700=stmt.stmt# with "variable"=procedure.procName  such that Next*(_, if)  pattern if(variable, _, _)  such that Follows(if, 23) with if.stmt#=if.stmt# with call.procName="if" with 800=while.stmt#  pattern if(_, _, _) with "call"=procedure.procName  pattern if(_, _, _) with call.procName=call.procName  pattern assign(variable, "8700+3800") with variable.varName=variable.varName  pattern if(variable, _, _)  pattern if(call, _, _)  pattern while(_, _)  pattern assign(procedure, _)  pattern while(then, _) with "constant"=print.varName  pattern assign(procedure, _)  such that Next*(if, 29) with read.stmt#=if.stmt#  such that Affects(assign, 22)  such that Follows(read, _) with print.stmt#=assign.stmt# with 8300=assign.stmt#  such that Calls*(_, procedure)  such that Parent(20, if)  pattern while(variable, _)  pattern if(_, _, _)  such that Uses(if, _)  such that Affects(stmt, 6) with print.varName="while"  pattern assign(assign, _"4700+1400"_)  pattern if(variable, _, _)  pattern assign(assign, _)  such that Calls*(procedure, _)  such that Calls*(procedure, _)  pattern while(constant, _) with read.varName="print"  such that Uses(assign, variable)  pattern assign(else, "7800/6800")  pattern if(variable, _, _)  pattern if(print, _, _)  such that Parent(call, _)  pattern assign(_, _"6600+2300"_)  pattern if(variable, _, _)  pattern while(variable, _) with variable.varName="variable"  pattern while(if, _)  pattern if(_, _, _)  pattern while(variable, _)  such that Calls*(procedure, procedure)  such that Next(if, 10)  pattern while(print, _)  such that Parent*(4, stmt) with "while"=variable.varName  pattern if(variable, _, _) with procedure.procName="assign"  pattern if(then, _, _) with variable.varName="assign"  pattern assign(variable, "7800/8200")  pattern while(variable, _) with print.stmt#=3300  such that Modifies(21, variable) with 5200=while.stmt#  pattern while(_, _) with print.varName="constant"  pattern assign(variable, "9700/900") with "while"=read.varName with read.varName="variable"  pattern assign(variable, _"6000*1600"_) with 4400=print.stmt#  such that Follows*(_, call)  such that Follows(read, 26)  pattern assign(then, _)  pattern if(call, _, _)  such that Affects(stmt, 28)  pattern if(print, _, _)  pattern while(if, _) with call.stmt#=3400  such that Follows(23, if)  pattern while(procedure, _)  pattern while(_, _)  pattern assign(_, "2500/variable")  pattern if(constant, _, _) with print.varName="call"  pattern assign(_, _) with call.stmt#=7800 with procedure.procName="else" with while.stmt#=8700  pattern if(_, _, _) 

5000
71 - Query 71
variable variable; assign assign; print print; constant constant; stmt stmt; read read; procedure procedure; if if; while while; call call; 
Select <variable, assign, print, constant, stmt, read, procedure, if, while, call>  such that Calls*("assign", procedure)  such that Modifies(16, variable)  such that Next(_, call) with "else"=variable.varName  such that Modifies(read, _)  pattern assign(else, _"6600+300"_) with "read"=variable.varName  such that Calls*(procedure, "constant")  pattern if(variable, _, _)  pattern assign(then, _)  such that Parent(stmt, _)  such that Affects(assign, _) with 4800=while.stmt# with if.stmt#=5700 with 9500=print.stmt#  pattern while(if, _) with "call"=procedure.procName  pattern assign(else, "(2300*while)/5100")  pattern if(procedure, _, _)  pattern assign(_, "3500+9700")  such that Next(_, stmt)  pattern while(call, _)  such that Calls(procedure, procedure)  pattern while(_, _) with constant.value=2800  pattern if(_, _, _) with "variable"=read.varName with procedure.procName=procedure.procName with assign.stmt#=8000  pattern if(else, _, _)  pattern if(variable, _, _)  pattern if(if, _, _)  pattern if(variable, _, _) with read.varName=read.varName with print.stmt#=read.stmt#  such that Modifies(read, "while")  pattern if(_, _, _)  such that Follows*(print, 26)  such that Next(while, 5)  such that Calls*(_, procedure)  such that Affects(stmt, stmt)  pattern assign(print, "500+6400")  pattern assign(_, _"2900*2100"_) with print.stmt#=800 with variable.varName="while" with print.varName=variable.varName with "then"=call.procName with 5700=if.stmt# with 5300=read.stmt#  pattern if(while, _, _)  such that Modifies(print, _)  such that Modifies(procedure, variable)  pattern assign(_, _) with read.varName="read" with call.procName=variable.varName  such that Affects(stmt, 5)  pattern assign(variable, "2600-9000")  such that Follows*(15, print)  pattern if(then, _, _)  pattern assign(_, _"4700+5300"_) with if.stmt#=print.stmt#  such that Follows(read, 4)  such that Next*(print, _) with if.stmt#=assign.stmt#  pattern while(call, _) with if.stmt#=7500 with procedure.procName=read.varName  pattern assign(variable, _"800-4900"_)  pattern if(_, _, _)  pattern while(variable, _)  pattern assign(_, _"4800-procedure"_)  pattern if(call, _, _)  such that Affects(_, stmt) with read.stmt#=stmt.stmt#  pattern if(variable, _, _) with while.stmt#=while.stmt#  pattern while(print, _) with stmt.stmt#=3100 with call.procName=procedure.procName with while.stmt#=3600  pattern assign(print, _"print*600"_)  pattern if(variable, _, _)  pattern while(variable, _)  pattern assign(if, "5200/600")  pattern if(variable, _, _)  such that Calls*(_, procedure)  such that Uses(call, variable)  such that Next(20, read) with 100=stmt.stmt# with "constant"=procedure.procName with 1700=stmt.stmt# with "read"=variable.varName with if.stmt#=4400  such that Affects*(assign, _) with variable.varName="then"  pattern if(_, _, _) with assign.stmt#=8500  pattern if(_, _, _)  pattern if(else, _, _) with variable.varName="call" with call.procName=print.varName  pattern if(variable, _, _)  pattern while(_, _)  such that Affects(_, stmt) with print.stmt#=800  pattern assign(procedure, _) with 8900=stmt.stmt# with "variable"=variable.varName with "assign"=procedure.procName  such that Next(_, while) with "procedure"=read.varName with assign.stmt#=assign.stmt# with stmt.stmt#=while.stmt#  such that Uses(if, _)  pattern if(else, _, _)  such that Next*(call, 18)  such that Uses(print, "else")  pattern if(_, _, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern assign(_, "if-8000")  pattern if(variable, _, _) with call.stmt#=5200  such that Calls(procedure, procedure)  pattern while(variable, _) with stmt.stmt#=9100  pattern assign(then, _)  pattern assign(variable, _)  pattern while(print, _) with print.stmt#=constant.value  pattern while(variable, _)  pattern if(variable, _, _)  such that Modifies(procedure, "variable") with "read"=procedure.procName  pattern while(_, _) with variable.varName=read.varName with "read"=print.varName  pattern if(variable, _, _)  pattern assign(else, _"9000+else"_)  pattern if(_, _, _)  pattern while(variable, _)  such that Follows(call, _) with read.varName="if"  pattern assign(while, _)  pattern if(_, _, _)  pattern if(constant, _, _)  pattern if(variable, _, _)  such that Next(call, if)  such that Affects*(stmt, 15)  pattern assign(call, _)  such that Modifies(assign, variable)  pattern while(variable, _)  pattern if(if, _, _)  pattern while(_, _)  pattern assign(variable, "600/7300") with procedure.procName="constant"  such that Modifies(assign, "if")  pattern while(variable, _)  pattern assign(variable, "else/3700") with 4400=if.stmt#  such that Calls*("constant", procedure) with "while"=procedure.procName  pattern assign(variable, _"2200/5900"_)  such that Next*(assign, _)  such that Calls(procedure, procedure) with 9500=constant.value with "procedure"=print.varName  pattern assign(_, _)  pattern while(if, _)  pattern while(_, _)  pattern while(call, _)  pattern assign(variable, _)  pattern while(_, _) with read.varName="then"  pattern assign(_, "6800/8800") with assign.stmt#=1200 with "assign"=call.procName with 8200=constant.value  pattern assign(variable, _"4800+9600"_)  such that Parent*(_, stmt)  such that Parent*(while, _) with 4500=assign.stmt# with call.procName=procedure.procName  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern while(_, _) with 2800=stmt.stmt# with call.procName="assign"  pattern assign(variable, _)  pattern while(variable, _) with procedure.procName=print.varName with print.varName="assign"  pattern if(_, _, _)  such that Next*(assign, 25)  pattern if(read, _, _)  such that Next*(if, 2)  such that Calls(procedure, procedure)  pattern while(variable, _)  such that Next(if, _) with "if"=print.varName  such that Affects*(9, stmt) with 4100=print.stmt#  pattern while(_, _)  such that Parent*(call, _) with 3600=while.stmt# with 1000=if.stmt# with read.varName=variable.varName  such that Calls(procedure, "else")  such that Affects*(assign, 12) with 8100=while.stmt# with call.procName="print"  such that Calls*(_, procedure) with read.varName="assign"  pattern if(_, _, _)  such that Modifies(read, variable)  pattern while(_, _)  such that Parent(_, read) with 7900=print.stmt# with variable.varName="read"  pattern while(_, _)  such that Parent(while, _)  such that Follows*(27, if)  pattern if(variable, _, _) with call.stmt#=5200  pattern if(_, _, _) with print.stmt#=2900  pattern if(_, _, _)  pattern if(_, _, _) with call.procName=procedure.procName  pattern while(variable, _)  pattern if(if, _, _)  pattern while(_, _)  pattern if(_, _, _)  such that Calls("procedure", procedure)  pattern assign(variable, "(1500+300)*3000")  pattern if(variable, _, _)  such that Uses(while, _)  pattern if(_, _, _)  such that Follows(_, stmt)  such that Follows*(if, while)  pattern if(variable, _, _) with print.stmt#=2100  pattern assign(variable, "4300+9200")  pattern if(variable, _, _)  such that Affects(stmt, 17)  pattern while(_, _)  pattern if(while, _, _)  pattern while(variable, _) with while.stmt#=8800  pattern assign(variable, "3100/1600") with stmt.stmt#=read.stmt# with print.varName="variable"  pattern assign(else, "4100/call")  such that Calls(_, procedure)  such that Parent(while, 15)  pattern assign(_, "5300/5000")  pattern if(variable, _, _) with if.stmt#=6900 with read.varName=read.varName  pattern assign(call, _"1600*8700"_) with while.stmt#=7300 with while.stmt#=call.stmt#  pattern assign(variable, "300+6700") with variable.varName="variable"  pattern while(_, _) with 6400=assign.stmt#  pattern assign(_, _)  pattern while(assign, _) with 1900=call.stmt#  pattern while(variable, _)  pattern while(then, _)  such that Follows(if, assign) with 1800=stmt.stmt# with call.stmt#=3900  such that Affects*(stmt, _)  pattern while(call, _) with print.varName=read.varName  pattern assign(variable, "2900*while")  pattern assign(variable, _"(7600-1500)+800"_) with read.stmt#=700  pattern assign(variable, _)  pattern assign(variable, "6500+100")  such that Affects*(assign, 26)  pattern if(constant, _, _) with "call"=read.varName  pattern while(variable, _) with if.stmt#=8600  pattern if(variable, _, _)  pattern if(constant, _, _)  pattern if(_, _, _)  pattern assign(_, "5100*1800")  such that Modifies(procedure, _) with call.stmt#=5900  pattern while(variable, _)  pattern assign(_, _"assign-4100"_)  pattern assign(variable, "7900-print") with 7200=assign.stmt# with 1400=if.stmt#  such that Follows*(23, read)  such that Next*(6, call) with 7000=constant.value  pattern assign(_, _)  pattern assign(else, "900*7900")  pattern assign(variable, "6400/6600")  pattern assign(_, _) with read.stmt#=6900  pattern if(variable, _, _) with call.procName="constant"  pattern if(call, _, _)  such that Parent(13, print)  pattern if(variable, _, _)  such that Calls(procedure, procedure)  such that Parent(15, read)  pattern while(call, _)  pattern assign(call, _"(4800*3700)+1900"_) with constant.value=7200  pattern while(if, _)  such that Uses(stmt, _)  such that Calls(procedure, _)  pattern assign(variable, _"6300/8600"_)  pattern assign(variable, "7900*1800") with "then"=call.procName  pattern if(_, _, _)  pattern if(else, _, _)  pattern assign(_, _"3000/4100"_) with constant.value=print.stmt# with "constant"=read.varName with call.procName="variable"  pattern assign(assign, "7700*9600")  such that Next(stmt, if)  such that Calls("then", procedure)  pattern assign(variable, "1600*2600")  pattern assign(_, _"3100/5000"_)  pattern assign(constant, _"4600*variable"_)  pattern if(variable, _, _) with 7200=assign.stmt#  pattern while(procedure, _) with call.procName=procedure.procName  pattern if(variable, _, _)  such that Parent(while, 26) with procedure.procName="print"  pattern while(_, _)  pattern while(_, _)  pattern if(call, _, _) with call.stmt#=4900  pattern if(_, _, _)  such that Modifies(27, variable) with "while"=call.procName  such that Calls*(procedure, procedure) with 4000=stmt.stmt#  such that Parent(stmt, while)  such that Calls(_, procedure)  pattern assign(_, "5400-300") with variable.varName=call.procName  pattern while(variable, _)  such that Follows*(19, assign)  pattern if(_, _, _)  pattern if(_, _, _) with print.varName="procedure"  such that Calls(procedure, procedure)  pattern assign(read, _)  pattern while(if, _)  pattern while(else, _) with 3800=print.stmt#  pattern if(variable, _, _) with print.varName="variable" with "assign"=procedure.procName  such that Follows(assign, print) with 8800=if.stmt#  pattern assign(variable, _) with stmt.stmt#=print.stmt# with stmt.stmt#=8000  pattern if(variable, _, _)  pattern assign(read, _"6500/8800"_)  pattern assign(variable, _)  pattern if(_, _, _) with "constant"=print.varName  pattern while(_, _)  pattern assign(variable, _"read-8900"_)  such that Calls(procedure, _)  such that Calls("read", procedure)  pattern if(while, _, _)  pattern while(_, _)  pattern while(_, _)  such that Uses(stmt, "if")  such that Next*(_, if)  such that Next(1, call) with 9300=read.stmt#  such that Follows(29, print)  such that Affects(assign, _)  such that Affects*(stmt, _) with "variable"=variable.varName  pattern assign(_, "6300-9800")  pattern assign(_, _) with "assign"=print.varName  pattern if(assign, _, _)  pattern if(then, _, _)  such that Uses(20, variable)  pattern if(_, _, _) with "procedure"=procedure.procName with 5300=constant.value  pattern assign(variable, "variable/5800") with 1200=if.stmt# with while.stmt#=7700  such that Modifies(while, "read")  pattern assign(_, "(300*4800)+9500")  such that Next*(call, 1)  such that Next(_, call)  pattern assign(_, _"3300/6000"_)  pattern if(_, _, _)  such that Next*(_, while) with print.stmt#=4700  pattern if(procedure, _, _)  pattern assign(_, _"(3900*4100)+1800"_) with "print"=print.varName with read.stmt#=6500  pattern assign(procedure, _"5600/5800"_)  such that Next*(3, assign)  such that Parent(_, read)  such that Affects*(assign, 13) with 6000=constant.value with variable.varName="assign" with read.varName="if"  pattern while(variable, _)  such that Uses(while, variable)  such that Uses(assign, "assign") with if.stmt#=6800  such that Follows(27, call) with constant.value=while.stmt#  pattern while(while, _) with call.stmt#=3300  pattern assign(variable, "9800*3100")  such that Affects*(25, stmt)  pattern while(variable, _)  such that Parent*(20, call)  pattern assign(assign, _"800*3100"_)  pattern while(_, _) with "print"=variable.varName with assign.stmt#=3700  pattern assign(variable, "8100-2400")  pattern assign(_, _)  pattern if(variable, _, _) with read.varName="then" with "if"=read.varName with variable.varName=procedure.procName  pattern assign(_, "7900+while")  pattern while(print, _)  pattern while(then, _) with read.varName=procedure.procName  pattern assign(variable, _"else/3100"_) with variable.varName=call.procName  pattern while(_, _) with constant.value=7600 with read.varName="then" with 2900=assign.stmt#  such that Parent(if, 19) with 6800=read.stmt#  pattern while(variable, _)  pattern while(else, _)  such that Uses(22, variable) with print.stmt#=6900  pattern if(variable, _, _) with procedure.procName="then"  such that Calls*("procedure", procedure) with "read"=variable.varName with print.varName="variable"  such that Parent(_, stmt)  pattern if(variable, _, _)  such that Affects*(stmt, _)  pattern assign(_, _)  pattern while(variable, _)  such that Calls*("else", procedure)  such that Parent(read, while)  such that Parent(_, call)  pattern assign(_, _)  pattern if(variable, _, _)  pattern while(_, _)  such that Modifies(12, variable)  such that Uses(3, variable)  such that Calls(procedure, "while")  pattern if(_, _, _)  pattern if(read, _, _)  pattern while(variable, _)  such that Affects*(22, stmt) with "read"=procedure.procName with "print"=procedure.procName  pattern if(variable, _, _)  pattern assign(variable, _"9900+6800"_)  such that Parent*(while, _)  such that Calls*("read", procedure)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern while(variable, _)  pattern if(_, _, _)  pattern assign(variable, _"2800-2300"_) with 7700=read.stmt#  pattern while(variable, _)  such that Affects(assign, stmt)  pattern while(if, _) with stmt.stmt#=call.stmt# 

5000
72 - Query 72
variable variable; print print; assign assign; constant constant; stmt stmt; read read; procedure procedure; if if; while while; call call; 
Select <variable, print, assign, constant, stmt, read, procedure, if, while, call>  pattern if(variable, _, _)  pattern if(variable, _, _) with 2200=call.stmt#  pattern while(assign, _)  pattern if(variable, _, _) with print.stmt#=while.stmt#  such that Affects*(stmt, 7) with 9900=assign.stmt# with print.varName="constant"  pattern assign(_, _)  such that Calls(_, procedure)  pattern if(constant, _, _) with constant.value=4100  pattern assign(variable, _) with assign.stmt#=7100  pattern assign(read, _"5600*1800"_)  pattern assign(call, _"2300-400"_) with 4500=constant.value with "print"=print.varName with "read"=variable.varName with call.procName=print.varName  pattern assign(procedure, _)  such that Calls(procedure, "procedure")  pattern while(_, _) with variable.varName="read"  such that Next(_, call)  such that Follows*(if, 11) with "constant"=variable.varName  pattern while(assign, _)  such that Next*(stmt, 18)  such that Follows*(read, assign)  such that Follows(if, read) with read.varName=procedure.procName  such that Parent*(print, read) with print.varName="variable"  such that Next*(_, assign)  such that Follows(5, if)  pattern assign(variable, _)  such that Affects(stmt, _)  pattern while(_, _)  such that Follows*(call, _)  pattern while(constant, _) with call.procName="read" with "read"=variable.varName  pattern while(variable, _)  pattern while(call, _)  pattern while(variable, _)  pattern if(variable, _, _)  pattern assign(variable, "4000-100") with 6800=assign.stmt#  such that Modifies(assign, variable)  such that Follows*(call, while)  pattern while(_, _)  such that Next*(if, _)  such that Follows*(call, 7)  pattern while(variable, _) with "print"=call.procName  pattern if(_, _, _)  pattern while(_, _)  pattern while(_, _)  pattern assign(variable, _"4000/5500"_)  such that Parent*(3, read) with 7900=print.stmt#  pattern if(variable, _, _) with 2300=call.stmt# with 1400=assign.stmt#  such that Parent(assign, _) with call.stmt#=2500 with print.stmt#=9800 with 5200=if.stmt#  such that Calls(procedure, _)  pattern assign(then, "2500*8500") with print.varName=call.procName  pattern while(_, _)  pattern if(variable, _, _)  pattern while(variable, _)  pattern while(else, _)  such that Parent*(2, while)  pattern while(variable, _) with while.stmt#=assign.stmt#  pattern if(_, _, _)  pattern if(if, _, _)  pattern assign(variable, _"5100+6400"_)  such that Calls(_, procedure) with "while"=call.procName  such that Calls*("read", procedure) with procedure.procName="if"  pattern while(then, _)  pattern if(variable, _, _)  pattern assign(variable, _"(8100-100)/7800"_)  such that Uses(if, variable)  pattern if(variable, _, _) with print.varName=print.varName with if.stmt#=1100  pattern assign(_, _) with print.varName="constant"  pattern if(variable, _, _)  such that Calls*(procedure, "print")  pattern while(_, _)  pattern while(read, _)  pattern if(then, _, _) with print.varName=call.procName  pattern while(_, _)  such that Affects(assign, _)  pattern assign(variable, _) with 9400=assign.stmt#  pattern assign(variable, _"7200*3600"_)  such that Next*(stmt, while)  pattern if(constant, _, _) with print.varName="procedure"  such that Parent*(16, call)  such that Affects*(assign, _)  pattern if(_, _, _)  pattern assign(_, _"5600+7100"_) with call.procName="while" with print.stmt#=6900 with stmt.stmt#=read.stmt#  pattern assign(_, _)  such that Parent(call, call) with procedure.procName="variable" with stmt.stmt#=assign.stmt# with 9100=stmt.stmt# with print.varName="assign" with while.stmt#=read.stmt#  pattern while(if, _)  such that Next(14, assign) with constant.value=print.stmt#  pattern assign(call, _"5600*2600"_) with "read"=procedure.procName with constant.value=if.stmt#  pattern if(assign, _, _)  such that Affects(stmt, _)  pattern while(print, _)  pattern assign(variable, _)  pattern assign(_, _)  pattern assign(print, _"7800-7000"_)  pattern while(then, _)  pattern while(read, _)  pattern while(constant, _) with if.stmt#=read.stmt#  pattern while(variable, _) with 1000=constant.value  such that Parent(_, stmt)  such that Next*(if, _) with assign.stmt#=8400  pattern assign(variable, _"4000*6700"_) with "then"=call.procName with constant.value=1800  pattern while(call, _)  pattern assign(variable, _"9400/9700"_)  pattern if(constant, _, _) with if.stmt#=3500  pattern if(variable, _, _) with procedure.procName="then" with "read"=read.varName  pattern assign(variable, "400+9800") with "constant"=procedure.procName with print.stmt#=9500 with print.stmt#=5000  pattern assign(_, _"1800-2500"_)  such that Calls*(procedure, _)  pattern if(_, _, _)  such that Parent(read, _)  pattern if(read, _, _)  pattern if(_, _, _) with read.stmt#=constant.value with print.varName=procedure.procName with "else"=read.varName  pattern assign(_, _"900+8600"_)  such that Modifies(24, variable) with print.stmt#=assign.stmt# with 2700=constant.value  pattern while(variable, _) with "while"=variable.varName with variable.varName=read.varName  such that Affects(_, stmt) with read.varName="while"  such that Follows(27, stmt)  pattern while(variable, _) with call.procName=read.varName  pattern while(constant, _)  such that Parent*(assign, while)  such that Calls("while", procedure)  pattern if(_, _, _)  pattern while(variable, _) with assign.stmt#=4300  such that Calls(procedure, procedure)  pattern while(_, _)  such that Calls*(_, procedure) with print.stmt#=8100  such that Calls*("read", procedure) with print.varName=variable.varName with if.stmt#=read.stmt# with variable.varName=call.procName  pattern if(_, _, _) with call.procName="call" with "assign"=print.varName with 6100=assign.stmt#  such that Parent*(call, 22)  pattern while(variable, _)  pattern while(variable, _)  such that Parent(_, call)  such that Next(21, if) with if.stmt#=1000  pattern assign(if, _)  pattern while(variable, _)  such that Follows*(26, read)  such that Parent*(assign, read) with 1400=assign.stmt# with assign.stmt#=5100  such that Next(stmt, 2)  pattern while(assign, _)  pattern while(call, _)  pattern while(variable, _) with while.stmt#=900  such that Follows(read, 21) with procedure.procName="constant" with 9000=if.stmt#  pattern assign(assign, _"3900-6700"_)  pattern assign(else, "2900-5000") with 1400=print.stmt#  pattern assign(while, _) with print.varName=procedure.procName with "constant"=read.varName with variable.varName="assign"  pattern while(read, _)  pattern assign(_, _) with 4000=read.stmt#  such that Affects*(stmt, 13)  such that Next(stmt, 27)  such that Next*(stmt, _)  pattern assign(variable, _)  such that Parent*(stmt, _)  pattern while(if, _)  pattern while(read, _)  pattern assign(variable, _)  pattern assign(_, _"9400*9900"_) with if.stmt#=while.stmt#  pattern assign(variable, _)  pattern assign(variable, _"5500/4300"_) with read.stmt#=stmt.stmt#  pattern if(call, _, _)  pattern if(variable, _, _)  pattern while(variable, _)  pattern assign(variable, "3000/1100")  such that Follows*(_, assign) with print.varName=call.procName  pattern while(then, _) with procedure.procName=read.varName  pattern if(_, _, _)  pattern assign(print, "2900/6900")  pattern assign(print, _"7400*8800"_) with procedure.procName="while"  such that Uses(stmt, "then") with 100=assign.stmt#  such that Calls*(procedure, _)  such that Uses(16, variable)  pattern if(_, _, _)  such that Uses(assign, variable)  pattern assign(print, _)  pattern if(_, _, _)  such that Follows*(_, if)  such that Parent*(_, while)  pattern if(call, _, _)  pattern if(if, _, _)  pattern if(variable, _, _) with "assign"=call.procName  pattern assign(_, _"1400-6900"_)  pattern assign(_, _)  pattern if(variable, _, _) with "assign"=procedure.procName  such that Calls("variable", procedure)  such that Next(while, while)  such that Affects(assign, stmt)  pattern if(assign, _, _)  pattern assign(_, _)  pattern while(read, _)  pattern assign(variable, _)  such that Calls(_, procedure) with procedure.procName=procedure.procName  pattern while(variable, _)  pattern if(variable, _, _) with "variable"=call.procName  pattern if(if, _, _) with assign.stmt#=print.stmt# with print.varName=call.procName  pattern assign(call, "((700*2700)/8400)+9100")  such that Modifies(read, _)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern if(variable, _, _) with 3200=stmt.stmt#  pattern assign(variable, "300*4000")  such that Calls*(procedure, procedure)  pattern while(variable, _)  pattern if(_, _, _)  pattern assign(while, _"3300*6300"_) with variable.varName="constant" with "print"=print.varName  pattern assign(variable, _"(8900/500)-5800"_)  pattern if(_, _, _)  such that Modifies(assign, variable) with constant.value=stmt.stmt#  pattern while(variable, _)  pattern while(variable, _)  pattern assign(variable, _"7600*call"_)  such that Parent*(_, read) with read.varName="read"  such that Follows*(5, assign) with "print"=call.procName  pattern while(variable, _)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern while(_, _)  pattern assign(_, "700/1500")  pattern if(variable, _, _)  pattern assign(procedure, _"then/else"_)  such that Uses(6, variable) with "assign"=read.varName  pattern if(variable, _, _) with assign.stmt#=4300  pattern assign(_, "3800-4300") with while.stmt#=2100  pattern if(variable, _, _) with "else"=print.varName  such that Calls*(procedure, "read")  pattern while(then, _)  such that Calls(procedure, procedure)  pattern while(assign, _)  pattern while(constant, _)  such that Uses(24, variable) with constant.value=if.stmt# with print.stmt#=2900  pattern while(constant, _)  pattern while(_, _)  pattern while(_, _)  such that Follows(17, call) with 7600=while.stmt# with variable.varName="variable"  pattern if(variable, _, _) with procedure.procName="assign" with variable.varName="if"  pattern assign(else, "6800*4700")  such that Calls("procedure", procedure)  pattern assign(then, "800/5000")  pattern while(variable, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern assign(if, _)  pattern while(variable, _)  pattern assign(_, "4600+6400")  pattern while(variable, _)  pattern if(variable, _, _) with constant.value=4800  such that Next(print, _) with 9200=read.stmt# with assign.stmt#=read.stmt#  pattern if(_, _, _)  such that Next*(if, 20) with 5900=print.stmt# with read.varName=variable.varName  pattern while(_, _) with "print"=procedure.procName with print.stmt#=while.stmt# with print.stmt#=2800 with "else"=call.procName with 7300=print.stmt#  such that Parent*(stmt, 26)  pattern if(_, _, _) with 5800=stmt.stmt#  pattern if(variable, _, _)  pattern if(print, _, _)  pattern while(_, _) with print.varName=call.procName  pattern assign(_, _)  pattern if(variable, _, _)  such that Next(4, stmt) with variable.varName="procedure"  pattern if(read, _, _)  such that Modifies(procedure, variable)  such that Next*(call, 24)  pattern assign(assign, _) with call.procName="read"  pattern assign(_, _)  pattern if(if, _, _)  pattern assign(variable, "1200+print")  such that Next(if, _)  pattern while(_, _)  such that Calls*(_, procedure)  pattern if(if, _, _) with print.varName=variable.varName  such that Modifies(call, _)  such that Uses(stmt, variable)  such that Affects(assign, _)  such that Modifies(stmt, _)  pattern assign(variable, _) with constant.value=8600  such that Parent*(call, 26) with procedure.procName=print.varName  pattern if(variable, _, _) with variable.varName="procedure"  pattern if(variable, _, _) with call.stmt#=stmt.stmt# with constant.value=while.stmt# with 2300=assign.stmt# with if.stmt#=5200  pattern while(variable, _)  pattern while(variable, _) with 9300=while.stmt#  pattern if(_, _, _)  pattern if(_, _, _) with call.procName="assign" with "if"=print.varName with if.stmt#=while.stmt# with "read"=procedure.procName  such that Follows*(print, 5) with 200=assign.stmt#  pattern if(variable, _, _) with variable.varName="procedure"  such that Modifies(while, variable)  pattern assign(variable, "800*7400") with read.varName="if" with read.stmt#=read.stmt# with 5700=if.stmt#  pattern if(variable, _, _) with 8500=while.stmt# with print.varName=variable.varName  such that Calls("print", procedure)  such that Parent*(_, if)  such that Modifies(15, variable)  such that Parent*(while, assign) with if.stmt#=1800  pattern if(_, _, _)  such that Affects*(assign, assign)  pattern while(_, _)  such that Uses(assign, variable)  such that Parent(_, if) with 5500=while.stmt#  pattern assign(_, "8600*6100")  pattern assign(variable, _"6600*variable"_)  such that Calls*(procedure, "print")  pattern if(_, _, _)  pattern if(_, _, _)  such that Modifies(call, variable)  such that Affects*(_, assign)  such that Affects*(stmt, _)  such that Calls(procedure, "while")  pattern while(then, _)  pattern if(_, _, _)  such that Uses(assign, "variable")  such that Affects(stmt, _) with stmt.stmt#=7200  pattern assign(else, _) with print.varName=procedure.procName with call.stmt#=2500  pattern if(variable, _, _)  such that Follows(assign, print)  such that Next*(if, stmt)  such that Parent(10, stmt)  pattern assign(_, "9400*1700")  such that Uses(29, variable)  pattern assign(variable, "(1000-6100)-8300")  pattern if(_, _, _)  pattern assign(variable, _"8900/500"_) with "constant"=procedure.procName with print.varName="assign" with "then"=variable.varName  pattern if(print, _, _)  such that Parent(call, 11)  such that Parent*(assign, assign) with 1000=read.stmt# with "procedure"=call.procName with call.procName=variable.varName with call.procName="then"  such that Calls(procedure, "if")  such that Calls*("read", procedure)  pattern assign(assign, "print-3500")  pattern if(_, _, _) with read.varName=call.procName  pattern if(then, _, _) with call.procName=call.procName  such that Follows*(read, while)  pattern assign(else, "9500*7300")  pattern if(variable, _, _)  such that Follows*(if, while) with read.varName=variable.varName with "constant"=print.varName  pattern assign(else, _"(900+2400)+7600"_)  pattern if(call, _, _)  pattern while(read, _)  pattern while(_, _) with "if"=print.varName  pattern if(_, _, _) with 200=if.stmt#  pattern assign(variable, _)  pattern assign(_, _"5700-3800"_)  pattern if(_, _, _) with print.varName="assign" with while.stmt#=2200  such that Next*(call, _) 

5000
73 - Query 73
print print; variable variable; assign assign; constant constant; stmt stmt; read read; procedure procedure; while while; if if; call call; 
Select <print, variable, assign, constant, stmt, read, procedure, while, if, call> with print.stmt#=8400 with read.stmt#=while.stmt#  pattern if(_, _, _)  pattern if(variable, _, _) with variable.varName="if"  pattern while(_, _) with call.procName=procedure.procName  pattern if(call, _, _) with read.varName=print.varName  pattern if(_, _, _)  pattern assign(variable, _)  pattern assign(if, _"7100-9900"_)  such that Parent*(_, if) with 9500=call.stmt#  pattern while(variable, _) with call.stmt#=5800  such that Modifies(call, _)  pattern if(_, _, _)  pattern assign(_, _"3300*6600"_) with 7900=call.stmt#  pattern while(_, _)  such that Next*(read, _) with assign.stmt#=100  pattern assign(variable, _"8300+1700"_)  pattern while(_, _)  such that Calls(procedure, procedure)  pattern assign(variable, _"call*8200"_)  pattern while(variable, _) with constant.value=stmt.stmt#  such that Calls*(procedure, procedure)  pattern if(while, _, _)  pattern assign(print, _)  such that Uses(assign, _)  pattern assign(read, _"4100-1800"_)  such that Modifies(print, _)  pattern while(_, _)  such that Uses(call, variable)  such that Next*(stmt, call)  such that Affects*(stmt, stmt) with stmt.stmt#=5600  pattern assign(variable, _)  pattern if(assign, _, _) with read.stmt#=assign.stmt#  pattern if(_, _, _)  pattern if(_, _, _) with 5800=constant.value  pattern if(assign, _, _)  pattern while(_, _)  such that Affects*(stmt, stmt) with "print"=call.procName  such that Next*(_, assign)  pattern while(_, _)  pattern if(variable, _, _) with constant.value=assign.stmt#  such that Parent(while, call)  pattern if(_, _, _)  pattern while(while, _)  such that Follows*(20, print) with "variable"=call.procName  pattern while(variable, _)  pattern if(then, _, _)  pattern if(variable, _, _)  such that Follows(assign, 26)  such that Follows*(print, 1)  pattern while(call, _)  pattern assign(_, _) with if.stmt#=if.stmt#  pattern assign(call, _"(5000/2000)*700"_) with "constant"=variable.varName with constant.value=4300 with if.stmt#=200  pattern if(_, _, _)  such that Parent(_, call)  pattern assign(then, _) with "call"=print.varName with variable.varName="assign"  pattern while(else, _)  pattern if(then, _, _)  such that Next(print, 2)  pattern while(variable, _)  pattern assign(then, _)  such that Affects(stmt, stmt)  such that Follows(call, _)  such that Follows*(while, print)  pattern while(constant, _)  such that Follows(if, print)  pattern if(_, _, _)  pattern while(variable, _)  pattern while(then, _)  pattern if(variable, _, _)  pattern while(_, _)  pattern assign(_, _"(1100/400)-4700"_)  such that Modifies(while, variable) with 300=assign.stmt#  pattern assign(_, _) with call.procName="procedure"  pattern if(variable, _, _) with read.stmt#=3900 with "variable"=variable.varName  pattern while(_, _)  such that Parent*(stmt, 8) with 6800=read.stmt# with read.stmt#=print.stmt#  pattern while(_, _) with 6000=print.stmt#  such that Follows(while, assign)  such that Affects(assign, assign)  pattern if(variable, _, _)  such that Affects*(stmt, 28) with stmt.stmt#=3600 with while.stmt#=3900  such that Parent*(assign, _)  pattern while(read, _) with assign.stmt#=assign.stmt#  such that Calls(procedure, procedure)  pattern assign(procedure, _"(700-5700)-7200"_)  such that Parent*(print, while)  pattern assign(variable, _)  pattern while(variable, _)  pattern if(procedure, _, _) with "variable"=read.varName  pattern assign(constant, _) with stmt.stmt#=1300  such that Parent*(read, print) with read.varName=print.varName with 7800=call.stmt# with assign.stmt#=7100  pattern assign(_, _) with call.stmt#=print.stmt#  pattern if(call, _, _) with 6600=assign.stmt# with if.stmt#=if.stmt#  such that Follows(print, _) with constant.value=1400 with 7200=print.stmt#  such that Calls*(_, procedure) with print.varName="variable"  pattern while(_, _) with variable.varName="call"  pattern while(_, _) with 7800=constant.value  pattern while(variable, _)  pattern while(variable, _)  pattern while(variable, _)  such that Affects*(assign, assign)  such that Next*(if, _) with "constant"=read.varName with 1300=assign.stmt#  pattern assign(variable, _"3900+7700"_)  such that Parent(_, assign) with read.varName=read.varName  pattern assign(print, _)  such that Affects*(4, stmt)  pattern assign(_, _"6200/300"_)  pattern if(variable, _, _)  such that Calls("if", procedure)  such that Next(_, call) with 7300=if.stmt# with variable.varName=variable.varName  pattern while(_, _)  pattern while(read, _)  pattern if(variable, _, _) with 3900=stmt.stmt# with print.stmt#=while.stmt#  such that Parent*(print, _)  pattern while(constant, _) with print.stmt#=assign.stmt# with 2100=while.stmt#  such that Parent*(stmt, _)  pattern while(assign, _)  pattern while(variable, _) with variable.varName="constant"  pattern if(variable, _, _)  pattern assign(procedure, _"6400-9400"_) with 400=call.stmt#  such that Follows(while, assign)  such that Affects*(5, assign)  pattern assign(_, _"3100+4000"_)  pattern assign(then, _"2200/4700"_)  pattern assign(variable, "7400+2700")  such that Uses(stmt, variable)  pattern assign(read, "3000*9000")  such that Uses(12, variable)  such that Parent(3, if)  pattern while(_, _)  such that Calls*(_, procedure) with procedure.procName=procedure.procName  pattern while(if, _) with read.stmt#=call.stmt#  pattern while(variable, _)  such that Next*(stmt, _)  such that Next(assign, 2) with variable.varName=variable.varName  pattern if(read, _, _) with 6600=stmt.stmt#  pattern while(variable, _)  pattern assign(_, _)  pattern assign(if, _"constant+800"_) with 300=stmt.stmt#  pattern assign(_, _)  such that Calls*("constant", procedure)  pattern if(_, _, _) with while.stmt#=8500  such that Affects*(assign, _) with variable.varName="procedure" with call.procName=procedure.procName with if.stmt#=6500  pattern assign(variable, _"700/6100"_)  such that Modifies(stmt, _)  pattern while(variable, _)  pattern assign(_, _) with procedure.procName=variable.varName  pattern while(if, _)  pattern while(else, _) with read.stmt#=8100 with stmt.stmt#=3600 with constant.value=8300 with print.stmt#=6600  pattern if(variable, _, _) with procedure.procName=variable.varName  pattern if(call, _, _)  such that Next(stmt, assign)  pattern assign(_, _)  pattern while(constant, _) with read.varName="if" with read.stmt#=stmt.stmt#  such that Calls(procedure, _) with 1000=constant.value  such that Follows(print, 7)  such that Modifies(print, "while") with assign.stmt#=4800  such that Affects(stmt, assign)  such that Next(while, while)  such that Affects(assign, _)  pattern while(_, _)  pattern if(_, _, _) with 2100=print.stmt#  pattern while(_, _) with 9500=print.stmt#  such that Parent(stmt, call) with read.varName="while"  pattern if(variable, _, _)  such that Uses(while, _) with read.stmt#=assign.stmt#  pattern assign(variable, _"(call-6300)/100"_)  such that Follows(20, stmt) with "read"=read.varName  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern if(_, _, _)  such that Next(25, call) with constant.value=5000 with call.stmt#=1000  pattern if(_, _, _)  such that Calls*("assign", procedure) with call.stmt#=8700 with 7200=constant.value with 2800=if.stmt#  such that Parent(11, call) with constant.value=1100  such that Affects*(7, stmt)  pattern if(variable, _, _)  such that Uses(procedure, "variable")  pattern assign(read, _"8100/900"_)  such that Affects*(assign, stmt)  such that Follows*(_, while)  such that Next*(stmt, assign)  such that Uses(procedure, _)  pattern if(read, _, _) with call.procName=procedure.procName with print.stmt#=while.stmt#  such that Calls*("else", procedure)  pattern while(while, _) with print.varName=call.procName  such that Follows*(print, 27) with "constant"=variable.varName with read.stmt#=6600  pattern if(variable, _, _)  such that Parent(4, assign)  such that Parent*(_, if)  such that Uses(stmt, variable)  pattern assign(if, _)  pattern if(variable, _, _) with print.stmt#=5100  pattern if(read, _, _)  such that Follows*(while, 18)  pattern if(_, _, _)  pattern assign(variable, "8500+5100") with variable.varName=procedure.procName with read.stmt#=stmt.stmt#  pattern assign(read, "9600*3800") with read.stmt#=600  pattern while(procedure, _)  pattern while(variable, _) with while.stmt#=9600 with read.varName=variable.varName with assign.stmt#=9000  pattern assign(call, _"4400-8000"_)  such that Next(assign, _) with print.varName=variable.varName  pattern assign(if, "2500/constant")  such that Parent(12, read) with stmt.stmt#=8700 with print.stmt#=9200  pattern assign(variable, "4700+7800") with print.varName=print.varName with 5000=while.stmt# with if.stmt#=2600  such that Follows*(stmt, 5)  pattern assign(_, "7000+200") with constant.value=stmt.stmt#  such that Affects(assign, stmt) with while.stmt#=print.stmt#  pattern if(call, _, _)  such that Parent*(7, while) with print.varName="else" with 9700=if.stmt#  pattern while(_, _)  pattern while(_, _)  pattern assign(while, _"100-8500"_) with while.stmt#=600  pattern if(variable, _, _) with variable.varName=variable.varName with "procedure"=print.varName with print.stmt#=constant.value with procedure.procName=print.varName  such that Calls*("assign", procedure) with procedure.procName="if" with "constant"=read.varName  pattern while(variable, _)  pattern if(_, _, _) with call.procName=call.procName with print.varName=print.varName  pattern while(procedure, _)  such that Next*(stmt, 17)  pattern while(variable, _)  pattern assign(else, _) with 9000=while.stmt#  pattern assign(_, _)  pattern assign(if, _)  pattern assign(_, _"2400/9000"_) with "variable"=read.varName with call.stmt#=stmt.stmt#  pattern if(variable, _, _)  pattern if(if, _, _)  pattern assign(_, "1500+variable")  pattern if(constant, _, _)  pattern if(assign, _, _)  pattern while(_, _)  pattern assign(variable, _) with print.varName=print.varName with "procedure"=variable.varName  such that Affects*(25, stmt) with 9300=while.stmt# with "constant"=variable.varName  such that Calls*(_, procedure)  such that Calls*(procedure, _)  pattern if(variable, _, _)  pattern assign(variable, "variable+2900")  such that Next(17, read) with while.stmt#=7600  such that Calls*(procedure, procedure) with print.stmt#=9100  pattern while(variable, _)  such that Affects(8, stmt)  pattern while(print, _)  pattern assign(variable, _) with procedure.procName=call.procName with if.stmt#=constant.value  pattern while(_, _)  pattern if(variable, _, _) with print.varName="constant"  such that Parent(if, _) with 7900=read.stmt#  pattern assign(_, _"4800/1800"_)  pattern while(variable, _)  pattern assign(variable, _) with variable.varName=procedure.procName with call.procName=variable.varName  such that Parent*(if, 23)  pattern assign(else, "4900/2200") with call.procName=read.varName  pattern assign(_, "(5600-6600)/4500")  pattern assign(variable, _) with constant.value=9700  pattern assign(then, _)  pattern if(constant, _, _) with "print"=procedure.procName  such that Parent(assign, 8)  pattern if(_, _, _)  pattern while(_, _)  pattern if(constant, _, _) with variable.varName=read.varName  such that Calls*(procedure, _) with procedure.procName=variable.varName with variable.varName=procedure.procName with "call"=print.varName  such that Follows(print, print)  such that Calls*("read", procedure)  pattern assign(variable, "(9100/8100)+600") with variable.varName=read.varName  such that Parent*(print, 3)  such that Next*(5, if)  such that Next*(_, assign)  such that Next*(if, 20)  such that Follows*(if, assign)  pattern if(else, _, _) with 6700=constant.value  pattern assign(variable, "9800-7700") with assign.stmt#=6900 with constant.value=7200 with "while"=variable.varName with call.stmt#=3800  such that Next(call, _) with "if"=print.varName  pattern assign(else, _)  pattern while(variable, _)  pattern assign(variable, "8100+6100")  pattern assign(variable, _"3400-4200"_) with procedure.procName="call" with if.stmt#=3000  such that Calls*(_, procedure)  pattern while(while, _)  such that Affects*(17, assign)  pattern assign(_, _"8200+1000"_) with call.procName="if"  pattern assign(variable, _)  pattern while(variable, _) with call.stmt#=6200  such that Parent*(while, print)  such that Follows(12, stmt) with "constant"=procedure.procName  pattern assign(variable, _"4400*3900"_)  pattern assign(variable, "8200/3900")  pattern if(_, _, _) with 2600=stmt.stmt# with print.varName=procedure.procName  pattern while(assign, _)  pattern while(else, _) with call.procName=call.procName  pattern while(variable, _)  pattern if(assign, _, _)  such that Calls*(procedure, "else")  pattern while(_, _)  pattern if(variable, _, _) with call.procName=variable.varName with variable.varName=call.procName with variable.varName=read.varName  pattern while(variable, _) with 900=stmt.stmt#  such that Calls*(procedure, "assign") with 200=stmt.stmt#  such that Next(call, 11)  pattern assign(variable, _)  such that Affects*(_, stmt)  such that Follows(stmt, _)  pattern assign(variable, _)  pattern assign(variable, "1100+8100") with print.stmt#=6800  such that Next*(call, _) with variable.varName="read"  pattern while(then, _)  pattern assign(_, _)  such that Parent(_, stmt) with 8800=constant.value  pattern if(_, _, _) with stmt.stmt#=read.stmt# with read.stmt#=print.stmt#  pattern while(_, _)  such that Calls("else", procedure)  pattern if(_, _, _)  pattern assign(_, _"6700+7300"_) with "while"=call.procName  such that Parent(stmt, _)  pattern while(_, _)  pattern while(while, _)  such that Uses(if, variable)  pattern if(if, _, _) with print.varName=call.procName  pattern while(_, _)  such that Calls*("else", procedure) with stmt.stmt#=2800  pattern while(variable, _)  pattern assign(variable, "9100+6000")  such that Modifies(call, variable)  such that Modifies(if, variable)  such that Next(call, stmt) with 8100=if.stmt#  pattern if(variable, _, _)  pattern assign(_, "6700-6300")  pattern while(_, _)  pattern if(variable, _, _)  pattern if(variable, _, _) with read.stmt#=6500 with print.varName=variable.varName  pattern while(_, _) with variable.varName="while" with print.varName="read"  such that Uses(10, variable)  such that Parent(read, _) 

5000
74 - Query 74
variable variable; assign assign; print print; constant constant; stmt stmt; read read; procedure procedure; if if; while while; call call; 
Select <variable, assign, print, constant, stmt, read, procedure, if, while, call>  such that Modifies(6, variable)  pattern if(_, _, _) with "then"=variable.varName  pattern if(variable, _, _)  such that Modifies(assign, "print")  such that Parent*(_, print)  pattern while(print, _) with "print"=procedure.procName with "procedure"=procedure.procName  pattern assign(procedure, _"print*3500"_)  pattern while(variable, _)  such that Follows*(_, print) with 6600=read.stmt#  pattern if(then, _, _)  pattern assign(while, _)  pattern assign(variable, _) with 4400=call.stmt#  pattern if(_, _, _) with read.varName=call.procName  pattern if(_, _, _) with variable.varName=variable.varName  pattern while(_, _)  pattern while(variable, _)  such that Parent(stmt, _)  pattern if(else, _, _) with 8000=read.stmt#  such that Calls(procedure, "constant")  such that Parent*(stmt, _) with variable.varName=variable.varName  pattern assign(variable, "4000+5000")  such that Affects*(stmt, 25)  pattern assign(assign, "4100+2600")  pattern assign(else, _)  pattern while(variable, _) with variable.varName=variable.varName  such that Affects*(stmt, _)  pattern while(assign, _)  pattern if(then, _, _)  pattern while(variable, _)  pattern assign(if, _"9700-7400"_)  such that Follows*(21, print)  pattern if(then, _, _)  pattern assign(variable, _"1900*1100"_) with "assign"=read.varName  such that Follows(24, read) with "assign"=call.procName  pattern while(assign, _) with print.varName=print.varName  such that Next*(21, call)  pattern if(_, _, _) with assign.stmt#=1700  such that Parent(_, assign)  pattern while(variable, _)  pattern assign(_, _) with 9000=assign.stmt#  pattern while(print, _) with assign.stmt#=7500 with while.stmt#=call.stmt#  pattern if(_, _, _) with "constant"=call.procName  pattern while(_, _) with print.varName="constant"  pattern if(variable, _, _)  such that Affects(9, stmt)  such that Calls(procedure, procedure) with "print"=read.varName  pattern if(call, _, _)  such that Affects*(stmt, _) with procedure.procName=procedure.procName  such that Modifies(2, variable)  pattern if(_, _, _)  pattern while(constant, _)  such that Next(7, stmt) with 800=constant.value with procedure.procName=variable.varName  pattern assign(variable, _"read+8300"_)  pattern assign(read, _) with read.varName=procedure.procName  pattern if(constant, _, _) with while.stmt#=3800  such that Affects(assign, stmt) with if.stmt#=assign.stmt#  pattern while(constant, _) with procedure.procName=read.varName with call.procName=variable.varName  pattern while(_, _)  such that Follows*(6, if)  pattern assign(variable, _"8700-8600"_)  pattern assign(variable, _"5000/2200"_)  such that Parent(_, read)  pattern if(_, _, _)  pattern if(variable, _, _)  pattern if(print, _, _)  pattern assign(_, _)  such that Calls*(procedure, _)  pattern while(else, _)  pattern if(then, _, _) with call.procName="else"  pattern if(variable, _, _)  pattern while(_, _)  pattern assign(variable, _"3000*8000"_)  such that Next(_, call)  such that Next*(while, _)  pattern while(read, _)  such that Calls(procedure, "else")  such that Modifies(29, variable) with read.varName="assign"  pattern if(print, _, _)  pattern assign(_, _) with procedure.procName=call.procName with call.procName=read.varName  such that Affects*(_, assign)  pattern while(_, _)  such that Follows(call, assign) with print.varName="if"  pattern assign(variable, "assign-4100")  such that Next*(_, while)  pattern while(_, _)  pattern if(_, _, _)  such that Next*(14, while)  pattern if(variable, _, _) with constant.value=call.stmt# with if.stmt#=constant.value  such that Follows(stmt, 20)  such that Parent*(_, while)  such that Follows(while, _)  such that Affects*(stmt, 24) with variable.varName="then" with 5700=call.stmt#  such that Parent*(assign, _)  such that Next(print, _)  such that Calls("else", procedure)  pattern if(_, _, _)  pattern if(print, _, _)  pattern assign(print, _"5000*8500"_)  pattern assign(constant, "2800*9600")  such that Affects(stmt, _)  pattern while(if, _)  pattern if(if, _, _)  pattern assign(variable, _)  such that Affects*(10, stmt)  pattern while(_, _)  such that Parent*(call, 9)  pattern assign(_, _)  such that Affects(14, stmt) with procedure.procName=call.procName  such that Next*(_, stmt)  such that Calls("constant", procedure) with stmt.stmt#=5300  such that Affects*(assign, assign)  pattern if(_, _, _) with variable.varName=print.varName  pattern assign(variable, _) with print.stmt#=600  such that Next*(5, stmt)  pattern if(procedure, _, _) with print.varName="variable"  such that Uses(call, variable)  pattern while(read, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern if(_, _, _) with 100=call.stmt# with call.stmt#=constant.value with "then"=read.varName  such that Affects*(stmt, 20)  pattern while(_, _) with while.stmt#=stmt.stmt# with read.varName="while"  pattern if(_, _, _)  pattern while(procedure, _)  such that Affects(assign, 20)  pattern while(variable, _)  such that Modifies(assign, _) with call.stmt#=call.stmt# with call.procName="assign"  pattern assign(_, _"8600/2900"_) with read.stmt#=4600  pattern assign(assign, _"3700+9400"_)  such that Affects*(_, stmt) with constant.value=900  pattern assign(while, "2900/procedure") with print.stmt#=1800 with print.varName="constant" with variable.varName=read.varName  pattern assign(variable, _) with 2600=print.stmt#  such that Follows(_, stmt)  pattern if(read, _, _)  pattern while(procedure, _)  pattern if(variable, _, _)  pattern assign(else, _)  such that Modifies(read, variable)  pattern assign(_, "(call/400)+3400") with "procedure"=read.varName with print.varName="if"  pattern while(variable, _)  pattern if(_, _, _)  such that Parent*(read, read) with assign.stmt#=3800  pattern assign(_, "500-1300")  pattern if(then, _, _)  pattern if(variable, _, _) with while.stmt#=5600  pattern while(variable, _)  such that Next(20, print)  pattern while(_, _)  pattern assign(variable, _)  pattern assign(then, _"6600/7600"_)  such that Next(call, assign)  pattern assign(variable, _) with "print"=procedure.procName  pattern while(variable, _)  pattern if(_, _, _)  pattern if(_, _, _) with constant.value=1500 with "print"=procedure.procName with variable.varName=variable.varName with read.varName="else"  pattern assign(_, _) with "constant"=call.procName  such that Parent(17, assign) with stmt.stmt#=constant.value with print.varName="call" with 6700=while.stmt#  such that Next(_, if)  such that Calls(procedure, procedure)  such that Uses(if, "variable") with read.varName=read.varName  pattern while(_, _) with print.stmt#=while.stmt# with 9000=constant.value  pattern while(variable, _)  such that Parent(if, assign)  pattern if(else, _, _)  pattern if(variable, _, _)  such that Affects(stmt, _)  pattern assign(variable, _) with "read"=call.procName  pattern assign(variable, "9800-3000")  such that Parent(assign, 14)  pattern while(variable, _)  pattern assign(_, _"8000-4300"_) with variable.varName=call.procName  such that Uses(procedure, variable) with constant.value=8100  pattern while(print, _) with if.stmt#=assign.stmt#  such that Next(26, stmt) with stmt.stmt#=if.stmt#  such that Parent*(assign, 27) with print.varName="assign" with 1800=constant.value  pattern while(variable, _) with 6400=constant.value  pattern while(_, _) with print.varName=read.varName  such that Calls(_, procedure)  such that Uses(stmt, variable)  pattern while(variable, _)  such that Affects*(assign, _)  pattern if(variable, _, _) with variable.varName="assign"  such that Next*(call, stmt) with while.stmt#=if.stmt#  pattern while(_, _)  pattern assign(variable, "600/2000")  pattern assign(variable, "1200-procedure")  pattern while(variable, _) with "call"=procedure.procName  pattern assign(variable, "3500-7100")  pattern assign(print, _) with read.varName="assign" with print.varName=print.varName  pattern while(_, _)  pattern assign(_, _"1100+then"_)  pattern assign(_, _) with print.varName="print"  pattern while(call, _)  pattern while(else, _)  such that Modifies(read, "print")  pattern assign(_, _"600-7900"_)  such that Calls*(procedure, "else")  such that Calls*(_, procedure)  pattern if(variable, _, _) with 400=call.stmt# with while.stmt#=constant.value with "if"=procedure.procName  pattern assign(call, "print/6800")  such that Next(print, _) with procedure.procName=procedure.procName  such that Parent(10, print)  pattern while(_, _)  pattern if(else, _, _) with print.varName=procedure.procName  pattern while(variable, _)  pattern while(constant, _)  pattern while(assign, _) with call.procName=call.procName with "else"=read.varName  pattern while(_, _) with read.stmt#=stmt.stmt#  pattern if(while, _, _)  pattern if(variable, _, _) with call.stmt#=5100  pattern if(variable, _, _)  pattern while(_, _)  pattern if(_, _, _)  pattern while(_, _)  pattern assign(variable, "6100/3600")  pattern if(_, _, _) with variable.varName="read"  such that Next*(22, while)  such that Affects*(stmt, stmt)  pattern if(_, _, _)  pattern while(_, _) with "then"=procedure.procName with stmt.stmt#=read.stmt#  such that Follows*(stmt, 9) with 8500=if.stmt#  pattern if(variable, _, _)  pattern assign(_, "100-4500")  pattern if(variable, _, _) with variable.varName="assign"  pattern assign(variable, _)  such that Modifies(stmt, "else") with 4600=read.stmt#  such that Next*(if, 18)  pattern if(variable, _, _) with 9100=read.stmt#  pattern assign(if, _)  pattern assign(print, "9300+7700")  pattern assign(variable, _"1000/6700"_)  pattern if(_, _, _)  such that Follows(call, _)  such that Modifies(read, "else")  pattern while(print, _)  pattern while(_, _)  such that Affects(_, stmt)  such that Parent*(print, _) with 3500=if.stmt# with 7500=read.stmt#  pattern assign(_, "2900-2700") with "constant"=procedure.procName  pattern while(_, _) with while.stmt#=constant.value  such that Parent*(print, _)  such that Next(stmt, stmt)  pattern while(variable, _)  such that Affects*(27, stmt) with "else"=variable.varName  such that Calls(procedure, "print") with 8000=read.stmt# with "assign"=print.varName  such that Parent*(print, _)  such that Affects(assign, 15)  pattern assign(variable, _"6200+constant"_)  pattern while(_, _)  such that Parent*(_, call) with "variable"=read.varName with constant.value=assign.stmt#  pattern while(variable, _)  such that Next(_, call)  pattern while(variable, _)  pattern assign(_, "9000*1000")  such that Modifies(call, "constant")  pattern while(while, _) with "assign"=procedure.procName with 6700=stmt.stmt#  pattern if(_, _, _) with read.stmt#=4500  pattern assign(variable, "900-9900")  such that Next*(_, assign) with variable.varName="while" with stmt.stmt#=read.stmt# with assign.stmt#=7000  pattern if(if, _, _) with read.varName="variable"  such that Follows*(read, 29) with while.stmt#=while.stmt#  pattern if(if, _, _)  pattern assign(variable, _) with "variable"=call.procName  pattern while(_, _) with procedure.procName=read.varName  such that Affects*(assign, 18)  pattern while(variable, _)  pattern if(_, _, _)  pattern assign(variable, _"6100/7500"_)  pattern if(variable, _, _)  pattern assign(procedure, "700+5000")  pattern while(_, _) with assign.stmt#=9700  such that Affects*(23, stmt)  such that Next(assign, _) with stmt.stmt#=3300  such that Calls*(procedure, _) with assign.stmt#=7100 with 2400=constant.value with print.varName="else"  such that Affects(_, assign)  pattern assign(_, _)  pattern while(_, _)  pattern assign(then, "7200+5600")  such that Parent(_, while)  pattern if(if, _, _)  pattern while(then, _)  pattern while(variable, _)  pattern if(variable, _, _) with if.stmt#=9700  pattern assign(variable, _"3500+3000"_)  pattern while(assign, _)  pattern if(_, _, _) with 1400=call.stmt# with print.stmt#=800  pattern assign(constant, _"(4400-200)*3700"_)  pattern assign(call, _"4900*7800"_) with call.stmt#=if.stmt#  such that Modifies(procedure, _)  such that Affects*(stmt, _)  such that Follows(read, 26) with if.stmt#=7600 with 4200=constant.value with constant.value=assign.stmt#  such that Parent*(_, stmt)  pattern if(variable, _, _) with constant.value=5800 with read.stmt#=4500  pattern while(variable, _)  such that Calls(procedure, _)  pattern assign(variable, _) with variable.varName=variable.varName  such that Uses(21, variable)  such that Parent*(25, if) with variable.varName=call.procName with 3400=call.stmt# with 5400=read.stmt#  such that Parent(_, print)  such that Affects*(assign, assign)  pattern if(_, _, _)  such that Uses(assign, "then")  such that Uses(stmt, _) with "then"=print.varName with print.stmt#=read.stmt#  such that Affects(assign, stmt) with assign.stmt#=3000  pattern while(_, _)  such that Affects(2, assign)  such that Calls("then", procedure) with 4500=assign.stmt#  pattern while(call, _) with constant.value=3800  such that Next(print, if)  pattern if(print, _, _)  pattern assign(_, _"9500+4400"_) with 2500=print.stmt# with read.varName="then"  pattern while(variable, _)  pattern while(then, _)  such that Next(read, 6) with if.stmt#=read.stmt#  such that Affects*(_, stmt)  pattern assign(_, "constant*3200")  such that Parent*(if, call) with if.stmt#=print.stmt#  such that Affects(20, assign)  such that Calls(_, procedure)  pattern if(variable, _, _)  such that Calls*("print", procedure)  such that Follows*(if, _)  pattern while(variable, _)  such that Affects(_, stmt)  pattern if(if, _, _) with stmt.stmt#=400 with 5200=stmt.stmt#  such that Affects(stmt, _)  pattern while(variable, _) with constant.value=4500  pattern if(print, _, _) with "read"=call.procName with assign.stmt#=print.stmt# with read.stmt#=if.stmt#  pattern if(_, _, _)  pattern if(if, _, _) with print.stmt#=7800 with call.procName=variable.varName  pattern if(else, _, _)  pattern assign(_, _"600/100"_)  such that Parent(if, 7)  pattern assign(print, _"6500*4200"_)  pattern while(_, _) with constant.value=7200  pattern while(_, _)  such that Calls*(_, procedure) with while.stmt#=3200  such that Calls(procedure, "procedure")  pattern if(call, _, _)  such that Calls*(procedure, "variable")  pattern if(variable, _, _)  pattern if(print, _, _) 

5000
75 - Query 75
assign assign; variable variable; constant constant; print print; stmt stmt; read read; procedure procedure; if if; while while; call call; 
Select <assign, variable, constant, print, stmt, read, procedure, if, while, call>  pattern if(_, _, _)  pattern while(constant, _)  such that Affects*(stmt, _) with call.stmt#=4800  such that Uses(assign, variable) with stmt.stmt#=assign.stmt#  pattern assign(constant, "2300+5800") with if.stmt#=call.stmt# with variable.varName=variable.varName with read.varName=procedure.procName with 2800=call.stmt#  pattern assign(_, "8100+300")  such that Affects(_, assign)  pattern assign(variable, "7000*4400")  pattern while(variable, _) with 2400=constant.value with "variable"=print.varName  pattern assign(variable, _"1900-8000"_)  pattern assign(call, _)  pattern if(variable, _, _) with "while"=print.varName with procedure.procName=read.varName with "else"=print.varName  pattern while(else, _)  pattern if(_, _, _) with "call"=variable.varName with procedure.procName=procedure.procName  such that Next(3, while)  such that Calls*(procedure, "call")  pattern while(_, _)  pattern if(variable, _, _)  such that Follows*(14, while) with 8800=if.stmt#  such that Follows(_, call)  pattern while(_, _) with 7600=read.stmt#  such that Parent*(read, assign)  such that Parent(print, 1)  such that Follows*(_, read)  such that Follows(read, _)  pattern while(_, _) with print.stmt#=while.stmt# with read.stmt#=1100  pattern while(_, _) with constant.value=5000  pattern if(_, _, _)  pattern if(variable, _, _)  such that Uses(8, variable) with read.stmt#=7700  such that Next(if, _)  pattern if(variable, _, _)  such that Follows(11, while)  pattern while(_, _)  such that Affects*(stmt, stmt)  pattern assign(read, _)  such that Follows(print, 22)  such that Follows*(18, stmt)  pattern while(while, _) with print.stmt#=8600  such that Calls(procedure, procedure)  pattern if(else, _, _)  pattern if(variable, _, _) with "while"=call.procName with 4200=constant.value  pattern if(_, _, _)  such that Next*(stmt, _)  such that Affects(stmt, 8)  such that Parent(print, _)  such that Modifies(procedure, variable) with while.stmt#=900  such that Follows(_, assign) with "call"=call.procName with "print"=print.varName with call.procName=call.procName  such that Calls*(procedure, "read")  pattern if(while, _, _)  pattern assign(_, _)  pattern while(_, _)  pattern while(assign, _)  such that Follows*(14, if) with constant.value=if.stmt#  pattern assign(variable, _) with if.stmt#=constant.value  pattern assign(variable, _) with "then"=procedure.procName  pattern assign(_, _"6800-200"_) with assign.stmt#=stmt.stmt#  such that Calls*(procedure, procedure) with stmt.stmt#=if.stmt# with 7000=while.stmt# with call.stmt#=print.stmt#  such that Next*(read, while)  pattern assign(variable, "2300*4700")  pattern if(variable, _, _)  pattern assign(variable, _"6800-1600"_) with "read"=procedure.procName  pattern if(_, _, _)  pattern assign(_, _) with "constant"=call.procName with print.varName="else"  such that Follows(stmt, 23) with procedure.procName=variable.varName  pattern assign(variable, _"2700+6800"_)  such that Calls(procedure, "variable") with "assign"=procedure.procName  pattern assign(_, _)  such that Next*(print, read) with read.varName="call"  pattern if(_, _, _)  such that Next(_, assign)  pattern assign(else, _) with assign.stmt#=constant.value  such that Modifies(if, _)  pattern assign(variable, _"4200-7500"_)  pattern assign(variable, _"7900/7600"_)  pattern while(_, _) with read.stmt#=8400  pattern if(read, _, _)  such that Calls(procedure, "then") with "assign"=print.varName  pattern while(variable, _)  pattern while(variable, _)  pattern assign(if, "else/3700")  pattern assign(variable, _)  such that Uses(call, _)  such that Uses(stmt, "if")  such that Parent(25, read)  such that Next(_, print) with 7600=read.stmt# with call.stmt#=7900 with if.stmt#=8300  such that Follows*(_, assign) with print.stmt#=call.stmt#  such that Affects*(5, assign)  pattern while(_, _)  pattern while(variable, _)  such that Parent(17, call)  pattern if(variable, _, _)  pattern assign(variable, _"4200-6400"_)  such that Calls*(_, procedure) with procedure.procName="then"  pattern while(variable, _) with print.varName=call.procName with while.stmt#=2700 with procedure.procName=read.varName  pattern while(variable, _)  such that Calls*(procedure, "if")  such that Modifies(7, variable)  pattern while(print, _)  pattern assign(then, _"(5200+4800)/300"_)  pattern if(variable, _, _)  pattern while(_, _) with call.procName="constant"  pattern while(then, _)  pattern assign(variable, _) with while.stmt#=read.stmt#  pattern if(_, _, _)  such that Calls*(procedure, "assign") with "assign"=read.varName  pattern while(_, _) with read.stmt#=2300 with while.stmt#=while.stmt#  such that Parent*(_, assign) with 2800=constant.value with if.stmt#=print.stmt#  pattern if(_, _, _)  pattern while(variable, _)  pattern if(_, _, _) with "print"=procedure.procName with while.stmt#=7600 with if.stmt#=stmt.stmt#  such that Calls(procedure, "while") with read.stmt#=call.stmt# with "print"=procedure.procName with procedure.procName=print.varName  pattern while(_, _)  pattern assign(_, _"5100*7400"_) with variable.varName="if"  such that Calls(procedure, _) with 200=assign.stmt#  pattern assign(_, _)  pattern while(variable, _) with while.stmt#=if.stmt#  pattern if(_, _, _)  pattern if(variable, _, _)  such that Next*(assign, _)  such that Modifies(assign, _)  pattern assign(_, _)  such that Affects*(_, stmt)  pattern while(_, _) with "procedure"=variable.varName with constant.value=5400  such that Calls*(procedure, "then")  such that Affects*(assign, stmt)  such that Follows*(print, 15) with "print"=procedure.procName with assign.stmt#=constant.value  such that Affects*(_, stmt)  such that Uses(assign, "if") with 2100=while.stmt# with "variable"=variable.varName  pattern assign(constant, _"8400+5500"_) with 5100=while.stmt#  pattern while(_, _) with call.procName=variable.varName  pattern if(while, _, _) with procedure.procName="assign"  such that Parent(20, while)  pattern if(_, _, _)  pattern while(variable, _)  such that Follows(read, while)  such that Modifies(while, _)  such that Follows*(18, if)  pattern while(read, _)  pattern while(procedure, _)  such that Next*(stmt, _)  pattern while(_, _)  such that Parent(call, call) with "call"=procedure.procName  such that Calls(procedure, procedure)  pattern if(print, _, _) with call.stmt#=8500  such that Calls*(procedure, "read") with 5200=while.stmt# with read.varName=call.procName  pattern while(else, _)  pattern assign(constant, "9900-4600")  such that Parent(stmt, stmt)  such that Parent*(stmt, 21)  such that Calls(procedure, "procedure") with variable.varName=call.procName with 5900=while.stmt#  such that Next(if, 5)  pattern assign(print, _) with print.stmt#=8600 with "procedure"=variable.varName  pattern assign(variable, _"5900-5200"_) with call.stmt#=9000 with "variable"=print.varName  pattern if(variable, _, _)  such that Parent(call, _)  such that Parent(assign, if) with 4300=if.stmt#  pattern if(_, _, _)  such that Modifies(call, _) with 3800=call.stmt#  such that Calls*(procedure, "if")  such that Parent*(_, while)  pattern while(_, _)  pattern assign(if, _"8000*200"_)  such that Parent*(print, _) with constant.value=6400  pattern if(_, _, _) with procedure.procName=variable.varName with if.stmt#=if.stmt# with procedure.procName=variable.varName  such that Uses(assign, _)  pattern if(while, _, _)  pattern while(_, _)  pattern assign(variable, _"9000/4200"_) with 1100=read.stmt#  pattern assign(_, _"9600-read"_) with assign.stmt#=2200  pattern assign(_, "1000*1500")  pattern while(_, _) with stmt.stmt#=call.stmt#  pattern assign(_, _)  such that Calls("variable", procedure)  such that Uses(while, _)  such that Affects*(_, stmt)  pattern while(_, _)  pattern while(read, _)  pattern assign(variable, _) with 9100=read.stmt# with 9200=print.stmt# with call.procName="if"  pattern while(variable, _)  pattern if(variable, _, _)  pattern while(_, _)  pattern if(variable, _, _)  pattern if(_, _, _) with read.varName="while"  pattern assign(variable, "7800+5200")  pattern if(variable, _, _)  such that Affects*(stmt, 3)  pattern while(variable, _)  pattern if(then, _, _) with 5500=call.stmt#  pattern while(_, _)  pattern while(_, _)  pattern assign(variable, _"6200-100"_)  such that Uses(assign, "while")  such that Affects(assign, 21)  such that Follows(27, stmt)  pattern assign(_, _"8700/while"_) with print.stmt#=stmt.stmt# with "if"=call.procName  pattern if(print, _, _)  pattern while(while, _)  pattern assign(variable, "3600/else")  such that Affects(22, stmt)  pattern if(variable, _, _)  pattern while(variable, _)  pattern while(if, _)  such that Follows*(3, read)  pattern while(variable, _) with read.varName=print.varName  pattern if(if, _, _)  pattern while(then, _) with procedure.procName="if"  pattern assign(variable, _"900+if"_)  pattern assign(variable, "5200-3600")  such that Follows(stmt, 4)  pattern if(variable, _, _)  pattern assign(then, _"9300-9500"_) with "variable"=print.varName  pattern assign(_, "3000-9800")  pattern if(_, _, _)  pattern while(while, _) with constant.value=9300  such that Modifies(print, "while") with print.varName=variable.varName  such that Modifies(13, variable)  such that Modifies(21, variable)  pattern if(_, _, _)  such that Next*(22, call)  such that Follows*(7, while)  such that Follows(17, if)  pattern assign(_, _)  such that Next(_, assign) with if.stmt#=8700  such that Next(print, stmt)  pattern if(variable, _, _)  such that Affects(stmt, assign)  pattern if(variable, _, _)  pattern while(assign, _) with 8500=assign.stmt#  such that Affects*(_, stmt) with 5300=if.stmt#  such that Parent*(if, _)  pattern while(variable, _)  pattern assign(_, _"9600*3400"_) with stmt.stmt#=8300 with while.stmt#=7300  pattern assign(call, _"2500+9600"_)  such that Uses(23, variable)  such that Modifies(16, variable)  such that Next(while, _)  pattern if(assign, _, _)  pattern assign(while, _)  such that Uses(22, variable)  pattern assign(constant, _)  such that Follows*(28, stmt) with while.stmt#=8500  pattern assign(variable, _"6200-7500"_)  pattern assign(_, _"(3400-3700)+7400"_)  pattern if(_, _, _)  such that Affects(stmt, stmt) with while.stmt#=call.stmt#  pattern while(variable, _)  such that Follows*(while, while) with 4500=print.stmt# with "constant"=print.varName  pattern while(_, _)  such that Affects*(_, assign)  pattern assign(constant, "1500*7000") with call.procName=read.varName  such that Follows*(call, _)  pattern assign(variable, _)  pattern while(variable, _) with stmt.stmt#=4600 with print.varName="assign" with print.varName=print.varName  pattern while(variable, _) with call.procName=procedure.procName  pattern if(variable, _, _)  pattern assign(then, "7500-2300")  pattern while(assign, _)  pattern while(then, _)  pattern while(_, _) with call.procName=print.varName with read.stmt#=3000  such that Modifies(call, _) with call.procName=procedure.procName with constant.value=6400 with 4900=while.stmt#  such that Calls*(procedure, _)  pattern if(then, _, _)  pattern while(constant, _)  pattern while(_, _)  pattern assign(assign, _)  pattern while(variable, _) with 7500=call.stmt# with stmt.stmt#=3900 with print.varName="variable" with stmt.stmt#=if.stmt#  such that Calls(procedure, procedure) with if.stmt#=900  pattern while(_, _) with "print"=call.procName with stmt.stmt#=3800  pattern while(assign, _)  pattern while(_, _) with print.varName=print.varName  such that Parent*(read, 28) with call.procName="call" with while.stmt#=9200 with stmt.stmt#=6700  pattern while(variable, _)  such that Affects(assign, 12)  such that Calls(_, procedure)  pattern while(_, _)  such that Affects*(assign, _)  pattern if(_, _, _)  pattern assign(_, _)  such that Calls*(procedure, _) with "if"=variable.varName  such that Affects(stmt, _)  pattern while(while, _) with call.stmt#=stmt.stmt# with assign.stmt#=400  pattern assign(print, "7900+1900") with procedure.procName="assign"  such that Follows(while, read)  pattern if(variable, _, _)  pattern assign(variable, _"print-7000"_) with 2800=print.stmt#  pattern assign(variable, _) with call.stmt#=print.stmt#  pattern while(variable, _) with read.stmt#=assign.stmt#  pattern assign(_, _) with 5000=constant.value with "else"=call.procName with 4000=while.stmt#  pattern assign(then, _"1600+6600"_)  such that Uses(procedure, "print")  such that Uses(if, _)  such that Modifies(17, variable) with "variable"=call.procName  pattern assign(variable, _) with print.varName=read.varName  pattern assign(_, _"3000+2300"_)  such that Next*(stmt, call) with call.procName=print.varName  such that Follows*(stmt, 22)  pattern while(_, _)  pattern assign(_, _"9500+5700"_)  such that Next*(1, read)  such that Uses(27, variable) with assign.stmt#=6300  pattern while(variable, _)  pattern while(read, _)  pattern while(print, _)  such that Next(if, read)  such that Calls(procedure, procedure)  pattern while(variable, _)  such that Calls(procedure, "assign")  pattern while(variable, _)  pattern if(variable, _, _)  pattern while(read, _)  such that Affects(27, assign) with read.varName="assign"  such that Next(print, _) with stmt.stmt#=while.stmt#  pattern assign(while, _"4100+4500"_)  pattern assign(_, "700+print")  such that Follows(call, if)  pattern assign(variable, "5200*4300") with stmt.stmt#=assign.stmt#  pattern assign(call, _) with print.stmt#=2300 with 2000=read.stmt#  pattern while(variable, _)  such that Calls("variable", procedure) with procedure.procName=call.procName  pattern assign(constant, _"4900+5500"_)  pattern assign(procedure, _"6100/6300"_) with procedure.procName="then"  pattern while(_, _)  pattern assign(while, "6200+7900")  such that Uses(8, variable)  pattern if(_, _, _) with while.stmt#=call.stmt#  pattern while(variable, _)  pattern while(variable, _)  pattern while(_, _) with "assign"=print.varName with 9000=call.stmt#  pattern if(_, _, _)  such that Parent*(stmt, _)  pattern if(_, _, _)  pattern while(variable, _)  pattern if(_, _, _) with while.stmt#=while.stmt# with 8900=print.stmt#  pattern if(_, _, _)  such that Follows*(stmt, 6) with 2200=if.stmt#  pattern while(_, _) 

5000
76 - Query 76
assign assign; print print; variable variable; constant constant; stmt stmt; read read; procedure procedure; if if; while while; call call; 
Select <assign, print, variable, constant, stmt, read, procedure, if, while, call> with read.stmt#=400 with 6800=print.stmt#  such that Follows*(call, 1)  pattern assign(_, _"6100+9800"_)  pattern if(variable, _, _) with procedure.procName=print.varName  pattern assign(variable, _) with if.stmt#=constant.value with procedure.procName="while"  pattern if(variable, _, _)  such that Next*(if, call)  such that Next(6, assign) with variable.varName="print"  such that Parent*(stmt, _)  pattern if(variable, _, _)  pattern while(variable, _)  pattern if(_, _, _)  pattern if(read, _, _) with 4300=read.stmt# with print.stmt#=if.stmt# with variable.varName=print.varName  pattern assign(read, _)  pattern if(variable, _, _)  pattern while(_, _)  pattern while(variable, _)  pattern if(print, _, _) with variable.varName="assign"  pattern while(while, _)  pattern while(variable, _) with stmt.stmt#=assign.stmt# with if.stmt#=read.stmt# with "then"=procedure.procName  such that Uses(27, variable) with print.varName="if"  such that Parent(if, 16)  pattern if(else, _, _) with read.stmt#=6200  pattern while(constant, _)  pattern while(call, _) with "read"=variable.varName with procedure.procName="if" with call.stmt#=constant.value  pattern if(while, _, _)  pattern assign(_, "(3600/200)+5900")  pattern assign(variable, _)  pattern assign(_, _"7600+5800"_) with read.stmt#=read.stmt#  such that Next(read, _) with 3400=while.stmt# with 3500=if.stmt#  such that Uses(while, _)  such that Follows(19, stmt)  pattern while(_, _) with assign.stmt#=4600  pattern assign(_, _"8300+3200"_) with "assign"=call.procName  such that Modifies(call, _)  such that Parent(stmt, _)  pattern if(constant, _, _)  such that Uses(14, variable)  pattern if(_, _, _) with 6000=while.stmt# with procedure.procName=read.varName  such that Parent*(_, read)  pattern while(_, _)  pattern assign(_, "(1000/else)*7900") with 4500=print.stmt#  pattern while(variable, _) with 7200=call.stmt#  such that Parent(print, 15)  such that Follows(assign, _)  pattern assign(variable, "8700/4600")  pattern while(_, _)  pattern assign(constant, _"7200/read"_)  pattern assign(variable, "600-7400")  pattern assign(_, _"4500*5200"_)  pattern assign(procedure, "1000-1400")  pattern if(variable, _, _)  such that Calls*(procedure, procedure)  pattern if(_, _, _) with procedure.procName=read.varName with stmt.stmt#=7100  pattern assign(if, _)  pattern while(variable, _)  pattern if(variable, _, _)  such that Follows(while, _)  pattern while(constant, _)  pattern if(call, _, _)  such that Modifies(assign, variable)  such that Parent(assign, call)  pattern if(variable, _, _) with read.stmt#=call.stmt# with 2400=read.stmt#  pattern assign(read, _)  such that Follows(22, if)  such that Affects(assign, _)  such that Uses(print, variable) with 4200=read.stmt#  such that Uses(procedure, "procedure")  pattern while(variable, _) with while.stmt#=call.stmt#  pattern assign(variable, _"variable-7900"_) with call.stmt#=call.stmt# with "then"=variable.varName with constant.value=500 with procedure.procName=procedure.procName with print.stmt#=6900  pattern if(_, _, _)  such that Next*(1, if)  pattern if(read, _, _) with stmt.stmt#=constant.value with stmt.stmt#=while.stmt#  pattern assign(variable, _"600*7000"_)  pattern while(print, _)  pattern while(variable, _)  such that Uses(stmt, _)  such that Uses(19, variable) with variable.varName=print.varName  such that Follows*(_, while)  pattern if(variable, _, _)  pattern if(if, _, _)  pattern while(variable, _) with read.varName="if"  such that Next*(stmt, 26)  pattern if(_, _, _)  pattern if(_, _, _)  such that Uses(stmt, _) with call.stmt#=print.stmt#  pattern while(variable, _)  pattern assign(if, "print-6000")  pattern if(_, _, _)  pattern if(_, _, _)  such that Follows(assign, print)  pattern while(variable, _)  such that Calls(procedure, "if") with read.stmt#=7700  pattern assign(if, "constant-8000")  pattern assign(print, _"4000+8500"_)  such that Follows*(assign, _) with call.procName="else"  pattern assign(variable, _"3100*6700"_)  such that Modifies(15, variable) with if.stmt#=9400  pattern if(variable, _, _)  pattern assign(variable, _)  pattern if(_, _, _)  such that Calls(_, procedure) with 9300=while.stmt#  such that Uses(while, "constant") with print.varName=read.varName  pattern while(variable, _)  pattern assign(variable, _) with read.stmt#=call.stmt#  pattern if(while, _, _) with print.varName=variable.varName with "constant"=procedure.procName  such that Modifies(stmt, variable) with constant.value=while.stmt# with if.stmt#=call.stmt#  pattern assign(_, "6600*procedure")  pattern while(_, _)  pattern while(_, _)  pattern while(_, _)  such that Uses(while, "print")  such that Follows(while, _)  such that Follows(20, read)  pattern if(while, _, _)  pattern assign(constant, _"4600*4700"_)  such that Uses(procedure, _)  pattern assign(_, _)  pattern assign(then, _)  such that Modifies(procedure, variable)  pattern while(procedure, _) with read.stmt#=stmt.stmt# with procedure.procName=print.varName  pattern assign(variable, _)  pattern assign(print, "2300+200")  pattern assign(_, _"4400/call"_)  such that Next*(while, 14)  pattern if(variable, _, _) with call.stmt#=while.stmt#  pattern while(variable, _)  such that Parent(_, read) with variable.varName="read"  pattern while(_, _) with print.varName=read.varName  pattern while(_, _)  pattern if(_, _, _)  such that Modifies(print, variable)  pattern assign(_, _) with while.stmt#=4400  pattern while(_, _)  pattern if(variable, _, _) with 3300=stmt.stmt#  such that Uses(call, _)  pattern while(_, _)  pattern assign(variable, _)  such that Next*(assign, 28) with "procedure"=call.procName with "if"=print.varName  such that Calls*("procedure", procedure)  such that Affects*(assign, stmt)  pattern while(variable, _)  such that Calls*(procedure, procedure)  pattern assign(_, _)  pattern assign(_, "3900/4200")  such that Next(read, _)  pattern while(then, _)  pattern assign(variable, "(9900*6000)*print")  such that Modifies(8, variable)  such that Parent(if, call)  pattern assign(else, _)  such that Parent(while, while)  such that Parent*(28, while)  pattern while(_, _)  such that Follows(while, _)  pattern if(constant, _, _)  such that Affects*(assign, _) with 3300=stmt.stmt#  such that Modifies(stmt, "procedure")  such that Follows*(stmt, 9)  pattern assign(print, _)  such that Affects(_, assign)  such that Next*(call, _) with stmt.stmt#=3000  such that Calls*(procedure, procedure)  such that Affects(stmt, stmt)  pattern while(variable, _)  pattern assign(_, _)  such that Follows(assign, if)  pattern if(_, _, _)  pattern while(variable, _)  pattern if(_, _, _) with variable.varName=read.varName  such that Next*(_, while)  pattern if(_, _, _)  pattern assign(_, _)  such that Modifies(call, _) with read.varName=read.varName with print.varName="procedure"  pattern while(assign, _)  pattern if(assign, _, _) with procedure.procName=read.varName  pattern while(else, _)  pattern assign(call, _"2400/2800"_)  pattern assign(variable, _)  such that Uses(if, _)  pattern while(variable, _)  pattern while(_, _) with print.varName=call.procName with while.stmt#=call.stmt# with "assign"=read.varName  such that Next(while, call) with read.stmt#=4800  pattern if(_, _, _)  pattern if(variable, _, _) with variable.varName=read.varName  pattern if(_, _, _)  pattern if(_, _, _)  such that Parent(25, assign) with stmt.stmt#=print.stmt#  such that Parent*(if, _)  such that Modifies(29, variable)  pattern if(_, _, _)  pattern if(_, _, _)  pattern while(constant, _) with 1400=while.stmt#  pattern assign(variable, "8200+8500")  such that Calls*("constant", procedure)  such that Parent*(11, stmt)  pattern assign(else, "3600/3700")  pattern while(variable, _)  pattern assign(variable, "4500/8000") with call.stmt#=7400  such that Parent*(_, read)  pattern if(_, _, _)  such that Uses(15, variable)  such that Follows(stmt, 6)  pattern if(_, _, _)  pattern if(variable, _, _) with print.varName=call.procName with 6500=while.stmt# with "constant"=read.varName  pattern assign(_, "9300/700")  such that Next(read, _)  such that Next*(27, read) with constant.value=6100  pattern assign(variable, "5900*4800") with "call"=variable.varName  pattern while(variable, _)  such that Parent*(29, call)  pattern assign(_, _"4000/300"_)  pattern if(_, _, _) with 900=assign.stmt#  pattern while(variable, _) with 200=call.stmt#  pattern assign(_, "variable*6000") with procedure.procName="assign"  pattern assign(variable, _)  pattern assign(variable, "700+else")  such that Follows(while, _)  such that Parent*(if, _) with print.varName=procedure.procName  such that Calls*("procedure", procedure)  pattern if(variable, _, _) with call.stmt#=9700  pattern while(if, _)  such that Affects(_, assign)  such that Follows(stmt, 27)  pattern assign(variable, _)  such that Next*(stmt, 18)  such that Follows(print, 4)  pattern while(_, _)  pattern assign(_, "400+6000") with 8700=stmt.stmt# with print.stmt#=4600  pattern assign(assign, _"5400+700"_)  pattern assign(variable, _"7600+6900"_) with stmt.stmt#=4400  pattern if(variable, _, _)  pattern while(read, _) with assign.stmt#=print.stmt#  such that Modifies(while, variable)  pattern while(_, _)  such that Uses(procedure, _) with read.stmt#=5800 with print.varName="print"  pattern if(_, _, _)  such that Next*(4, assign) with read.stmt#=if.stmt# with print.varName=variable.varName  such that Next*(3, call)  pattern if(assign, _, _) with "print"=variable.varName  such that Uses(call, variable) with while.stmt#=9000  such that Calls*(procedure, procedure)  such that Calls*(procedure, procedure) with 3800=call.stmt#  pattern while(variable, _)  pattern assign(variable, _"(7800-5900)*900"_)  pattern if(call, _, _) with 8200=constant.value with "then"=print.varName  such that Modifies(call, variable)  such that Uses(procedure, variable)  pattern if(constant, _, _)  pattern if(else, _, _)  pattern if(call, _, _)  pattern while(_, _) with "else"=procedure.procName  such that Parent(stmt, _) with 700=constant.value  such that Affects*(_, assign)  pattern if(variable, _, _)  pattern while(_, _)  such that Uses(if, "print")  such that Follows*(if, _) with print.stmt#=7400  pattern assign(_, "2400/300")  such that Affects(stmt, stmt)  pattern while(constant, _)  pattern assign(_, _"8400*4400"_)  pattern while(_, _)  pattern while(_, _)  pattern assign(variable, _)  such that Modifies(stmt, "procedure")  pattern assign(while, _) with "procedure"=call.procName  such that Affects(stmt, stmt) with read.stmt#=5200  pattern while(_, _)  pattern if(_, _, _) with 7600=assign.stmt#  pattern while(constant, _)  such that Next*(26, assign) with read.varName=read.varName  pattern assign(_, _"4900+5800"_) with "then"=variable.varName  such that Uses(if, variable)  pattern assign(variable, _)  pattern if(variable, _, _)  pattern if(_, _, _) with 600=if.stmt#  pattern if(_, _, _)  pattern while(_, _)  such that Calls*(_, procedure)  pattern assign(variable, "6900/9400") with variable.varName="else" with 5900=stmt.stmt#  such that Next*(assign, 1) with procedure.procName=read.varName  such that Parent*(_, print)  such that Follows(25, while) with 7900=call.stmt# with 700=if.stmt#  pattern if(variable, _, _) with variable.varName="then"  such that Follows(while, assign)  pattern if(variable, _, _)  such that Follows(14, assign) with stmt.stmt#=if.stmt# with "then"=read.varName  such that Calls*(procedure, procedure) with while.stmt#=6700 with stmt.stmt#=7200  pattern assign(call, _) with 1900=read.stmt#  pattern assign(_, "4600*8700")  pattern while(constant, _)  pattern while(_, _) with variable.varName="variable"  pattern assign(procedure, "8900*5500")  such that Calls*(procedure, _)  pattern while(call, _)  pattern if(variable, _, _)  pattern if(variable, _, _) with variable.varName=print.varName  such that Next*(print, _)  such that Modifies(11, variable) with print.varName="procedure"  such that Next(stmt, 10)  such that Affects(_, assign) with variable.varName=procedure.procName with while.stmt#=while.stmt#  pattern if(_, _, _) with call.stmt#=while.stmt# with 7000=constant.value with read.varName=procedure.procName with call.stmt#=9500 with call.stmt#=5800  pattern while(variable, _)  pattern if(variable, _, _) with "variable"=variable.varName  such that Affects(assign, stmt) with assign.stmt#=9400  such that Affects(assign, _)  such that Next(_, call) with 8500=print.stmt#  pattern assign(_, _)  pattern assign(variable, _) with procedure.procName=call.procName  such that Modifies(5, variable) with variable.varName="call"  pattern if(_, _, _) with "print"=procedure.procName  pattern while(_, _) with call.procName="then"  pattern assign(variable, _"3300-700"_)  pattern if(while, _, _)  such that Uses(print, _)  such that Parent*(if, 8)  pattern assign(variable, _"(700*8900)*6700"_) with read.varName=read.varName  such that Modifies(assign, "variable") with print.stmt#=5000  pattern if(variable, _, _)  pattern if(call, _, _)  pattern if(else, _, _)  pattern if(_, _, _) with while.stmt#=assign.stmt# with "read"=call.procName  pattern while(variable, _) with variable.varName="procedure" with print.stmt#=7100  pattern if(variable, _, _)  pattern if(variable, _, _) with 4700=assign.stmt# with read.varName=read.varName  such that Uses(call, variable) with 3500=print.stmt#  pattern if(_, _, _) with print.stmt#=constant.value  pattern assign(variable, "9000-1400") with call.procName=procedure.procName  pattern while(_, _)  pattern while(variable, _)  such that Next(while, _)  such that Calls*(procedure, procedure)  such that Next(stmt, 21) with "then"=procedure.procName with 100=while.stmt#  such that Calls*(procedure, procedure)  pattern while(_, _)  pattern if(read, _, _)  pattern if(_, _, _) with procedure.procName="constant"  pattern if(variable, _, _)  pattern while(print, _) with while.stmt#=3900  pattern assign(while, _"procedure/600"_)  pattern if(_, _, _)  such that Affects*(stmt, _)  such that Next(call, print)  pattern while(if, _)  pattern assign(_, "4400/6000")  pattern while(_, _)  pattern while(procedure, _)  pattern assign(variable, _) with "read"=call.procName 

5000
77 - Query 77
variable variable; print print; assign assign; constant constant; stmt stmt; read read; procedure procedure; if if; while while; call call; 
Select <variable, print, assign, constant, stmt, read, procedure, if, while, call>  such that Parent*(_, if)  pattern if(variable, _, _) with "constant"=read.varName with procedure.procName=read.varName  such that Calls("constant", procedure)  pattern if(variable, _, _)  such that Uses(if, variable)  such that Parent(28, print)  pattern assign(print, _"7700-5800"_)  pattern while(_, _) with 5400=if.stmt#  such that Calls(procedure, procedure)  such that Parent(print, _)  pattern while(variable, _) with assign.stmt#=read.stmt#  pattern assign(variable, _) with "variable"=read.varName  such that Uses(7, variable) with if.stmt#=7500  such that Modifies(call, _)  pattern assign(variable, _"5400*1600"_) with variable.varName="else"  pattern if(variable, _, _) with if.stmt#=200  pattern assign(call, "4500-if")  pattern assign(print, _) with procedure.procName="procedure"  such that Follows*(_, call)  such that Uses(while, variable)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern while(variable, _)  pattern if(_, _, _)  pattern assign(_, _)  pattern while(_, _)  pattern assign(read, _"4300+6400"_) with 6600=read.stmt# with print.stmt#=assign.stmt#  pattern assign(variable, _)  pattern if(while, _, _)  pattern assign(variable, _"3100*2700"_) with "else"=procedure.procName  pattern assign(constant, "8700+3600") with 4300=print.stmt#  pattern assign(variable, _)  such that Uses(stmt, "call")  such that Uses(assign, _)  pattern while(call, _) with constant.value=6000  pattern assign(if, _"1200*2400"_)  such that Parent*(print, read)  pattern if(_, _, _)  such that Parent(assign, call) with 8500=print.stmt# with call.procName=variable.varName  such that Next(7, read)  such that Modifies(stmt, variable)  such that Parent*(9, print)  pattern assign(call, "4100/while")  pattern if(variable, _, _)  pattern assign(call, "2900*6800")  pattern if(_, _, _)  pattern while(variable, _) with assign.stmt#=1200  pattern if(variable, _, _)  pattern assign(call, _) with if.stmt#=if.stmt#  such that Uses(assign, _) with constant.value=stmt.stmt#  such that Next(while, 29)  pattern while(_, _)  pattern while(variable, _)  such that Follows(if, _)  such that Affects(assign, 24) with print.varName="call"  pattern assign(variable, _"(3800/9100)+2600"_)  pattern while(while, _)  pattern while(_, _)  pattern assign(_, "1500/8300")  pattern while(read, _) with "print"=call.procName  pattern assign(variable, _"if+1400"_)  pattern while(else, _)  such that Follows(21, assign)  pattern assign(_, _"1000+2200"_)  pattern while(_, _)  pattern while(variable, _)  pattern while(if, _)  such that Uses(if, variable)  pattern assign(_, "6300*5300") with print.varName=procedure.procName  pattern while(variable, _)  pattern assign(_, "(constant-6600)*assign") with stmt.stmt#=8600 with 1600=read.stmt#  pattern if(_, _, _)  pattern if(_, _, _) with procedure.procName="then"  pattern while(_, _) with print.varName=call.procName with procedure.procName="then"  such that Next*(call, call) with "then"=read.varName with 7500=constant.value  pattern assign(_, _) with read.varName="constant"  pattern assign(_, _)  pattern if(variable, _, _)  such that Affects*(stmt, _) with procedure.procName=call.procName  pattern assign(_, "7500/2800")  pattern if(variable, _, _) with while.stmt#=assign.stmt#  pattern assign(read, "7900*call")  such that Parent*(_, call) with 1200=print.stmt#  such that Calls(_, procedure)  pattern assign(variable, "3500/3000")  such that Next*(_, while)  pattern assign(constant, "100*then")  pattern assign(variable, _"8700+8700"_)  such that Follows(read, _)  such that Affects(assign, assign)  pattern while(variable, _) with call.procName=procedure.procName  pattern assign(variable, "4900+4600") with assign.stmt#=3300 with assign.stmt#=assign.stmt#  pattern assign(variable, "2200-8700")  pattern if(variable, _, _) with variable.varName="call"  pattern while(call, _) with read.varName="procedure" with stmt.stmt#=1800  pattern while(_, _) with procedure.procName=call.procName  such that Next*(read, print)  pattern assign(_, _"5200+7300"_)  pattern if(_, _, _)  such that Affects*(stmt, 23)  such that Follows*(assign, 9)  such that Modifies(4, variable)  such that Affects(10, stmt)  such that Next(read, _)  such that Affects*(assign, _)  pattern if(variable, _, _)  such that Affects(stmt, 23) with assign.stmt#=1100  pattern while(print, _) with "else"=procedure.procName  such that Next(26, call) with call.procName="else"  pattern while(_, _) with "else"=variable.varName  pattern assign(variable, "(2000*while)-2000")  pattern assign(_, _)  pattern if(else, _, _) with 3200=constant.value with read.varName=read.varName  such that Calls*(_, procedure)  such that Calls*(procedure, _) with 5800=assign.stmt# with variable.varName="variable" with read.varName=procedure.procName with "print"=variable.varName  pattern while(read, _)  pattern while(print, _)  pattern if(variable, _, _)  such that Calls(procedure, procedure)  such that Follows(_, print)  pattern assign(_, _"3100+7400"_) with 200=constant.value  such that Affects*(assign, 21)  such that Modifies(read, _)  pattern assign(_, _"800/5700"_)  pattern assign(_, _"6600+8100"_)  such that Calls*(procedure, _)  such that Affects*(assign, stmt) with if.stmt#=6800  pattern if(_, _, _)  such that Calls*("print", procedure) with constant.value=4300  such that Parent(stmt, _) with 500=constant.value with variable.varName=print.varName  such that Follows(stmt, 11)  pattern assign(variable, "9600+3200") with call.procName=procedure.procName  such that Affects*(_, stmt)  such that Next*(if, _)  pattern while(_, _)  pattern while(call, _)  pattern assign(_, _)  pattern while(variable, _)  pattern if(_, _, _)  such that Next*(read, _)  such that Follows(if, while)  pattern assign(variable, "6000/5900")  such that Follows*(_, print)  pattern if(_, _, _)  pattern while(variable, _)  such that Parent*(call, _)  pattern while(variable, _)  pattern while(_, _)  such that Calls("if", procedure)  pattern if(variable, _, _)  pattern while(variable, _) with 1600=print.stmt# with procedure.procName=procedure.procName  pattern if(_, _, _)  pattern while(variable, _)  such that Uses(procedure, variable)  pattern if(then, _, _) with constant.value=3100  pattern if(_, _, _)  such that Follows(_, if)  pattern assign(call, _"200-5500"_)  pattern if(variable, _, _)  such that Follows*(call, _)  pattern assign(if, "7100/1600")  pattern while(else, _) with 5600=if.stmt#  pattern while(else, _)  pattern while(_, _)  pattern assign(variable, _"1200+3600"_) with "else"=read.varName  pattern while(variable, _)  pattern assign(_, _"(then+else)/print"_) with read.varName="while"  pattern if(_, _, _)  pattern while(print, _)  such that Affects*(_, assign)  pattern if(variable, _, _)  pattern if(then, _, _) with print.varName="else"  pattern assign(read, _"if/4700"_) with stmt.stmt#=assign.stmt#  pattern while(procedure, _)  pattern while(variable, _)  pattern assign(variable, "(((3700*200)/6700)*2000)*5500") with read.stmt#=stmt.stmt#  pattern while(variable, _)  pattern while(then, _)  such that Parent(while, _) with print.stmt#=9400 with "procedure"=procedure.procName  pattern while(_, _)  pattern if(_, _, _)  such that Calls*("then", procedure)  pattern assign(variable, "200*5300")  such that Parent*(assign, _) with variable.varName=variable.varName  such that Calls*(procedure, "assign") with 700=while.stmt#  pattern assign(variable, _"4000+4000"_)  pattern while(_, _)  pattern assign(variable, "8600-4300")  pattern if(variable, _, _)  pattern while(variable, _) with read.stmt#=assign.stmt#  pattern if(_, _, _) with call.stmt#=1300  such that Uses(read, "read") with constant.value=call.stmt#  pattern assign(_, _"(7800+6100)+7800"_)  pattern if(variable, _, _) with read.stmt#=if.stmt#  pattern if(_, _, _) with 7400=constant.value  pattern assign(then, "5100/2800")  pattern while(_, _)  such that Parent(_, stmt)  such that Modifies(if, _) with call.procName="procedure" with print.stmt#=if.stmt#  pattern while(variable, _)  pattern if(variable, _, _) with read.stmt#=constant.value  pattern while(_, _)  such that Affects*(stmt, assign) with call.procName="constant" with "if"=print.varName with assign.stmt#=2900  pattern if(_, _, _)  such that Affects(assign, 23)  such that Calls*(procedure, _)  such that Affects*(_, assign) with read.stmt#=7700  pattern while(procedure, _) with 3400=read.stmt#  pattern while(_, _)  such that Follows*(stmt, 16)  pattern if(_, _, _) with "else"=print.varName  pattern while(variable, _)  such that Modifies(procedure, variable) with read.varName="read"  pattern while(else, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern while(variable, _) with call.procName="then"  pattern while(variable, _)  pattern while(_, _)  pattern if(_, _, _)  such that Modifies(17, variable)  pattern while(_, _)  such that Next*(29, print)  pattern assign(assign, _"6100/4500"_)  such that Next*(read, 17) with read.varName=print.varName  pattern while(variable, _)  pattern if(_, _, _)  such that Next*(call, 4)  pattern assign(variable, _)  pattern if(variable, _, _)  such that Follows(print, if)  such that Parent(call, 27)  pattern assign(_, _"1600/9000"_) with procedure.procName="while" with call.procName="assign"  pattern assign(variable, "7900+7900")  pattern while(_, _) with read.stmt#=stmt.stmt#  pattern if(while, _, _) with print.stmt#=3900 with 4700=print.stmt# with print.varName=read.varName with procedure.procName=variable.varName  pattern while(variable, _)  pattern while(_, _)  pattern assign(_, "3300-9600")  pattern if(_, _, _) with call.stmt#=print.stmt#  pattern assign(_, "5000-3100")  pattern if(assign, _, _)  pattern while(procedure, _)  pattern if(constant, _, _) with variable.varName="read"  pattern if(_, _, _)  such that Next(_, stmt) with stmt.stmt#=if.stmt#  such that Parent*(_, print) with 7100=constant.value  pattern assign(procedure, _"1500*2600"_) with call.procName="print"  pattern assign(variable, _)  such that Parent(7, print)  such that Next*(read, 12)  pattern assign(_, "8100+6100")  pattern while(variable, _)  such that Modifies(read, variable) with call.stmt#=7800  pattern assign(else, "8800+2100")  such that Affects(20, stmt) with "call"=call.procName with call.procName=call.procName  pattern while(assign, _)  pattern assign(variable, _"7200/5700"_)  pattern while(if, _)  such that Uses(assign, variable)  pattern while(_, _)  pattern assign(_, "5000+3800")  such that Next*(call, stmt)  pattern assign(variable, _)  such that Parent*(stmt, read) with "print"=read.varName  such that Follows(28, read) with print.varName="while"  such that Calls*("variable", procedure)  pattern assign(variable, _"4600*4600"_)  pattern while(_, _) with variable.varName="print"  such that Affects(13, assign)  pattern while(_, _)  pattern while(_, _)  such that Uses(call, _) with read.varName="while"  such that Follows(assign, _) with variable.varName="assign" with "print"=print.varName  such that Affects*(assign, 1)  pattern while(_, _) with variable.varName="call"  pattern if(variable, _, _)  pattern assign(if, _"else/1400"_) with call.stmt#=800  such that Calls*(procedure, procedure)  pattern if(assign, _, _) with assign.stmt#=assign.stmt#  pattern if(assign, _, _)  such that Parent(_, assign)  pattern assign(print, "4500/5700")  pattern while(_, _) with print.stmt#=if.stmt#  pattern while(variable, _) with 600=assign.stmt#  pattern assign(variable, _)  pattern if(_, _, _)  such that Modifies(7, variable)  such that Uses(18, variable) with print.stmt#=9000  such that Parent*(print, stmt)  such that Affects(assign, stmt)  pattern assign(variable, _"4500*6000"_) with 7300=assign.stmt#  pattern assign(_, "8600/3700") with 3700=while.stmt# with print.stmt#=4100  such that Next*(call, _)  pattern assign(variable, _)  pattern assign(procedure, _) with 6800=constant.value with print.stmt#=6100  such that Follows(_, stmt)  such that Follows(if, 25) with call.stmt#=3400  pattern assign(variable, _"4100*5600"_) with if.stmt#=constant.value  such that Calls*(procedure, "assign") with print.varName=print.varName with 7200=constant.value with procedure.procName=procedure.procName with assign.stmt#=6900  pattern while(variable, _)  such that Calls(procedure, "call")  such that Follows(print, _)  pattern assign(_, "9700-4900")  pattern if(_, _, _)  pattern if(while, _, _)  pattern while(read, _)  such that Calls*(_, procedure)  such that Next*(_, read)  pattern assign(variable, _)  such that Affects(assign, 14)  such that Next(call, stmt) with assign.stmt#=7900  pattern if(_, _, _) with 4100=print.stmt#  pattern while(variable, _)  pattern assign(call, "(8400-assign)*6700") with read.stmt#=4800  pattern if(variable, _, _) with "constant"=read.varName with print.stmt#=8700  pattern assign(variable, _)  such that Next*(call, if) with call.stmt#=stmt.stmt# with "if"=read.varName with read.varName="while"  such that Follows(print, _) with print.stmt#=while.stmt#  such that Follows*(print, _)  such that Modifies(procedure, "call")  such that Next*(stmt, _) with "while"=call.procName  such that Follows(_, stmt)  pattern if(constant, _, _) with stmt.stmt#=4100  pattern assign(variable, "5600-7800")  pattern assign(variable, "8400+3700") with read.varName=procedure.procName  pattern while(_, _)  pattern if(_, _, _) with "print"=print.varName with print.varName=variable.varName with print.varName="call"  such that Calls(procedure, "else")  such that Affects(_, stmt)  such that Follows(call, while) with if.stmt#=assign.stmt# with print.varName=print.varName  pattern if(print, _, _)  pattern if(variable, _, _)  such that Affects(stmt, _) with print.varName="while"  pattern while(_, _)  pattern assign(variable, "1600/1500")  pattern while(else, _) with read.varName="constant" with "while"=call.procName  such that Follows*(print, if) with call.procName="else" with print.stmt#=200 with procedure.procName=print.varName  pattern assign(variable, _)  pattern assign(variable, _) with constant.value=while.stmt#  such that Next*(stmt, assign) with print.varName=print.varName  such that Follows(call, call)  pattern while(variable, _)  such that Next*(read, _)  pattern while(variable, _)  pattern if(constant, _, _)  such that Parent*(assign, 10) with 4000=print.stmt# with "then"=call.procName  pattern while(variable, _) 

5000
78 - Query 78
variable variable; assign assign; print print; call call; constant constant; stmt stmt; read read; if if; while while; procedure procedure; 
Select <variable, assign, print, call, constant, stmt, read, if, while, procedure>  pattern if(call, _, _) with "if"=read.varName  pattern while(variable, _)  such that Next(27, while)  pattern while(constant, _)  pattern assign(variable, _)  pattern assign(_, _)  pattern assign(procedure, "call+9700") with variable.varName=read.varName  pattern assign(variable, _)  pattern if(read, _, _) with "while"=print.varName  pattern while(else, _)  pattern if(variable, _, _) with procedure.procName=read.varName with print.varName="procedure"  such that Affects*(15, assign) with call.procName=variable.varName with "call"=read.varName  such that Parent(_, read)  such that Affects(assign, stmt) with 5700=stmt.stmt# with procedure.procName=read.varName  such that Modifies(while, _)  such that Follows(while, 20) with 500=if.stmt# with "while"=procedure.procName  pattern assign(variable, _) with 9300=while.stmt#  pattern while(then, _) with procedure.procName="constant"  such that Modifies(read, _)  pattern assign(read, "7000-4500")  pattern if(_, _, _)  pattern assign(_, _)  pattern assign(assign, "5300-5800")  pattern if(_, _, _)  pattern assign(_, "1900+variable")  pattern while(_, _)  pattern if(variable, _, _)  such that Follows*(print, _)  such that Affects(assign, _)  pattern assign(variable, _"3400*8100"_) with procedure.procName="if"  such that Affects*(20, stmt)  pattern if(_, _, _) with read.stmt#=7500  pattern while(_, _)  such that Affects*(stmt, stmt) with print.stmt#=3900  pattern if(constant, _, _)  such that Follows(_, stmt) with read.varName="print"  such that Parent*(call, assign)  pattern while(_, _)  pattern if(variable, _, _)  such that Follows(if, assign)  such that Affects*(stmt, _) with 6600=call.stmt# with constant.value=if.stmt#  pattern assign(variable, "(4400+7300)+5300")  such that Next(print, print)  such that Modifies(10, variable)  such that Next(28, read) with 7800=print.stmt# with print.stmt#=call.stmt#  such that Parent*(2, assign) with procedure.procName="procedure" with 7800=if.stmt#  such that Calls*(procedure, "variable")  such that Uses(stmt, "assign")  pattern while(then, _)  pattern while(while, _)  such that Next(read, _) with read.stmt#=call.stmt#  pattern while(variable, _)  pattern assign(constant, "700/7400") with procedure.procName=print.varName  pattern while(_, _) with read.stmt#=1800  pattern assign(variable, _"5500*1600"_)  pattern assign(variable, "1800+1700") with procedure.procName=procedure.procName  such that Parent(assign, 24)  such that Follows(if, while)  pattern assign(variable, "4200+8700")  pattern while(variable, _)  such that Uses(print, "constant")  pattern assign(variable, "3400+3600") with assign.stmt#=while.stmt# with read.stmt#=200 with variable.varName=read.varName  pattern if(variable, _, _) with print.varName=read.varName  such that Follows*(if, _)  such that Follows*(print, 22)  such that Uses(while, variable) with procedure.procName=print.varName  such that Affects*(stmt, assign) with read.stmt#=9200  pattern while(variable, _) with procedure.procName="variable" with procedure.procName=variable.varName  pattern if(variable, _, _)  pattern if(constant, _, _) with if.stmt#=4400 with call.stmt#=9700  such that Uses(23, variable)  such that Next*(while, 9)  such that Parent(_, read) with print.stmt#=2600  pattern if(_, _, _) with "assign"=read.varName with 3500=read.stmt#  pattern while(then, _) with print.varName="if" with read.varName="variable" with while.stmt#=print.stmt# with assign.stmt#=1600  such that Calls(_, procedure)  pattern if(_, _, _) with procedure.procName=read.varName with read.varName=call.procName  pattern assign(_, _"5300+8100"_) with "then"=read.varName  pattern assign(variable, _"4700-5400"_)  pattern if(variable, _, _)  pattern if(_, _, _) with procedure.procName="read"  pattern assign(variable, _)  such that Next*(_, print)  pattern assign(while, "3300-8900")  such that Uses(if, _)  pattern if(variable, _, _)  such that Parent(print, _) with call.procName="constant"  pattern while(variable, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern if(else, _, _)  such that Calls*(procedure, procedure)  pattern assign(_, _"2800-procedure"_)  pattern while(_, _)  such that Parent*(while, assign) with print.varName=print.varName  pattern if(_, _, _)  pattern while(_, _) with "call"=call.procName  such that Calls*(procedure, _) with print.varName=call.procName with constant.value=call.stmt#  pattern while(variable, _)  pattern assign(variable, "7800/4900") with 2000=stmt.stmt#  such that Parent*(call, _)  pattern assign(variable, _"(then-3300)-6600"_)  pattern while(variable, _)  pattern assign(call, _"else/100"_) with read.varName="assign"  pattern if(variable, _, _)  such that Next*(assign, read)  pattern if(assign, _, _) with assign.stmt#=stmt.stmt#  such that Next*(_, assign) with "else"=call.procName  such that Uses(if, variable)  pattern if(_, _, _)  such that Affects(stmt, 28)  pattern assign(_, _"3000+6400"_)  pattern while(variable, _)  pattern assign(variable, _"9000/5800"_)  such that Follows*(print, 21)  such that Follows(12, while)  pattern assign(variable, _"3600/700"_)  pattern if(call, _, _)  pattern if(_, _, _)  pattern while(_, _) with while.stmt#=print.stmt# with stmt.stmt#=6500  such that Next*(if, call) with call.procName=variable.varName  pattern if(variable, _, _)  pattern while(variable, _)  such that Follows*(_, read)  pattern assign(variable, "6600*4600")  pattern assign(_, _)  pattern while(variable, _)  pattern if(_, _, _)  pattern assign(_, _"2900/2600"_) with 6000=stmt.stmt#  such that Follows(read, read)  such that Calls(_, procedure) with print.stmt#=stmt.stmt# with assign.stmt#=5500  such that Calls(procedure, "call")  pattern if(_, _, _)  pattern while(variable, _) with print.varName=read.varName with print.stmt#=1900  pattern if(_, _, _) with constant.value=8700  pattern if(read, _, _)  pattern while(_, _) with call.stmt#=while.stmt# with procedure.procName=procedure.procName  pattern while(constant, _)  such that Uses(assign, "else")  pattern if(variable, _, _) with "print"=variable.varName  pattern while(else, _)  pattern assign(_, _)  pattern if(_, _, _) with 8600=stmt.stmt#  pattern if(while, _, _)  such that Parent*(while, _)  pattern while(_, _)  pattern if(variable, _, _)  pattern while(_, _)  pattern if(_, _, _)  such that Modifies(procedure, "assign")  pattern while(procedure, _) with while.stmt#=1700  pattern if(variable, _, _)  pattern assign(call, "700+4200")  such that Next*(call, 18)  pattern while(_, _)  such that Next(_, if)  pattern assign(procedure, _"6800-9700"_) with 4700=if.stmt#  such that Parent(print, stmt)  pattern if(_, _, _) with read.stmt#=stmt.stmt# with constant.value=while.stmt#  pattern assign(variable, "7500/4300")  such that Follows*(while, _)  such that Parent*(while, if)  such that Modifies(call, "while")  pattern while(_, _) with "else"=call.procName  pattern if(_, _, _)  such that Parent*(call, while)  pattern while(_, _)  such that Affects*(stmt, _)  pattern while(while, _)  such that Uses(print, variable)  pattern while(variable, _)  pattern if(_, _, _) with if.stmt#=5100  pattern if(_, _, _)  pattern if(_, _, _) with procedure.procName=procedure.procName with read.stmt#=7500  pattern while(read, _)  pattern if(_, _, _)  pattern while(_, _) with 5100=print.stmt# with 8200=stmt.stmt#  pattern while(variable, _) with 5300=assign.stmt#  such that Follows*(stmt, call)  such that Uses(stmt, variable)  such that Calls(procedure, procedure) with assign.stmt#=while.stmt#  pattern assign(_, _"5200+7200"_)  pattern while(variable, _) with assign.stmt#=print.stmt# with 9100=stmt.stmt#  such that Follows(while, call) with call.procName=call.procName  pattern while(variable, _)  such that Uses(call, "variable")  pattern while(variable, _)  such that Follows(while, _)  pattern while(then, _)  pattern while(variable, _) with 5900=print.stmt# with call.stmt#=5600  pattern assign(_, _"1100+if"_) with call.stmt#=constant.value with call.procName=call.procName with call.procName="assign" with 6800=read.stmt# with variable.varName=call.procName  pattern if(variable, _, _) with variable.varName=call.procName  such that Uses(stmt, _) with call.procName="if"  pattern while(_, _)  pattern assign(_, _)  pattern assign(variable, "2400+600") with call.procName="assign"  pattern while(variable, _)  pattern if(_, _, _)  pattern while(variable, _) with print.varName=call.procName  pattern assign(variable, "5800+8000")  pattern if(print, _, _) with "read"=print.varName  such that Uses(read, variable) with 4000=call.stmt# with while.stmt#=8100 with print.varName=print.varName with print.varName=call.procName  pattern if(_, _, _) with variable.varName="print"  pattern while(variable, _) with variable.varName="assign"  pattern while(_, _)  pattern if(_, _, _)  pattern assign(variable, _"3200+3300"_)  such that Modifies(while, variable)  pattern while(variable, _)  pattern assign(if, _) with call.procName="constant" with 7100=assign.stmt# with assign.stmt#=5600  pattern while(_, _)  pattern if(while, _, _) with 3500=while.stmt# with print.varName="if"  such that Follows*(23, call)  pattern if(_, _, _)  pattern if(_, _, _)  pattern while(_, _)  such that Parent*(25, assign)  such that Calls("constant", procedure) with "assign"=procedure.procName  pattern assign(call, _)  such that Uses(call, _)  such that Parent*(call, print)  pattern while(variable, _)  pattern assign(_, _)  pattern if(variable, _, _) with "print"=read.varName with 5000=print.stmt#  pattern while(variable, _)  pattern if(procedure, _, _)  such that Next*(assign, _)  such that Calls("if", procedure)  such that Uses(call, _)  pattern assign(call, _"then*9500"_)  such that Modifies(stmt, _) with print.varName=variable.varName  pattern if(_, _, _) with "else"=variable.varName  pattern while(then, _)  such that Uses(20, variable)  pattern assign(variable, _"3300-3200"_) with "assign"=read.varName  pattern assign(then, "1400-200")  such that Next(read, _)  such that Affects(stmt, stmt)  such that Affects*(25, assign)  pattern assign(_, _) with 6400=read.stmt#  such that Parent*(18, if)  pattern while(variable, _)  pattern if(then, _, _)  pattern assign(if, _"3100*assign"_)  such that Next*(28, stmt)  pattern while(while, _) with 3700=while.stmt#  pattern while(variable, _) with "if"=call.procName with print.stmt#=3900  such that Parent(assign, _)  such that Follows(7, if) with call.procName=procedure.procName  pattern if(variable, _, _)  pattern while(variable, _)  pattern if(then, _, _)  such that Follows(if, _)  such that Calls(_, procedure)  pattern assign(_, _"6100+procedure"_) with constant.value=7400  pattern if(constant, _, _) with read.stmt#=constant.value  pattern while(procedure, _) with print.varName=procedure.procName  such that Affects(assign, 28) with while.stmt#=call.stmt# with while.stmt#=if.stmt#  pattern while(variable, _) with call.stmt#=stmt.stmt#  pattern if(variable, _, _)  such that Affects(28, assign) with print.stmt#=print.stmt#  such that Calls(procedure, procedure)  pattern if(_, _, _) with "constant"=variable.varName  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern assign(_, _"(9800+4000)/1700"_)  pattern assign(variable, _"if*5600"_) with call.stmt#=5600  pattern if(assign, _, _)  pattern while(variable, _)  such that Follows(read, print)  such that Calls(procedure, procedure)  pattern while(_, _)  pattern assign(_, _)  such that Follows(if, 11)  pattern assign(_, _"1500/5800"_)  pattern assign(variable, _"9500+7300"_)  pattern assign(procedure, "8600+9600") with 7300=read.stmt#  pattern while(_, _) with read.varName=variable.varName  such that Calls*("else", procedure)  such that Parent(3, while)  pattern assign(variable, "1700+variable") with call.stmt#=stmt.stmt#  pattern if(variable, _, _)  such that Calls*(procedure, _) with stmt.stmt#=9700  such that Parent(if, 14)  pattern while(variable, _)  pattern if(variable, _, _) with "print"=print.varName  such that Calls*(procedure, _)  pattern if(assign, _, _)  such that Follows(27, if) with constant.value=stmt.stmt#  such that Affects*(_, assign)  such that Parent(_, print)  pattern if(_, _, _) with procedure.procName=read.varName  pattern assign(_, _"1800+9200"_)  such that Modifies(stmt, "constant")  such that Calls(procedure, _)  pattern assign(call, "4200*1900") with assign.stmt#=stmt.stmt#  such that Affects(assign, assign)  such that Modifies(18, variable)  pattern assign(variable, "3600*2200") with constant.value=8600 with "print"=print.varName with print.stmt#=print.stmt#  pattern assign(variable, "if*8700") with 5900=call.stmt#  pattern assign(assign, "2200-7200")  pattern while(variable, _)  such that Follows(print, _) with 5300=constant.value  pattern assign(variable, _"3800+3700"_) with stmt.stmt#=if.stmt#  pattern while(variable, _) with "if"=call.procName  pattern if(_, _, _) with 3700=call.stmt#  pattern while(_, _)  pattern if(variable, _, _) with constant.value=8000  pattern assign(_, _"7000-9400"_) with 8300=if.stmt#  such that Affects*(assign, stmt) with call.procName=variable.varName with 2700=print.stmt#  pattern assign(_, _"1400-5100"_)  pattern if(variable, _, _)  such that Calls*(procedure, procedure)  pattern if(_, _, _)  pattern assign(read, "(assign/4200)/2900")  pattern assign(variable, "3000*9300") with 5400=print.stmt#  pattern assign(_, _"7400*4200"_)  pattern if(_, _, _)  pattern while(variable, _)  such that Parent(stmt, assign)  such that Modifies(assign, variable)  pattern assign(variable, _) with "variable"=procedure.procName  such that Parent(12, assign)  pattern assign(constant, "6600*print")  such that Modifies(call, "constant")  pattern if(_, _, _) with call.stmt#=5900  pattern if(assign, _, _) with read.stmt#=3000  pattern while(_, _)  such that Uses(if, variable) with "call"=variable.varName with 3200=while.stmt# with if.stmt#=900  pattern while(variable, _)  pattern assign(variable, "8800+call") with if.stmt#=if.stmt#  such that Next(assign, 12)  pattern assign(_, "3100/print")  such that Parent(_, while)  pattern assign(_, _) with call.procName=read.varName  pattern assign(variable, _)  pattern if(variable, _, _)  pattern while(variable, _)  such that Uses(9, variable)  such that Calls(procedure, procedure)  such that Affects*(assign, 27) with 4500=call.stmt# 

5000
79 - Query 79
assign assign; print print; variable variable; constant constant; stmt stmt; read read; procedure procedure; while while; if if; call call; 
Select <assign, print, variable, constant, stmt, read, procedure, while, if, call>  pattern while(_, _)  such that Next(while, stmt)  such that Follows*(while, _)  such that Next*(call, 7)  pattern while(_, _) with read.varName="assign"  pattern assign(_, "500*7700")  such that Calls*(procedure, _) with while.stmt#=300  pattern if(_, _, _)  such that Parent*(read, if)  such that Calls*(procedure, "procedure")  pattern while(read, _)  such that Calls(procedure, _)  such that Uses(procedure, "procedure")  such that Uses(procedure, _) with call.stmt#=2900 with call.procName="call"  pattern while(call, _)  such that Next(_, read)  such that Follows*(print, _)  pattern if(variable, _, _) with 5800=if.stmt#  such that Modifies(assign, "call")  pattern while(variable, _)  pattern assign(procedure, "4900+3600")  pattern if(_, _, _)  pattern assign(then, "8500-1300")  such that Uses(read, _)  pattern while(_, _)  pattern while(variable, _)  pattern if(then, _, _) with while.stmt#=stmt.stmt#  pattern if(variable, _, _)  such that Calls*(_, procedure)  pattern assign(_, "6700+4200")  such that Calls(_, procedure) with 4200=call.stmt# with 8100=stmt.stmt# with "call"=variable.varName  pattern while(variable, _)  such that Affects(_, assign)  pattern if(variable, _, _)  pattern assign(variable, _)  such that Affects(assign, assign)  such that Parent(_, print)  pattern assign(procedure, _"6000*assign"_)  pattern while(_, _) with print.stmt#=assign.stmt# with while.stmt#=if.stmt#  pattern assign(variable, _)  pattern while(_, _)  pattern if(else, _, _)  pattern assign(_, "3600-while")  pattern if(variable, _, _) with procedure.procName=read.varName  pattern if(variable, _, _)  pattern assign(_, _"3700*1500"_) with call.procName="else" with read.stmt#=while.stmt# with stmt.stmt#=while.stmt#  such that Modifies(read, _)  such that Modifies(stmt, variable)  such that Calls*(procedure, "assign") with "if"=variable.varName  such that Parent*(while, read) with procedure.procName="read" with variable.varName="constant"  pattern assign(else, "2100-3700")  pattern assign(_, "then+9500")  such that Calls(procedure, procedure) with print.varName="assign"  such that Uses(stmt, variable)  pattern while(variable, _)  pattern if(variable, _, _)  pattern assign(_, _)  such that Follows(assign, 29) with "print"=read.varName  pattern assign(variable, _"8500-3700"_)  pattern while(print, _) with 9800=if.stmt#  pattern while(variable, _)  pattern while(variable, _) with "read"=print.varName with print.varName=read.varName  pattern if(assign, _, _)  pattern assign(variable, _)  pattern assign(_, _"4100/8700"_) with print.stmt#=constant.value  such that Uses(read, _) with print.stmt#=constant.value  pattern while(variable, _)  such that Modifies(stmt, variable)  such that Next*(7, if)  such that Follows*(_, stmt)  pattern while(call, _) with constant.value=constant.value with assign.stmt#=7400  such that Follows*(stmt, stmt)  such that Next(call, 3)  pattern while(print, _)  pattern while(_, _) with 1300=stmt.stmt# with read.stmt#=stmt.stmt# with 9100=print.stmt#  pattern assign(variable, _) with constant.value=while.stmt#  pattern assign(call, "6500*procedure") with read.stmt#=constant.value  pattern assign(procedure, _) with if.stmt#=3800 with 8300=call.stmt# with 3500=print.stmt#  such that Follows(assign, _)  such that Affects(stmt, 29)  pattern assign(variable, _"1400-8400"_) with 3100=if.stmt# with call.stmt#=print.stmt#  pattern if(_, _, _)  pattern assign(assign, "5000+9100") with constant.value=8400  pattern while(variable, _)  such that Calls(procedure, "procedure") with variable.varName="variable" with 2200=read.stmt# with while.stmt#=6500  pattern if(then, _, _) with 8000=constant.value with stmt.stmt#=2500  such that Next*(_, print) with 100=call.stmt# with "call"=variable.varName with variable.varName="while"  such that Calls*("print", procedure) with while.stmt#=4300  pattern while(constant, _) with call.procName=call.procName  such that Modifies(stmt, "while")  pattern assign(variable, _"4000*6900"_) with call.stmt#=8000 with variable.varName=procedure.procName  such that Parent(24, assign)  pattern while(else, _)  pattern if(while, _, _) with assign.stmt#=assign.stmt#  pattern if(variable, _, _)  such that Follows(read, 1)  pattern if(variable, _, _) with variable.varName=variable.varName  pattern assign(variable, "4000*6100") with if.stmt#=7400  pattern assign(variable, "2800-9100") with while.stmt#=3400  pattern if(_, _, _)  pattern if(read, _, _)  pattern if(variable, _, _) with if.stmt#=if.stmt#  pattern while(constant, _)  pattern if(procedure, _, _) with print.stmt#=constant.value  such that Follows*(if, if)  such that Uses(stmt, variable)  such that Parent(_, if) with variable.varName="variable"  such that Follows*(_, print)  pattern assign(while, "9100-2400")  pattern assign(_, "(read*9400)*3900")  pattern if(variable, _, _)  such that Modifies(if, _) with constant.value=assign.stmt#  pattern while(_, _)  pattern assign(variable, "(5000*6700)*4500")  such that Parent(read, 7)  pattern assign(variable, _"3800+2100"_)  such that Calls*(procedure, procedure)  pattern assign(print, _"(then-8100)*3500"_)  pattern while(variable, _)  pattern if(variable, _, _)  pattern if(then, _, _)  pattern while(procedure, _)  pattern assign(_, _"700-print"_)  pattern while(variable, _) with while.stmt#=4400 with 900=stmt.stmt# with stmt.stmt#=1400 with variable.varName="constant"  such that Follows*(call, 29)  pattern assign(_, _)  such that Calls("variable", procedure)  pattern while(_, _)  such that Next(_, stmt) with "variable"=print.varName with print.varName=variable.varName  pattern while(variable, _) with call.procName="assign"  pattern if(assign, _, _)  pattern while(while, _) with "print"=print.varName  pattern assign(variable, _"7200/3500"_) with "else"=print.varName  pattern assign(_, _"4100+9600"_)  such that Affects(stmt, _)  pattern if(variable, _, _)  such that Follows(11, call) with constant.value=assign.stmt# with "else"=read.varName  pattern if(variable, _, _) with constant.value=stmt.stmt#  pattern assign(then, _"if/then"_) with procedure.procName=procedure.procName with read.varName="read" with constant.value=if.stmt# with "constant"=call.procName  pattern assign(assign, "2200+else")  pattern while(_, _)  such that Follows*(while, _) with 4500=print.stmt#  pattern assign(_, _"400/1100"_) with while.stmt#=2600 with procedure.procName=print.varName  pattern while(procedure, _)  such that Modifies(27, variable)  pattern while(variable, _)  such that Calls*(procedure, procedure) with 2200=stmt.stmt#  such that Follows(_, print)  such that Calls(_, procedure)  pattern while(read, _) with print.varName="print"  pattern assign(variable, _"(900*6000)-4300"_)  pattern while(constant, _)  such that Calls*(procedure, _) with stmt.stmt#=7500  pattern assign(_, _)  such that Next(14, if) with 1000=call.stmt# with stmt.stmt#=stmt.stmt#  pattern while(call, _) with if.stmt#=3200  such that Modifies(6, variable)  such that Uses(procedure, _)  pattern while(then, _)  such that Calls(_, procedure)  pattern while(variable, _)  such that Calls*(_, procedure)  such that Affects(assign, _)  pattern while(variable, _) with constant.value=8500  such that Affects(_, assign) with call.stmt#=5100 with read.varName="while"  pattern while(while, _)  pattern while(_, _)  pattern assign(variable, _)  pattern assign(constant, _)  such that Next(read, if)  pattern while(variable, _)  pattern assign(variable, "1600+5900")  such that Next*(_, if) with 3500=constant.value with 9500=call.stmt#  pattern if(variable, _, _)  such that Calls*("else", procedure)  pattern assign(_, "9600-9000") with read.stmt#=8500  such that Affects*(assign, _)  such that Follows*(_, if)  pattern assign(_, "9500*8400")  pattern assign(then, "3100+3000") with variable.varName="constant" with call.stmt#=call.stmt#  such that Modifies(17, variable)  pattern while(_, _)  pattern assign(_, "6400/7200")  pattern assign(else, _)  pattern while(if, _)  pattern assign(read, "constant/5100")  pattern assign(_, "constant/7100")  such that Parent(stmt, _)  pattern assign(variable, _"9500*4300"_) with 7100=assign.stmt#  pattern assign(_, _"7400/procedure"_)  such that Follows(5, stmt)  such that Follows(_, stmt) with print.stmt#=4400  pattern if(_, _, _)  such that Parent(21, read)  such that Next(14, read)  such that Affects*(5, assign) with while.stmt#=stmt.stmt#  such that Affects(stmt, 6) with 5200=constant.value  pattern while(variable, _)  such that Parent*(16, assign)  such that Parent(_, stmt)  pattern if(variable, _, _)  pattern while(variable, _)  such that Parent*(15, stmt)  such that Calls(procedure, _)  such that Next*(_, call) with variable.varName="while" with print.varName="procedure" with call.stmt#=9200 with "constant"=variable.varName  pattern assign(_, "else/8900")  pattern assign(_, _) with "print"=call.procName  such that Parent*(27, read)  such that Next(stmt, _)  pattern assign(read, _"4300+5400"_)  pattern if(then, _, _) with print.stmt#=5500 with procedure.procName=call.procName with "constant"=call.procName  pattern if(variable, _, _) with while.stmt#=7500  such that Next*(while, 5) with call.stmt#=constant.value  such that Follows*(if, _) with print.stmt#=read.stmt# with print.varName=read.varName with "read"=procedure.procName with "then"=read.varName  pattern while(_, _)  pattern while(_, _) with 5800=print.stmt#  such that Uses(28, variable)  such that Uses(10, variable)  such that Uses(if, variable)  pattern while(while, _)  such that Next(4, assign)  pattern if(variable, _, _)  pattern assign(call, _"(1200*4300)-4700"_) with if.stmt#=stmt.stmt#  pattern while(_, _)  pattern if(variable, _, _)  pattern assign(variable, _"8700/6300"_)  pattern assign(constant, _"5300-4500"_) with read.stmt#=while.stmt#  such that Uses(read, "constant")  such that Modifies(print, _)  such that Affects*(stmt, 25)  pattern assign(variable, _)  such that Parent(call, _)  pattern if(assign, _, _)  pattern while(print, _)  pattern while(constant, _)  pattern while(variable, _)  such that Parent*(while, _)  pattern while(_, _)  such that Next(29, while)  such that Next(_, assign) with stmt.stmt#=4200  pattern if(else, _, _)  pattern assign(variable, _)  such that Follows(read, if) with procedure.procName="print"  such that Calls(procedure, procedure)  such that Follows*(_, assign)  pattern while(variable, _)  pattern assign(_, _"((6500-print)-constant)-9800"_)  pattern while(while, _)  pattern assign(variable, _)  such that Parent(assign, _)  such that Calls*("procedure", procedure)  such that Uses(read, "if") with "constant"=procedure.procName with call.procName=procedure.procName with variable.varName=read.varName  pattern while(variable, _)  pattern assign(variable, _)  such that Affects*(assign, stmt)  pattern if(constant, _, _)  pattern assign(read, _"if+8400"_) with print.varName="read"  pattern if(_, _, _) with variable.varName=variable.varName with "constant"=call.procName  pattern if(variable, _, _) with read.varName="if"  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern while(read, _)  pattern if(_, _, _)  pattern if(read, _, _)  such that Parent(assign, call) with stmt.stmt#=if.stmt#  pattern assign(variable, _"6800/assign"_)  pattern if(variable, _, _)  such that Parent*(call, 8)  pattern if(variable, _, _)  pattern if(_, _, _) with 5200=call.stmt#  pattern assign(variable, "100-7200")  pattern while(variable, _)  such that Affects(assign, 10)  pattern if(variable, _, _) with procedure.procName=variable.varName  pattern assign(variable, "9600-variable")  pattern while(while, _)  such that Calls(_, procedure)  pattern if(variable, _, _)  such that Uses(stmt, _)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern if(variable, _, _)  such that Next(25, while)  such that Modifies(print, variable) with if.stmt#=3800  such that Next*(19, read) with variable.varName="call"  pattern assign(assign, _)  pattern if(constant, _, _)  such that Follows(if, _)  such that Follows(if, if)  pattern while(_, _)  such that Uses(stmt, "else")  such that Affects*(assign, stmt)  pattern assign(_, "5000+2200") with "procedure"=call.procName  such that Affects*(25, assign)  such that Affects(_, assign) with call.procName=read.varName with 3700=assign.stmt#  pattern while(if, _)  such that Parent*(_, print) with "then"=read.varName  pattern while(constant, _) with "assign"=read.varName  pattern assign(_, _"9200*6600"_)  such that Parent*(stmt, if)  pattern while(_, _) with procedure.procName=call.procName with read.varName="assign" with read.varName=variable.varName  such that Follows(assign, _)  such that Next(if, 26)  pattern while(procedure, _)  pattern assign(_, _)  such that Uses(if, _) with 3000=while.stmt#  pattern assign(read, _"4900*200"_) with "assign"=procedure.procName  such that Follows(read, assign)  pattern assign(else, "7900-2600")  such that Next*(if, _)  pattern if(print, _, _) with print.stmt#=print.stmt# with print.stmt#=read.stmt#  pattern assign(_, _)  pattern if(procedure, _, _)  pattern if(variable, _, _) with procedure.procName="call"  pattern assign(variable, "(2900-9000)-3500")  pattern assign(_, "variable+6200")  pattern assign(_, _) with print.varName="constant"  such that Affects*(8, assign)  pattern if(then, _, _) with procedure.procName="call"  such that Parent(print, while) with 6600=assign.stmt#  pattern while(_, _)  such that Next(_, if) with read.stmt#=4300  such that Next(5, call)  pattern assign(constant, _)  pattern while(variable, _)  pattern assign(_, "400*read")  pattern assign(assign, _)  pattern if(_, _, _)  pattern while(_, _)  such that Parent*(call, _) with stmt.stmt#=constant.value  pattern assign(_, _)  such that Parent*(read, _)  pattern if(print, _, _) with procedure.procName="call"  pattern assign(print, _"5600/6000"_)  pattern if(variable, _, _) with call.procName=call.procName  such that Parent*(_, stmt)  pattern assign(variable, _"5100+2300"_) with 8400=assign.stmt#  pattern assign(print, _) with while.stmt#=call.stmt#  pattern assign(_, _"7300+2200"_)  such that Next*(print, _)  such that Follows(print, _)  such that Parent(_, if)  such that Affects(stmt, 11)  pattern if(_, _, _)  pattern assign(_, "9400+3500")  such that Modifies(assign, "assign")  pattern while(constant, _) with print.varName="constant"  such that Follows(_, while)  such that Follows(call, while) with while.stmt#=5500  pattern assign(variable, "5000+2800") 

5000
80 - Query 80
assign assign; variable variable; constant constant; print print; stmt stmt; read read; procedure procedure; if if; while while; call call; 
Select <assign, variable, constant, print, stmt, read, procedure, if, while, call>  such that Affects*(stmt, assign) with procedure.procName="call"  pattern if(variable, _, _) with 1000=stmt.stmt# with constant.value=9400  such that Parent(call, if) with constant.value=8400 with "procedure"=variable.varName  pattern while(variable, _)  such that Uses(if, variable)  such that Follows(15, while) with procedure.procName="variable"  such that Calls("read", procedure)  such that Modifies(read, variable)  such that Affects*(assign, _)  such that Calls(procedure, _)  pattern while(procedure, _)  such that Affects*(assign, assign)  such that Modifies(18, variable) with call.stmt#=7700 with 3500=read.stmt#  such that Follows*(2, if) with "if"=read.varName  pattern assign(while, _)  pattern assign(read, _"9600*4900"_) with read.varName=print.varName  pattern assign(variable, _)  such that Parent*(_, stmt)  such that Modifies(print, variable) with while.stmt#=constant.value  pattern if(call, _, _)  such that Calls*(_, procedure)  pattern while(_, _) with read.stmt#=if.stmt#  such that Calls*(procedure, _)  pattern while(print, _)  pattern if(_, _, _)  such that Affects(stmt, stmt) with variable.varName="variable"  pattern if(_, _, _)  pattern assign(variable, "5000-8900")  pattern if(while, _, _) with 8100=while.stmt#  pattern assign(variable, _)  such that Follows(_, print) with 4600=if.stmt#  pattern while(variable, _) with 8000=while.stmt#  such that Parent*(while, _)  pattern if(variable, _, _)  pattern if(call, _, _)  such that Calls*(_, procedure)  such that Parent(read, assign)  pattern while(variable, _)  pattern assign(then, _)  pattern if(constant, _, _)  pattern while(variable, _)  such that Calls(_, procedure) with read.stmt#=stmt.stmt# with variable.varName=procedure.procName  pattern assign(read, _) with read.stmt#=9200  pattern assign(variable, "9600/9600")  pattern while(variable, _) with "variable"=read.varName  such that Uses(if, variable)  pattern if(constant, _, _) with "constant"=call.procName with read.varName="call"  pattern while(variable, _)  such that Follows*(print, _)  pattern assign(print, "(3300-8600)/8500")  pattern assign(variable, _"9400+4400"_)  such that Calls*(_, procedure) with constant.value=while.stmt#  pattern while(variable, _) with procedure.procName=print.varName  pattern while(_, _)  pattern if(_, _, _)  such that Calls(procedure, procedure)  such that Parent*(while, _)  such that Affects(stmt, assign)  pattern while(_, _) with "read"=variable.varName with variable.varName="call" with call.stmt#=if.stmt#  pattern assign(variable, _)  pattern assign(_, "3400-7900")  pattern if(_, _, _)  such that Modifies(while, _)  pattern assign(if, "8700/4200")  such that Modifies(15, variable) with read.stmt#=6800  pattern if(while, _, _)  pattern assign(_, _) with stmt.stmt#=if.stmt#  such that Parent*(stmt, 12)  such that Calls(procedure, "if")  pattern while(then, _)  pattern while(procedure, _) with call.procName="print"  pattern if(variable, _, _)  pattern assign(call, _"2600/2200"_)  pattern assign(variable, "2700+4600")  such that Follows*(1, if)  such that Next*(21, call)  pattern while(_, _)  such that Next(_, while)  such that Next(stmt, _) with stmt.stmt#=4600 with "constant"=print.varName  such that Next(23, assign)  pattern while(else, _)  pattern assign(_, _)  pattern if(while, _, _) with call.procName=read.varName with print.varName="procedure"  such that Uses(print, _)  pattern if(while, _, _) with print.stmt#=stmt.stmt#  pattern while(variable, _)  pattern while(variable, _)  pattern if(if, _, _)  such that Uses(read, _)  such that Parent(25, stmt)  pattern while(procedure, _) with assign.stmt#=5500 with read.stmt#=if.stmt#  such that Modifies(assign, _)  pattern if(_, _, _)  pattern if(constant, _, _)  pattern assign(read, _)  pattern assign(then, _"(8700+4800)*8400"_)  pattern if(assign, _, _) with constant.value=stmt.stmt# with print.stmt#=while.stmt#  pattern assign(call, _"1300-5800"_)  pattern assign(variable, "1600-500") with 3800=print.stmt#  pattern while(read, _)  pattern while(else, _)  pattern if(read, _, _)  pattern assign(variable, _"4400/8200"_)  pattern if(_, _, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern if(print, _, _)  pattern while(_, _)  pattern while(variable, _) with 7100=print.stmt# with 800=while.stmt#  pattern if(print, _, _)  pattern while(constant, _)  such that Follows*(if, _)  pattern if(print, _, _) with "assign"=variable.varName  such that Modifies(while, _)  pattern assign(if, _)  such that Parent*(28, call)  pattern if(variable, _, _)  pattern while(variable, _) with procedure.procName="while"  such that Parent*(stmt, while)  pattern assign(_, "7800+6500")  pattern assign(procedure, _"200-3000"_)  such that Calls*("then", procedure)  pattern if(assign, _, _)  pattern assign(_, _"read/400"_) with assign.stmt#=1400  pattern assign(_, "1400+9500") with 4100=stmt.stmt#  such that Uses(procedure, variable) with read.varName=variable.varName  such that Follows(while, stmt)  such that Parent(assign, 11)  such that Calls(procedure, procedure) with 900=while.stmt#  such that Follows*(while, 21)  pattern if(variable, _, _) with if.stmt#=read.stmt#  such that Next(17, assign)  pattern assign(_, _)  pattern while(_, _)  pattern if(constant, _, _)  pattern if(call, _, _) with call.procName="variable"  such that Next*(_, while)  such that Calls(_, procedure) with print.varName="else"  pattern if(else, _, _)  pattern while(variable, _)  pattern assign(assign, "8900*8300")  pattern assign(variable, _)  pattern if(variable, _, _)  pattern assign(variable, _"variable-7100"_) with constant.value=6400  pattern while(print, _)  pattern assign(variable, _"while/print"_)  pattern while(print, _)  such that Parent*(25, while)  pattern if(procedure, _, _)  such that Next(_, read)  pattern while(variable, _)  such that Parent*(call, while)  pattern while(_, _)  pattern if(print, _, _) with "procedure"=read.varName  pattern while(_, _)  such that Calls*(_, procedure)  such that Calls*(procedure, _)  pattern assign(then, _) with call.procName="variable"  such that Affects(stmt, assign)  pattern while(then, _)  such that Next(while, _)  such that Follows*(read, call)  pattern assign(variable, "(4700-7200)+3100")  pattern while(while, _) with 3700=print.stmt#  such that Follows*(read, 18) with if.stmt#=8000  such that Follows*(call, 29)  pattern while(print, _)  pattern assign(constant, _"(5000-9300)/4900"_)  such that Next*(while, _)  such that Follows*(assign, _) with variable.varName=print.varName  pattern if(else, _, _)  such that Next(stmt, stmt)  pattern while(procedure, _) with constant.value=assign.stmt#  pattern while(_, _) with variable.varName=variable.varName  such that Next(while, if)  pattern assign(_, _)  pattern assign(variable, "9600*variable") with "call"=variable.varName  pattern while(_, _)  such that Affects*(stmt, assign)  pattern while(_, _)  such that Follows(while, while)  pattern if(_, _, _)  such that Follows(read, 27)  such that Follows(call, _)  pattern assign(variable, _) with print.varName=read.varName  such that Affects(stmt, stmt)  pattern assign(print, _"call-3000"_) with 4800=constant.value  such that Uses(while, _) with "while"=call.procName with assign.stmt#=stmt.stmt#  pattern while(then, _)  such that Next*(24, print)  such that Follows(read, 24)  such that Uses(if, variable)  pattern while(variable, _)  such that Next(20, stmt)  pattern if(variable, _, _) with while.stmt#=call.stmt# with assign.stmt#=stmt.stmt# with 6700=while.stmt#  such that Calls(_, procedure)  such that Follows*(call, 19) with call.procName=procedure.procName  such that Modifies(read, _) with call.procName="assign"  pattern while(variable, _)  such that Affects(17, assign)  pattern while(constant, _)  such that Modifies(call, variable) with procedure.procName="assign"  pattern if(_, _, _)  pattern assign(variable, _)  pattern while(_, _)  pattern if(_, _, _)  such that Affects(assign, 24) with read.varName=procedure.procName  pattern assign(_, "4700+2700") with print.varName="if"  pattern if(_, _, _) with "constant"=variable.varName with constant.value=print.stmt#  pattern if(_, _, _)  such that Modifies(25, variable) with read.varName="constant"  pattern if(variable, _, _)  pattern if(procedure, _, _) with procedure.procName="while"  pattern if(_, _, _)  pattern while(assign, _) with read.varName="print" with 100=print.stmt#  pattern if(_, _, _)  pattern if(variable, _, _) with read.varName=procedure.procName  pattern while(variable, _)  pattern while(_, _)  pattern if(_, _, _)  such that Follows(_, print)  such that Parent*(print, 3) with call.stmt#=400 with call.procName="print"  such that Modifies(read, "then")  such that Parent(print, _)  pattern if(else, _, _)  pattern assign(_, _)  pattern assign(_, _"3500+2700"_)  pattern while(variable, _)  pattern if(_, _, _)  such that Next(_, assign)  pattern if(procedure, _, _)  such that Parent*(print, 1)  pattern while(_, _)  such that Follows(read, assign) with 2000=while.stmt#  pattern while(variable, _)  pattern assign(_, "1100*7500") with variable.varName=call.procName  such that Next(assign, _)  pattern while(assign, _)  pattern if(else, _, _)  pattern assign(then, _"800/9500"_)  such that Follows(_, while)  pattern while(read, _)  pattern assign(read, _"constant+7500"_)  such that Calls*(procedure, "procedure") with "variable"=print.varName  pattern assign(variable, _) with read.stmt#=call.stmt# with "else"=procedure.procName  pattern assign(_, _)  such that Affects*(assign, _) with constant.value=4400  pattern while(_, _)  pattern if(_, _, _) with print.varName=read.varName  pattern if(read, _, _)  pattern assign(_, _"procedure/8900"_)  such that Follows*(25, call)  pattern while(_, _) with while.stmt#=while.stmt#  pattern assign(variable, _)  pattern if(assign, _, _)  such that Affects*(assign, _)  pattern while(_, _)  such that Uses(stmt, variable) with print.varName="then"  such that Affects(_, assign) with variable.varName="variable" with print.varName=print.varName  pattern while(_, _)  pattern assign(constant, _)  such that Follows*(read, _) with assign.stmt#=constant.value with read.varName="if"  such that Parent*(if, call) with read.stmt#=call.stmt#  such that Modifies(29, variable)  such that Parent*(_, while)  pattern while(variable, _) with constant.value=assign.stmt#  such that Follows(assign, 4)  such that Modifies(print, "assign") with call.procName=read.varName with stmt.stmt#=stmt.stmt# with call.procName="read" with read.varName="assign"  such that Uses(assign, variable) with call.procName=call.procName  pattern while(_, _) with 2300=print.stmt#  such that Next(stmt, while)  pattern assign(_, "3500+3900")  pattern while(_, _)  such that Calls*(procedure, procedure) with constant.value=constant.value  pattern while(else, _) with procedure.procName="read"  such that Next*(16, read)  pattern assign(_, _) with read.stmt#=4900  such that Calls(procedure, "then") with procedure.procName="read"  such that Calls(procedure, _)  pattern if(_, _, _)  pattern if(_, _, _)  pattern if(procedure, _, _) with "procedure"=variable.varName  such that Calls(_, procedure) with 8600=if.stmt#  pattern if(variable, _, _)  pattern while(while, _) with "assign"=call.procName  pattern assign(_, _"800*8300"_)  such that Parent(while, _)  pattern assign(variable, _)  such that Calls(procedure, procedure) with variable.varName="while" with "assign"=procedure.procName  pattern if(variable, _, _)  such that Next*(while, stmt)  pattern assign(variable, _)  such that Calls(procedure, "call") with read.varName=variable.varName with read.stmt#=print.stmt#  such that Next(print, _)  pattern while(else, _) with "variable"=read.varName with "else"=procedure.procName  pattern while(constant, _)  such that Follows*(if, while)  pattern assign(_, _)  pattern if(_, _, _) with "constant"=procedure.procName with 9000=print.stmt# with call.procName=read.varName  pattern assign(procedure, _"call-8200"_) with stmt.stmt#=7200  pattern while(variable, _)  such that Parent*(call, stmt)  such that Follows(_, if)  pattern assign(variable, _"3000*5900"_)  pattern while(then, _)  pattern if(_, _, _) with 200=print.stmt# with 7900=constant.value  pattern if(variable, _, _)  such that Parent(_, if)  such that Parent*(7, assign)  pattern assign(_, _"5000+while"_)  such that Calls(_, procedure)  such that Affects(assign, 12)  pattern while(variable, _)  pattern if(variable, _, _)  such that Next*(stmt, _) with "then"=variable.varName  pattern if(if, _, _) with call.procName="if"  pattern while(variable, _)  such that Parent(24, print) with stmt.stmt#=assign.stmt#  such that Affects*(assign, _)  pattern if(while, _, _)  such that Parent*(19, if)  pattern assign(_, "(2200/2700)/1500") with assign.stmt#=call.stmt# with call.procName="constant" with print.stmt#=while.stmt#  pattern assign(_, _"2900+800"_)  such that Affects*(21, stmt)  pattern assign(variable, "3200*5100")  such that Affects(stmt, _)  pattern while(variable, _) with while.stmt#=7600 with constant.value=5600  pattern assign(variable, _"5000/700"_)  pattern while(variable, _)  pattern if(_, _, _) with read.stmt#=300  pattern while(variable, _) with read.stmt#=if.stmt#  pattern while(_, _)  such that Modifies(stmt, variable)  pattern if(_, _, _)  such that Parent(stmt, while)  pattern assign(variable, "1500-1300") with 1800=read.stmt# with print.stmt#=print.stmt#  such that Follows*(call, _)  pattern if(_, _, _) with 2700=print.stmt#  pattern assign(_, _"1900*else"_)  pattern while(_, _)  pattern if(variable, _, _)  pattern if(_, _, _)  such that Calls*("else", procedure)  such that Next(_, read)  pattern while(variable, _) with read.stmt#=5100  pattern assign(_, _"9700*7100"_) with 8100=print.stmt# with "if"=variable.varName with read.stmt#=5500  pattern assign(then, "4400+5400")  such that Follows*(while, _) with assign.stmt#=8500  pattern if(then, _, _)  pattern if(variable, _, _) with print.varName="if"  such that Modifies(assign, "if")  such that Uses(if, "print") with stmt.stmt#=4900  pattern while(_, _)  such that Modifies(read, variable) with "assign"=read.varName  such that Parent*(_, read)  such that Next(10, if) 

5000
81 - Query 81
print print; assign assign; variable variable; constant constant; stmt stmt; read read; procedure procedure; while while; if if; call call; 
Select <print, assign, variable, constant, stmt, read, procedure, while, if, call>  pattern assign(print, _)  pattern assign(_, _)  such that Follows(call, assign)  pattern while(then, _) with 3700=print.stmt#  pattern assign(procedure, _"9300-8100"_)  pattern if(variable, _, _) with call.procName="if"  such that Calls(procedure, "print")  pattern while(_, _)  pattern if(print, _, _)  pattern if(_, _, _)  such that Follows(13, read)  pattern if(procedure, _, _)  such that Affects(_, stmt)  pattern if(call, _, _)  such that Next*(_, stmt)  pattern assign(variable, "7500/6200")  such that Parent*(22, call)  pattern assign(variable, "(4000/9000)*7900") with print.stmt#=print.stmt#  pattern assign(procedure, _"6300/9900"_) with procedure.procName=procedure.procName  pattern while(constant, _)  such that Calls(procedure, procedure)  pattern if(if, _, _) with "print"=print.varName with if.stmt#=call.stmt#  pattern assign(_, _) with "variable"=variable.varName  pattern while(_, _)  such that Parent*(4, read)  such that Calls(procedure, _)  pattern while(_, _) with call.stmt#=constant.value  pattern while(_, _)  such that Calls*(procedure, procedure) with procedure.procName=read.varName with print.varName=call.procName  pattern assign(variable, _"(5800-if)-8600"_)  pattern while(_, _)  such that Parent*(if, _)  pattern assign(variable, _"500/6800"_) with constant.value=6800  pattern assign(call, _"6200*variable"_) with "constant"=print.varName  pattern if(then, _, _) with 6000=constant.value with variable.varName=print.varName  pattern while(_, _)  pattern assign(print, "2400*8900") with read.varName="else"  such that Affects(assign, stmt)  such that Follows*(assign, _)  pattern while(variable, _) with while.stmt#=call.stmt#  pattern while(_, _) with "assign"=read.varName with read.stmt#=print.stmt# with constant.value=print.stmt#  pattern assign(variable, _"else*6700"_)  such that Next(_, print)  pattern while(_, _)  pattern if(_, _, _) with constant.value=7700  such that Follows(if, 28) with variable.varName="then"  pattern while(variable, _)  pattern while(call, _) with print.stmt#=read.stmt#  pattern while(call, _)  such that Calls*(procedure, _) with "variable"=call.procName  pattern if(assign, _, _)  pattern while(_, _) with call.stmt#=call.stmt#  such that Calls(procedure, procedure)  such that Calls(procedure, "print") with print.varName="read"  such that Uses(if, "call")  pattern while(assign, _)  pattern while(_, _) with "print"=procedure.procName  pattern assign(variable, "7700/7400") with while.stmt#=print.stmt#  pattern if(call, _, _)  such that Calls(procedure, procedure)  pattern assign(variable, _) with 4700=constant.value  pattern if(print, _, _) with while.stmt#=constant.value  pattern while(_, _) with print.varName="assign"  pattern if(_, _, _)  such that Affects(stmt, 26)  such that Uses(if, variable)  pattern while(_, _) with "while"=procedure.procName with read.stmt#=4300  such that Parent(assign, 22)  such that Uses(22, variable)  such that Calls*(procedure, "constant")  pattern assign(variable, _) with read.varName=read.varName  such that Next*(stmt, _) with procedure.procName="call" with call.stmt#=read.stmt#  pattern if(_, _, _)  such that Modifies(stmt, variable)  such that Follows(stmt, 9)  such that Modifies(27, variable) with constant.value=6100  such that Parent(_, while)  pattern assign(_, "7200+300")  such that Modifies(if, variable)  pattern if(read, _, _) with call.stmt#=8500  pattern assign(then, "6300+7200")  pattern assign(_, "8300+5000")  pattern while(variable, _)  pattern if(procedure, _, _)  pattern if(_, _, _)  pattern assign(variable, "6400+900")  pattern if(variable, _, _) with "constant"=print.varName  pattern while(assign, _) with procedure.procName="procedure"  pattern while(_, _)  such that Calls(procedure, _)  pattern if(_, _, _)  such that Follows*(stmt, _)  such that Next(call, _)  such that Next*(call, while)  such that Follows*(27, while)  such that Affects(17, stmt)  pattern assign(_, _"9500-700"_)  such that Calls*("while", procedure)  pattern while(constant, _)  such that Affects*(_, stmt) with read.stmt#=9000  pattern assign(call, _"(1300+1100)-call"_)  such that Follows(26, stmt)  pattern if(_, _, _)  pattern while(variable, _)  pattern while(read, _) with call.stmt#=print.stmt#  pattern assign(_, "6000/read")  pattern while(_, _)  such that Calls*(procedure, _)  pattern while(read, _)  pattern while(print, _) with 3400=call.stmt#  such that Modifies(while, variable)  such that Next*(print, 17)  such that Uses(16, variable) with if.stmt#=constant.value with while.stmt#=call.stmt#  pattern assign(_, "8800*5300")  pattern while(assign, _)  pattern assign(variable, "4100+9000")  pattern while(_, _)  pattern while(variable, _) with "then"=print.varName  pattern while(assign, _)  pattern while(_, _)  such that Calls(procedure, procedure)  pattern if(variable, _, _)  such that Follows(15, assign)  pattern while(constant, _)  such that Follows*(stmt, _)  pattern assign(call, _"read/1000"_) with print.varName="read"  pattern if(_, _, _)  such that Uses(23, variable)  such that Affects*(assign, 12)  pattern if(variable, _, _)  pattern assign(variable, _"9600+9800"_)  pattern assign(variable, "1500-1100")  pattern if(_, _, _) with call.procName="read" with while.stmt#=9300 with "if"=procedure.procName  pattern if(read, _, _)  such that Follows*(_, while) with "assign"=variable.varName  such that Next(read, stmt)  pattern assign(variable, _"1100/6400"_)  such that Next(stmt, 16)  such that Affects(stmt, _)  pattern while(procedure, _) with if.stmt#=print.stmt#  pattern assign(_, _)  pattern while(then, _) with read.varName=variable.varName  pattern assign(procedure, _)  such that Affects(assign, _)  such that Next(_, print) with call.procName=read.varName  pattern while(variable, _) with assign.stmt#=1000  pattern while(variable, _)  such that Follows(_, while)  such that Calls*("constant", procedure)  pattern while(_, _)  pattern if(while, _, _)  pattern while(_, _) with assign.stmt#=while.stmt#  pattern while(while, _)  pattern assign(variable, _"9000/4800"_) with call.stmt#=print.stmt#  pattern while(_, _) with 2800=stmt.stmt#  pattern while(while, _) with 8900=read.stmt#  such that Affects(_, stmt)  pattern if(variable, _, _)  pattern if(print, _, _) with if.stmt#=2300  such that Affects*(_, assign)  pattern assign(_, "variable-constant")  such that Parent(_, print) with print.varName="procedure" with read.varName="read"  such that Affects(_, assign)  pattern assign(call, _)  such that Parent*(if, stmt)  pattern assign(_, _"3000/200"_)  pattern while(then, _)  such that Parent*(_, read)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern assign(_, "3800+1600")  pattern assign(_, _"5400+6700"_)  pattern assign(else, _)  such that Parent(_, print)  such that Follows*(_, print)  pattern while(variable, _) with print.stmt#=9500  such that Parent*(read, 8)  pattern assign(variable, _"1200*5200"_)  such that Next(assign, _) with print.varName="if"  pattern while(variable, _) with 4600=assign.stmt#  pattern if(variable, _, _)  pattern if(print, _, _) with print.varName="constant" with print.varName=procedure.procName  pattern assign(variable, "4000/read")  pattern if(procedure, _, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern while(_, _) with read.stmt#=read.stmt#  pattern while(variable, _)  such that Uses(if, _)  such that Affects*(stmt, _)  such that Uses(4, variable)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern if(variable, _, _)  such that Modifies(while, "then") with procedure.procName=variable.varName  pattern assign(variable, _"9400-4400"_) with constant.value=stmt.stmt#  such that Parent(19, stmt)  pattern assign(else, _) with read.stmt#=7800  such that Parent(_, while)  pattern assign(variable, _"600+else"_)  such that Calls(procedure, _)  such that Parent*(read, _) with procedure.procName=procedure.procName  pattern while(_, _) with read.stmt#=assign.stmt# with read.varName=call.procName  pattern while(print, _)  pattern assign(_, _)  pattern assign(assign, _)  such that Uses(21, variable)  such that Affects(assign, 14)  pattern while(variable, _)  pattern assign(read, _"1800/3200"_) with assign.stmt#=2000 with print.varName=print.varName with constant.value=call.stmt# with procedure.procName=variable.varName  pattern while(variable, _) with print.stmt#=7300  pattern if(_, _, _)  such that Calls(procedure, _) with if.stmt#=read.stmt#  such that Affects(assign, stmt)  pattern while(_, _)  such that Affects*(assign, assign)  pattern assign(_, _"while+2900"_) with "constant"=call.procName with "procedure"=read.varName  pattern if(_, _, _)  pattern if(variable, _, _) with procedure.procName="if"  such that Affects*(stmt, 2)  such that Follows*(print, 23)  such that Parent(27, print)  such that Next(call, if)  such that Parent*(6, call) with call.procName="procedure"  such that Follows(call, 17)  such that Calls*("constant", procedure) with print.varName=variable.varName with 5800=if.stmt#  such that Affects*(20, stmt)  such that Calls(_, procedure)  pattern while(_, _) with variable.varName=call.procName  pattern if(variable, _, _)  pattern if(_, _, _)  pattern while(procedure, _)  such that Calls*(_, procedure) with "procedure"=variable.varName  such that Parent(8, call) with stmt.stmt#=2900  pattern while(variable, _)  pattern assign(_, _) with 4200=call.stmt# with print.stmt#=6300  pattern if(while, _, _) with constant.value=2400  pattern while(while, _)  pattern if(variable, _, _)  such that Calls("read", procedure)  such that Calls*(procedure, _) with while.stmt#=assign.stmt#  pattern if(variable, _, _)  pattern assign(variable, _)  pattern while(_, _)  pattern assign(_, _)  such that Calls*(procedure, "assign")  such that Affects*(assign, 2)  pattern if(_, _, _) with 8200=read.stmt# with 1900=print.stmt#  such that Follows(_, stmt)  pattern while(variable, _)  such that Affects*(stmt, _) with "while"=variable.varName  such that Uses(print, _)  such that Follows(call, _)  pattern assign(variable, _)  pattern while(_, _) with variable.varName=variable.varName with 1800=stmt.stmt# with 7100=print.stmt# with 6600=stmt.stmt# with read.varName="then"  pattern if(variable, _, _)  such that Calls*(procedure, _)  such that Affects*(stmt, _) with "read"=print.varName  such that Calls("else", procedure)  pattern assign(variable, _"2700/8900"_)  such that Affects*(_, assign) with variable.varName="call"  such that Modifies(assign, variable)  pattern if(procedure, _, _)  such that Parent*(stmt, _)  such that Calls("constant", procedure)  pattern if(_, _, _)  pattern assign(assign, _"1300+9400"_)  such that Parent*(_, stmt)  pattern while(_, _) with 8300=constant.value  pattern if(variable, _, _)  pattern assign(_, _"3000+5900"_)  pattern while(variable, _)  pattern while(constant, _)  pattern if(variable, _, _)  pattern if(then, _, _)  pattern while(variable, _)  pattern while(variable, _) with procedure.procName="else"  such that Parent(call, _)  pattern while(variable, _)  such that Calls*(_, procedure) with 400=call.stmt#  such that Next*(21, assign)  pattern assign(variable, _"6000-3400"_)  pattern while(_, _)  such that Modifies(print, "call")  such that Calls*(procedure, "then") with 2300=while.stmt#  pattern assign(variable, "2600+9200")  such that Next(print, _)  pattern while(assign, _) with print.varName=print.varName  pattern assign(variable, _"3300*6800"_)  such that Parent*(_, read)  such that Follows*(_, assign)  such that Modifies(18, variable) with "constant"=print.varName  such that Affects(stmt, _)  pattern if(constant, _, _) with call.procName=print.varName with print.varName=print.varName with 2500=while.stmt#  pattern while(_, _)  pattern assign(_, _"2900-4400"_)  pattern while(call, _)  such that Calls*(procedure, "then")  pattern if(while, _, _) with print.varName=call.procName  such that Parent*(call, _)  pattern while(_, _) with 7000=constant.value  pattern if(_, _, _) with stmt.stmt#=if.stmt#  pattern if(_, _, _)  pattern assign(constant, "6600/5300")  pattern while(variable, _) with call.procName=print.varName with procedure.procName=print.varName  pattern assign(print, _)  pattern while(constant, _)  pattern while(variable, _)  pattern while(variable, _)  pattern while(then, _) with procedure.procName="print"  such that Affects(assign, stmt)  pattern if(procedure, _, _) with "if"=procedure.procName with variable.varName=print.varName  pattern if(else, _, _) with read.varName="read" with "while"=procedure.procName with read.varName="else"  pattern if(variable, _, _)  pattern while(variable, _) with read.varName="procedure"  pattern if(call, _, _) with print.varName=variable.varName  such that Parent*(_, stmt) with call.procName=procedure.procName  pattern while(else, _)  pattern while(variable, _) with call.procName=variable.varName  pattern if(then, _, _) with print.varName=procedure.procName with read.varName=variable.varName  pattern while(else, _)  pattern assign(_, "5600-2200") with 5000=print.stmt#  pattern assign(_, _"3000-8500"_)  pattern if(call, _, _) with "if"=print.varName with 6400=read.stmt#  pattern if(variable, _, _) with procedure.procName=call.procName  such that Calls*(_, procedure)  pattern while(_, _)  such that Calls*("else", procedure)  pattern assign(variable, _) with "variable"=procedure.procName  pattern while(print, _) with 8800=constant.value  such that Next*(assign, _)  such that Modifies(assign, variable) with constant.value=stmt.stmt# with 2900=call.stmt#  such that Parent*(while, _)  pattern assign(_, _)  such that Follows(if, 7) with 3400=print.stmt#  pattern while(variable, _) with constant.value=9700  such that Uses(print, "if")  pattern while(_, _)  pattern assign(variable, _"3700/2400"_) with procedure.procName=procedure.procName with call.procName="if"  pattern while(variable, _)  such that Parent(print, 2) with call.stmt#=read.stmt#  pattern assign(_, _)  such that Parent(_, call) with while.stmt#=1500  pattern assign(variable, _"6300-7100"_)  pattern if(variable, _, _)  pattern if(_, _, _) with "procedure"=print.varName  pattern if(_, _, _)  such that Calls(procedure, "call") with procedure.procName=print.varName  pattern if(_, _, _)  pattern if(variable, _, _)  such that Parent*(25, assign)  such that Parent(1, print) with variable.varName=read.varName with "print"=call.procName 

5000
82 - Query 82
variable variable; assign assign; constant constant; print print; stmt stmt; read read; procedure procedure; while while; if if; call call; 
Select <variable, assign, constant, print, stmt, read, procedure, while, if, call>  such that Parent*(call, _) with variable.varName="if"  pattern assign(assign, _"9100*5500"_) with stmt.stmt#=400  such that Next*(assign, 28)  pattern assign(if, _)  pattern while(variable, _)  such that Calls*(procedure, "while") with while.stmt#=2300  pattern while(procedure, _)  pattern assign(_, _) with "while"=read.varName  pattern assign(variable, _"call+2300"_) with 1100=constant.value  such that Next(read, _) with call.stmt#=while.stmt# with "if"=variable.varName  pattern assign(variable, "2700+9700")  pattern if(while, _, _) with read.varName="while"  such that Calls*(procedure, procedure)  pattern assign(variable, "8000-1700")  pattern if(variable, _, _) with print.varName="assign"  such that Calls(procedure, procedure)  pattern assign(constant, "2400+9000")  pattern if(_, _, _)  such that Affects(_, stmt)  such that Affects(stmt, 12) with 7200=read.stmt# with call.stmt#=print.stmt#  pattern assign(_, _"8800-else"_) with print.stmt#=1800 with if.stmt#=3300 with 3100=read.stmt# with read.varName=procedure.procName  such that Uses(2, variable)  pattern if(variable, _, _) with 5100=stmt.stmt# with "constant"=read.varName  pattern assign(_, _"6300+call"_)  pattern if(assign, _, _) with 6000=if.stmt#  pattern if(variable, _, _)  such that Affects(_, assign)  pattern while(_, _)  pattern while(variable, _) with procedure.procName="if" with "assign"=call.procName  such that Modifies(while, _)  pattern assign(then, _"4300*4100"_)  pattern while(variable, _)  pattern assign(_, _)  such that Modifies(read, "constant")  such that Next(stmt, 20) with call.procName=read.varName  pattern assign(constant, _"6400-4200"_) with print.varName=print.varName with if.stmt#=while.stmt#  such that Affects(27, stmt)  pattern if(call, _, _) with procedure.procName="read"  pattern if(variable, _, _) with procedure.procName="call" with variable.varName=call.procName  pattern if(_, _, _) with read.stmt#=assign.stmt#  pattern while(_, _) with "then"=read.varName with constant.value=while.stmt#  pattern if(while, _, _) with print.stmt#=6000  such that Parent(print, 5)  pattern while(_, _) with 4000=while.stmt#  such that Calls*(procedure, procedure)  such that Follows(read, 19) with variable.varName="variable"  pattern if(_, _, _) with stmt.stmt#=stmt.stmt#  such that Modifies(18, variable)  such that Parent*(while, _) with read.stmt#=9400  such that Calls*(procedure, procedure)  pattern if(then, _, _) with 7900=if.stmt#  pattern while(variable, _)  pattern while(then, _)  pattern while(then, _)  such that Parent*(call, _)  pattern assign(variable, _"variable*300"_)  pattern assign(variable, _)  such that Modifies(assign, _) with while.stmt#=6600 with 8300=if.stmt# with call.procName="assign" with "else"=procedure.procName  pattern while(variable, _) with while.stmt#=assign.stmt#  pattern if(_, _, _) with call.procName=call.procName  pattern assign(_, _"2700+6400"_)  such that Follows*(print, _) with print.varName=procedure.procName  such that Follows*(_, read)  such that Calls*(procedure, _)  pattern while(variable, _)  pattern while(procedure, _)  pattern if(variable, _, _)  pattern if(_, _, _)  such that Affects*(assign, 27)  pattern assign(variable, _)  pattern while(variable, _)  pattern assign(variable, _"3400*7800"_) with call.procName="while" with "then"=call.procName  such that Follows(28, if)  such that Next*(if, print) with read.varName=read.varName  pattern assign(procedure, _)  such that Follows(9, stmt)  pattern if(_, _, _)  pattern while(call, _) with constant.value=200 with "constant"=read.varName  pattern assign(_, "6300/8700")  such that Uses(assign, _)  such that Affects*(stmt, _) with "print"=call.procName with stmt.stmt#=2200  such that Next*(if, stmt) with variable.varName="constant" with 3700=stmt.stmt#  pattern while(_, _) with "else"=procedure.procName with assign.stmt#=800 with "while"=read.varName with assign.stmt#=read.stmt# with "while"=call.procName  such that Next*(if, assign)  such that Affects*(_, stmt)  such that Next*(stmt, stmt) with if.stmt#=stmt.stmt# with "then"=read.varName  pattern while(variable, _)  such that Parent(if, _)  pattern assign(constant, _"1600/5600"_) with print.varName="else"  such that Affects(stmt, _)  pattern if(_, _, _) with "while"=read.varName  pattern if(read, _, _)  pattern assign(variable, _"2800*5600"_) with read.stmt#=print.stmt# with "print"=procedure.procName  such that Parent(call, 15)  such that Parent*(read, 17)  pattern while(_, _)  such that Follows*(14, print)  pattern assign(variable, _)  such that Parent(2, read)  pattern while(variable, _)  such that Follows(14, assign)  pattern while(read, _) with "assign"=print.varName  such that Next(while, _) with call.procName=print.varName  such that Affects*(assign, 28)  such that Modifies(procedure, variable)  such that Calls("read", procedure) with print.varName="then" with stmt.stmt#=5600 with variable.varName=variable.varName  pattern if(_, _, _)  such that Next(call, read)  pattern if(variable, _, _)  such that Affects*(10, stmt) with while.stmt#=constant.value with variable.varName=print.varName with stmt.stmt#=3600  pattern if(variable, _, _)  pattern assign(variable, _)  pattern assign(variable, _)  pattern assign(_, _"4600+else"_) with assign.stmt#=3600  pattern while(assign, _)  such that Next*(if, 26)  such that Affects*(stmt, _)  pattern assign(variable, _)  pattern while(else, _)  pattern assign(_, "6700*5800")  pattern while(_, _) with read.varName=procedure.procName  pattern if(_, _, _) with assign.stmt#=read.stmt# with 7700=while.stmt# with 4500=constant.value with variable.varName="procedure"  pattern if(_, _, _)  pattern while(variable, _)  pattern if(variable, _, _)  pattern assign(variable, _"200+2000"_) with call.stmt#=5000 with read.varName=read.varName with print.stmt#=5000  pattern if(assign, _, _) with while.stmt#=3300 with if.stmt#=6600  pattern if(variable, _, _)  such that Calls*(procedure, "constant") with 7600=stmt.stmt# with "then"=print.varName  pattern while(_, _)  pattern if(_, _, _)  such that Next*(print, _) with 3500=stmt.stmt#  pattern assign(variable, _)  pattern if(variable, _, _)  such that Follows(26, assign) with 6500=print.stmt#  pattern assign(procedure, "5400/8200")  pattern while(then, _)  pattern assign(_, _) with procedure.procName="print"  such that Next*(assign, _) with read.stmt#=if.stmt# with print.varName="procedure" with print.stmt#=4000 with constant.value=while.stmt#  pattern assign(_, _"(700-7100)/5600"_)  pattern while(variable, _)  such that Follows(stmt, 2) with if.stmt#=stmt.stmt# with variable.varName=variable.varName  pattern while(variable, _)  such that Calls*(procedure, "else")  such that Follows(_, while) with read.stmt#=1100  such that Follows*(print, 1)  pattern if(variable, _, _)  such that Calls("while", procedure)  such that Uses(procedure, variable) with variable.varName="if"  such that Follows*(while, stmt)  pattern while(variable, _) with procedure.procName=call.procName  such that Next(stmt, 2)  such that Parent(stmt, _)  such that Affects*(assign, assign)  such that Modifies(print, _) with procedure.procName=read.varName  pattern assign(read, "(3200-2000)-1300")  such that Parent*(call, 4)  pattern if(variable, _, _)  pattern while(if, _)  pattern assign(_, _"5900+800"_) with 6000=stmt.stmt#  pattern if(procedure, _, _)  pattern assign(variable, _"7300-6900"_)  such that Modifies(procedure, _)  such that Follows*(while, call)  pattern while(variable, _)  pattern if(assign, _, _)  pattern if(variable, _, _)  pattern while(_, _)  pattern if(_, _, _) with print.varName="constant"  pattern while(variable, _)  such that Calls*("variable", procedure) with read.stmt#=8000  pattern if(_, _, _) with 9900=print.stmt#  pattern assign(variable, "(9500*4200)*9600")  pattern assign(procedure, "1400/call")  pattern assign(procedure, _"9300/3200"_)  pattern while(while, _)  pattern if(variable, _, _) with assign.stmt#=900  such that Follows(_, if)  pattern while(procedure, _)  such that Uses(stmt, variable)  pattern assign(read, _"8000-4200"_) with if.stmt#=print.stmt#  such that Parent(print, 6)  pattern while(variable, _) with 8900=while.stmt#  pattern if(print, _, _)  pattern if(_, _, _)  pattern while(variable, _)  pattern while(while, _)  such that Modifies(procedure, _) with "constant"=read.varName  pattern while(variable, _)  pattern assign(read, "200-5000")  pattern if(variable, _, _)  such that Calls(procedure, _)  such that Calls*(_, procedure)  such that Affects(assign, 9) with read.varName="read"  pattern while(_, _)  pattern while(then, _)  pattern if(_, _, _)  pattern while(variable, _)  pattern while(variable, _)  pattern assign(if, _)  pattern if(_, _, _)  pattern while(constant, _)  pattern assign(variable, _)  pattern assign(print, _)  such that Parent(read, assign)  pattern assign(call, _)  pattern while(variable, _)  such that Next(call, stmt)  pattern assign(while, _"(5800*7200)/6500"_)  such that Modifies(assign, variable)  pattern assign(variable, _)  such that Modifies(print, variable)  pattern while(_, _)  pattern if(_, _, _)  pattern assign(variable, "8900/2900")  such that Affects*(stmt, assign)  such that Uses(while, "procedure")  pattern if(call, _, _)  pattern while(call, _) with read.varName=read.varName  such that Calls(procedure, _)  pattern assign(print, "2300/6600")  such that Next(assign, print)  such that Uses(print, _)  such that Next*(read, _)  such that Uses(19, variable)  pattern while(while, _)  pattern while(variable, _)  pattern if(variable, _, _)  such that Parent*(_, print) with "procedure"=read.varName  pattern while(_, _)  pattern assign(variable, _"(3800-6100)+1700"_) with "read"=read.varName with print.varName=call.procName with "assign"=procedure.procName with variable.varName=print.varName  such that Follows*(read, _)  pattern while(_, _)  pattern if(assign, _, _)  such that Next*(_, if)  such that Parent(call, _) with if.stmt#=5200 with 1600=stmt.stmt#  pattern if(procedure, _, _) with 4100=call.stmt#  pattern assign(if, _"else+6200"_)  pattern if(if, _, _)  pattern assign(_, _)  such that Affects(stmt, _)  pattern assign(_, _) with 3300=while.stmt#  pattern assign(if, _)  pattern assign(variable, "9800-2300") with 300=assign.stmt#  pattern if(procedure, _, _)  such that Parent(stmt, _) with variable.varName=variable.varName  such that Follows*(read, while) with call.procName="procedure"  such that Next*(15, stmt)  such that Uses(while, "assign")  pattern while(variable, _) with if.stmt#=if.stmt# with 9200=while.stmt#  such that Affects(assign, 1)  pattern if(variable, _, _)  pattern assign(procedure, _) with call.procName=variable.varName  pattern assign(assign, _) with 7100=stmt.stmt#  pattern assign(variable, "4300-4700")  such that Follows*(while, while)  pattern if(read, _, _) with "else"=call.procName  pattern if(variable, _, _)  pattern if(_, _, _)  pattern assign(print, _)  such that Follows(read, if)  such that Next*(_, read)  pattern assign(constant, _)  pattern while(variable, _)  pattern if(if, _, _) with "then"=read.varName  pattern if(variable, _, _)  pattern if(then, _, _) with "while"=print.varName with "else"=variable.varName  pattern if(variable, _, _)  pattern assign(variable, _) with "then"=read.varName  such that Parent*(26, assign)  pattern assign(_, _"9000+7800"_)  pattern if(variable, _, _)  pattern assign(variable, _"9200/8600"_)  pattern if(_, _, _)  such that Affects(21, assign)  such that Affects*(assign, assign) with 6700=constant.value  pattern while(else, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern if(variable, _, _) with print.stmt#=3000  pattern if(_, _, _)  such that Uses(stmt, _) with "print"=print.varName  pattern while(_, _) with if.stmt#=9900  pattern assign(variable, "(8300/1800)*9800") with "procedure"=procedure.procName  pattern if(variable, _, _) with variable.varName=procedure.procName  such that Uses(assign, "assign")  such that Parent(18, assign) with 5600=while.stmt# with "while"=procedure.procName  such that Affects(20, stmt)  pattern while(_, _) with "else"=procedure.procName  such that Next*(assign, _)  pattern assign(else, _"5000/2800"_)  pattern if(if, _, _)  pattern assign(variable, _)  pattern if(_, _, _) with while.stmt#=if.stmt#  pattern assign(assign, "then/5800") with procedure.procName="procedure"  pattern assign(assign, "7800/6400")  pattern if(variable, _, _) with "variable"=procedure.procName with print.stmt#=600  such that Next(5, stmt) with 5900=if.stmt#  such that Affects(stmt, assign) with "constant"=call.procName  pattern while(variable, _)  pattern if(_, _, _) with "assign"=call.procName  pattern assign(variable, _"3300-4300"_)  pattern if(variable, _, _)  pattern if(_, _, _) with "variable"=read.varName  pattern while(if, _)  pattern if(variable, _, _)  pattern if(if, _, _) with assign.stmt#=while.stmt#  pattern if(variable, _, _)  pattern assign(variable, _) with if.stmt#=9400 with call.stmt#=print.stmt#  pattern while(read, _)  pattern while(_, _) with if.stmt#=500 with 8600=print.stmt# with assign.stmt#=read.stmt#  pattern while(_, _) with procedure.procName="then"  such that Next*(stmt, stmt)  pattern assign(while, _"3100-7900"_)  pattern assign(_, _"1600/7400"_) with call.procName=read.varName with read.varName="then"  pattern while(_, _) with procedure.procName=procedure.procName  pattern assign(print, "8800-7900")  pattern while(_, _)  pattern assign(_, "(6900-3500)-8900")  pattern while(_, _)  such that Next*(24, read) with constant.value=7600  pattern if(_, _, _)  pattern while(_, _) with print.stmt#=5400 with print.varName=call.procName  such that Affects*(stmt, stmt)  pattern while(variable, _) with print.varName=procedure.procName  pattern assign(_, "7400*while") with if.stmt#=4400 with variable.varName=print.varName  pattern while(_, _)  pattern while(read, _)  pattern while(variable, _) with 3100=stmt.stmt#  pattern assign(constant, "assign/3400")  such that Next*(1, call) with 700=if.stmt#  pattern if(print, _, _) with call.procName=print.varName  such that Next(print, 16) with stmt.stmt#=7800 with "call"=print.varName  pattern while(variable, _)  pattern if(then, _, _) 

5000
83 - Query 83
print print; variable variable; constant constant; assign assign; call call; stmt stmt; read read; if if; while while; procedure procedure; 
Select <print, variable, constant, assign, call, stmt, read, if, while, procedure> with 6200=print.stmt#  such that Modifies(if, variable)  pattern while(constant, _)  pattern if(procedure, _, _)  pattern if(procedure, _, _) with "if"=procedure.procName  such that Modifies(stmt, _)  such that Calls(_, procedure)  pattern if(_, _, _) with constant.value=2200  pattern if(variable, _, _) with stmt.stmt#=assign.stmt#  pattern while(variable, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  such that Calls(_, procedure)  such that Calls*(_, procedure)  pattern assign(_, "6900/6300")  such that Follows(11, assign)  such that Modifies(read, _) with read.varName=print.varName  such that Parent*(read, assign) with "else"=call.procName  pattern assign(print, _"(4700*2000)-600"_)  such that Follows(call, read)  pattern assign(else, _) with read.varName="while"  such that Parent(call, call)  pattern if(_, _, _) with 8300=stmt.stmt#  such that Modifies(read, "else")  pattern assign(_, _"5700/7600"_)  pattern assign(_, _"7500*800"_)  pattern if(variable, _, _)  pattern assign(_, _)  pattern if(if, _, _)  pattern while(assign, _) with print.varName="constant"  pattern while(print, _)  such that Modifies(print, _) with call.stmt#=print.stmt#  such that Calls(_, procedure)  pattern if(if, _, _)  pattern assign(variable, _) with stmt.stmt#=print.stmt#  pattern while(variable, _) with variable.varName=call.procName  such that Affects(assign, 9)  pattern assign(read, _"2700*5100"_) with procedure.procName=call.procName with "else"=procedure.procName  pattern if(_, _, _)  such that Next(assign, 13)  pattern if(_, _, _) with "read"=variable.varName  pattern if(_, _, _)  such that Next*(23, if) with variable.varName=variable.varName with "procedure"=call.procName  pattern while(variable, _)  pattern assign(while, "8500/3200")  such that Next(assign, while)  pattern while(then, _) with "if"=call.procName  pattern if(variable, _, _)  pattern while(_, _) with read.stmt#=4000  such that Uses(while, variable)  pattern while(assign, _)  pattern assign(variable, "1200-6600") with 4400=read.stmt#  pattern if(else, _, _) with 1100=print.stmt#  pattern assign(procedure, _) with read.varName=print.varName  pattern assign(procedure, _)  pattern assign(variable, _)  pattern if(_, _, _) with "read"=variable.varName  pattern while(print, _)  pattern while(assign, _)  pattern while(variable, _) with "variable"=variable.varName  such that Parent(print, _)  pattern assign(_, "call+procedure")  pattern while(_, _) with variable.varName="then" with assign.stmt#=6300  such that Parent*(_, if) with stmt.stmt#=assign.stmt# with print.stmt#=4400 with constant.value=while.stmt#  such that Modifies(assign, "variable") with 9000=if.stmt#  pattern assign(_, _"1600*8300"_)  pattern assign(read, _)  such that Next(read, _)  pattern if(variable, _, _)  pattern while(variable, _)  such that Parent(while, while) with while.stmt#=8800 with "procedure"=procedure.procName  pattern while(constant, _)  such that Affects*(stmt, assign)  pattern assign(variable, _) with 5400=constant.value  pattern assign(_, _)  such that Calls*("read", procedure)  such that Calls(procedure, _) with if.stmt#=2200  pattern while(variable, _)  such that Affects(assign, assign) with call.stmt#=call.stmt#  pattern assign(variable, _"(8200-8600)+4100"_)  pattern while(constant, _)  pattern while(assign, _)  such that Calls*(procedure, procedure) with print.stmt#=8000  pattern while(variable, _)  pattern if(then, _, _)  pattern assign(variable, _) with call.stmt#=600  pattern if(_, _, _)  pattern assign(variable, _)  pattern assign(while, _)  pattern if(then, _, _) with call.procName=print.varName  pattern assign(_, _) with if.stmt#=2600  pattern if(_, _, _)  pattern while(else, _) with variable.varName=procedure.procName  such that Next(26, call)  pattern assign(else, _"5400/9200"_) with "assign"=variable.varName with print.varName="procedure"  pattern while(_, _) with constant.value=if.stmt#  pattern while(_, _)  pattern while(while, _) with "print"=procedure.procName  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern assign(else, _)  such that Uses(6, variable)  pattern if(variable, _, _)  pattern while(print, _)  such that Follows*(while, _)  pattern if(variable, _, _) with "print"=variable.varName  such that Next*(_, call)  such that Affects(stmt, stmt)  pattern assign(variable, "7400/7500")  such that Uses(1, variable)  such that Uses(29, variable) with constant.value=stmt.stmt#  such that Affects(_, stmt) with print.varName=procedure.procName  such that Calls*("print", procedure) with 2700=while.stmt#  such that Follows*(assign, 1) with "if"=call.procName with read.varName=variable.varName  pattern if(constant, _, _)  such that Follows*(_, call)  pattern assign(_, "4800/3400")  pattern assign(print, "4800-procedure")  such that Next(1, call) with constant.value=7800  pattern assign(read, _)  pattern assign(if, "(4900/7400)/800")  such that Parent(_, if) with assign.stmt#=call.stmt#  pattern if(if, _, _)  pattern if(_, _, _) with "assign"=procedure.procName  such that Calls*(procedure, "procedure") with procedure.procName=procedure.procName with 5300=read.stmt#  such that Next*(if, _)  pattern while(_, _) with 8300=assign.stmt#  such that Affects(8, assign)  such that Uses(if, _)  pattern while(print, _)  such that Next(if, 18) with read.stmt#=read.stmt#  pattern while(_, _)  pattern assign(if, _) with "read"=read.varName  pattern while(_, _) with read.varName="print" with print.stmt#=call.stmt#  pattern if(variable, _, _)  pattern assign(variable, "(8200/200)-700")  such that Modifies(assign, _) with 3700=print.stmt#  such that Parent(call, assign)  pattern if(call, _, _) with stmt.stmt#=constant.value with call.procName="call" with read.varName="procedure"  such that Follows(print, _) with read.varName=procedure.procName  pattern assign(if, _)  such that Follows*(call, 5) with "variable"=variable.varName  such that Parent*(read, _)  pattern while(_, _)  pattern if(variable, _, _)  such that Next*(stmt, _)  such that Calls("else", procedure) with constant.value=constant.value with "procedure"=call.procName  pattern while(variable, _)  pattern assign(variable, _"400*3300"_)  such that Affects*(assign, _) with constant.value=2600  pattern while(constant, _)  such that Modifies(print, "print") with "while"=procedure.procName  pattern while(variable, _)  pattern while(print, _)  pattern while(variable, _)  pattern assign(variable, _"1000/5200"_)  such that Parent(25, assign)  pattern while(variable, _)  pattern if(variable, _, _)  pattern if(then, _, _)  pattern assign(_, _)  such that Next*(_, call)  such that Next*(read, 26)  such that Uses(procedure, variable) with while.stmt#=call.stmt# with read.stmt#=9800 with stmt.stmt#=8900 with call.procName=print.varName  such that Follows*(while, _)  pattern if(_, _, _) with 2900=print.stmt#  pattern if(variable, _, _) with print.varName="call"  pattern while(else, _)  pattern assign(_, _)  such that Uses(8, variable)  such that Parent(read, 24)  such that Parent(print, 20)  such that Next*(print, if)  such that Follows*(print, stmt) with 8300=assign.stmt# with call.procName="else" with variable.varName="read"  pattern assign(_, _"4200/9500"_) with variable.varName="if"  pattern while(variable, _) with "constant"=call.procName with 4700=constant.value with while.stmt#=8200  pattern while(_, _) with 100=print.stmt# with read.stmt#=print.stmt# with "constant"=call.procName  pattern while(_, _)  pattern if(_, _, _) with call.stmt#=2800  pattern while(_, _) with variable.varName=print.varName  such that Follows(_, call)  pattern while(variable, _) with "read"=variable.varName  pattern assign(read, _"2300+print"_)  pattern if(_, _, _)  pattern while(else, _) with call.procName="procedure" with 3500=print.stmt# with read.stmt#=6200 with call.procName="procedure" with read.stmt#=7700 with read.varName="else"  pattern assign(else, _"5200/2700"_)  such that Calls*(procedure, "variable")  pattern while(print, _)  pattern while(_, _)  pattern if(if, _, _)  pattern while(variable, _) with variable.varName="read"  pattern assign(assign, "else*4300")  pattern assign(_, "3400+4400")  pattern assign(_, "(2800-7700)+9100")  pattern assign(if, "5900+8600")  such that Modifies(15, variable)  such that Follows(while, 17)  pattern while(_, _) with if.stmt#=read.stmt#  pattern assign(_, "2400*9700")  pattern if(print, _, _) with "print"=procedure.procName with assign.stmt#=while.stmt#  pattern if(_, _, _)  such that Uses(read, "procedure")  such that Uses(while, "call")  pattern if(constant, _, _)  such that Modifies(assign, _)  pattern while(variable, _)  pattern while(print, _) with stmt.stmt#=call.stmt#  pattern assign(procedure, _)  such that Follows(call, _)  pattern assign(then, _"call+3100"_)  such that Next(_, stmt) with stmt.stmt#=8600 with 1000=while.stmt#  pattern assign(variable, _) with assign.stmt#=print.stmt#  pattern if(_, _, _)  pattern assign(variable, "8500-4400") with variable.varName=variable.varName  pattern while(else, _)  such that Calls(procedure, _) with while.stmt#=print.stmt# with stmt.stmt#=1200  such that Follows(_, print)  pattern if(while, _, _)  pattern if(variable, _, _)  such that Parent(26, stmt) with "assign"=print.varName  pattern while(while, _) with read.stmt#=3400 with read.stmt#=2100  such that Modifies(4, variable) with "if"=print.varName  pattern while(while, _)  pattern while(_, _)  pattern while(procedure, _)  pattern assign(variable, _"800+1900"_)  such that Affects*(2, stmt)  such that Modifies(procedure, _) with read.stmt#=1100  pattern if(_, _, _)  pattern assign(_, _"3100+200"_)  pattern while(variable, _)  pattern while(call, _)  such that Affects(_, assign) with print.varName=print.varName  pattern if(variable, _, _)  pattern if(_, _, _)  pattern if(_, _, _)  such that Uses(print, variable)  pattern if(_, _, _)  pattern if(_, _, _)  pattern assign(_, _)  pattern while(then, _) with call.procName="assign"  such that Next*(_, print) with if.stmt#=600  such that Affects*(assign, assign) with 4400=stmt.stmt#  pattern if(variable, _, _) with call.procName=variable.varName  such that Calls*(procedure, _)  such that Next(assign, 16)  pattern assign(variable, _"600*2300"_)  pattern if(variable, _, _)  such that Calls("while", procedure) with "print"=call.procName  pattern assign(variable, _)  such that Modifies(23, variable)  such that Next(assign, if) with print.stmt#=8600 with print.varName=read.varName with read.varName="read" with call.procName="if"  pattern if(procedure, _, _)  pattern assign(variable, _)  pattern if(_, _, _) with read.varName=read.varName with "call"=variable.varName  pattern assign(assign, _"(7000/1500)/8200"_) with constant.value=call.stmt#  such that Parent(print, _)  pattern if(variable, _, _) with call.procName="procedure" with procedure.procName="then"  pattern assign(_, "5000-4900") with "variable"=read.varName  pattern if(variable, _, _) with procedure.procName=print.varName with "procedure"=read.varName  pattern if(constant, _, _)  pattern while(variable, _)  such that Follows(print, 22)  such that Follows(4, read)  pattern while(variable, _)  pattern assign(constant, _)  pattern if(variable, _, _)  such that Calls(procedure, "procedure") with procedure.procName="if"  such that Next*(stmt, 26)  such that Calls("then", procedure)  such that Parent*(if, 11)  such that Follows(while, 4)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern if(call, _, _)  pattern if(variable, _, _) with call.stmt#=3100 with variable.varName=read.varName  pattern assign(_, "4200-3500") with print.stmt#=while.stmt# with "if"=read.varName  such that Parent*(print, _)  pattern if(variable, _, _)  pattern if(while, _, _) with 6000=call.stmt#  pattern if(_, _, _) with procedure.procName="else"  pattern while(_, _) with 3800=call.stmt#  such that Next*(stmt, _)  pattern if(while, _, _)  pattern if(_, _, _)  such that Next*(assign, print)  pattern while(_, _) with "then"=variable.varName with if.stmt#=7500 with constant.value=8800  pattern assign(variable, _"4900-900"_) with "call"=print.varName  such that Affects(stmt, assign) with while.stmt#=constant.value  pattern if(read, _, _)  pattern if(variable, _, _)  such that Affects(assign, assign)  pattern assign(then, _) with variable.varName="while"  pattern assign(_, "3100/1700")  pattern assign(assign, "5300/2400") with 1700=print.stmt# with "call"=variable.varName with 4100=assign.stmt#  such that Uses(procedure, variable)  such that Parent*(while, stmt)  such that Parent(15, read)  pattern assign(variable, _"1800-5300"_)  pattern while(print, _) with assign.stmt#=stmt.stmt#  pattern while(variable, _) with "then"=call.procName  such that Parent(print, _)  such that Follows*(stmt, _) with stmt.stmt#=800  pattern if(_, _, _)  pattern while(else, _)  pattern if(_, _, _) with 6900=stmt.stmt#  pattern if(assign, _, _) with call.procName=procedure.procName  pattern assign(variable, _)  pattern if(print, _, _)  such that Calls*(procedure, _) with call.procName="print"  pattern if(variable, _, _)  pattern while(procedure, _)  such that Follows(call, 3)  pattern assign(print, "5500*9100")  such that Parent*(print, _)  such that Calls*(_, procedure)  such that Modifies(stmt, variable)  pattern assign(variable, "(7200*then)/8000")  pattern if(variable, _, _) with "assign"=call.procName  pattern assign(variable, _"9700/constant"_) with variable.varName="call"  pattern while(call, _) with read.varName="procedure"  pattern while(constant, _)  pattern assign(variable, _) with read.stmt#=7900 with 1100=constant.value with constant.value=while.stmt#  such that Follows(_, while)  pattern assign(variable, _) with constant.value=print.stmt#  pattern while(_, _)  such that Next(read, if)  pattern while(_, _)  such that Calls(procedure, procedure) with call.stmt#=700 with variable.varName="assign"  pattern if(_, _, _) with 9800=while.stmt#  such that Next*(assign, 7) with constant.value=7900  pattern if(_, _, _)  such that Affects(assign, assign)  pattern while(_, _)  pattern if(procedure, _, _)  pattern while(_, _)  pattern if(read, _, _) 

5000
84 - Query 84
variable variable; print print; assign assign; constant constant; stmt stmt; read read; procedure procedure; if if; while while; call call; 
Select <variable, print, assign, constant, stmt, read, procedure, if, while, call>  such that Next*(_, call) with print.varName=print.varName  pattern assign(_, "4300/4000")  pattern assign(variable, "8900+3700") with 3900=if.stmt# with "constant"=print.varName  pattern while(variable, _) with while.stmt#=1900  pattern while(_, _) with read.varName=read.varName  pattern while(read, _)  pattern assign(_, _) with call.procName="if"  pattern while(variable, _) with "procedure"=print.varName  such that Parent*(19, read)  such that Uses(7, variable)  pattern while(constant, _) with stmt.stmt#=read.stmt#  pattern if(variable, _, _) with if.stmt#=4600  pattern assign(variable, _) with call.procName=procedure.procName with read.stmt#=9600 with 9800=read.stmt#  pattern if(procedure, _, _)  such that Uses(13, variable) with print.varName=procedure.procName with procedure.procName="assign" with "while"=read.varName  pattern while(print, _)  such that Affects*(stmt, _)  pattern assign(_, _) with 7600=call.stmt#  such that Modifies(call, _) with read.stmt#=3500  such that Calls*("call", procedure)  pattern assign(call, "assign-5700")  pattern if(while, _, _)  such that Calls("constant", procedure)  such that Parent(_, stmt)  pattern assign(_, "3100+1700")  such that Follows(read, read)  such that Modifies(assign, "else")  pattern assign(variable, _) with read.varName="assign"  pattern assign(variable, _)  such that Next(call, assign) with 1800=call.stmt# with read.varName="while" with assign.stmt#=4300  such that Next(print, 6)  pattern assign(variable, _"4800+300"_)  pattern while(_, _) with 900=constant.value  pattern assign(variable, "1600+5200")  pattern assign(variable, "2600*8500")  pattern assign(_, "8200+3300")  pattern if(print, _, _)  such that Parent*(if, _)  pattern if(variable, _, _) with call.stmt#=if.stmt#  such that Modifies(while, _)  pattern assign(variable, "700-700")  such that Affects*(stmt, 25)  pattern if(assign, _, _)  pattern while(_, _)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern while(constant, _)  such that Parent(_, if)  pattern assign(variable, _"(7100-2000)*3600"_)  such that Uses(call, variable)  pattern assign(assign, _)  pattern assign(_, _"2900*print"_)  pattern assign(_, _"(6900+1700)-3500"_) with while.stmt#=print.stmt#  such that Affects*(25, stmt)  such that Next(read, 12) with procedure.procName=variable.varName  such that Uses(procedure, _) with procedure.procName="call" with print.stmt#=8000 with variable.varName=variable.varName  such that Affects(stmt, _)  such that Affects*(_, stmt)  such that Follows(20, if)  pattern assign(variable, "5400+8300")  such that Calls*(procedure, procedure) with print.stmt#=assign.stmt#  such that Affects(stmt, _)  pattern while(_, _) with if.stmt#=7500  such that Next*(assign, while) with read.varName=read.varName with print.varName="then"  pattern while(variable, _)  such that Calls*(_, procedure)  such that Modifies(read, "then") with "if"=print.varName  pattern if(_, _, _)  such that Affects(_, assign)  such that Uses(print, variable)  pattern while(_, _)  pattern while(call, _)  such that Affects*(_, assign) with variable.varName="print" with 8200=constant.value  such that Uses(assign, _) with 2300=stmt.stmt# with 1400=print.stmt# with "procedure"=variable.varName with 8200=while.stmt# with "constant"=procedure.procName  pattern assign(_, _"8600/then"_)  pattern if(variable, _, _) with "while"=print.varName  such that Modifies(7, variable)  pattern assign(_, _)  such that Modifies(procedure, "print") with print.stmt#=7900  pattern if(procedure, _, _)  pattern assign(print, "(2100*6700)+5300")  pattern if(_, _, _) with if.stmt#=while.stmt# with 1300=stmt.stmt#  pattern if(assign, _, _)  such that Calls(procedure, "assign")  pattern while(then, _) with read.varName=print.varName  such that Follows*(call, 23)  pattern if(variable, _, _)  such that Follows*(9, stmt)  such that Uses(read, _)  such that Modifies(procedure, _)  pattern while(_, _)  such that Parent*(_, if)  pattern while(variable, _)  pattern assign(variable, _)  pattern while(print, _)  pattern assign(_, _)  pattern while(_, _) with variable.varName="if"  such that Affects*(27, stmt)  pattern if(_, _, _)  such that Affects*(stmt, 3)  pattern assign(variable, _) with print.stmt#=print.stmt#  pattern assign(assign, "3500*600") with 4400=constant.value  pattern while(variable, _)  pattern if(_, _, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  such that Next*(read, _)  pattern assign(variable, _"7700*7200"_)  such that Next(read, _)  pattern while(variable, _) with read.stmt#=read.stmt# with 7600=call.stmt#  pattern while(else, _) with call.procName="assign"  pattern while(print, _)  such that Calls*("procedure", procedure)  such that Parent*(stmt, read)  pattern if(assign, _, _) with "then"=call.procName  pattern while(variable, _)  such that Parent*(23, stmt)  such that Next*(assign, _) with if.stmt#=call.stmt# with assign.stmt#=print.stmt# with "then"=print.varName  such that Affects*(stmt, 12)  pattern if(_, _, _)  pattern if(variable, _, _)  pattern assign(variable, "5100/1500") with print.stmt#=4400  pattern assign(_, "7900-5700")  such that Affects(stmt, assign)  such that Follows*(stmt, call)  pattern if(_, _, _)  such that Follows*(print, stmt)  pattern if(constant, _, _) with constant.value=7900  such that Calls*(procedure, "then") with procedure.procName=print.varName with "assign"=procedure.procName  pattern assign(variable, _"1600/8900"_)  pattern while(variable, _)  such that Calls(procedure, "print") with 7300=while.stmt# with read.stmt#=5200  pattern while(_, _)  pattern assign(variable, "((8500+5800)/6700)/then") with print.stmt#=read.stmt#  pattern if(_, _, _)  such that Next(stmt, _)  such that Modifies(procedure, variable)  pattern while(_, _)  pattern if(constant, _, _) with assign.stmt#=while.stmt# with constant.value=call.stmt#  pattern assign(_, _"500-5000"_)  such that Calls*(_, procedure)  pattern while(variable, _)  such that Modifies(assign, "if")  pattern if(_, _, _)  pattern while(variable, _)  pattern while(_, _)  pattern if(variable, _, _) with 4600=if.stmt# with print.varName=procedure.procName  pattern while(_, _)  pattern if(_, _, _)  pattern if(_, _, _)  such that Calls(procedure, _) with "constant"=print.varName with variable.varName=procedure.procName with "read"=print.varName  pattern while(variable, _) with stmt.stmt#=call.stmt#  such that Parent*(1, assign)  pattern assign(constant, "7500+600")  such that Calls(procedure, _)  pattern while(variable, _)  pattern if(_, _, _)  such that Next(while, read) with "call"=procedure.procName with call.procName="while"  pattern assign(variable, _"6500-9300"_)  pattern assign(_, _)  pattern assign(variable, _)  pattern assign(_, _) with 5700=while.stmt# with 2700=assign.stmt#  pattern if(call, _, _)  pattern assign(_, _)  such that Parent*(if, print) with "procedure"=print.varName  such that Calls*(procedure, _)  pattern while(constant, _)  pattern if(then, _, _)  such that Calls(procedure, "if")  pattern if(variable, _, _) with read.varName="if"  pattern assign(variable, _"6200+assign"_)  such that Parent(print, _)  pattern while(constant, _)  pattern if(_, _, _)  pattern while(_, _) with call.stmt#=7000 with constant.value=assign.stmt#  pattern assign(_, "8100/assign")  pattern assign(variable, _)  such that Next(_, stmt) with assign.stmt#=print.stmt# with "print"=variable.varName  such that Modifies(16, variable)  such that Follows(7, read)  such that Follows(_, while) with 6900=read.stmt# with 1900=constant.value with 6700=print.stmt# with while.stmt#=call.stmt#  pattern if(variable, _, _)  pattern while(variable, _)  pattern while(variable, _)  pattern while(procedure, _) with variable.varName=call.procName  such that Follows(read, 15)  such that Calls(procedure, _)  pattern if(variable, _, _)  pattern while(_, _)  pattern if(assign, _, _)  pattern if(_, _, _)  such that Parent(print, 14)  pattern if(variable, _, _)  such that Next*(print, _)  pattern if(while, _, _)  pattern while(_, _) with call.procName="read"  pattern assign(_, "7500*2800")  pattern while(assign, _) with "constant"=procedure.procName  such that Follows*(_, call)  pattern if(read, _, _)  such that Calls(procedure, _)  pattern while(_, _) with print.stmt#=1700 with print.varName=print.varName  pattern assign(variable, _)  such that Follows*(print, 3)  pattern assign(variable, "4700/7700")  pattern assign(variable, "700+6000") with "variable"=variable.varName  such that Uses(read, _) with call.stmt#=5400  pattern if(variable, _, _)  pattern assign(variable, "4900+8800") with assign.stmt#=if.stmt# with read.stmt#=print.stmt#  pattern while(variable, _)  pattern if(variable, _, _)  pattern assign(variable, _) with 400=stmt.stmt#  pattern assign(_, _"7400+6100"_)  such that Uses(25, variable)  such that Affects(stmt, 5) with print.varName="procedure"  such that Parent*(while, _) with if.stmt#=7300 with print.varName=variable.varName  pattern if(_, _, _)  such that Uses(assign, variable)  pattern while(_, _)  such that Parent(print, _)  pattern while(_, _)  such that Modifies(while, "then")  such that Uses(14, variable)  such that Modifies(call, variable)  such that Affects*(assign, 24)  such that Next*(_, while)  pattern if(while, _, _)  such that Parent(assign, call) with variable.varName=procedure.procName  such that Next(read, _) with assign.stmt#=assign.stmt# with constant.value=stmt.stmt#  pattern while(variable, _)  pattern while(read, _)  pattern while(variable, _)  pattern if(_, _, _) with variable.varName=variable.varName  pattern assign(_, _"else-9700"_)  such that Uses(14, variable) with 8600=stmt.stmt# with read.stmt#=call.stmt# with call.procName="call" with if.stmt#=4300  pattern assign(while, _)  pattern assign(_, _) with assign.stmt#=3400 with variable.varName="read"  such that Parent(26, read)  pattern while(variable, _)  pattern if(call, _, _)  such that Calls(_, procedure) with procedure.procName="constant" with while.stmt#=assign.stmt#  pattern if(call, _, _) with call.procName=procedure.procName  such that Modifies(procedure, _)  pattern assign(if, "3500*8000") with stmt.stmt#=5500  such that Affects*(9, assign) with print.varName=read.varName with call.stmt#=2400  pattern while(_, _)  such that Modifies(call, _) with constant.value=while.stmt#  pattern assign(if, "(1200-5100)/6900")  pattern assign(_, _) with print.varName="variable" with call.procName="variable" with 200=assign.stmt#  pattern while(_, _)  pattern if(variable, _, _)  pattern while(_, _)  pattern assign(variable, _)  such that Calls*(procedure, _)  pattern assign(read, "7200/9000") with 2800=if.stmt#  pattern assign(_, _) with read.varName="else"  such that Uses(9, variable)  pattern if(else, _, _)  such that Next(if, read)  such that Modifies(call, _) with variable.varName="procedure"  such that Follows(call, while)  such that Next(read, _)  pattern assign(variable, _"9600*2400"_) with variable.varName="else" with 5400=if.stmt#  pattern assign(_, _"(then+9000)*6700"_)  such that Uses(print, variable)  pattern while(variable, _) with 200=assign.stmt# with print.stmt#=5600  pattern assign(_, "1700+3900") with stmt.stmt#=if.stmt#  such that Parent(_, call)  pattern while(_, _)  such that Affects*(stmt, 9)  pattern if(variable, _, _)  pattern assign(_, "(2900*4800)/procedure") with "else"=call.procName  pattern assign(variable, "7700/700")  such that Next(_, while) with assign.stmt#=call.stmt# with call.stmt#=read.stmt#  pattern assign(then, "5100/6000")  pattern while(variable, _)  pattern assign(procedure, _"7700/800"_) with 1100=call.stmt# with read.varName="else"  such that Next*(read, print) with 2400=while.stmt#  pattern if(variable, _, _) with call.procName="else"  such that Affects*(10, stmt)  such that Affects(stmt, stmt) with variable.varName="constant"  such that Calls*("else", procedure)  pattern assign(variable, _"(8600/while)-3500"_) with 5400=stmt.stmt# with "read"=call.procName with variable.varName=procedure.procName  pattern while(variable, _) with assign.stmt#=assign.stmt#  pattern if(_, _, _)  such that Next*(print, _) with read.stmt#=3200  such that Next(_, if) with 700=stmt.stmt# with "read"=variable.varName  pattern while(constant, _)  pattern if(variable, _, _) with if.stmt#=call.stmt#  pattern assign(then, _)  pattern assign(while, _"2500-8100"_) with variable.varName=print.varName with print.stmt#=5200  pattern if(_, _, _) with "variable"=procedure.procName  such that Calls*(procedure, procedure)  pattern if(variable, _, _)  pattern if(then, _, _) with 7400=constant.value  such that Modifies(read, variable)  pattern while(if, _) with 4800=read.stmt#  pattern while(variable, _)  pattern if(read, _, _)  such that Uses(9, variable)  pattern if(read, _, _)  pattern while(variable, _)  pattern if(if, _, _) with constant.value=3000  pattern while(variable, _)  such that Modifies(26, variable) with stmt.stmt#=7400  pattern while(_, _)  pattern while(variable, _)  pattern while(then, _)  pattern if(call, _, _)  pattern if(then, _, _)  pattern while(variable, _)  pattern while(variable, _)  pattern if(_, _, _) with stmt.stmt#=read.stmt#  pattern if(while, _, _)  such that Next(call, _)  pattern while(variable, _)  such that Uses(call, variable)  pattern while(variable, _)  pattern assign(variable, _) with variable.varName=read.varName with 200=while.stmt#  pattern while(read, _) with variable.varName=read.varName  pattern assign(variable, "4100+7700")  pattern assign(_, _) with assign.stmt#=if.stmt#  such that Follows*(stmt, 9) with "print"=procedure.procName with 500=while.stmt#  such that Parent(_, read)  pattern while(call, _)  pattern if(variable, _, _)  such that Follows(print, assign)  pattern if(variable, _, _)  pattern while(variable, _)  such that Uses(if, "print")  pattern if(read, _, _)  such that Calls(procedure, procedure)  pattern while(variable, _) with print.varName="variable" with print.stmt#=1900 with print.stmt#=3500  such that Follows*(assign, _) with call.procName="print"  pattern if(variable, _, _)  pattern while(variable, _) with print.varName="if"  such that Calls("constant", procedure)  such that Calls*(_, procedure) with procedure.procName=read.varName  pattern while(then, _) 

5000
85 - Query 85
variable variable; assign assign; print print; call call; constant constant; stmt stmt; read read; if if; while while; procedure procedure; 
Select <variable, assign, print, call, constant, stmt, read, if, while, procedure>  such that Next(if, stmt)  pattern assign(variable, "8600+7000") with read.varName=procedure.procName with variable.varName="constant"  pattern while(print, _)  pattern if(_, _, _)  such that Next(26, read)  pattern assign(variable, "5800/read")  pattern while(assign, _)  such that Next(if, assign) with 9800=stmt.stmt#  such that Parent(read, read) with 5500=if.stmt#  pattern if(while, _, _)  pattern if(then, _, _) with 1600=read.stmt#  pattern assign(_, _)  pattern if(call, _, _) with read.varName=print.varName with 8900=call.stmt# with 300=if.stmt#  such that Uses(if, "else")  pattern while(assign, _) with call.procName="variable"  pattern while(variable, _)  such that Next(_, if)  pattern while(_, _)  pattern assign(else, "3600/6000")  such that Calls(procedure, _)  pattern while(variable, _)  pattern if(_, _, _) with variable.varName="call"  pattern if(_, _, _)  pattern assign(print, "1000*6500")  such that Calls*(_, procedure)  such that Next*(21, if)  such that Uses(15, variable) with read.varName="call"  such that Follows*(1, assign) with "then"=read.varName  pattern while(_, _)  pattern while(variable, _)  pattern assign(assign, "((2900/6000)-constant)-8600")  pattern assign(print, _)  pattern assign(variable, _"2700-200"_)  pattern assign(assign, _)  pattern assign(_, "4300*8600")  pattern assign(_, _)  pattern while(assign, _)  pattern while(variable, _) with 9000=stmt.stmt#  pattern while(_, _) with 9300=constant.value  pattern while(read, _)  pattern while(read, _)  such that Uses(stmt, "print")  pattern while(variable, _)  such that Affects(assign, 19)  pattern while(if, _) with 8600=stmt.stmt#  pattern while(procedure, _)  pattern while(print, _) with print.varName=procedure.procName  such that Affects(5, assign) with if.stmt#=while.stmt#  such that Uses(read, "while")  pattern if(_, _, _)  pattern assign(if, _)  pattern assign(variable, "9700-800") with print.varName=procedure.procName with call.stmt#=while.stmt#  pattern if(read, _, _)  pattern assign(variable, _"4900*call"_)  pattern if(_, _, _)  pattern while(variable, _)  pattern if(_, _, _) with "read"=read.varName  pattern assign(then, "1900+9600")  pattern while(variable, _) with "else"=variable.varName with print.varName=read.varName  such that Affects*(15, stmt) with "then"=variable.varName with print.stmt#=call.stmt# with while.stmt#=read.stmt#  such that Parent*(while, _)  pattern assign(constant, "5700-3000") with print.stmt#=while.stmt# with 3400=constant.value  pattern while(_, _)  pattern if(procedure, _, _) with call.procName="procedure" with 9200=if.stmt#  pattern if(assign, _, _) with read.varName=print.varName  such that Calls*("else", procedure) with stmt.stmt#=call.stmt#  pattern assign(_, _"3200/9800"_) with if.stmt#=6200 with print.stmt#=5300  pattern while(variable, _) with read.stmt#=if.stmt#  pattern if(variable, _, _)  such that Parent(print, if) with print.varName="read"  pattern while(variable, _)  such that Uses(26, variable)  pattern assign(then, _) with "else"=variable.varName  pattern assign(_, _"constant/9400"_)  such that Affects(stmt, assign)  pattern while(_, _)  pattern if(constant, _, _) with print.varName=call.procName  such that Affects*(stmt, _)  pattern assign(print, _)  such that Parent(call, read)  such that Next*(if, _)  such that Next(stmt, 24)  pattern while(if, _) with if.stmt#=500 with read.stmt#=1800 with read.varName="read"  pattern while(_, _)  such that Follows*(3, read)  such that Calls*(procedure, procedure)  pattern if(variable, _, _) with 7800=if.stmt#  pattern if(call, _, _)  such that Uses(stmt, _) with read.stmt#=1100  pattern while(variable, _)  pattern assign(_, _"7400*3600"_) with stmt.stmt#=if.stmt# with "constant"=print.varName  pattern while(variable, _)  such that Uses(assign, variable)  pattern if(_, _, _) with print.stmt#=3100 with while.stmt#=9000  such that Affects*(stmt, assign) with "assign"=procedure.procName with while.stmt#=read.stmt#  such that Follows(if, while)  pattern if(procedure, _, _) with constant.value=8400  such that Follows(while, call)  such that Follows*(print, 21)  pattern while(_, _) with "else"=procedure.procName with print.stmt#=stmt.stmt#  such that Next*(_, print) with variable.varName=variable.varName  such that Follows*(if, _)  pattern while(variable, _)  pattern while(_, _) with call.procName="read" with print.stmt#=4400  pattern if(variable, _, _)  such that Next*(call, stmt) with call.procName=call.procName  such that Next(assign, 18) with call.stmt#=6400 with read.varName=variable.varName  pattern while(variable, _) with print.stmt#=assign.stmt#  pattern if(_, _, _)  pattern while(then, _)  pattern assign(variable, _)  pattern if(procedure, _, _) with variable.varName=print.varName  pattern if(variable, _, _) with constant.value=while.stmt#  pattern assign(variable, _) with constant.value=9200 with call.procName="while"  such that Calls(procedure, _) with constant.value=stmt.stmt#  pattern if(_, _, _)  pattern while(_, _) with procedure.procName="call"  such that Calls("assign", procedure)  pattern while(then, _)  such that Parent*(stmt, while)  pattern assign(while, _"1900+while"_)  pattern assign(variable, _)  pattern while(assign, _) with 200=if.stmt# with print.varName="print"  pattern if(variable, _, _) with 8900=print.stmt#  pattern assign(_, _)  pattern assign(_, _"1400-2200"_)  pattern assign(_, "8400/8900")  pattern if(variable, _, _)  such that Uses(procedure, "else")  such that Calls(procedure, _)  pattern if(variable, _, _) with call.procName="else"  such that Next(_, assign)  pattern while(_, _)  pattern if(variable, _, _)  pattern while(assign, _)  pattern while(_, _)  pattern if(variable, _, _)  pattern while(variable, _)  pattern while(constant, _) with constant.value=1700  such that Next(6, assign)  pattern if(_, _, _)  pattern assign(variable, _)  such that Calls(procedure, _)  pattern if(_, _, _) with 9600=call.stmt#  pattern assign(variable, _) with while.stmt#=500 with "else"=procedure.procName  such that Follows*(assign, 11)  pattern while(variable, _)  pattern if(_, _, _)  such that Calls(procedure, _)  pattern if(then, _, _) with procedure.procName="while"  such that Parent*(call, 9)  such that Parent(28, assign) with constant.value=assign.stmt#  pattern assign(_, _)  pattern if(variable, _, _) with print.varName=variable.varName with print.stmt#=while.stmt# with constant.value=4800  such that Calls(procedure, _)  pattern assign(constant, _)  pattern assign(else, _"700+9000"_)  pattern while(variable, _)  pattern assign(assign, _"6700/1200"_) with while.stmt#=4300  such that Follows*(call, _)  pattern while(else, _)  such that Parent*(5, read)  pattern if(_, _, _) with while.stmt#=print.stmt# with print.stmt#=if.stmt#  pattern if(call, _, _)  pattern while(variable, _) with procedure.procName="procedure" with read.varName="variable"  pattern if(if, _, _) with while.stmt#=3000 with stmt.stmt#=while.stmt# with print.stmt#=constant.value  pattern while(constant, _)  pattern assign(while, _"3100+7400"_)  pattern if(variable, _, _) with "constant"=call.procName  pattern while(variable, _) with read.stmt#=constant.value with print.varName="then"  pattern assign(_, _)  such that Next(23, print)  pattern while(_, _)  pattern if(_, _, _) with "variable"=print.varName with print.stmt#=3400  pattern while(while, _) with "variable"=call.procName with constant.value=9600  such that Modifies(assign, "then") with assign.stmt#=assign.stmt#  pattern if(_, _, _)  pattern if(read, _, _)  pattern if(_, _, _)  pattern while(_, _) with stmt.stmt#=while.stmt#  such that Affects(stmt, 6)  pattern while(assign, _)  pattern if(call, _, _) with 5200=read.stmt#  pattern if(variable, _, _)  pattern while(_, _)  such that Calls*(procedure, _)  pattern assign(variable, "constant-5200") with call.procName=print.varName  such that Follows(_, print)  such that Uses(while, "print")  pattern while(variable, _)  such that Follows(22, call)  pattern assign(print, _"900*3100"_)  pattern if(variable, _, _)  pattern while(variable, _)  such that Uses(procedure, _)  such that Uses(assign, variable)  pattern assign(_, _) with print.stmt#=assign.stmt#  pattern assign(variable, _) with print.stmt#=call.stmt#  pattern if(_, _, _)  such that Parent(while, _)  such that Next(call, _)  pattern assign(while, "7200*8400")  such that Calls*(_, procedure)  pattern assign(if, _"3200/6900"_) with call.stmt#=9900  such that Calls*("print", procedure)  pattern while(while, _) with call.procName=read.varName  pattern assign(variable, _)  such that Modifies(call, "while")  pattern while(constant, _)  such that Parent(print, 20)  pattern assign(_, "6900+3800")  such that Parent(assign, 13)  such that Modifies(if, variable) with while.stmt#=1000  pattern assign(read, _) with variable.varName=variable.varName  pattern assign(_, "then+6800")  such that Uses(15, variable) with call.stmt#=call.stmt#  such that Follows*(call, stmt) with read.stmt#=8100  pattern assign(variable, _"7000*1900"_)  pattern assign(variable, _)  such that Parent(8, if)  pattern while(variable, _) with while.stmt#=call.stmt# with call.procName="read"  pattern while(print, _) with 3500=assign.stmt#  pattern while(if, _)  such that Calls(procedure, "if")  such that Calls*(procedure, procedure)  pattern while(then, _)  such that Calls*(_, procedure)  pattern if(variable, _, _) with 2100=read.stmt# with assign.stmt#=assign.stmt#  such that Parent(stmt, _)  such that Calls("if", procedure) with if.stmt#=900 with if.stmt#=call.stmt# with "read"=procedure.procName  such that Uses(read, "if")  pattern while(then, _)  pattern while(procedure, _)  pattern assign(while, _) with "read"=call.procName  pattern assign(_, "procedure+3200")  such that Follows(22, stmt) with constant.value=print.stmt#  pattern assign(_, _"5200+1600"_)  pattern while(_, _)  pattern assign(while, _"7900*4900"_)  pattern if(if, _, _) with read.stmt#=while.stmt#  pattern assign(if, "9600*6600") with read.varName=call.procName with variable.varName=read.varName  pattern if(_, _, _)  pattern assign(_, _"(3400-7100)*8200"_) with read.varName=procedure.procName  such that Calls*(procedure, "print")  such that Follows*(if, _)  pattern while(_, _)  pattern assign(variable, "7800+1100")  pattern assign(while, _) with variable.varName=print.varName  pattern while(_, _) with "variable"=call.procName  pattern if(variable, _, _) with procedure.procName=variable.varName  pattern if(variable, _, _) with variable.varName=call.procName with assign.stmt#=3500  pattern assign(read, "600/6100")  pattern if(variable, _, _) with procedure.procName="else" with call.procName=call.procName  such that Parent(2, assign)  pattern if(variable, _, _)  pattern if(variable, _, _)  such that Next(if, call)  such that Affects(assign, _)  pattern while(variable, _) with "if"=read.varName  such that Uses(if, variable) with read.stmt#=100  pattern while(else, _) with "variable"=procedure.procName  pattern if(_, _, _)  pattern while(_, _)  pattern if(_, _, _)  pattern while(_, _)  pattern if(_, _, _)  such that Follows(_, print)  such that Follows*(if, _) with constant.value=assign.stmt#  pattern assign(then, "7900-1600") with "procedure"=variable.varName  pattern assign(_, _) with read.varName="variable"  pattern assign(procedure, "400/900")  pattern if(if, _, _)  pattern assign(_, "5800+4100") with assign.stmt#=read.stmt# with "procedure"=print.varName  such that Next*(call, stmt) with 8600=call.stmt#  pattern if(call, _, _) with 1200=if.stmt# with call.procName="variable"  pattern if(_, _, _)  pattern if(variable, _, _)  pattern while(_, _)  pattern if(procedure, _, _)  pattern while(_, _)  such that Affects*(23, assign) with read.stmt#=constant.value  pattern assign(variable, _)  such that Follows*(_, stmt)  pattern assign(variable, _)  such that Calls(_, procedure) with 7000=read.stmt#  pattern assign(_, "9800/9600")  such that Parent*(print, if)  pattern if(_, _, _)  such that Calls(procedure, procedure)  pattern if(then, _, _)  such that Affects(_, assign)  pattern if(variable, _, _)  such that Follows(_, assign)  pattern while(print, _) with procedure.procName=read.varName  pattern if(variable, _, _)  pattern while(_, _)  such that Affects*(_, assign)  pattern assign(while, _"5200*9700"_)  such that Next*(_, if)  such that Follows*(print, _)  such that Follows*(_, print) with constant.value=stmt.stmt# with procedure.procName=call.procName  such that Follows(call, 26)  such that Calls*(procedure, "print") with 1800=print.stmt#  pattern if(_, _, _)  pattern while(constant, _)  pattern assign(_, _"300-3000"_)  pattern assign(_, _"500+6000"_)  pattern assign(while, "7000/if") with print.varName=read.varName with print.varName=call.procName with 5400=if.stmt#  such that Uses(call, "print")  such that Modifies(print, "while")  pattern while(then, _)  pattern if(call, _, _)  pattern while(variable, _)  pattern if(call, _, _) with "assign"=variable.varName with constant.value=assign.stmt# with print.varName="constant"  pattern if(while, _, _)  such that Uses(read, variable)  such that Uses(7, variable)  such that Follows(18, read) with assign.stmt#=call.stmt#  such that Next*(_, if)  such that Calls("if", procedure)  pattern while(constant, _)  such that Modifies(18, variable) with "constant"=read.varName  pattern assign(if, _) with variable.varName=procedure.procName with "call"=variable.varName  pattern assign(variable, _)  such that Follows*(if, assign)  such that Affects*(assign, 4)  pattern while(variable, _) with call.stmt#=while.stmt#  pattern if(variable, _, _)  pattern while(assign, _) with call.procName=procedure.procName with read.varName=variable.varName  such that Affects*(15, assign)  such that Calls(procedure, _)  pattern assign(_, _)  pattern while(_, _)  pattern assign(_, "1500/5400") with 6100=if.stmt# with read.stmt#=7400  such that Parent*(if, 26)  such that Parent(16, read) with "constant"=variable.varName  pattern while(procedure, _)  such that Modifies(while, _)  pattern assign(variable, "1900+9700")  pattern if(_, _, _) with 6900=constant.value  pattern while(else, _) 

5000
86 - Query 86
variable variable; assign assign; constant constant; print print; stmt stmt; read read; procedure procedure; if if; while while; call call; 
Select <variable, assign, constant, print, stmt, read, procedure, if, while, call>  pattern assign(variable, _"2600+8300"_)  such that Parent*(_, while) with variable.varName=variable.varName  pattern while(read, _)  pattern if(variable, _, _)  such that Follows*(_, while)  such that Follows*(stmt, call)  such that Parent*(assign, 21) with 8100=constant.value  pattern while(variable, _) with "print"=procedure.procName  pattern assign(call, _"else/else"_)  pattern assign(variable, _)  such that Parent(assign, stmt)  pattern if(variable, _, _)  pattern if(else, _, _)  such that Affects*(assign, _) with variable.varName=procedure.procName  pattern while(_, _) with print.varName=call.procName with call.stmt#=1300  pattern assign(_, "3700/3700") with 5400=assign.stmt#  pattern while(_, _)  pattern while(then, _) with variable.varName=read.varName  pattern if(variable, _, _)  pattern while(variable, _)  such that Uses(print, "variable")  pattern if(_, _, _)  such that Modifies(procedure, _) with call.stmt#=8600  pattern assign(read, _"6300-3800"_)  such that Uses(call, variable) with stmt.stmt#=7100  pattern while(_, _) with 2100=constant.value with read.stmt#=4800  pattern assign(print, _)  pattern if(while, _, _)  pattern while(variable, _)  pattern if(variable, _, _)  pattern assign(_, _)  such that Next(27, call) with 2400=if.stmt# with print.varName=variable.varName with 1800=print.stmt# with print.stmt#=print.stmt#  pattern while(assign, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern while(variable, _)  pattern if(while, _, _) with while.stmt#=300  such that Modifies(1, variable) with variable.varName="print" with read.varName="while" with "assign"=procedure.procName with call.procName=variable.varName with 2100=while.stmt# with constant.value=constant.value  such that Uses(assign, _) with assign.stmt#=assign.stmt#  such that Affects*(stmt, _)  pattern while(variable, _)  pattern if(_, _, _)  such that Next*(4, if)  such that Parent*(6, assign)  such that Modifies(print, _) with assign.stmt#=call.stmt#  such that Affects*(stmt, stmt)  such that Follows*(if, _)  pattern while(procedure, _) with 3600=call.stmt# with 1200=stmt.stmt#  pattern assign(variable, "6600-3200")  pattern if(_, _, _) with stmt.stmt#=constant.value  pattern if(variable, _, _)  pattern while(print, _)  pattern while(while, _)  pattern if(else, _, _)  pattern while(_, _) with read.varName=procedure.procName  pattern if(variable, _, _)  pattern while(_, _)  pattern if(constant, _, _) with "if"=procedure.procName with 7200=assign.stmt# with 7600=assign.stmt# with "variable"=read.varName  pattern while(while, _)  pattern if(procedure, _, _) with procedure.procName="assign"  pattern while(variable, _)  pattern if(constant, _, _) with procedure.procName=variable.varName with constant.value=if.stmt#  pattern assign(_, _"7300/9300"_)  such that Affects*(stmt, 10)  such that Next(while, 7)  such that Calls(procedure, "procedure")  pattern while(variable, _)  pattern if(_, _, _) with read.stmt#=constant.value  pattern if(_, _, _)  such that Next*(if, while) with stmt.stmt#=read.stmt#  such that Follows*(print, if)  such that Next(while, _) with call.procName=print.varName with stmt.stmt#=3800  such that Next*(read, 13)  pattern assign(variable, "7100/5500")  pattern assign(variable, _)  such that Uses(29, variable) with assign.stmt#=7900  pattern if(read, _, _)  pattern if(variable, _, _)  pattern while(variable, _)  such that Calls*(procedure, _)  pattern while(variable, _)  such that Calls*(procedure, "variable")  pattern while(_, _)  pattern assign(if, _"1200-7400"_)  such that Calls*("variable", procedure)  pattern assign(while, "9700-3900") with "else"=print.varName with assign.stmt#=5700 with 9300=print.stmt# with 500=call.stmt#  such that Next*(stmt, _)  pattern while(variable, _)  pattern assign(_, "9200/8800")  pattern while(variable, _) with read.stmt#=6400  pattern assign(else, _) with read.varName="call"  pattern if(_, _, _)  pattern assign(variable, "4600+4300")  such that Affects*(stmt, _) with "while"=print.varName  pattern if(print, _, _)  pattern assign(variable, "400-900")  such that Calls(procedure, "assign")  pattern while(variable, _)  such that Next*(read, 10)  such that Follows(9, stmt)  such that Modifies(read, variable)  pattern while(_, _)  such that Parent*(call, _)  pattern if(variable, _, _)  pattern assign(assign, _)  such that Modifies(call, variable)  pattern while(print, _) with print.stmt#=assign.stmt# with "then"=call.procName  pattern while(variable, _)  pattern while(_, _) with read.stmt#=5200  pattern while(while, _)  pattern while(variable, _) with "if"=print.varName with "else"=variable.varName  pattern while(variable, _)  such that Affects(stmt, _)  such that Affects*(stmt, assign) with read.varName="while"  pattern while(_, _)  pattern if(variable, _, _)  such that Modifies(if, "procedure")  pattern if(variable, _, _) with assign.stmt#=constant.value  such that Calls("variable", procedure)  such that Affects(_, assign) with "then"=call.procName  pattern assign(_, "2800/2700")  pattern while(_, _)  such that Uses(7, variable) with if.stmt#=8400 with 8600=while.stmt#  pattern assign(call, "variable+900") with print.varName="assign"  pattern while(call, _)  pattern if(read, _, _)  pattern if(_, _, _)  pattern while(print, _)  pattern assign(variable, _) with print.varName=call.procName with call.procName="while"  pattern if(_, _, _) with 5200=constant.value  pattern assign(variable, _"1000/5200"_)  such that Next*(print, 19) with "variable"=variable.varName with "assign"=variable.varName  pattern assign(print, _"4700-7800"_)  pattern while(_, _)  pattern if(variable, _, _) with read.varName=print.varName  pattern if(variable, _, _)  pattern assign(_, "(9200/7900)*200") with 9700=constant.value  such that Affects*(assign, 2)  such that Next*(_, if) with call.procName="while"  such that Affects*(_, stmt)  pattern if(print, _, _)  such that Calls(procedure, _) with if.stmt#=call.stmt#  pattern while(variable, _) with print.varName=procedure.procName  pattern if(_, _, _)  pattern assign(variable, _"1400*constant"_)  pattern assign(variable, _) with stmt.stmt#=if.stmt# with if.stmt#=6800  such that Parent(print, _)  pattern if(variable, _, _) with procedure.procName=print.varName  pattern while(_, _)  such that Uses(while, _)  pattern assign(_, "7600-9700")  pattern while(_, _)  pattern while(print, _)  pattern assign(_, _"8100-constant"_) with "then"=procedure.procName  pattern assign(_, _"2800/9100"_) with call.procName="constant" with while.stmt#=constant.value with 9300=if.stmt#  pattern while(variable, _)  such that Next*(_, stmt) with variable.varName=call.procName  pattern while(_, _)  such that Parent(assign, _)  pattern assign(_, _"4400+4500"_)  pattern assign(variable, _"(2000+9200)-500"_) with "call"=procedure.procName with 9200=call.stmt#  such that Parent*(_, if)  such that Follows*(7, print)  pattern assign(variable, _) with call.stmt#=assign.stmt# with 4200=constant.value  pattern while(then, _)  such that Follows(print, _)  such that Parent(_, read) with "else"=call.procName  pattern assign(variable, _"9400*6600"_)  pattern if(_, _, _)  pattern assign(_, _"3800+4600"_) with while.stmt#=while.stmt#  pattern assign(while, "1700+5500")  such that Parent(read, read)  such that Parent*(24, call) with "call"=print.varName with 8000=if.stmt# with read.varName="else"  such that Calls*(procedure, _)  such that Calls(procedure, _) with procedure.procName=variable.varName  pattern while(_, _) with variable.varName=procedure.procName  such that Uses(read, variable) with constant.value=print.stmt#  pattern assign(_, "(3900*1700)+2600")  pattern while(_, _) with "while"=read.varName  pattern if(variable, _, _)  pattern if(else, _, _)  pattern if(_, _, _)  such that Uses(20, variable) with variable.varName="read"  pattern assign(_, _)  pattern while(assign, _) with 4400=read.stmt#  pattern while(variable, _)  such that Affects*(_, assign)  pattern while(_, _)  pattern if(variable, _, _)  such that Calls("while", procedure)  pattern if(variable, _, _) with 8400=read.stmt#  pattern assign(assign, "1000-5500")  pattern assign(call, "(8800/4100)/9100")  pattern assign(_, _"700*900"_) with while.stmt#=6600  such that Affects*(stmt, _)  such that Calls*("read", procedure)  such that Calls*(procedure, _) with call.stmt#=2700  such that Calls(_, procedure)  pattern while(variable, _)  pattern assign(call, _)  such that Next*(while, _) with "print"=procedure.procName  pattern if(print, _, _) with read.stmt#=500 with 7000=if.stmt# with 9500=print.stmt#  pattern assign(constant, _) with print.varName=procedure.procName  pattern if(print, _, _) with "while"=print.varName  pattern while(call, _)  pattern if(else, _, _) with print.stmt#=assign.stmt#  pattern assign(variable, _)  pattern while(_, _) with constant.value=print.stmt# with procedure.procName=call.procName with if.stmt#=9200 with "print"=call.procName  pattern assign(variable, "4800+8700")  pattern assign(_, _)  pattern while(_, _)  such that Affects*(stmt, 22) with stmt.stmt#=if.stmt# with if.stmt#=call.stmt# with procedure.procName=print.varName  pattern assign(variable, "3300-4100")  pattern assign(variable, "7900+3000")  such that Uses(stmt, _) with call.procName=variable.varName  pattern if(procedure, _, _) with read.varName="call" with constant.value=4500  pattern if(variable, _, _) with read.varName=variable.varName  pattern if(print, _, _) with 4300=stmt.stmt#  such that Uses(while, _)  pattern while(then, _) with variable.varName="variable"  such that Affects(stmt, _) with read.varName=print.varName with read.stmt#=if.stmt# with stmt.stmt#=stmt.stmt#  pattern assign(_, _)  pattern while(while, _)  such that Next(19, read)  pattern while(_, _)  such that Parent*(print, _) with assign.stmt#=while.stmt#  such that Follows(read, _) with read.varName=call.procName  pattern if(while, _, _) with variable.varName="if"  such that Calls(procedure, procedure)  pattern while(variable, _)  pattern assign(_, "3100-9100")  such that Parent*(_, while)  such that Calls(procedure, _) with procedure.procName=variable.varName with 700=stmt.stmt#  pattern assign(_, _"1500/300"_)  such that Next(if, _)  pattern while(else, _)  such that Parent*(19, call)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern assign(variable, _)  pattern assign(_, "2700*6200")  such that Affects(20, assign)  pattern assign(read, _) with 4200=if.stmt# with procedure.procName="while"  such that Affects(stmt, _) with print.stmt#=7900  such that Affects(_, assign)  pattern if(_, _, _)  pattern while(assign, _)  pattern if(then, _, _)  pattern assign(_, "300/6000")  pattern while(variable, _)  such that Follows(print, _)  pattern if(variable, _, _)  pattern while(variable, _)  pattern assign(variable, "3500/4500")  such that Calls(procedure, "print")  pattern assign(_, "(8400+8900)-1000")  pattern assign(_, _"4200-2800"_)  pattern while(if, _)  pattern assign(variable, _"5200*4200"_) with call.procName="variable" with "read"=call.procName with 1100=call.stmt# with 4500=if.stmt#  such that Next*(11, call)  such that Parent*(_, print)  such that Calls("variable", procedure)  pattern if(_, _, _)  pattern while(_, _)  such that Parent*(assign, 9) with while.stmt#=print.stmt# with call.procName=variable.varName with 1500=stmt.stmt# with "if"=call.procName with while.stmt#=400 with print.varName=read.varName  pattern assign(assign, _) with "read"=procedure.procName with read.varName=variable.varName with print.varName=variable.varName  such that Next*(assign, 1)  pattern if(_, _, _)  pattern while(_, _)  pattern while(_, _)  such that Follows(stmt, 10)  pattern if(assign, _, _)  such that Uses(9, variable)  pattern if(variable, _, _)  pattern assign(_, _"4300*900"_)  such that Next(11, while)  such that Uses(20, variable) with read.stmt#=1900 with 3200=stmt.stmt#  pattern if(_, _, _)  pattern while(variable, _)  pattern assign(variable, _"9100*3500"_)  such that Parent*(_, stmt) with 5300=stmt.stmt# with stmt.stmt#=2200  pattern while(variable, _) with "while"=call.procName with variable.varName=read.varName with while.stmt#=print.stmt# with procedure.procName="call"  pattern if(constant, _, _)  pattern assign(_, "400/900")  pattern while(variable, _) with read.stmt#=if.stmt#  pattern while(_, _) with call.stmt#=4600 with assign.stmt#=9800 with stmt.stmt#=if.stmt#  pattern assign(variable, _"3400+6900"_)  pattern while(then, _) with print.varName="then" with call.procName="call" with print.stmt#=assign.stmt#  pattern assign(_, _"4600-9000"_)  pattern assign(else, "(3300*7900)/5700")  such that Parent(10, call) with 4800=assign.stmt#  pattern if(_, _, _)  pattern if(variable, _, _)  pattern assign(_, "6800/if")  such that Parent*(print, _) with constant.value=print.stmt#  pattern if(variable, _, _)  pattern if(if, _, _)  pattern if(else, _, _) with call.stmt#=4800 with 800=read.stmt# with 700=print.stmt#  such that Affects*(25, stmt) with 2200=constant.value  such that Modifies(read, _)  such that Follows(_, if)  such that Follows*(if, print)  such that Calls(procedure, procedure)  pattern if(_, _, _) with read.varName="if"  such that Uses(24, variable) with "if"=call.procName with "procedure"=read.varName  pattern assign(_, _"8600-8900"_)  pattern if(_, _, _) with constant.value=read.stmt# with if.stmt#=5400  such that Follows(call, while)  such that Uses(stmt, variable)  pattern assign(variable, _)  pattern assign(while, _"8800-3800"_)  such that Next(18, stmt)  pattern while(_, _)  pattern assign(_, _"9500*3400"_) with 9400=stmt.stmt# with "call"=call.procName  pattern assign(then, _"9800*8900"_)  pattern while(_, _)  such that Parent*(read, stmt) with print.varName=variable.varName  pattern while(variable, _) with "assign"=procedure.procName  such that Next(call, stmt)  pattern assign(then, _) with "constant"=procedure.procName  such that Parent*(_, read) with 5000=constant.value with 7500=call.stmt#  such that Uses(if, _)  such that Parent(_, call) with "constant"=print.varName  pattern if(variable, _, _)  pattern while(while, _)  pattern while(_, _)  such that Calls(procedure, "procedure") 

5000
87 - Query 87
variable variable; assign assign; call call; print print; constant constant; stmt stmt; read read; if if; while while; procedure procedure; 
Select <variable, assign, call, print, constant, stmt, read, if, while, procedure>  such that Calls*(procedure, procedure) with if.stmt#=call.stmt#  pattern assign(variable, "5900+read")  pattern assign(if, _"5200/7700"_)  pattern if(while, _, _)  such that Affects(assign, _)  pattern while(variable, _)  pattern while(_, _) with stmt.stmt#=while.stmt#  pattern assign(variable, "call/read")  pattern assign(_, "8700+4000")  pattern assign(_, "print+8700") with read.stmt#=if.stmt# with variable.varName=variable.varName  pattern if(constant, _, _) with read.varName="call" with read.stmt#=3800  pattern if(print, _, _)  pattern if(read, _, _) with assign.stmt#=1200  pattern if(then, _, _)  pattern assign(else, "7600+3900")  such that Follows(call, 1) with call.stmt#=print.stmt#  pattern while(assign, _)  such that Parent*(assign, 6) with "constant"=variable.varName with call.procName=print.varName  pattern while(else, _)  pattern if(variable, _, _) with if.stmt#=constant.value with variable.varName="procedure"  pattern while(variable, _)  pattern assign(variable, "5100+if") with while.stmt#=constant.value  pattern assign(_, _"1700*print"_) with print.varName="constant"  pattern assign(variable, _"1000+8600"_)  pattern while(variable, _)  pattern while(_, _)  pattern while(_, _)  pattern if(variable, _, _)  pattern if(if, _, _)  pattern assign(variable, _"5900/1400"_)  such that Parent(20, print) with if.stmt#=400  pattern assign(variable, _"4400-1400"_) with print.stmt#=7900  pattern if(print, _, _) with variable.varName=print.varName  pattern if(_, _, _)  pattern assign(if, _"5100/9900"_) with print.varName="procedure"  pattern assign(if, _)  pattern assign(variable, "7000-7000")  such that Affects(stmt, _) with stmt.stmt#=constant.value with variable.varName="call"  such that Affects*(assign, _)  pattern while(_, _)  pattern assign(variable, "8900+2300")  pattern while(else, _)  pattern if(variable, _, _)  such that Calls*("print", procedure)  such that Follows(3, assign)  such that Parent*(assign, 26)  such that Follows*(print, 29) with "read"=variable.varName with "then"=read.varName  such that Affects*(23, assign)  pattern assign(if, _"5000*3000"_) with 6700=while.stmt# with "assign"=variable.varName  such that Calls*("if", procedure)  such that Next*(read, if) with "procedure"=variable.varName  pattern while(variable, _)  pattern while(variable, _) with 2400=while.stmt#  pattern if(variable, _, _)  pattern while(_, _) with "read"=print.varName with print.varName="variable"  pattern assign(variable, "read/2100")  such that Parent(stmt, _)  pattern if(_, _, _) with "else"=print.varName  pattern while(_, _)  such that Calls*(procedure, "if") with 3200=while.stmt# with "while"=print.varName  such that Calls*(procedure, _) with "constant"=call.procName with stmt.stmt#=3800  pattern assign(read, "2300*7900")  pattern while(_, _)  such that Parent*(while, read) with read.varName=print.varName with "then"=call.procName  such that Uses(stmt, variable)  pattern if(variable, _, _)  such that Next(assign, if)  pattern if(_, _, _)  pattern while(_, _) with "print"=call.procName with call.procName=variable.varName with "then"=print.varName  pattern if(procedure, _, _)  such that Uses(while, "print") with "read"=print.varName  such that Affects(_, stmt) with assign.stmt#=4300  pattern while(constant, _) with constant.value=while.stmt# with call.stmt#=print.stmt#  pattern assign(variable, _"(9300*3600)-assign"_)  pattern assign(if, "7400/9200")  pattern assign(_, _"call+9400"_)  pattern while(procedure, _)  pattern assign(_, "5300/3500")  such that Next*(while, stmt)  such that Affects(assign, stmt)  pattern if(then, _, _)  such that Next*(_, stmt)  such that Follows*(_, read)  such that Calls*(procedure, procedure) with 6300=read.stmt# with call.procName=procedure.procName  pattern if(_, _, _)  pattern if(variable, _, _) with "print"=variable.varName  pattern if(variable, _, _) with stmt.stmt#=assign.stmt# with variable.varName=print.varName with "constant"=variable.varName  such that Follows(if, call)  pattern assign(procedure, _"else*assign"_)  pattern while(read, _)  such that Calls(procedure, "constant") with "call"=procedure.procName  pattern assign(read, _"1100+read"_)  pattern if(variable, _, _) with "call"=print.varName with procedure.procName="if" with "constant"=print.varName  pattern while(variable, _)  such that Calls(procedure, "print")  pattern while(call, _)  pattern assign(_, "2100-3900")  pattern if(variable, _, _)  such that Affects*(stmt, 12) with print.varName=read.varName  pattern assign(variable, _) with read.varName=print.varName  pattern while(variable, _)  pattern if(else, _, _)  such that Parent*(21, call) with 6600=print.stmt# with call.stmt#=print.stmt# with print.stmt#=7300  pattern while(then, _)  pattern if(variable, _, _) with print.varName=variable.varName with print.varName="constant" with while.stmt#=print.stmt#  pattern assign(variable, "6800/7600")  pattern assign(_, "2500/700")  such that Affects(assign, _)  pattern if(variable, _, _) with 3700=constant.value with read.stmt#=5300  such that Follows*(call, while)  such that Parent*(19, call)  pattern if(_, _, _) with call.procName="procedure" with 4400=stmt.stmt#  pattern while(variable, _) with "print"=procedure.procName with print.varName=variable.varName  pattern assign(read, _)  pattern assign(variable, "assign+8500")  such that Modifies(3, variable)  such that Parent(if, stmt) with procedure.procName=variable.varName  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern assign(else, "2200-200")  pattern while(_, _)  such that Follows(stmt, _)  such that Calls*(procedure, "read")  pattern if(call, _, _)  such that Calls(_, procedure)  pattern assign(constant, _)  pattern assign(_, _"700*6500"_) with variable.varName=call.procName with 4100=call.stmt# with print.stmt#=assign.stmt# with procedure.procName=variable.varName  pattern while(variable, _)  such that Calls*(procedure, procedure)  such that Follows(assign, print)  such that Parent(read, 11) with print.varName=print.varName  pattern while(print, _) with stmt.stmt#=read.stmt#  pattern while(variable, _)  pattern assign(then, "4000-variable")  such that Follows*(15, stmt)  pattern assign(variable, _"8400-7600"_)  such that Affects(23, assign) with 7200=call.stmt#  pattern while(variable, _) with variable.varName="variable"  pattern assign(_, _)  such that Calls*(_, procedure)  such that Uses(while, "while")  such that Calls*(_, procedure) with "while"=read.varName with if.stmt#=300 with 8100=constant.value  pattern while(_, _) with variable.varName="constant"  pattern if(if, _, _) with 2200=while.stmt#  such that Next(_, call) with variable.varName=call.procName with stmt.stmt#=assign.stmt# with "assign"=print.varName  pattern if(else, _, _)  such that Affects(6, assign)  pattern assign(_, _) with variable.varName=call.procName  such that Affects(stmt, 21)  pattern while(constant, _)  such that Affects(6, assign)  such that Next(4, assign)  such that Follows(25, read) with call.procName=procedure.procName with "print"=call.procName with while.stmt#=call.stmt#  such that Follows*(_, call)  pattern assign(while, "4400+8800")  such that Affects(23, assign) with print.varName=print.varName  such that Next*(28, if)  such that Calls("else", procedure) with print.varName="print"  pattern while(_, _)  pattern while(_, _)  pattern while(_, _)  such that Follows(print, _)  pattern while(else, _) with 7100=constant.value  pattern assign(variable, _"5500-3700"_) with print.varName="call" with "while"=call.procName  pattern if(variable, _, _) with "if"=procedure.procName  pattern while(variable, _)  pattern if(_, _, _)  pattern assign(print, _)  pattern while(variable, _) with if.stmt#=if.stmt#  pattern if(procedure, _, _)  such that Next(9, print) with 4300=if.stmt# with procedure.procName="if" with print.stmt#=assign.stmt#  pattern assign(call, "1900+6300") with read.varName="assign"  such that Calls*(procedure, "print")  pattern if(variable, _, _)  pattern if(variable, _, _)  such that Parent(_, read)  pattern if(variable, _, _) with "constant"=call.procName  such that Affects(stmt, 2)  pattern while(assign, _) with assign.stmt#=3600 with print.varName=variable.varName with print.varName="print"  pattern assign(_, _)  pattern while(print, _)  pattern if(variable, _, _)  such that Follows(_, while)  such that Parent(assign, _)  pattern while(_, _) with 7600=call.stmt# with procedure.procName="call" with procedure.procName="if"  such that Calls("assign", procedure)  pattern if(_, _, _)  pattern while(variable, _)  such that Uses(call, _)  pattern assign(procedure, "700+4200") with procedure.procName=procedure.procName  pattern while(call, _)  such that Next*(print, stmt) with if.stmt#=print.stmt#  pattern while(_, _) with if.stmt#=assign.stmt#  such that Parent*(if, _) with read.stmt#=7500  pattern assign(_, _"1200/read"_) with read.varName="constant"  pattern while(variable, _)  pattern if(_, _, _) with "then"=read.varName  such that Affects(stmt, stmt) with while.stmt#=if.stmt#  pattern assign(_, _"5600/200"_)  pattern assign(_, "6500/8800")  pattern assign(then, _)  such that Modifies(if, variable)  such that Next(assign, stmt)  pattern assign(variable, "5400+2200")  pattern assign(variable, _)  pattern while(variable, _) with print.stmt#=4700  pattern assign(while, "4400+1100")  pattern while(variable, _) with variable.varName=print.varName  pattern if(variable, _, _)  such that Affects*(stmt, 4) with 6200=while.stmt#  pattern if(_, _, _)  pattern assign(_, "6900+5100")  pattern assign(variable, _) with "read"=read.varName  such that Affects(stmt, 29)  pattern while(constant, _)  pattern while(variable, _)  such that Next*(read, 18)  pattern if(variable, _, _)  such that Next*(call, 17)  pattern if(_, _, _)  pattern if(_, _, _)  pattern while(variable, _)  such that Modifies(read, "call")  such that Next*(stmt, _)  pattern while(procedure, _)  pattern if(variable, _, _)  pattern assign(_, _"4700/3300"_) with "call"=call.procName  pattern assign(print, _"9600/7200"_)  pattern assign(variable, "6000/9500")  pattern if(if, _, _)  pattern assign(_, _) with 5200=constant.value with print.varName=procedure.procName  pattern assign(read, "1700+8700")  pattern if(assign, _, _)  pattern if(else, _, _) with print.varName="print" with 3200=constant.value  such that Parent(6, while)  pattern if(_, _, _) with procedure.procName=print.varName  pattern if(else, _, _)  such that Follows*(stmt, 24) with "if"=variable.varName with assign.stmt#=call.stmt#  pattern if(while, _, _)  pattern assign(variable, "5100-5600") with procedure.procName=call.procName  pattern assign(variable, _)  pattern if(then, _, _)  such that Uses(print, variable)  pattern if(_, _, _)  such that Modifies(call, _)  such that Parent*(stmt, 11) with "while"=read.varName  such that Parent*(_, while)  pattern if(_, _, _)  pattern while(variable, _) with 5400=if.stmt#  such that Affects*(2, stmt)  pattern if(constant, _, _) with if.stmt#=stmt.stmt#  pattern while(_, _) with "read"=read.varName with call.procName="call" with constant.value=1700 with read.stmt#=5300  pattern if(variable, _, _)  pattern assign(variable, "8400-700")  pattern if(else, _, _)  pattern if(while, _, _)  such that Calls*(_, procedure) with call.stmt#=1800  pattern while(_, _)  pattern assign(_, "8300*8700")  pattern while(variable, _)  pattern if(variable, _, _)  pattern assign(call, "4600/1100")  pattern if(constant, _, _) with 9200=read.stmt#  pattern assign(read, "3100*2600")  pattern while(_, _)  such that Parent*(read, 12)  pattern if(procedure, _, _) with 7800=assign.stmt#  such that Calls(procedure, procedure) with read.stmt#=while.stmt#  pattern assign(variable, _)  such that Parent*(stmt, 2)  pattern assign(_, _"5100-7500"_)  pattern while(variable, _)  pattern while(_, _)  pattern if(_, _, _)  such that Uses(17, variable)  pattern while(_, _) with stmt.stmt#=9600 with if.stmt#=assign.stmt# with call.procName="procedure" with stmt.stmt#=stmt.stmt# with 7000=assign.stmt#  such that Next*(if, _) with procedure.procName=variable.varName  pattern while(else, _) with procedure.procName=print.varName  such that Next(7, print)  such that Affects(28, assign)  pattern assign(while, _"6300*5000"_) with "assign"=call.procName  pattern assign(variable, _"7700/2800"_)  pattern assign(variable, "3500/9800")  pattern assign(_, _) with "read"=print.varName  pattern if(variable, _, _)  such that Parent(29, assign)  pattern if(_, _, _)  pattern assign(assign, _)  such that Modifies(18, variable)  such that Calls(procedure, procedure)  pattern while(call, _) with 4100=assign.stmt# with call.stmt#=if.stmt#  pattern while(variable, _)  such that Parent*(call, _)  such that Next*(6, print)  pattern assign(variable, "9400/4500")  pattern while(variable, _)  such that Affects(20, stmt) with variable.varName="print"  pattern if(variable, _, _) with variable.varName=variable.varName with if.stmt#=3100  pattern assign(_, _)  pattern assign(variable, _)  such that Next(8, while)  such that Calls*(_, procedure) with "if"=call.procName with read.stmt#=9200  pattern if(then, _, _)  pattern while(read, _)  pattern if(procedure, _, _)  pattern while(variable, _)  such that Parent(11, call)  pattern while(while, _) with 1100=assign.stmt#  pattern assign(variable, _)  such that Modifies(read, "procedure")  such that Modifies(procedure, variable)  pattern assign(variable, "6100+9100") with procedure.procName=variable.varName  pattern while(if, _) with "else"=call.procName  pattern while(else, _)  pattern if(then, _, _)  pattern while(while, _)  pattern assign(_, _) with "call"=print.varName  pattern if(variable, _, _)  pattern if(variable, _, _) with "call"=variable.varName with print.varName="call" with read.stmt#=7600 with print.varName="call" with read.varName="read"  such that Parent(read, 9)  such that Parent*(assign, while)  such that Calls(procedure, procedure)  pattern if(else, _, _)  pattern while(variable, _)  pattern if(variable, _, _) with variable.varName="assign"  pattern if(_, _, _)  pattern if(read, _, _)  pattern if(variable, _, _) with read.varName="while" with "procedure"=procedure.procName with 6900=print.stmt#  pattern while(else, _)  pattern assign(variable, _)  such that Parent(if, call)  pattern while(_, _) with variable.varName=print.varName  such that Modifies(call, "read")  pattern while(constant, _) 

5000
88 - Query 88
print print; assign assign; variable variable; constant constant; stmt stmt; read read; procedure procedure; while while; if if; call call; 
Select <print, assign, variable, constant, stmt, read, procedure, while, if, call> with while.stmt#=print.stmt# with stmt.stmt#=400 with assign.stmt#=3200 with print.varName="print"  such that Parent(_, stmt)  such that Uses(22, variable)  pattern if(print, _, _) with print.stmt#=call.stmt# with "read"=variable.varName with call.procName=call.procName  pattern while(_, _)  such that Follows*(assign, while)  pattern while(_, _) with call.procName=variable.varName with print.stmt#=6100 with call.procName=procedure.procName  pattern assign(_, "8600*5500")  pattern while(variable, _)  pattern if(_, _, _) with while.stmt#=6500  such that Next(call, 26)  pattern assign(_, "(9700/read)+1800") with print.varName="variable"  pattern if(variable, _, _)  such that Parent*(print, while)  pattern assign(variable, "3400+2500")  pattern assign(assign, _"(2800-2700)+5000"_)  pattern while(_, _) with "read"=variable.varName  pattern assign(variable, _"6700/9300"_)  such that Follows*(_, stmt) with assign.stmt#=6600 with stmt.stmt#=9500  such that Uses(read, variable)  pattern assign(variable, "1500/1100")  pattern if(read, _, _) with 6200=read.stmt# with assign.stmt#=assign.stmt# with 200=assign.stmt# with 9000=read.stmt# with print.varName="if"  such that Calls(_, procedure)  pattern if(_, _, _)  pattern assign(_, "((print*9800)-1600)/5200")  pattern if(_, _, _) with 8100=if.stmt#  such that Calls(procedure, "read")  pattern if(_, _, _)  pattern if(then, _, _)  such that Follows(8, assign)  such that Next*(19, read)  such that Parent(call, _)  pattern while(_, _) with read.stmt#=2700  pattern assign(_, _"9700+9100"_)  such that Calls*(procedure, procedure) with 1600=print.stmt# with if.stmt#=assign.stmt#  such that Calls*(_, procedure)  such that Follows*(while, 15)  pattern assign(_, _)  such that Next*(23, print)  such that Modifies(print, variable)  pattern if(procedure, _, _) with 2900=constant.value with print.stmt#=print.stmt# with variable.varName=print.varName with read.varName=variable.varName  pattern while(variable, _) with "procedure"=variable.varName  pattern if(_, _, _)  pattern if(_, _, _)  such that Calls(procedure, "while")  pattern if(variable, _, _) with "else"=print.varName with variable.varName=call.procName with stmt.stmt#=call.stmt# with read.varName=print.varName  such that Next(call, _)  pattern assign(_, _)  pattern if(_, _, _)  pattern while(procedure, _)  such that Next*(stmt, assign) with "procedure"=print.varName  such that Next*(28, print)  such that Affects*(assign, stmt)  pattern while(variable, _)  pattern if(else, _, _)  pattern assign(variable, "5200-5400") with read.stmt#=9900 with call.procName=variable.varName  pattern if(print, _, _)  such that Next(_, print)  pattern if(variable, _, _)  such that Calls(procedure, procedure)  pattern if(_, _, _)  such that Follows*(call, if)  pattern assign(assign, "6800*7300")  pattern if(_, _, _)  such that Next*(read, 24)  such that Calls*(procedure, procedure)  such that Parent(stmt, 26)  such that Uses(procedure, "assign")  such that Calls*(_, procedure)  pattern while(_, _)  pattern assign(variable, _)  pattern assign(variable, _)  pattern while(variable, _) with 2800=assign.stmt#  such that Follows(while, call) with while.stmt#=4900 with "print"=procedure.procName with if.stmt#=4000  pattern if(_, _, _)  pattern assign(_, _"9900-9200"_)  pattern if(_, _, _)  such that Next*(call, 26)  such that Modifies(22, variable) with 8800=assign.stmt# with call.stmt#=2000 with "assign"=read.varName  such that Affects*(assign, stmt)  such that Affects*(27, stmt) with call.procName="if"  such that Next(23, stmt)  pattern if(_, _, _)  pattern assign(variable, _) with if.stmt#=print.stmt# with variable.varName=print.varName with 2900=constant.value with call.procName="variable"  pattern while(while, _)  pattern while(call, _)  such that Parent(read, 16)  such that Calls(procedure, "variable")  pattern while(constant, _) with constant.value=2500  pattern assign(variable, _"5100-2500"_) with print.stmt#=while.stmt#  such that Parent*(call, 24) with procedure.procName="print"  pattern while(assign, _)  pattern if(read, _, _) with 9900=while.stmt#  pattern if(variable, _, _)  pattern if(else, _, _)  pattern if(if, _, _)  pattern assign(_, "constant-2500") with assign.stmt#=8200  pattern assign(procedure, "6500/4900") with call.stmt#=4400  such that Calls*("read", procedure) with print.stmt#=stmt.stmt#  such that Next(4, call)  pattern assign(print, _)  pattern while(_, _)  such that Follows*(6, stmt)  pattern assign(_, "1700+8000") with variable.varName="if"  pattern while(print, _)  such that Parent*(print, read)  pattern assign(_, "700+2600")  pattern while(variable, _)  such that Affects*(23, assign)  such that Uses(8, variable) with "call"=print.varName  such that Uses(assign, variable)  pattern assign(variable, "3900/2900")  such that Calls*("variable", procedure) with print.varName=call.procName  pattern if(variable, _, _)  pattern if(_, _, _) with procedure.procName="constant"  pattern if(variable, _, _)  pattern assign(variable, "7000*3100")  such that Next(call, call)  pattern if(variable, _, _) with 1900=while.stmt# with read.varName="if" with "read"=print.varName  pattern while(constant, _)  pattern while(_, _)  pattern assign(else, _"(call-5500)*5100"_)  pattern assign(else, _)  such that Calls*(procedure, "assign")  pattern assign(read, "2400-2000")  pattern if(procedure, _, _)  such that Affects*(_, stmt)  such that Affects*(stmt, assign)  pattern assign(variable, _)  such that Next(assign, stmt)  pattern while(then, _)  pattern assign(if, _) with "then"=print.varName  pattern assign(_, "100-1300") with print.stmt#=stmt.stmt#  pattern if(assign, _, _) with "then"=variable.varName  pattern while(_, _)  pattern if(procedure, _, _)  such that Follows(22, if) with 1900=while.stmt#  pattern assign(_, "1600-8400")  pattern if(_, _, _)  pattern while(_, _)  pattern assign(variable, _)  pattern while(while, _)  pattern if(_, _, _)  pattern while(variable, _)  such that Follows(assign, _) with stmt.stmt#=constant.value with call.procName="assign" with read.varName=variable.varName with "while"=procedure.procName with if.stmt#=constant.value  pattern while(else, _)  such that Calls*("read", procedure)  such that Follows(read, _)  such that Next*(call, 12) with "constant"=call.procName with call.stmt#=1100  such that Next*(stmt, print) with 8200=assign.stmt#  pattern if(_, _, _)  pattern while(variable, _)  pattern if(variable, _, _) with assign.stmt#=9600  such that Parent(assign, read)  such that Affects*(22, stmt)  such that Affects(stmt, assign)  such that Next*(4, assign)  such that Uses(if, variable)  such that Next(while, 25)  pattern if(then, _, _)  such that Affects(_, assign)  such that Affects(27, stmt) with "call"=variable.varName with variable.varName=procedure.procName  pattern while(variable, _)  pattern if(variable, _, _)  such that Follows(20, if)  pattern if(variable, _, _)  such that Next*(18, stmt)  such that Next*(_, print) with "while"=variable.varName  such that Calls*("while", procedure)  pattern assign(read, _)  pattern if(then, _, _)  pattern if(call, _, _)  pattern assign(_, "3900+call")  pattern if(variable, _, _)  pattern while(variable, _) with 8300=read.stmt#  pattern assign(else, _) with "read"=procedure.procName  pattern while(_, _)  pattern assign(print, _"8700+100"_)  pattern if(assign, _, _) with print.stmt#=while.stmt#  pattern while(_, _) with read.varName=procedure.procName  such that Affects(assign, assign)  pattern assign(constant, "6000-8600")  such that Next(print, 28)  pattern while(while, _) with stmt.stmt#=5200 with 6100=constant.value with assign.stmt#=while.stmt# with constant.value=print.stmt# with read.varName=read.varName with call.stmt#=5300 with print.varName=read.varName  pattern assign(assign, _"500*5800"_)  pattern while(_, _)  pattern if(procedure, _, _) with "procedure"=variable.varName  pattern if(_, _, _)  pattern if(while, _, _)  such that Follows(5, print) with 6200=if.stmt#  pattern if(variable, _, _) with "if"=read.varName  pattern while(if, _)  pattern if(call, _, _)  such that Parent(22, print)  such that Follows(27, assign)  pattern while(_, _)  pattern while(variable, _)  pattern if(procedure, _, _)  such that Calls*(procedure, _)  such that Follows(10, stmt) with print.stmt#=5300  such that Calls*(procedure, _)  pattern if(while, _, _)  pattern while(variable, _)  pattern assign(variable, _"6800-3600"_) with if.stmt#=6600 with 3100=constant.value  pattern assign(variable, _"1700/5500"_)  pattern assign(_, _) with "then"=print.varName  such that Modifies(call, variable)  pattern if(_, _, _) with 5300=constant.value with procedure.procName=procedure.procName with call.procName=read.varName  pattern if(variable, _, _) with procedure.procName=variable.varName  such that Next(assign, 1)  pattern assign(_, _)  pattern if(variable, _, _)  pattern if(variable, _, _) with call.procName="call" with "variable"=print.varName  pattern while(_, _)  such that Parent(stmt, 10)  pattern if(variable, _, _)  pattern assign(_, "2200/4600")  such that Affects(stmt, stmt)  such that Parent*(read, if)  pattern if(then, _, _)  pattern if(variable, _, _)  pattern assign(variable, _"400*2200"_)  pattern assign(call, _) with "while"=read.varName  pattern if(constant, _, _)  pattern while(_, _)  pattern if(variable, _, _) with stmt.stmt#=3100 with procedure.procName="read"  pattern assign(_, _"6700+2300"_) with "variable"=print.varName with while.stmt#=4000  such that Next(read, _)  such that Parent*(_, while) with read.varName="if"  such that Next*(17, assign)  pattern while(_, _)  pattern assign(_, _)  pattern assign(print, _"5600/200"_) with "read"=read.varName  such that Parent*(stmt, while) with call.procName=call.procName  pattern assign(procedure, "variable+6300")  pattern while(_, _)  pattern assign(variable, "7700/1100") with "constant"=call.procName  pattern if(variable, _, _)  such that Affects*(assign, 17) with "else"=read.varName with read.varName="then"  such that Next*(_, print) with read.stmt#=stmt.stmt# with if.stmt#=5900 with 7600=print.stmt# with "call"=variable.varName  such that Calls(procedure, _)  pattern if(else, _, _)  pattern assign(_, "1700-9300")  pattern if(_, _, _) with 5200=read.stmt#  pattern if(call, _, _) with call.procName=call.procName  pattern while(variable, _) with 8700=while.stmt#  pattern if(variable, _, _)  pattern assign(then, "(5500/9500)/2500")  such that Calls(procedure, procedure) with 8300=call.stmt#  pattern assign(variable, _"procedure-2100"_) with call.procName=variable.varName  such that Affects(27, stmt) with read.stmt#=9900 with "variable"=read.varName  pattern while(_, _)  pattern if(_, _, _)  pattern assign(variable, _)  such that Calls(procedure, procedure)  pattern if(variable, _, _)  pattern assign(procedure, _)  pattern assign(_, _"2600/5100"_)  such that Uses(print, "while")  pattern if(variable, _, _)  such that Calls*("constant", procedure) with procedure.procName=call.procName  pattern while(variable, _) with print.stmt#=3500  pattern if(variable, _, _)  such that Next*(10, assign)  pattern while(variable, _)  pattern if(_, _, _)  such that Follows*(stmt, while) with read.stmt#=3900 with print.stmt#=while.stmt#  pattern while(procedure, _) with procedure.procName="else" with 4000=read.stmt# with procedure.procName=call.procName  pattern while(_, _)  pattern assign(variable, "2700*6200")  pattern assign(variable, _"5900+1100"_) with stmt.stmt#=200  pattern while(variable, _)  such that Next(_, if)  such that Follows*(26, stmt)  pattern assign(procedure, _)  pattern if(_, _, _) with "print"=print.varName with while.stmt#=4600  such that Parent*(14, stmt)  pattern assign(while, "call+6500") with stmt.stmt#=print.stmt#  pattern if(if, _, _)  pattern while(variable, _)  pattern while(_, _)  pattern while(_, _)  pattern assign(variable, "8900*4300")  such that Follows*(call, _) with read.stmt#=while.stmt#  such that Next(_, assign) with if.stmt#=7300  pattern assign(constant, "6600*7800")  such that Affects(stmt, 23)  pattern if(_, _, _) with while.stmt#=7000  pattern if(_, _, _)  pattern assign(if, "print/6700") with constant.value=print.stmt#  pattern while(variable, _)  pattern if(_, _, _)  pattern assign(else, "1300-7500") with print.varName=variable.varName  such that Affects(assign, _)  such that Modifies(call, _)  such that Parent(if, print)  such that Follows*(print, _)  pattern while(print, _) with "call"=variable.varName  such that Modifies(25, variable)  pattern assign(variable, "3000+100")  pattern if(_, _, _)  such that Calls*(procedure, "call")  such that Affects*(_, stmt)  pattern assign(_, "2200+8100")  pattern assign(_, _"5100+9600"_) with "else"=print.varName with 8400=constant.value  such that Parent*(read, call)  such that Affects*(_, stmt)  pattern if(print, _, _)  such that Modifies(call, _) with assign.stmt#=3500 with 500=while.stmt#  such that Calls("while", procedure) with call.procName="call"  pattern while(procedure, _)  pattern if(_, _, _)  pattern while(_, _) with print.stmt#=7800  such that Follows*(while, read)  pattern while(variable, _) with call.procName="print"  pattern assign(_, "3400/1000") with print.stmt#=7800 with read.stmt#=4000 with read.varName=print.varName with procedure.procName="else"  pattern while(_, _) with print.varName="then" with "else"=variable.varName  pattern if(_, _, _)  pattern assign(variable, _"if+2600"_) with "then"=read.varName  pattern while(while, _)  pattern while(variable, _) with read.varName="read"  such that Affects(_, assign) with 7200=constant.value  such that Parent*(stmt, 23)  pattern if(_, _, _) with "print"=read.varName  such that Follows*(9, while) with constant.value=3700 with procedure.procName="constant" with 6600=while.stmt#  pattern while(variable, _)  such that Next(8, if)  pattern while(variable, _) with print.stmt#=4600 with read.stmt#=1200  such that Calls*(procedure, _)  such that Follows(if, _)  such that Affects*(assign, _)  such that Uses(read, _)  pattern while(assign, _)  such that Calls*("read", procedure)  pattern while(variable, _) with while.stmt#=while.stmt#  pattern if(if, _, _)  such that Calls*(_, procedure) 

5000
89 - Query 89
assign assign; variable variable; call call; print print; constant constant; stmt stmt; read read; if if; while while; procedure procedure; 
Select <assign, variable, call, print, constant, stmt, read, if, while, procedure>  pattern while(_, _)  such that Calls("while", procedure)  such that Parent*(_, if)  pattern if(_, _, _)  pattern while(_, _)  pattern assign(_, _"2400*3100"_)  pattern while(variable, _) with 5100=read.stmt#  pattern assign(then, "2900*variable")  such that Modifies(procedure, _) with call.stmt#=2100  such that Uses(call, _) with assign.stmt#=7100  pattern while(_, _) with "assign"=variable.varName  such that Uses(22, variable) with "variable"=print.varName  such that Parent*(while, 19) with call.stmt#=read.stmt# with stmt.stmt#=4900  such that Parent*(_, stmt)  such that Calls*("procedure", procedure)  pattern assign(call, _"400-9900"_) with if.stmt#=if.stmt#  pattern assign(read, _) with assign.stmt#=3100  pattern if(variable, _, _)  such that Calls*(procedure, procedure)  pattern if(_, _, _)  such that Next(26, stmt)  such that Uses(24, variable) with "variable"=print.varName with "print"=variable.varName  such that Calls(_, procedure)  pattern while(variable, _)  pattern while(call, _)  pattern while(variable, _)  such that Follows*(_, while)  pattern assign(if, _"2500*5200"_) with read.stmt#=1800  such that Calls("then", procedure)  pattern assign(_, "(1900-1900)*1900")  pattern while(variable, _)  such that Parent*(1, if) with call.procName="else"  such that Next*(_, call) with procedure.procName="call" with call.procName=read.varName with "else"=variable.varName  such that Follows*(stmt, _)  such that Affects*(stmt, 27)  pattern while(print, _)  pattern while(_, _)  pattern while(assign, _)  such that Uses(print, _)  pattern assign(assign, _"4800*2800"_) with call.procName=procedure.procName  such that Uses(call, _)  such that Affects(_, stmt)  pattern assign(_, _"6500-9000"_) with "procedure"=variable.varName  pattern while(read, _)  pattern while(_, _)  such that Affects(stmt, _) with 1500=call.stmt#  pattern while(_, _)  such that Parent*(_, if)  pattern if(variable, _, _) with read.stmt#=constant.value  pattern assign(variable, "900/2000")  such that Affects*(_, stmt)  pattern assign(if, _)  such that Uses(1, variable) with print.stmt#=print.stmt# with variable.varName=read.varName  such that Modifies(21, variable) with variable.varName="while"  pattern while(variable, _) with assign.stmt#=stmt.stmt#  pattern while(variable, _)  pattern assign(variable, _)  pattern while(_, _)  such that Calls(_, procedure)  pattern while(else, _)  such that Parent*(while, _) with read.varName=read.varName with variable.varName="variable"  pattern if(read, _, _) with "variable"=call.procName with 4400=while.stmt#  pattern if(_, _, _)  pattern if(then, _, _)  pattern if(_, _, _)  pattern assign(variable, _"700-2100"_)  pattern if(if, _, _) with print.stmt#=8100  pattern while(_, _)  pattern assign(variable, _) with "call"=variable.varName  such that Parent*(_, call) with call.stmt#=2300  pattern assign(_, "5800/2700") with procedure.procName=print.varName with constant.value=2700  pattern assign(_, _)  pattern assign(variable, _"6800/5000"_) with variable.varName="call"  pattern while(variable, _) with procedure.procName=procedure.procName  such that Calls("constant", procedure)  pattern if(variable, _, _)  pattern if(procedure, _, _)  pattern assign(variable, "500+700") with 700=if.stmt#  such that Follows(read, 8)  such that Affects*(16, assign) with read.varName="assign" with variable.varName="print"  such that Affects*(assign, _)  such that Calls(procedure, "variable")  pattern assign(_, _) with "constant"=variable.varName with print.varName=read.varName  such that Calls("print", procedure)  pattern while(variable, _)  such that Follows(print, _) with constant.value=400 with "print"=read.varName with 9600=if.stmt# with assign.stmt#=print.stmt#  such that Affects(assign, _)  such that Affects*(assign, 29) with while.stmt#=read.stmt#  pattern if(then, _, _)  pattern while(read, _) with "read"=procedure.procName  pattern if(_, _, _)  pattern if(read, _, _)  such that Next*(while, _)  pattern if(variable, _, _)  pattern while(variable, _)  pattern while(_, _)  pattern if(variable, _, _) with call.procName="assign"  pattern assign(variable, _) with 8900=print.stmt#  pattern if(else, _, _)  pattern assign(call, _"3600*8200"_) with if.stmt#=3600  such that Modifies(procedure, "constant")  pattern assign(variable, _) with procedure.procName="variable" with assign.stmt#=1100 with procedure.procName="else"  pattern while(while, _)  pattern while(variable, _) with "procedure"=variable.varName  pattern while(procedure, _) with 6800=assign.stmt# with read.varName=print.varName with "read"=call.procName  such that Follows(call, _)  such that Calls*(_, procedure)  pattern while(call, _)  pattern if(variable, _, _)  pattern assign(_, _) with stmt.stmt#=assign.stmt#  pattern if(print, _, _) with variable.varName="then"  pattern while(if, _)  pattern if(variable, _, _)  pattern if(call, _, _) with assign.stmt#=7600 with 8600=read.stmt#  pattern assign(else, _)  such that Affects*(assign, stmt)  pattern if(print, _, _)  pattern while(_, _) with "assign"=variable.varName with read.varName="while"  pattern assign(variable, _"4200/7400"_)  pattern while(procedure, _) with 5000=print.stmt#  pattern assign(constant, "5100+3900")  such that Follows(_, while)  pattern if(constant, _, _)  such that Uses(print, _) with procedure.procName="else"  pattern while(variable, _) with read.varName="while"  pattern if(read, _, _)  pattern if(read, _, _)  pattern assign(_, _"1500*constant"_) with assign.stmt#=stmt.stmt# with 400=if.stmt#  pattern if(_, _, _)  such that Uses(print, _) with procedure.procName="procedure"  pattern if(_, _, _) with call.procName="read"  such that Modifies(14, variable) with 9700=read.stmt# with variable.varName=variable.varName  such that Next*(if, 11) with while.stmt#=if.stmt#  such that Uses(assign, "read")  such that Calls*(_, procedure) with "read"=call.procName  pattern assign(variable, _"8600-6500"_)  pattern assign(else, "9700+3500")  pattern while(_, _) with procedure.procName=call.procName with constant.value=7000  such that Affects*(assign, assign) with print.varName=print.varName with read.stmt#=9100  such that Parent*(call, 25)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern while(_, _) with constant.value=2000 with assign.stmt#=8600  such that Parent(if, print)  pattern assign(variable, _"500/6700"_) with assign.stmt#=call.stmt# with read.varName=read.varName with print.varName=procedure.procName  pattern assign(variable, "1700/6300")  such that Affects*(stmt, _)  such that Affects(_, stmt)  such that Calls*("variable", procedure) with print.varName="if" with constant.value=900  pattern assign(variable, _) with read.stmt#=constant.value  pattern if(procedure, _, _)  pattern while(_, _) with procedure.procName=procedure.procName  such that Parent*(print, 5)  such that Next(print, print)  pattern assign(print, "1500*8600")  pattern while(if, _)  pattern if(_, _, _)  pattern assign(assign, _)  pattern while(_, _)  pattern while(variable, _)  pattern assign(then, "2900+2000") with "variable"=variable.varName with read.stmt#=constant.value with 6500=call.stmt# with read.stmt#=if.stmt# with if.stmt#=1500  pattern assign(variable, "1200+read") with 2100=while.stmt# with 2800=call.stmt#  such that Next(stmt, 14)  pattern if(_, _, _) with print.varName="call"  pattern while(_, _)  pattern while(if, _)  such that Next(8, call)  pattern if(variable, _, _) with 8100=constant.value  pattern if(_, _, _) with procedure.procName=call.procName  such that Uses(stmt, variable)  such that Parent(read, print)  pattern if(print, _, _) with print.varName="if"  pattern if(variable, _, _) with "else"=call.procName with variable.varName="variable" with variable.varName=variable.varName with procedure.procName="constant"  pattern while(_, _) with call.procName=procedure.procName  pattern if(variable, _, _)  pattern assign(_, _)  such that Affects*(stmt, 23) with 1800=while.stmt# with print.varName="then"  such that Uses(read, variable)  pattern while(_, _)  pattern if(print, _, _)  pattern while(_, _)  pattern while(read, _) with print.stmt#=900 with stmt.stmt#=constant.value  pattern while(constant, _)  pattern assign(while, _)  such that Affects*(1, assign)  pattern assign(then, "2000+3700")  pattern assign(read, _) with procedure.procName=print.varName  such that Next*(stmt, while)  pattern assign(variable, _"2100*200"_)  pattern assign(_, "5900+2900")  pattern assign(variable, "3900+2000")  pattern if(then, _, _) with call.stmt#=if.stmt#  such that Uses(print, variable)  pattern assign(_, _"3500*200"_) with procedure.procName=variable.varName  pattern while(variable, _) with variable.varName=procedure.procName with procedure.procName=procedure.procName with call.procName="variable"  such that Follows*(call, 7)  pattern if(variable, _, _)  such that Next(call, assign) with if.stmt#=5900  pattern while(variable, _)  such that Calls(procedure, _)  such that Follows(23, if) with print.varName="then"  such that Modifies(print, _) with if.stmt#=6300 with while.stmt#=constant.value  pattern assign(_, _)  pattern while(while, _)  such that Calls*(_, procedure)  pattern if(variable, _, _) with 1100=read.stmt#  pattern assign(else, _"8300+7600"_)  such that Uses(if, variable) with call.procName=call.procName with 3600=while.stmt#  pattern if(if, _, _) with print.varName=call.procName with 5100=if.stmt#  such that Uses(17, variable) with procedure.procName="else"  pattern while(variable, _)  pattern if(_, _, _)  such that Next*(assign, 23)  pattern while(_, _)  such that Affects(_, stmt) with read.varName="while"  such that Calls("else", procedure)  pattern if(else, _, _)  pattern if(constant, _, _) with "if"=variable.varName  pattern while(read, _) with variable.varName="then"  such that Next(stmt, if) with stmt.stmt#=read.stmt#  such that Follows(6, if)  pattern assign(variable, "then+4700")  pattern if(print, _, _)  pattern while(else, _)  pattern if(_, _, _) with 900=call.stmt# with while.stmt#=600  pattern while(variable, _) with 5800=if.stmt#  pattern assign(variable, "if/3700") with 8700=stmt.stmt#  pattern assign(_, _)  pattern if(variable, _, _) with procedure.procName="variable"  pattern assign(procedure, _)  pattern while(variable, _) with call.stmt#=7800  pattern while(_, _) with call.procName=read.varName  pattern while(variable, _) with "print"=print.varName  such that Calls*(procedure, procedure)  pattern while(read, _) with 4500=while.stmt# with if.stmt#=6000  such that Calls("constant", procedure) with 4300=read.stmt#  pattern assign(_, _)  such that Next*(stmt, _) with while.stmt#=stmt.stmt# with "if"=variable.varName  pattern assign(variable, _) with assign.stmt#=1900  such that Calls(procedure, "constant")  such that Calls(procedure, "variable") with variable.varName="variable"  pattern assign(else, _)  pattern if(variable, _, _)  such that Uses(while, variable)  pattern if(variable, _, _)  such that Affects(assign, 12)  such that Next*(call, _)  pattern assign(_, "5200-200")  pattern assign(variable, _"1800+100"_) with constant.value=2300 with read.varName="call" with "assign"=procedure.procName  pattern while(variable, _) with print.varName="if"  pattern while(call, _)  such that Next(if, _)  pattern assign(_, _) with while.stmt#=500  pattern while(else, _)  such that Next*(19, while)  such that Follows*(_, stmt) with 5100=print.stmt#  pattern while(variable, _)  pattern assign(_, "(4900/constant)+4600")  pattern assign(variable, _"4600+3100"_)  pattern assign(procedure, _"4200*500"_)  such that Parent(print, _) with assign.stmt#=6800  pattern if(variable, _, _)  such that Next(_, read)  pattern if(else, _, _)  such that Next*(while, if) with read.varName=variable.varName  pattern while(_, _)  pattern if(then, _, _)  such that Affects(assign, _)  pattern assign(variable, "9800-5000")  such that Uses(while, _) with constant.value=800  pattern assign(_, "2600/while") with 7300=call.stmt#  pattern if(_, _, _)  pattern assign(variable, _)  pattern if(call, _, _)  such that Next*(3, call)  pattern while(_, _)  pattern if(_, _, _)  pattern while(variable, _) with "call"=variable.varName with "if"=read.varName  pattern while(variable, _) with read.varName=call.procName  pattern if(variable, _, _) with call.procName=procedure.procName  pattern assign(variable, _"7200*700"_)  such that Affects*(stmt, 1)  such that Uses(while, _)  such that Follows*(assign, _)  such that Follows(call, _)  pattern assign(_, _"8000-4100"_)  such that Follows*(read, _) with stmt.stmt#=9200  pattern if(_, _, _)  pattern assign(procedure, "9100*4100")  pattern assign(constant, _"6600*6800"_)  pattern assign(variable, _"4000+4500"_)  pattern while(if, _)  such that Affects(15, stmt)  pattern if(constant, _, _)  pattern assign(if, _"2500-4800"_)  pattern assign(call, _)  pattern while(_, _) with variable.varName="call" with read.varName="if" with 6400=assign.stmt#  such that Modifies(assign, _) with variable.varName=variable.varName with variable.varName=variable.varName  pattern if(variable, _, _)  pattern assign(_, _)  pattern assign(variable, _"9300+3000"_) with "else"=call.procName  pattern assign(_, _"5700+3100"_)  such that Parent*(24, if) with "assign"=call.procName  pattern if(variable, _, _) with call.stmt#=read.stmt#  such that Next(stmt, 8)  pattern if(_, _, _) with read.stmt#=if.stmt#  pattern assign(constant, _)  pattern while(_, _)  such that Next*(25, read)  pattern assign(variable, _"(600+6700)/5000"_)  pattern assign(_, "3100*2400") with 1200=print.stmt#  pattern if(_, _, _)  pattern if(read, _, _)  pattern while(variable, _)  pattern while(variable, _) with read.varName="read" with if.stmt#=5800  such that Affects(9, stmt)  such that Calls*(procedure, _)  such that Calls*("read", procedure)  pattern while(_, _)  such that Affects*(_, stmt)  pattern if(variable, _, _)  such that Next(1, call)  pattern if(variable, _, _) with print.varName=call.procName  pattern assign(variable, "7600*while") with print.varName="variable"  such that Follows(assign, while) with 9600=print.stmt#  pattern while(variable, _)  pattern while(variable, _) with while.stmt#=2700  pattern if(call, _, _) 

5000
90 - Query 90
print print; assign assign; variable variable; constant constant; stmt stmt; read read; procedure procedure; if if; while while; call call; 
Select <print, assign, variable, constant, stmt, read, procedure, if, while, call> with while.stmt#=if.stmt# with if.stmt#=print.stmt#  pattern if(procedure, _, _)  such that Affects*(stmt, _) with "assign"=call.procName  such that Affects(assign, 12)  such that Next(if, 11) with 8700=stmt.stmt# with print.varName="print" with call.stmt#=print.stmt#  pattern assign(variable, "1400-6400")  pattern while(procedure, _)  pattern assign(if, _"2800*9200"_)  such that Affects*(assign, 20)  pattern if(variable, _, _)  such that Parent*(while, 28)  pattern if(_, _, _)  such that Parent*(if, 1) with procedure.procName="procedure"  such that Follows*(17, while)  pattern if(variable, _, _) with variable.varName="assign" with print.stmt#=if.stmt# with variable.varName="print"  pattern while(else, _)  pattern assign(assign, _"8900-4900"_) with "else"=read.varName  pattern while(_, _) with procedure.procName="assign"  pattern while(_, _)  such that Follows(call, 9) with stmt.stmt#=1600  pattern if(read, _, _)  pattern assign(variable, "5200*400") with stmt.stmt#=3300  pattern while(_, _)  such that Next*(while, _) with assign.stmt#=900 with "variable"=procedure.procName with "while"=variable.varName  pattern assign(_, "2500-8400")  pattern assign(_, "8000+8200")  such that Follows(stmt, if)  pattern while(_, _)  such that Follows(print, _) with procedure.procName=print.varName  pattern assign(_, "3600-procedure")  such that Affects(13, stmt)  pattern if(variable, _, _)  pattern if(_, _, _)  such that Next(_, call) with "print"=procedure.procName  such that Parent(_, while)  pattern while(read, _)  such that Uses(print, variable)  pattern while(_, _)  such that Follows(stmt, _)  pattern while(_, _) with if.stmt#=stmt.stmt#  pattern while(_, _)  pattern if(_, _, _) with procedure.procName="while" with read.varName="while"  pattern while(_, _) with procedure.procName="assign"  pattern assign(if, _) with read.varName="print"  pattern assign(print, "7100/3800")  pattern while(_, _)  such that Calls*(_, procedure)  pattern while(variable, _)  pattern assign(print, "6800+7400") with "call"=read.varName  such that Parent(call, call)  pattern if(variable, _, _) with while.stmt#=constant.value  pattern if(then, _, _)  pattern while(variable, _)  such that Parent(assign, _) with 4100=call.stmt#  pattern assign(constant, "2500*600")  pattern if(print, _, _)  such that Uses(procedure, "if")  pattern assign(_, _"2800-4900"_)  pattern while(_, _) with read.varName=print.varName with read.stmt#=9500  pattern while(_, _) with print.varName=call.procName with 1200=assign.stmt# with 7100=print.stmt#  pattern assign(variable, "8200-constant")  such that Calls*("constant", procedure)  pattern assign(_, _) with if.stmt#=stmt.stmt#  pattern assign(variable, "2300+6000")  such that Calls(procedure, procedure) with assign.stmt#=call.stmt#  pattern if(_, _, _)  pattern while(procedure, _)  pattern while(variable, _)  such that Calls*(_, procedure)  pattern while(_, _)  such that Next*(_, assign)  such that Affects*(stmt, assign)  pattern while(_, _)  such that Modifies(stmt, _)  such that Uses(3, variable)  pattern if(while, _, _) with 6500=while.stmt#  pattern while(constant, _) with while.stmt#=constant.value  pattern if(then, _, _)  such that Modifies(while, variable) with if.stmt#=5100  pattern while(variable, _) with stmt.stmt#=7700  such that Affects(stmt, 20) with read.stmt#=print.stmt# with 9900=stmt.stmt# with while.stmt#=1100 with variable.varName=read.varName  such that Uses(assign, variable) with "while"=procedure.procName with call.stmt#=7300 with while.stmt#=while.stmt# with assign.stmt#=4800  pattern while(variable, _)  pattern while(if, _)  pattern while(variable, _) with if.stmt#=7800  pattern while(_, _) with 4800=stmt.stmt#  pattern assign(_, "9700+6800") with variable.varName=call.procName  such that Parent*(_, print)  pattern while(read, _)  pattern if(_, _, _)  pattern if(_, _, _)  pattern if(_, _, _)  pattern assign(procedure, "6000*8800")  pattern while(print, _)  pattern if(call, _, _) with "variable"=variable.varName  pattern while(_, _) with variable.varName=procedure.procName  such that Uses(print, "if")  pattern while(_, _)  pattern assign(while, "300/3700") with stmt.stmt#=5300 with read.varName=procedure.procName  pattern while(variable, _)  such that Next(while, print)  pattern while(variable, _) with read.varName="constant"  pattern while(variable, _)  such that Modifies(print, "procedure")  pattern if(variable, _, _) with "assign"=print.varName  pattern while(variable, _)  pattern while(variable, _)  pattern if(_, _, _)  pattern while(variable, _)  pattern if(variable, _, _)  pattern assign(variable, _"(4800-6300)/9200"_) with variable.varName=procedure.procName with "procedure"=print.varName with "else"=procedure.procName with stmt.stmt#=stmt.stmt#  pattern while(else, _)  such that Calls(procedure, procedure) with 2100=call.stmt# with read.varName=read.varName with while.stmt#=500 with procedure.procName="variable"  such that Uses(if, "then")  such that Follows*(_, assign)  pattern assign(_, _)  such that Calls(procedure, "constant") with 2000=assign.stmt#  pattern while(read, _)  pattern assign(variable, _)  such that Next*(_, while)  such that Affects(16, stmt)  pattern while(variable, _)  such that Parent(assign, while)  pattern while(_, _)  pattern if(then, _, _)  pattern while(_, _)  pattern if(_, _, _)  such that Parent(stmt, call)  pattern while(constant, _)  such that Follows(read, 28) with 5000=read.stmt# with print.stmt#=4400  pattern assign(_, _)  such that Follows(read, _)  pattern if(then, _, _)  pattern if(variable, _, _) with "call"=variable.varName with read.varName="while" with "then"=call.procName  such that Calls*("procedure", procedure)  pattern while(_, _) with assign.stmt#=1100  pattern while(else, _) with print.stmt#=if.stmt#  pattern if(constant, _, _)  pattern if(variable, _, _)  such that Follows*(if, _)  such that Affects*(_, stmt)  pattern if(_, _, _)  such that Calls(procedure, "print")  pattern if(variable, _, _)  pattern assign(variable, _"2600/1000"_) with 9100=while.stmt# with 7700=if.stmt# with 3400=stmt.stmt#  pattern assign(variable, _"4700/9200"_)  pattern while(_, _)  such that Calls("assign", procedure)  such that Modifies(assign, "variable")  pattern assign(then, _"print+2000"_)  pattern while(_, _)  pattern while(_, _) with call.stmt#=4200 with procedure.procName="print" with read.varName="print"  pattern assign(_, _"4000+8300"_) with call.stmt#=if.stmt#  pattern while(_, _)  such that Follows*(call, 12)  pattern while(if, _) with read.varName="print" with read.varName=variable.varName  such that Follows*(stmt, _)  such that Parent(if, 5)  such that Affects(10, assign)  such that Uses(5, variable)  pattern while(_, _)  pattern assign(variable, _"6500/7500"_)  such that Calls("then", procedure) with 9500=stmt.stmt#  pattern while(print, _) with if.stmt#=call.stmt# with if.stmt#=3400  such that Follows(call, 3)  pattern if(variable, _, _) with 6600=while.stmt# with call.procName=procedure.procName with constant.value=1700 with assign.stmt#=if.stmt#  such that Parent*(stmt, print) with procedure.procName=procedure.procName  pattern if(constant, _, _)  pattern if(then, _, _)  such that Modifies(while, _) with assign.stmt#=read.stmt#  such that Uses(procedure, variable)  pattern while(variable, _) with variable.varName="else"  pattern if(_, _, _)  such that Calls(_, procedure) with if.stmt#=if.stmt#  such that Modifies(8, variable)  such that Follows*(assign, 4)  such that Uses(while, _)  such that Uses(21, variable)  pattern while(call, _)  pattern assign(variable, _)  such that Affects(assign, 8)  such that Next(read, _) with assign.stmt#=7700  pattern if(_, _, _)  pattern assign(_, _)  such that Follows(_, read) with 7800=while.stmt# with while.stmt#=2500  pattern if(_, _, _)  pattern if(variable, _, _)  pattern if(if, _, _)  such that Follows*(print, assign)  pattern assign(variable, _)  pattern assign(while, "3500-else")  pattern if(variable, _, _)  pattern if(_, _, _)  pattern assign(if, _) with print.stmt#=if.stmt#  pattern while(read, _)  pattern if(variable, _, _) with call.procName="if"  pattern assign(_, "9300+constant")  pattern if(variable, _, _)  such that Parent*(call, 20) with "print"=read.varName with "if"=print.varName  such that Affects*(assign, _)  pattern assign(_, _"call-6400"_)  pattern while(call, _)  such that Calls*("while", procedure) with assign.stmt#=print.stmt# with read.stmt#=read.stmt#  such that Follows(call, assign) with 9000=stmt.stmt#  pattern while(variable, _)  such that Modifies(procedure, variable)  such that Uses(5, variable)  pattern if(while, _, _)  pattern while(call, _)  pattern if(_, _, _)  pattern while(variable, _) with "call"=print.varName with if.stmt#=while.stmt#  such that Next*(print, 9) with 5600=print.stmt# with print.stmt#=6000  pattern while(_, _)  pattern while(variable, _)  pattern assign(_, _) with 9500=constant.value  such that Parent*(if, 4)  pattern if(_, _, _)  such that Parent(_, if)  pattern if(_, _, _)  such that Follows*(call, print)  such that Affects*(stmt, _)  such that Affects*(21, assign)  pattern if(if, _, _) with call.stmt#=2000  pattern assign(variable, _"2900/9900"_)  pattern if(_, _, _) with call.stmt#=1900 with while.stmt#=800 with stmt.stmt#=6800  such that Next*(27, if)  pattern assign(call, _"2600+6200"_)  pattern while(variable, _) with "assign"=procedure.procName  pattern assign(variable, _)  pattern while(variable, _)  such that Calls*(procedure, procedure) with "print"=read.varName with print.stmt#=call.stmt# with variable.varName=read.varName with constant.value=if.stmt# with "if"=read.varName  pattern if(_, _, _)  such that Next*(while, 26) with "call"=procedure.procName  pattern while(variable, _)  such that Affects*(14, stmt) with 7100=constant.value with 1700=if.stmt#  pattern while(procedure, _)  pattern assign(then, _)  pattern while(variable, _)  such that Parent(call, _)  pattern while(print, _)  such that Follows*(read, assign)  pattern if(then, _, _) with 7300=if.stmt#  such that Follows(_, stmt)  pattern if(variable, _, _)  pattern if(_, _, _)  such that Parent*(if, print)  such that Affects*(14, stmt)  such that Next(assign, 15)  pattern while(if, _) with stmt.stmt#=6100  such that Calls(procedure, "assign")  pattern assign(variable, _"(6300*4800)+2800"_)  such that Modifies(if, "assign")  pattern if(variable, _, _)  such that Calls(procedure, "procedure") with stmt.stmt#=while.stmt# with 4900=constant.value  such that Calls*(procedure, _) with constant.value=while.stmt#  such that Next*(print, _)  pattern while(_, _) with "assign"=call.procName  pattern while(variable, _)  such that Parent*(while, 20) with "procedure"=variable.varName with call.stmt#=read.stmt#  such that Next*(call, 21) with constant.value=6100 with constant.value=600 with read.varName=procedure.procName with procedure.procName=print.varName with stmt.stmt#=1800  such that Modifies(27, variable)  pattern while(_, _) with variable.varName=procedure.procName  pattern assign(procedure, _"print-1800"_)  pattern while(_, _)  pattern if(variable, _, _)  pattern assign(while, _)  pattern if(_, _, _)  pattern assign(variable, "800*9900")  pattern assign(variable, _) with 4800=call.stmt# with print.stmt#=constant.value with "else"=variable.varName  pattern assign(variable, _)  pattern while(variable, _) with print.varName=call.procName  pattern assign(constant, _)  such that Modifies(assign, "if")  pattern if(variable, _, _)  such that Affects*(_, stmt)  pattern while(variable, _)  such that Parent(while, 3)  pattern while(_, _)  such that Affects(stmt, assign)  pattern assign(variable, _"9500*1600"_)  pattern assign(_, _"4000-800"_)  pattern while(_, _)  pattern while(print, _) with call.stmt#=print.stmt#  such that Modifies(assign, variable) with 2600=print.stmt#  pattern while(variable, _)  pattern while(variable, _)  pattern while(variable, _)  pattern assign(variable, "5100/3500")  pattern assign(variable, _) with call.procName=procedure.procName  pattern if(variable, _, _)  pattern while(call, _)  such that Affects(stmt, _) with print.varName=variable.varName  such that Uses(call, _)  pattern while(_, _)  pattern assign(variable, _"7900-1500"_) with print.varName=call.procName with call.procName=procedure.procName  pattern if(variable, _, _)  such that Follows*(2, while)  such that Uses(if, "print")  such that Parent(if, while)  such that Affects*(assign, assign) with variable.varName="else"  such that Calls(procedure, _)  such that Parent(_, call)  such that Uses(while, variable)  pattern if(_, _, _)  pattern if(variable, _, _)  such that Calls(procedure, "then")  pattern assign(_, "(4300/7200)-3500")  pattern while(_, _) with procedure.procName=variable.varName  such that Affects(_, assign)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern while(variable, _) with call.procName="while" with print.varName="constant"  pattern if(_, _, _)  pattern if(then, _, _) with "while"=procedure.procName  pattern if(variable, _, _)  such that Affects(_, stmt)  pattern if(call, _, _) with while.stmt#=9300  such that Uses(4, variable)  such that Calls(_, procedure)  such that Affects(stmt, stmt) with "variable"=read.varName with print.varName="call" with 1200=assign.stmt#  pattern assign(variable, _)  pattern assign(_, "(9800/8100)/7200") with procedure.procName="while"  such that Affects*(assign, stmt) with stmt.stmt#=2500  such that Affects*(18, assign)  pattern if(variable, _, _)  such that Parent*(23, if)  pattern assign(_, _"6900/5300"_)  pattern if(constant, _, _) with call.stmt#=6500  pattern if(variable, _, _)  pattern assign(_, "9100*1200")  such that Parent*(_, read)  pattern if(variable, _, _)  such that Uses(28, variable)  pattern assign(_, _)  pattern while(variable, _)  such that Calls*(procedure, "read")  such that Parent*(21, print) with 2700=call.stmt#  pattern while(constant, _) with read.stmt#=4700  such that Modifies(print, variable) with assign.stmt#=2600  pattern assign(variable, "6200*9200")  pattern while(procedure, _)  such that Affects(assign, stmt)  pattern assign(variable, _"7400-8300"_) 

5000
91 - Query 91
variable variable; assign assign; print print; constant constant; stmt stmt; read read; procedure procedure; while while; if if; call call; 
Select <variable, assign, print, constant, stmt, read, procedure, while, if, call> with call.procName=variable.varName  pattern assign(_, _) with 500=read.stmt#  pattern while(constant, _) with read.varName=variable.varName  pattern while(call, _) with while.stmt#=print.stmt#  such that Affects*(assign, stmt) with print.varName="procedure"  such that Affects*(stmt, assign)  pattern assign(_, "1600+1000")  pattern while(variable, _)  such that Modifies(9, variable) with "call"=procedure.procName  pattern assign(_, _"6200-8500"_)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern if(variable, _, _) with call.procName="print"  pattern if(_, _, _)  pattern while(call, _) with call.stmt#=constant.value  such that Calls("constant", procedure) with stmt.stmt#=2800  such that Affects(stmt, stmt)  such that Modifies(call, _)  pattern while(variable, _) with print.varName="variable"  pattern while(_, _)  pattern while(read, _)  pattern if(_, _, _)  such that Follows(22, while) with "while"=print.varName  pattern while(_, _) with read.varName=call.procName with constant.value=6100  pattern while(_, _)  pattern while(variable, _)  such that Follows*(assign, _)  pattern if(variable, _, _)  such that Next(6, call) with call.stmt#=assign.stmt#  pattern assign(variable, _)  pattern assign(variable, _"5200+300"_) with "then"=print.varName with read.varName="call"  such that Affects(assign, assign) with 6800=print.stmt#  pattern if(variable, _, _) with variable.varName="assign" with "while"=variable.varName  pattern while(variable, _)  pattern if(_, _, _)  pattern assign(procedure, _"1300+1600"_) with "call"=read.varName  such that Uses(call, variable)  pattern while(variable, _)  pattern while(_, _)  such that Uses(print, "while")  pattern while(_, _) with stmt.stmt#=600 with print.varName=procedure.procName with 5800=constant.value with while.stmt#=assign.stmt# with read.varName=call.procName  such that Parent(if, _)  such that Calls(procedure, procedure) with "read"=print.varName with if.stmt#=if.stmt#  such that Uses(13, variable)  pattern while(variable, _)  pattern if(if, _, _) with "constant"=call.procName  such that Follows(assign, 14) with read.varName="variable"  pattern if(assign, _, _)  pattern while(variable, _)  pattern while(variable, _)  pattern while(_, _)  pattern if(variable, _, _)  pattern if(variable, _, _) with "else"=procedure.procName  pattern assign(variable, "2700-6600") with while.stmt#=400  pattern while(variable, _)  pattern if(variable, _, _) with print.stmt#=if.stmt#  pattern while(variable, _) with 100=while.stmt#  pattern if(constant, _, _)  such that Uses(assign, _)  such that Affects(assign, stmt)  such that Modifies(14, variable)  pattern while(_, _) with call.stmt#=read.stmt#  pattern while(variable, _)  pattern while(_, _)  pattern if(then, _, _)  such that Parent*(read, 11)  pattern assign(variable, _)  pattern if(_, _, _)  such that Calls(_, procedure) with print.stmt#=call.stmt#  such that Follows*(if, print)  pattern assign(print, _"(3300/print)+800"_)  pattern if(_, _, _)  pattern while(variable, _)  pattern while(variable, _)  pattern assign(_, _)  such that Next*(call, 24)  pattern assign(variable, _)  such that Affects*(stmt, _)  pattern if(variable, _, _) with read.varName="print"  pattern while(variable, _)  such that Follows*(11, assign)  pattern assign(variable, _"9800+7600"_)  pattern while(call, _)  pattern while(read, _)  pattern while(_, _) with constant.value=read.stmt#  pattern assign(_, _)  pattern if(while, _, _) with print.varName="print" with 1500=stmt.stmt#  such that Next(while, 21) with 5800=stmt.stmt#  such that Modifies(call, "variable")  pattern while(variable, _)  pattern assign(if, _"6800*200"_) with call.procName="variable"  such that Modifies(1, variable)  pattern if(variable, _, _) with "constant"=call.procName  such that Next*(print, 21) with read.stmt#=900  such that Parent(_, call)  pattern assign(variable, _)  pattern assign(_, "3600/8800") with if.stmt#=900  pattern while(procedure, _)  pattern if(variable, _, _) with 8200=constant.value with variable.varName=call.procName  pattern while(assign, _) with while.stmt#=constant.value  such that Next(_, read)  pattern while(variable, _) with procedure.procName=variable.varName with call.stmt#=8700  pattern while(assign, _) with print.varName=procedure.procName  pattern assign(variable, _"9600-2000"_)  pattern assign(variable, _)  such that Next(call, 10) with assign.stmt#=if.stmt# with call.stmt#=constant.value  such that Affects(stmt, 7) with if.stmt#=9000  pattern if(variable, _, _)  such that Affects(stmt, 4)  such that Next*(read, _)  such that Calls(_, procedure)  such that Follows(4, stmt) with call.procName=print.varName  such that Calls(procedure, procedure)  pattern if(while, _, _)  pattern assign(call, _"3900*7600"_) with procedure.procName=variable.varName  pattern while(variable, _)  such that Follows*(while, while)  such that Parent*(stmt, 13)  pattern while(print, _)  pattern while(variable, _) with 5900=stmt.stmt# with call.procName="while"  such that Affects(_, stmt)  pattern while(variable, _)  such that Parent*(call, _)  such that Affects*(assign, stmt)  pattern while(variable, _) with procedure.procName="if" with 3300=print.stmt#  such that Next(assign, _)  pattern if(_, _, _)  pattern assign(_, _"variable*1100"_) with "variable"=variable.varName  such that Parent(assign, _)  pattern if(_, _, _)  pattern while(_, _) with read.varName=procedure.procName  such that Calls(procedure, "else")  pattern if(read, _, _)  pattern assign(assign, _"(3000-variable)/200"_)  pattern while(_, _) with assign.stmt#=assign.stmt#  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern assign(variable, "3400+8200")  pattern if(read, _, _)  pattern if(while, _, _)  pattern assign(else, _) with 4900=call.stmt# with assign.stmt#=6800  pattern assign(read, _) with while.stmt#=7600  such that Uses(print, variable)  pattern assign(read, _"4800-4100"_)  such that Affects*(stmt, _)  such that Follows*(if, read)  pattern assign(variable, _)  pattern while(variable, _)  pattern assign(_, _)  such that Uses(while, _)  pattern while(_, _)  pattern if(variable, _, _)  such that Modifies(procedure, variable)  pattern if(variable, _, _)  pattern while(print, _) with "variable"=variable.varName with print.stmt#=constant.value  pattern assign(variable, _)  pattern assign(read, "2400*9500")  pattern while(_, _) with variable.varName=procedure.procName with 3400=call.stmt# with "assign"=variable.varName with variable.varName="constant"  such that Parent*(if, _)  such that Follows*(assign, call)  pattern assign(call, "7300-9600")  pattern while(_, _)  pattern assign(constant, _)  pattern assign(variable, _)  such that Follows(while, call)  pattern assign(_, _"7500/500"_)  pattern while(_, _)  pattern if(_, _, _)  pattern assign(else, _)  pattern assign(while, "4600*9200")  such that Affects*(assign, assign) with procedure.procName=procedure.procName with procedure.procName="print"  pattern assign(variable, _"read*9200"_)  pattern if(read, _, _)  such that Affects(10, assign)  pattern if(variable, _, _) with call.stmt#=call.stmt# with read.varName="print"  such that Modifies(12, variable)  pattern while(print, _)  such that Parent*(23, stmt) with call.procName="print"  pattern assign(_, _) with while.stmt#=read.stmt# with read.varName="procedure"  such that Affects*(assign, stmt) with print.stmt#=6900 with procedure.procName=procedure.procName  pattern assign(_, "4900*7500")  such that Uses(procedure, variable)  pattern if(constant, _, _) with stmt.stmt#=stmt.stmt#  pattern if(variable, _, _) with "else"=print.varName with constant.value=while.stmt#  such that Modifies(17, variable)  pattern if(variable, _, _)  such that Affects(assign, stmt)  pattern while(_, _) with print.varName="assign"  pattern assign(_, _)  pattern assign(if, "constant-while")  pattern if(variable, _, _)  pattern while(variable, _)  pattern while(_, _) with call.procName="else"  such that Calls*(procedure, _) with call.procName=call.procName  pattern while(print, _)  such that Calls(procedure, _)  such that Parent(9, call) with while.stmt#=5600  pattern assign(_, "8200+read") with call.procName=variable.varName  such that Parent*(10, stmt) with stmt.stmt#=read.stmt#  pattern assign(variable, "7700-8800")  such that Calls(procedure, "else")  pattern if(constant, _, _)  such that Follows*(while, stmt)  pattern while(_, _) with "while"=print.varName  pattern assign(_, _"4000+call"_)  pattern while(_, _) with 1300=while.stmt#  pattern if(variable, _, _)  such that Parent(_, assign)  pattern while(variable, _)  pattern if(variable, _, _)  pattern while(then, _)  pattern assign(_, _)  pattern if(variable, _, _)  pattern while(_, _) with call.procName=procedure.procName  such that Affects(_, stmt)  such that Affects*(assign, _)  pattern while(else, _) with "read"=variable.varName with read.varName=call.procName  such that Parent*(call, _) with variable.varName=variable.varName with "assign"=procedure.procName  pattern while(constant, _)  pattern if(_, _, _)  such that Parent(28, assign)  pattern assign(call, _"8700+6200"_)  pattern while(read, _) with print.varName="procedure" with assign.stmt#=1200  pattern assign(_, _) with while.stmt#=stmt.stmt# with call.procName="while"  pattern while(if, _) with print.varName="call"  such that Follows(read, 19) with 1400=assign.stmt#  pattern while(_, _)  pattern if(if, _, _) with constant.value=7100  such that Modifies(while, variable)  pattern while(procedure, _)  pattern if(variable, _, _) with "assign"=procedure.procName with assign.stmt#=4400  such that Follows(call, 24) with while.stmt#=print.stmt#  such that Affects(stmt, stmt)  such that Uses(28, variable)  pattern assign(_, "3800/7700")  pattern assign(procedure, "7200-1300")  pattern if(while, _, _)  such that Parent(if, stmt) with 3600=constant.value with print.stmt#=4700  such that Parent*(if, stmt)  pattern assign(_, _"(6300+3200)-4600"_)  pattern if(variable, _, _) with procedure.procName="constant" with 7600=print.stmt#  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern while(variable, _)  pattern while(_, _)  such that Parent*(_, stmt)  such that Next(stmt, _)  pattern if(_, _, _)  pattern while(_, _) with 1000=constant.value  such that Follows*(read, 17)  pattern if(constant, _, _)  pattern if(print, _, _) with "call"=variable.varName  pattern while(variable, _) with call.procName=call.procName  pattern while(_, _)  pattern assign(variable, _"9700+5600"_) with if.stmt#=9600  such that Affects(stmt, stmt)  pattern if(_, _, _)  pattern while(read, _)  pattern if(variable, _, _)  pattern assign(variable, _"200/6400"_)  such that Next(_, print) with call.procName=procedure.procName  such that Next(if, 3)  pattern if(_, _, _)  pattern assign(_, _"4700*9200"_) with 4900=stmt.stmt# with variable.varName=call.procName  pattern while(variable, _)  pattern if(then, _, _)  pattern assign(_, _)  such that Follows(while, _) with procedure.procName="print"  pattern assign(variable, _"7100*if"_) with "procedure"=call.procName with while.stmt#=if.stmt#  pattern assign(variable, _"(400-call)+1000"_) with variable.varName="assign" with variable.varName="print" with 1000=constant.value  pattern assign(constant, "1700+1500") with print.varName="then"  pattern if(constant, _, _)  pattern if(variable, _, _) with variable.varName=variable.varName  pattern while(constant, _)  pattern while(_, _)  pattern while(variable, _)  pattern if(_, _, _)  such that Parent*(12, print) with "variable"=read.varName  pattern assign(variable, _"procedure-7100"_)  pattern while(variable, _)  pattern if(variable, _, _) with constant.value=8000  pattern while(_, _) with read.stmt#=assign.stmt# with "if"=read.varName  such that Follows(while, 5)  pattern while(_, _) with "if"=variable.varName with print.varName="assign" with "call"=variable.varName  such that Follows*(if, _)  such that Calls(procedure, _) with 2400=constant.value with stmt.stmt#=7800  such that Modifies(read, variable)  pattern while(variable, _) with if.stmt#=5200  such that Follows(_, assign)  pattern while(variable, _)  pattern if(variable, _, _) with "call"=procedure.procName with stmt.stmt#=if.stmt#  pattern if(_, _, _)  pattern assign(constant, _)  pattern while(call, _)  pattern assign(then, "6900/5500")  pattern while(variable, _)  such that Affects(16, assign) with constant.value=call.stmt# with assign.stmt#=4900  pattern while(_, _)  pattern if(print, _, _)  such that Affects(assign, 7) with read.varName=print.varName  pattern while(call, _)  pattern while(variable, _) with print.varName=read.varName  pattern assign(call, "2400+5400")  such that Modifies(28, variable)  pattern assign(_, "8100+6500") with "constant"=read.varName  pattern assign(_, _)  pattern while(constant, _)  pattern assign(_, "5700+4200")  pattern while(variable, _) with print.varName="call"  such that Calls*(procedure, "constant") with 8200=call.stmt# with 3100=assign.stmt# with print.stmt#=read.stmt# with while.stmt#=if.stmt#  such that Next*(print, _) with procedure.procName=print.varName  pattern assign(print, _)  pattern while(variable, _)  pattern assign(then, "7700+2900")  pattern while(variable, _)  pattern while(_, _) with variable.varName="while"  pattern assign(variable, _)  pattern assign(variable, "(5900-8500)*7500") with read.varName="else"  pattern if(variable, _, _)  pattern if(while, _, _)  pattern assign(_, "3600*2400")  pattern assign(read, _"8700+4800"_)  such that Modifies(while, variable)  pattern while(_, _)  pattern while(_, _)  such that Follows(16, call)  pattern assign(_, _) with print.varName="call"  such that Affects(stmt, _)  pattern while(procedure, _) with if.stmt#=constant.value  pattern assign(variable, _)  pattern if(_, _, _)  pattern if(then, _, _)  such that Parent*(assign, _)  such that Next(_, stmt)  pattern assign(variable, _) with 300=call.stmt#  such that Follows(_, while)  pattern assign(variable, _"8400/5500"_)  pattern if(_, _, _)  such that Modifies(assign, _)  pattern while(variable, _)  pattern if(_, _, _)  pattern assign(then, "9100-500")  pattern if(_, _, _)  pattern assign(variable, "constant-3700")  pattern if(variable, _, _) with 2300=assign.stmt#  such that Affects*(_, assign) with print.varName=print.varName 

5000
92 - Query 92
variable variable; assign assign; constant constant; print print; stmt stmt; read read; procedure procedure; while while; if if; call call; 
Select <variable, assign, constant, print, stmt, read, procedure, while, if, call> with constant.value=while.stmt#  such that Affects*(stmt, 26) with read.varName="variable"  such that Affects*(stmt, 1) with 9700=if.stmt#  pattern if(else, _, _)  such that Next(_, read) with call.procName="call"  such that Calls(procedure, procedure)  pattern while(variable, _)  pattern assign(then, _"2100-3200"_) with while.stmt#=if.stmt#  pattern if(_, _, _)  pattern assign(else, _"8900/6300"_) with "read"=procedure.procName with print.stmt#=if.stmt#  such that Follows(print, stmt)  pattern if(_, _, _)  such that Follows*(call, while)  pattern if(variable, _, _) with 6200=read.stmt#  pattern if(else, _, _) with "constant"=print.varName with variable.varName=call.procName  such that Affects*(assign, assign)  pattern assign(_, _"2900+9900"_)  pattern if(assign, _, _) with 7600=if.stmt#  pattern assign(variable, _) with procedure.procName="print"  such that Next*(print, 18) with procedure.procName=call.procName  pattern while(constant, _)  pattern if(variable, _, _)  such that Parent*(if, 6)  pattern if(variable, _, _) with procedure.procName="call" with "constant"=read.varName  pattern while(while, _) with "constant"=procedure.procName  pattern if(if, _, _)  pattern while(variable, _)  such that Calls*(procedure, _)  such that Follows(read, print)  pattern if(_, _, _)  pattern assign(print, _"7600-3100"_)  pattern if(if, _, _)  pattern while(_, _)  such that Next(if, read)  pattern while(assign, _)  pattern assign(else, _"8200/7300"_) with 8400=print.stmt#  such that Affects*(assign, stmt)  such that Modifies(call, "if") with stmt.stmt#=3200  pattern while(_, _)  pattern if(variable, _, _)  pattern assign(else, _)  such that Next(1, print)  pattern if(_, _, _)  such that Modifies(5, variable) with call.procName=read.varName with stmt.stmt#=stmt.stmt#  such that Next*(_, stmt)  pattern assign(procedure, "7100-4300")  such that Follows*(_, print)  pattern assign(_, _"print+9600"_)  such that Follows(_, print)  such that Parent(read, _)  pattern assign(if, _)  pattern assign(if, "3200*1800")  pattern assign(_, _)  pattern assign(call, _) with print.varName="while"  pattern if(variable, _, _)  pattern if(_, _, _) with procedure.procName=print.varName  pattern while(_, _)  pattern if(_, _, _) with "while"=procedure.procName  such that Calls(_, procedure)  pattern while(if, _) with constant.value=7100  pattern assign(variable, _)  pattern if(else, _, _) with 3200=read.stmt#  pattern if(else, _, _) with while.stmt#=call.stmt# with while.stmt#=2600 with if.stmt#=2000 with call.procName=print.varName  pattern while(_, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  such that Parent(_, while)  pattern while(variable, _)  pattern assign(constant, "7000+800") with procedure.procName=variable.varName with if.stmt#=while.stmt#  pattern while(variable, _)  such that Follows*(_, if)  pattern while(_, _)  such that Follows(if, 19) with 4500=call.stmt# with 9900=while.stmt#  such that Uses(read, _)  such that Calls(_, procedure)  pattern assign(variable, _)  such that Affects(assign, assign) with "constant"=procedure.procName  pattern assign(variable, "else-9000")  such that Calls*(_, procedure) with 6000=while.stmt#  pattern assign(_, "4400/8400")  pattern if(assign, _, _) with "constant"=variable.varName  pattern while(_, _)  pattern if(while, _, _)  pattern if(variable, _, _)  pattern while(_, _) with assign.stmt#=6400  pattern assign(_, "9700*600")  pattern if(variable, _, _)  pattern while(read, _)  pattern if(variable, _, _)  pattern assign(constant, _) with print.varName="then"  pattern if(_, _, _)  such that Follows*(stmt, 4)  pattern while(variable, _)  such that Uses(6, variable)  pattern while(else, _)  such that Follows*(_, call)  pattern if(variable, _, _)  such that Affects*(assign, _)  pattern assign(variable, _)  such that Next(_, stmt)  such that Follows*(_, assign)  pattern if(constant, _, _)  pattern if(assign, _, _)  such that Follows(_, assign) with 1900=constant.value  pattern while(_, _)  such that Calls(procedure, procedure)  pattern assign(variable, _)  such that Calls*(procedure, "variable")  pattern while(assign, _)  pattern if(variable, _, _)  pattern assign(variable, "5600/9300") with 7400=while.stmt#  pattern assign(procedure, "variable*5100") with read.stmt#=4000  pattern if(variable, _, _) with while.stmt#=if.stmt#  pattern assign(variable, _) with "print"=variable.varName  pattern if(variable, _, _)  such that Calls*(_, procedure)  such that Follows*(stmt, call)  pattern while(variable, _)  pattern if(_, _, _) with constant.value=1000  such that Next*(_, if)  pattern assign(then, "8100*assign")  pattern if(_, _, _) with assign.stmt#=print.stmt#  such that Modifies(15, variable) with procedure.procName="variable"  pattern while(then, _)  such that Uses(if, "constant")  such that Parent*(_, stmt) with procedure.procName=call.procName with assign.stmt#=3000  pattern while(variable, _) with 5600=print.stmt#  pattern assign(_, "900*5900") with variable.varName=variable.varName with call.procName="variable" with if.stmt#=while.stmt#  such that Parent(if, _)  pattern while(variable, _)  such that Affects*(assign, _)  pattern if(while, _, _)  pattern while(variable, _)  pattern if(call, _, _) with call.procName=procedure.procName with variable.varName=read.varName  pattern while(then, _)  such that Follows*(read, if)  pattern assign(variable, _"if*4000"_) with constant.value=assign.stmt#  such that Follows*(_, read)  such that Affects*(stmt, 22)  pattern if(variable, _, _)  pattern while(_, _) with procedure.procName=call.procName  such that Parent(assign, assign) with read.varName=procedure.procName  pattern if(_, _, _) with stmt.stmt#=2200  pattern while(if, _) with procedure.procName=print.varName  pattern while(_, _)  pattern assign(variable, _"(4900-7300)-6600"_)  such that Affects*(assign, _)  pattern assign(else, "3500*3200") with 7300=assign.stmt#  pattern if(_, _, _)  pattern assign(_, _)  pattern while(variable, _)  pattern while(_, _)  pattern assign(print, "300-4300")  pattern if(_, _, _)  pattern if(then, _, _)  pattern assign(_, _)  such that Parent*(while, 9)  pattern while(variable, _)  such that Parent*(8, stmt)  such that Follows(_, stmt)  pattern assign(if, _)  pattern if(_, _, _) with "if"=read.varName  pattern if(_, _, _)  pattern if(_, _, _) with call.stmt#=if.stmt#  such that Parent*(19, print)  pattern assign(_, "2700-5200") with variable.varName=procedure.procName with "read"=read.varName  such that Follows(while, call) with "read"=read.varName  pattern while(_, _)  such that Next*(_, while)  pattern assign(variable, "((5500/9300)+7400)+while")  pattern while(if, _)  pattern while(while, _)  pattern while(variable, _) with "assign"=print.varName  such that Follows(16, while)  such that Affects(_, stmt)  such that Affects*(assign, _)  pattern assign(variable, _"8800+5100"_)  pattern if(variable, _, _) with call.stmt#=9900  pattern assign(procedure, _"3000*6400"_)  pattern if(variable, _, _) with procedure.procName=procedure.procName  such that Modifies(procedure, _) with call.stmt#=stmt.stmt# with assign.stmt#=call.stmt# with variable.varName=print.varName with procedure.procName="print" with call.stmt#=if.stmt# with call.procName=read.varName  pattern if(call, _, _) with procedure.procName=variable.varName  pattern assign(print, "2600/1300")  such that Next*(if, if) with variable.varName="read" with procedure.procName="else" with variable.varName=call.procName  pattern while(print, _)  such that Next(if, 23)  such that Calls("print", procedure) with 7900=constant.value  pattern assign(_, _)  pattern assign(_, "assign+then")  such that Calls(procedure, _)  such that Modifies(print, _)  pattern while(procedure, _)  such that Parent*(3, if)  such that Affects(stmt, 10)  such that Follows*(_, assign)  pattern assign(read, "6100*4900") with "procedure"=variable.varName  such that Next*(9, print) with call.stmt#=7100  pattern while(_, _)  pattern while(then, _) with stmt.stmt#=print.stmt# with "else"=print.varName  pattern if(variable, _, _)  such that Calls(procedure, _)  such that Uses(read, _) with stmt.stmt#=while.stmt# with 800=read.stmt#  pattern while(call, _)  such that Affects(stmt, 14)  pattern if(_, _, _) with constant.value=1900  such that Calls*(procedure, _)  pattern if(read, _, _) with 6300=while.stmt#  such that Affects(stmt, 22) with 3200=read.stmt#  pattern while(print, _)  such that Parent(20, print)  pattern while(call, _)  such that Calls*(procedure, procedure)  such that Calls*(procedure, "print")  such that Follows(call, 3)  such that Parent*(call, 14) with "while"=read.varName  such that Parent*(stmt, 1) with read.varName=read.varName  pattern while(variable, _)  pattern assign(procedure, _"1600*7200"_)  pattern if(_, _, _) with "else"=variable.varName  pattern assign(if, _"4800+variable"_) with variable.varName="call"  pattern while(constant, _)  pattern assign(_, "7800+procedure")  pattern while(procedure, _)  such that Parent*(_, print)  pattern while(else, _)  such that Affects*(_, assign)  pattern while(constant, _) with procedure.procName=read.varName  pattern if(variable, _, _)  such that Affects(6, stmt)  such that Uses(print, variable)  such that Calls(procedure, _)  such that Next(24, stmt)  such that Calls(procedure, _) with call.stmt#=9000  such that Parent*(print, _) with 3200=print.stmt#  pattern if(read, _, _)  such that Calls*(procedure, procedure)  such that Affects(stmt, _)  pattern assign(_, _)  pattern while(variable, _)  pattern assign(print, "200-5500")  pattern if(_, _, _)  pattern while(while, _) with 7000=stmt.stmt#  such that Follows*(print, assign) with 6100=while.stmt# with assign.stmt#=stmt.stmt#  pattern while(variable, _)  pattern if(variable, _, _)  such that Parent(while, 16) with constant.value=constant.value  such that Next(call, call)  pattern while(_, _)  pattern while(_, _)  pattern assign(variable, _"7900*8700"_)  pattern if(_, _, _)  pattern while(variable, _) with 3700=assign.stmt#  pattern assign(constant, _"3800/700"_)  pattern while(variable, _) with variable.varName=read.varName with if.stmt#=3500 with call.procName="variable"  pattern if(variable, _, _)  such that Next(29, print) with print.varName=print.varName  such that Uses(5, variable) with 2500=constant.value  such that Affects*(4, assign)  pattern while(else, _)  pattern if(call, _, _)  pattern while(_, _)  pattern while(variable, _)  pattern while(then, _)  pattern while(variable, _)  such that Parent*(stmt, stmt) with procedure.procName="variable"  pattern assign(_, "6400/3200") with assign.stmt#=5400 with print.varName="else" with 6900=assign.stmt#  pattern while(variable, _)  such that Calls(procedure, _) with assign.stmt#=9000  such that Parent*(print, read)  pattern if(variable, _, _)  such that Modifies(6, variable)  such that Calls*(procedure, procedure) with read.stmt#=if.stmt#  such that Calls*(procedure, _)  such that Next*(_, call) with 7900=while.stmt#  pattern assign(_, _)  pattern while(_, _) with constant.value=7500 with 5700=read.stmt#  such that Affects(_, stmt)  pattern assign(read, _)  such that Next(while, _) with 8600=stmt.stmt# with print.varName=print.varName  pattern if(_, _, _)  pattern while(while, _)  pattern while(_, _)  pattern while(_, _)  pattern if(_, _, _) with constant.value=5200  such that Affects*(_, stmt)  pattern while(procedure, _)  pattern while(_, _)  such that Next(call, call)  pattern assign(_, _)  such that Parent(while, assign)  such that Next(_, read) with call.procName=print.varName  such that Uses(print, _)  pattern if(variable, _, _) with read.varName=variable.varName with constant.value=if.stmt#  such that Next*(read, print)  pattern assign(then, _)  such that Parent(while, while) with 9300=read.stmt# with print.stmt#=if.stmt#  pattern if(variable, _, _)  such that Calls(procedure, procedure)  pattern if(if, _, _) with assign.stmt#=if.stmt#  pattern assign(_, "4400*8800")  pattern while(variable, _)  pattern if(_, _, _)  pattern assign(variable, _)  pattern assign(read, _)  pattern while(variable, _)  such that Next*(26, assign)  pattern while(print, _)  such that Follows(read, read)  such that Next(17, read) with "variable"=variable.varName  pattern while(variable, _)  such that Modifies(call, variable)  pattern if(_, _, _)  pattern assign(variable, _) with "constant"=procedure.procName with print.varName="while" with "else"=read.varName with variable.varName="else" with assign.stmt#=3000  pattern while(_, _)  pattern assign(read, _) with variable.varName=read.varName  pattern assign(_, _)  pattern if(_, _, _)  pattern if(else, _, _)  pattern while(variable, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  such that Affects(assign, _) with "call"=print.varName  pattern assign(assign, _)  pattern while(variable, _)  pattern assign(variable, "9100+read")  such that Parent(read, read) with procedure.procName="read"  such that Modifies(stmt, variable)  pattern if(_, _, _)  pattern while(variable, _)  pattern if(read, _, _)  pattern if(variable, _, _) with print.varName="constant"  pattern if(variable, _, _) with variable.varName=procedure.procName with read.varName=print.varName with "while"=print.varName  pattern assign(then, "2700+6100")  pattern if(_, _, _) with while.stmt#=read.stmt#  such that Parent*(23, assign)  pattern while(_, _)  pattern while(_, _)  pattern if(_, _, _)  pattern assign(variable, "900*2100") with procedure.procName="assign"  pattern while(_, _) with print.varName="read"  pattern while(read, _)  pattern if(_, _, _) with "variable"=call.procName  pattern while(_, _)  pattern while(_, _)  such that Calls(procedure, "then")  pattern assign(_, "((6000-9400)*1700)-5800")  such that Modifies(assign, variable)  pattern while(else, _) with print.stmt#=stmt.stmt# with print.varName=variable.varName  pattern while(variable, _) with 6800=print.stmt#  such that Uses(assign, variable)  such that Next(if, stmt) with if.stmt#=7800  pattern assign(constant, "variable+6300") with procedure.procName="constant"  pattern while(procedure, _)  pattern while(assign, _)  pattern while(then, _)  such that Modifies(procedure, "constant") 

5000
93 - Query 93
print print; assign assign; variable variable; constant constant; stmt stmt; read read; procedure procedure; while while; if if; call call; 
Select <print, assign, variable, constant, stmt, read, procedure, while, if, call> with read.varName=variable.varName  such that Affects(23, assign) with read.varName="read"  such that Follows(assign, _) with read.varName=print.varName  such that Follows(call, _)  such that Calls("if", procedure)  such that Calls(procedure, _) with assign.stmt#=2900  pattern while(variable, _)  pattern assign(procedure, _)  pattern while(read, _)  pattern while(while, _) with call.stmt#=700  pattern if(variable, _, _) with 1500=print.stmt# with "assign"=print.varName  such that Next(if, 18)  such that Parent(_, print) with constant.value=while.stmt#  such that Next*(print, 28)  pattern assign(while, "8100+1500")  pattern if(variable, _, _)  such that Next(stmt, stmt)  pattern assign(variable, _)  pattern if(variable, _, _)  such that Affects*(_, assign)  such that Follows*(while, if)  pattern assign(variable, "4900*3000")  pattern if(variable, _, _)  such that Parent(while, 8)  pattern while(_, _)  pattern if(assign, _, _)  pattern if(if, _, _) with read.varName="then"  pattern if(_, _, _)  pattern assign(else, _) with "then"=procedure.procName  pattern while(variable, _)  such that Calls(procedure, procedure)  pattern assign(variable, "9400+2400")  pattern assign(_, _"(7100/100)*5400"_)  pattern if(assign, _, _)  pattern if(procedure, _, _)  pattern assign(variable, _)  pattern while(variable, _) with procedure.procName=call.procName  such that Follows*(assign, stmt)  such that Uses(while, "read")  such that Parent*(stmt, assign)  pattern assign(variable, "6700*variable") with "read"=print.varName  pattern while(procedure, _)  pattern if(_, _, _)  such that Next(6, call)  pattern assign(variable, "(6700/2800)+700")  pattern assign(call, _)  pattern while(_, _)  pattern assign(assign, "8100/9800")  such that Follows(while, print)  such that Follows(19, stmt)  pattern while(variable, _) with while.stmt#=print.stmt#  such that Parent(read, 7) with 1400=print.stmt#  such that Calls*(_, procedure)  such that Parent(_, stmt)  pattern assign(_, "call/900")  pattern while(call, _)  such that Affects*(_, stmt)  pattern if(variable, _, _)  such that Affects(20, stmt) with call.procName=read.varName with read.varName=read.varName  pattern while(if, _)  pattern assign(else, _"8000*9400"_)  pattern if(variable, _, _) with call.procName=call.procName with variable.varName=procedure.procName  pattern assign(print, _"2400-9900"_)  such that Affects*(3, stmt) with 700=print.stmt#  such that Next*(call, _)  pattern while(while, _)  such that Parent*(print, assign)  pattern if(_, _, _)  pattern if(_, _, _)  pattern if(_, _, _)  such that Next(assign, 18) with read.varName=variable.varName with "read"=variable.varName with 9200=stmt.stmt#  pattern if(else, _, _) with while.stmt#=constant.value  pattern assign(variable, _) with 6700=print.stmt# with print.varName="constant"  pattern assign(else, _)  such that Calls*(procedure, "else") with "while"=procedure.procName with print.varName=call.procName  pattern assign(variable, _"4000-7900"_)  such that Uses(assign, variable)  pattern while(then, _)  pattern if(read, _, _)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern while(_, _)  pattern while(_, _) with print.stmt#=6600  such that Calls*(_, procedure)  pattern assign(variable, _)  pattern assign(_, _"(((7900/300)/5600)/500)+3100"_) with 9700=while.stmt#  pattern while(variable, _)  such that Modifies(read, _)  pattern if(constant, _, _)  pattern assign(variable, _)  pattern assign(then, "7900/6100")  such that Uses(if, "variable")  pattern while(if, _) with print.stmt#=9100 with assign.stmt#=call.stmt#  pattern if(read, _, _) with constant.value=2300  pattern while(variable, _)  pattern while(_, _) with constant.value=500  pattern if(call, _, _)  such that Next(_, print) with if.stmt#=900  pattern while(_, _)  pattern while(print, _)  pattern if(_, _, _)  such that Next*(read, read)  pattern assign(variable, _"(1600*5400)+2000"_)  such that Calls("print", procedure)  pattern assign(_, "8700/9000") with read.varName=call.procName with 1200=print.stmt#  such that Parent(read, print) with call.procName=variable.varName  pattern assign(variable, _)  such that Uses(26, variable)  pattern while(variable, _)  such that Follows*(_, call)  pattern if(while, _, _)  such that Follows*(if, while)  pattern assign(_, _)  pattern assign(read, _) with 8400=assign.stmt#  pattern if(_, _, _) with print.stmt#=900  pattern assign(_, _)  pattern while(variable, _)  pattern while(_, _)  pattern while(if, _)  pattern if(_, _, _) with print.varName=call.procName  such that Uses(call, "then")  such that Next(4, read) with print.varName=procedure.procName with stmt.stmt#=while.stmt#  pattern while(_, _)  pattern if(while, _, _)  pattern assign(_, _"1100/1400"_)  pattern while(_, _)  such that Uses(stmt, _)  pattern assign(_, _"9000+400"_)  pattern while(_, _)  pattern assign(_, "4400+4400")  such that Modifies(29, variable)  pattern while(variable, _)  such that Next*(9, assign)  pattern if(_, _, _)  pattern while(variable, _)  pattern if(variable, _, _)  such that Next*(while, _)  such that Calls*(procedure, procedure)  such that Affects(_, assign) with "print"=procedure.procName with assign.stmt#=400  such that Uses(assign, _) with 7500=call.stmt#  such that Parent*(print, _)  pattern assign(_, _) with print.stmt#=2900 with 5200=assign.stmt# with if.stmt#=7800 with 7200=while.stmt#  such that Uses(call, "else")  such that Follows*(assign, _)  pattern if(read, _, _)  pattern assign(_, _"1800-7400"_)  such that Calls*("call", procedure) with read.varName="then"  pattern while(_, _)  such that Uses(29, variable)  pattern if(variable, _, _)  pattern assign(variable, "2200-800")  pattern if(variable, _, _) with procedure.procName=procedure.procName with read.varName="read" with read.stmt#=assign.stmt#  pattern assign(_, _)  such that Calls(_, procedure)  such that Calls(procedure, _)  pattern while(variable, _)  pattern if(_, _, _)  pattern assign(variable, _"6600+3500"_)  such that Parent(4, print)  pattern while(print, _)  pattern if(variable, _, _)  such that Parent(while, while)  pattern assign(variable, _"4800*8300"_)  pattern assign(assign, _)  pattern assign(variable, _) with read.stmt#=print.stmt#  pattern while(variable, _)  pattern if(variable, _, _)  such that Follows*(read, _) with "else"=procedure.procName with variable.varName="procedure"  pattern if(assign, _, _) with 800=if.stmt#  pattern if(variable, _, _)  pattern if(variable, _, _) with print.varName=read.varName  such that Modifies(print, _)  pattern if(_, _, _) with 3700=call.stmt#  pattern if(variable, _, _)  pattern if(_, _, _)  pattern assign(_, _"assign-1400"_)  pattern if(procedure, _, _)  pattern if(_, _, _) with print.varName=call.procName  pattern if(variable, _, _) with print.varName="constant" with 2200=if.stmt#  pattern assign(constant, _"then-9300"_)  such that Calls("assign", procedure)  pattern while(variable, _)  pattern if(_, _, _)  such that Next*(_, print)  pattern while(variable, _)  such that Parent(while, _)  such that Follows*(if, _) with "while"=variable.varName  such that Modifies(procedure, "variable")  pattern while(variable, _) with print.varName="if" with 3200=if.stmt#  pattern assign(_, _)  pattern if(_, _, _)  such that Follows*(call, _) with 8000=call.stmt#  pattern if(_, _, _) with while.stmt#=print.stmt#  pattern while(_, _)  such that Follows*(assign, if) with if.stmt#=read.stmt#  such that Parent*(read, 15) with variable.varName=read.varName  pattern while(variable, _) with read.varName=print.varName  such that Uses(22, variable) with call.procName="procedure"  pattern if(procedure, _, _)  pattern while(variable, _)  pattern if(_, _, _)  pattern while(variable, _)  such that Next(while, _)  such that Modifies(read, variable) with 1600=if.stmt# with if.stmt#=7400 with if.stmt#=1100 with assign.stmt#=print.stmt#  such that Modifies(stmt, variable) with print.stmt#=9300 with stmt.stmt#=2500 with "assign"=call.procName  pattern while(while, _) with assign.stmt#=while.stmt#  such that Parent*(13, if) with procedure.procName=read.varName  such that Modifies(21, variable) with print.stmt#=8600 with 5900=read.stmt#  such that Parent(stmt, 22)  such that Follows*(stmt, stmt)  pattern assign(_, "6100-9900")  pattern assign(_, _)  pattern if(constant, _, _)  pattern if(else, _, _) with 4100=if.stmt#  such that Parent*(if, _)  pattern if(_, _, _)  pattern assign(if, _) with 3600=print.stmt#  pattern while(_, _)  pattern assign(_, _)  such that Parent*(if, _)  such that Follows*(print, _) with "variable"=procedure.procName  such that Affects(stmt, _)  such that Affects*(_, assign)  pattern assign(variable, _)  pattern if(_, _, _)  such that Next*(12, call)  pattern assign(while, _"1600+3600"_)  pattern if(procedure, _, _) with assign.stmt#=stmt.stmt# with if.stmt#=call.stmt#  such that Modifies(read, "assign")  such that Uses(28, variable)  pattern assign(variable, _)  pattern assign(variable, _"4500+else"_)  pattern while(_, _)  pattern assign(while, _) with "constant"=procedure.procName  pattern assign(call, _"6900+5700"_)  pattern while(_, _)  pattern while(while, _)  pattern if(variable, _, _)  such that Next*(read, _)  pattern assign(variable, _"while-2200"_) with if.stmt#=assign.stmt# with assign.stmt#=2500  pattern if(_, _, _)  pattern while(_, _) with if.stmt#=call.stmt#  pattern if(constant, _, _)  pattern assign(variable, "(2100/1100)-8100") with call.procName=procedure.procName with read.stmt#=1300  such that Affects(_, assign)  such that Calls*("assign", procedure)  such that Affects(12, assign)  such that Affects*(assign, 13)  pattern if(_, _, _)  pattern assign(_, _)  pattern assign(variable, "4700/600")  pattern while(_, _)  pattern assign(variable, "4400+8200") with print.varName="call"  pattern if(then, _, _)  pattern while(if, _)  pattern while(else, _) with variable.varName=print.varName with constant.value=read.stmt#  pattern assign(variable, _)  pattern while(_, _)  pattern if(_, _, _) with 3400=call.stmt#  pattern assign(variable, "4000/procedure")  pattern while(variable, _)  pattern if(_, _, _) with "variable"=procedure.procName with read.varName="while" with assign.stmt#=constant.value  pattern assign(variable, _)  pattern while(variable, _)  such that Parent*(while, _)  pattern if(_, _, _) with 1200=stmt.stmt#  pattern if(_, _, _)  pattern while(else, _)  such that Affects*(assign, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern while(then, _)  pattern while(variable, _)  such that Modifies(while, "assign") with if.stmt#=stmt.stmt#  pattern while(variable, _)  such that Parent(call, _)  such that Affects*(_, stmt)  such that Parent*(stmt, assign) with "call"=procedure.procName with procedure.procName="else"  such that Next*(_, call)  pattern if(variable, _, _) with call.procName=read.varName  pattern while(then, _) with "read"=procedure.procName with constant.value=2200  pattern assign(variable, _)  such that Affects*(assign, stmt)  pattern if(_, _, _) with 3300=call.stmt# with "call"=procedure.procName with 1300=read.stmt#  pattern assign(_, "4900/6900") with "then"=read.varName  pattern if(_, _, _)  such that Uses(if, "read")  such that Affects*(assign, assign)  pattern if(variable, _, _)  such that Uses(20, variable) with "then"=variable.varName  such that Next(21, while) with call.procName=call.procName  pattern if(_, _, _) with "if"=procedure.procName with variable.varName="print" with print.varName=read.varName with read.varName="procedure" with print.varName="else"  pattern if(_, _, _)  pattern if(variable, _, _)  pattern while(_, _)  such that Affects*(10, stmt)  pattern assign(variable, "3100-8800") with procedure.procName=call.procName  such that Parent*(assign, 23)  pattern if(_, _, _)  such that Affects(12, stmt)  pattern assign(then, _)  pattern while(_, _)  pattern assign(_, _"2000-2900"_) with read.varName=call.procName  pattern while(variable, _) with call.stmt#=assign.stmt#  such that Follows*(stmt, read)  pattern while(_, _)  such that Modifies(13, variable)  pattern if(variable, _, _)  such that Affects*(_, stmt) with call.procName=variable.varName with 7100=call.stmt# with constant.value=while.stmt# with 5200=call.stmt#  such that Follows*(if, 7)  pattern if(variable, _, _)  pattern if(variable, _, _)  such that Next*(_, while) with procedure.procName=print.varName with if.stmt#=400 with 7300=stmt.stmt#  pattern assign(_, "4700-5600")  such that Next(print, 19)  such that Calls*(_, procedure) with variable.varName="procedure"  pattern if(_, _, _)  pattern assign(print, _"2200+7200"_)  pattern if(variable, _, _)  such that Follows*(print, print) with "constant"=variable.varName with assign.stmt#=200  pattern if(variable, _, _) with procedure.procName="while" with read.varName="constant"  such that Uses(stmt, _) with stmt.stmt#=print.stmt# with constant.value=assign.stmt#  pattern assign(_, "(500/7300)*3200")  pattern while(variable, _) with call.procName="if"  pattern while(variable, _)  such that Follows*(stmt, _) with "variable"=print.varName  such that Next*(assign, if) with 7000=while.stmt# with variable.varName=call.procName  pattern assign(variable, "(read-6100)*3900")  pattern if(_, _, _)  pattern while(variable, _)  such that Calls("read", procedure) with "read"=read.varName  pattern assign(assign, _)  such that Next(assign, 3)  pattern while(variable, _)  pattern assign(_, _"2800+6100"_) with while.stmt#=700 with variable.varName=variable.varName  pattern assign(variable, _"4600-6500"_) with constant.value=5000  such that Modifies(9, variable)  such that Calls*(procedure, _) with "else"=procedure.procName with 4300=constant.value  such that Calls*(procedure, procedure)  pattern while(variable, _)  pattern if(variable, _, _) with procedure.procName=variable.varName with 3600=while.stmt# with while.stmt#=if.stmt#  such that Follows(while, print) with print.varName=print.varName with "variable"=print.varName with read.stmt#=call.stmt#  such that Follows(print, _)  pattern while(_, _) with "procedure"=procedure.procName  pattern assign(_, "6300-if") with procedure.procName=call.procName with print.stmt#=call.stmt#  pattern assign(variable, _"7300-3100"_)  such that Modifies(6, variable) 

5000
94 - Query 94
variable variable; assign assign; constant constant; print print; stmt stmt; read read; procedure procedure; while while; if if; call call; 
Select <variable, assign, constant, print, stmt, read, procedure, while, if, call>  pattern assign(variable, "7400/400")  such that Calls("while", procedure) with variable.varName=call.procName  such that Next(while, _)  pattern while(variable, _)  pattern if(variable, _, _) with 2700=call.stmt#  such that Follows(while, if)  such that Affects(assign, _) with 7800=constant.value  pattern assign(_, _)  such that Parent*(_, call) with call.stmt#=8800  such that Affects*(assign, 4)  pattern assign(variable, _)  pattern while(print, _)  pattern assign(variable, "9800*2600") with 5400=if.stmt#  such that Next*(_, assign) with read.stmt#=print.stmt#  pattern while(assign, _)  such that Affects*(assign, assign)  such that Calls("read", procedure)  such that Follows*(_, print)  pattern if(variable, _, _)  such that Affects*(_, assign) with variable.varName="if" with assign.stmt#=1400  pattern while(variable, _)  pattern if(variable, _, _) with "assign"=print.varName with call.stmt#=3200  pattern assign(procedure, _)  pattern while(variable, _)  pattern while(constant, _) with stmt.stmt#=call.stmt#  pattern if(variable, _, _)  such that Next(while, _) with variable.varName="if"  such that Uses(procedure, variable) with stmt.stmt#=print.stmt#  such that Follows*(if, 29)  pattern if(if, _, _)  pattern assign(then, _"300-8500"_)  such that Follows*(10, read) with assign.stmt#=if.stmt#  such that Modifies(28, variable) with while.stmt#=stmt.stmt#  pattern while(variable, _)  pattern while(_, _) with call.stmt#=if.stmt#  pattern assign(_, "3700/9800") with constant.value=700 with constant.value=print.stmt#  pattern if(_, _, _)  such that Affects(assign, _) with "assign"=call.procName with 300=assign.stmt#  pattern assign(variable, _) with read.stmt#=1300  pattern assign(_, _"3000+4400"_)  pattern assign(print, _) with read.varName=print.varName  pattern while(variable, _) with "procedure"=procedure.procName with "assign"=call.procName with while.stmt#=constant.value with call.procName=variable.varName  such that Next*(read, _)  pattern while(_, _)  pattern while(else, _) with read.stmt#=9200  such that Next*(_, read)  pattern if(variable, _, _)  such that Next(_, while)  such that Follows(print, _)  such that Follows*(read, stmt) with "print"=variable.varName  pattern assign(_, "7100-7200") with "else"=variable.varName with read.varName="constant"  pattern while(_, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern assign(_, _)  pattern if(_, _, _)  such that Parent(assign, _)  such that Uses(print, variable)  such that Affects*(assign, 25)  pattern if(variable, _, _)  such that Next*(_, read)  pattern assign(variable, "8400*8800")  pattern while(print, _)  pattern assign(while, "9400/5300")  such that Follows*(29, call) with stmt.stmt#=4400  such that Follows(_, call)  pattern while(_, _)  such that Calls(procedure, procedure) with call.procName=print.varName with 4100=read.stmt# with 5800=constant.value with "print"=variable.varName  pattern if(_, _, _)  pattern if(variable, _, _)  such that Next*(4, stmt) with 1700=if.stmt#  pattern if(else, _, _) with variable.varName="constant"  pattern if(constant, _, _)  pattern assign(variable, _"(9900/7400)/8700"_)  pattern assign(constant, "8100-500")  such that Affects(15, stmt)  pattern if(call, _, _)  pattern assign(variable, _"9600/600"_)  such that Modifies(read, _) with "variable"=procedure.procName with call.stmt#=stmt.stmt# with 8400=read.stmt#  such that Calls*(procedure, procedure)  pattern assign(variable, "9200/4000") with "constant"=variable.varName  pattern while(while, _)  such that Parent(call, _) with if.stmt#=stmt.stmt# with stmt.stmt#=constant.value  such that Modifies(29, variable) with 1900=stmt.stmt#  pattern assign(variable, "3500-8300")  pattern while(call, _) with "call"=print.varName  pattern while(then, _)  pattern assign(variable, _) with "then"=print.varName  pattern while(variable, _)  pattern while(_, _) with variable.varName=variable.varName with if.stmt#=assign.stmt#  pattern if(variable, _, _)  pattern assign(call, "6700+1100")  pattern if(variable, _, _) with print.varName=procedure.procName with print.varName=variable.varName  pattern assign(_, "500*7200") with "else"=variable.varName with call.procName=procedure.procName  pattern if(_, _, _)  pattern assign(read, _"9800+assign"_) with 6800=read.stmt#  such that Affects*(assign, 23)  such that Parent*(_, stmt) with 4600=assign.stmt#  pattern if(variable, _, _) with assign.stmt#=7700  pattern while(variable, _)  such that Follows(23, assign)  pattern assign(_, _) with if.stmt#=call.stmt#  such that Parent(print, 28)  pattern assign(_, _)  such that Next(stmt, 8) with call.procName="constant"  such that Calls("procedure", procedure)  pattern assign(variable, _"print-4400"_)  such that Parent*(read, 4) with 5600=if.stmt# with while.stmt#=call.stmt# with print.varName=procedure.procName  pattern while(variable, _)  such that Uses(read, "variable")  pattern if(variable, _, _)  such that Calls*(_, procedure)  pattern assign(_, _) with read.varName=print.varName  such that Uses(procedure, _)  pattern if(variable, _, _)  such that Affects(assign, _)  pattern while(variable, _)  such that Parent*(17, stmt)  such that Parent(call, _)  pattern assign(while, "6800/900")  such that Calls(procedure, "variable") with if.stmt#=2400 with call.procName="constant"  such that Parent*(while, 24)  pattern assign(variable, "6000-5200") with variable.varName="assign" with call.stmt#=4300 with variable.varName="print" with "procedure"=call.procName with 4700=assign.stmt#  pattern if(else, _, _)  pattern while(variable, _)  pattern if(variable, _, _)  pattern while(_, _)  pattern if(_, _, _) with 4600=while.stmt#  pattern assign(variable, "1600/200")  pattern while(call, _) with call.stmt#=5300 with while.stmt#=assign.stmt# with assign.stmt#=6100  pattern assign(variable, "900-8300") with print.stmt#=if.stmt#  such that Calls(procedure, "if") with if.stmt#=assign.stmt#  pattern while(variable, _) with call.procName=print.varName  such that Uses(procedure, _)  pattern if(_, _, _)  such that Uses(28, variable)  such that Next*(if, 27)  such that Next(while, _)  pattern if(_, _, _) with read.varName=print.varName  pattern assign(_, "7200-8300")  such that Calls(procedure, _)  such that Next*(6, read)  such that Modifies(read, variable) with read.varName="constant"  such that Follows*(_, while)  pattern if(assign, _, _)  pattern assign(then, "2100/1300")  pattern if(_, _, _) with while.stmt#=4300 with "procedure"=variable.varName  pattern assign(variable, _) with if.stmt#=call.stmt# with 5300=constant.value  such that Calls*(procedure, procedure)  pattern assign(print, _"7600+3000"_) with 200=if.stmt#  pattern assign(else, _"(4700/9700)*then"_)  pattern if(variable, _, _)  pattern while(variable, _) with constant.value=assign.stmt#  such that Follows(_, call)  such that Follows(stmt, _) with while.stmt#=call.stmt#  pattern while(constant, _)  pattern if(_, _, _) with 1800=stmt.stmt#  pattern while(variable, _) with if.stmt#=assign.stmt# with assign.stmt#=print.stmt#  pattern if(_, _, _)  pattern assign(_, "5000*3500")  pattern while(variable, _)  pattern assign(variable, "6000/procedure") with procedure.procName=procedure.procName  pattern assign(if, _"9300-7900"_) with assign.stmt#=print.stmt#  pattern assign(_, "1900+3900")  pattern if(if, _, _) with call.stmt#=constant.value  pattern while(variable, _)  pattern while(variable, _)  such that Calls(procedure, procedure)  pattern while(_, _) with print.varName=procedure.procName  such that Calls(procedure, procedure)  pattern if(read, _, _)  such that Affects*(16, stmt)  pattern if(_, _, _) with 6500=read.stmt#  such that Parent*(16, assign)  pattern if(_, _, _)  pattern assign(_, "4500+read") with read.varName=variable.varName  pattern while(procedure, _)  pattern assign(_, _)  pattern assign(assign, "4100+1700")  pattern assign(if, _"4900-9400"_) with if.stmt#=stmt.stmt# with print.stmt#=8600  pattern while(assign, _)  pattern assign(variable, _"6000+1200"_)  pattern assign(procedure, _)  such that Affects(3, assign)  pattern if(_, _, _) with stmt.stmt#=print.stmt#  pattern assign(_, "3200*9100")  pattern while(variable, _)  pattern assign(while, "(3800*5000)/6700")  such that Affects*(assign, 16)  such that Calls(procedure, _)  pattern assign(_, "3000-if") with while.stmt#=constant.value with stmt.stmt#=3600  pattern assign(_, "(2500-9900)/2700")  such that Parent(assign, assign) with 6400=print.stmt#  such that Affects*(assign, _)  pattern if(variable, _, _)  such that Modifies(print, "print") with "print"=variable.varName  pattern while(variable, _) with assign.stmt#=8800  such that Next(_, while)  such that Affects*(stmt, stmt) with stmt.stmt#=call.stmt#  pattern if(_, _, _)  pattern if(_, _, _) with read.stmt#=if.stmt# with 1300=stmt.stmt# with "read"=read.varName with variable.varName="variable" with 6800=if.stmt#  pattern assign(variable, "700+6400")  pattern while(_, _)  such that Next(stmt, 6) with "variable"=procedure.procName with procedure.procName=variable.varName  such that Calls(procedure, "if")  such that Parent*(if, _)  such that Follows*(read, while)  such that Parent*(2, read) with 1800=constant.value with assign.stmt#=print.stmt#  pattern assign(variable, _"6600/9100"_)  such that Parent(read, while)  such that Calls(procedure, procedure)  pattern while(variable, _)  pattern if(variable, _, _) with "print"=print.varName  pattern if(variable, _, _)  such that Next(if, while)  such that Calls(_, procedure)  such that Follows*(_, while)  pattern if(variable, _, _) with print.stmt#=print.stmt#  such that Parent*(9, if)  such that Parent*(assign, call)  such that Follows*(_, call) with assign.stmt#=stmt.stmt#  such that Follows*(call, _)  such that Next(assign, _)  pattern if(variable, _, _) with 2000=constant.value  pattern if(variable, _, _) with print.stmt#=500  pattern assign(_, _) with call.procName="call"  such that Next*(_, read)  pattern while(constant, _) with 7200=stmt.stmt#  pattern while(_, _) with read.stmt#=5000  such that Follows*(while, _) with read.varName="procedure" with if.stmt#=call.stmt# with read.varName=procedure.procName with 7500=read.stmt# with while.stmt#=3700  such that Affects(29, stmt) with call.procName=read.varName  pattern while(_, _)  such that Next*(while, 6)  such that Modifies(procedure, _) with 6300=if.stmt#  pattern if(then, _, _)  pattern if(_, _, _)  pattern assign(while, _) with print.stmt#=stmt.stmt#  pattern assign(call, _)  pattern if(_, _, _) with constant.value=call.stmt# with "while"=variable.varName  pattern assign(if, _"procedure/3000"_)  pattern if(variable, _, _)  such that Calls(procedure, "if") with print.varName=procedure.procName  pattern while(call, _)  such that Next*(_, while)  pattern while(print, _)  pattern assign(_, _"8400+4300"_) with stmt.stmt#=6900 with call.procName=variable.varName with print.stmt#=print.stmt#  pattern if(call, _, _)  pattern if(variable, _, _)  pattern while(call, _)  such that Next(read, _)  such that Modifies(print, _)  pattern if(_, _, _)  pattern while(variable, _) with print.varName=print.varName  such that Next*(27, stmt)  such that Uses(stmt, _)  pattern assign(variable, _)  such that Next(call, 8)  pattern if(else, _, _)  pattern if(variable, _, _) with stmt.stmt#=3700  such that Follows(21, call)  such that Affects*(12, assign)  such that Calls*("read", procedure) with if.stmt#=constant.value  pattern assign(_, _"6800+9100"_) with procedure.procName=call.procName  pattern while(_, _) with procedure.procName="while"  such that Modifies(procedure, "variable")  pattern if(while, _, _) with 2500=stmt.stmt# with while.stmt#=6000  pattern assign(variable, _"1000*4400"_) with read.varName="print"  pattern assign(variable, "5700*5800")  pattern assign(variable, _"4600+3900"_) with read.stmt#=if.stmt#  such that Affects(assign, _)  such that Uses(call, variable)  such that Calls*(_, procedure)  such that Affects*(stmt, _)  pattern while(else, _) with while.stmt#=6200 with assign.stmt#=stmt.stmt#  pattern while(assign, _)  such that Calls(procedure, procedure)  such that Next*(_, while)  such that Follows(while, stmt)  pattern assign(while, _"6900*5500"_)  such that Calls*(procedure, procedure)  pattern while(variable, _)  pattern if(_, _, _)  such that Next*(_, read) with 3500=assign.stmt#  pattern while(_, _) with "then"=procedure.procName  pattern while(variable, _)  pattern if(variable, _, _) with read.stmt#=1600  such that Affects(stmt, assign)  pattern while(variable, _)  such that Modifies(assign, variable)  pattern while(variable, _)  such that Calls*(procedure, "constant")  pattern assign(_, "3600+1000")  such that Uses(print, _)  pattern while(_, _) with procedure.procName=variable.varName  pattern while(variable, _)  pattern while(_, _) with stmt.stmt#=call.stmt#  such that Calls*("if", procedure) with read.varName="assign"  such that Calls*(procedure, _)  pattern if(_, _, _)  pattern assign(variable, _"9200/4800"_)  such that Calls*("else", procedure)  pattern if(variable, _, _) with variable.varName=read.varName with variable.varName=procedure.procName  pattern assign(variable, "5400/if")  such that Next*(print, assign)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern assign(_, "9100-4700")  such that Next(print, print) with 5100=stmt.stmt#  pattern assign(if, _"5100/1000"_) with read.varName="if"  such that Calls*("call", procedure)  pattern while(then, _)  pattern assign(_, _"1500+9900"_)  such that Modifies(print, _)  pattern if(assign, _, _) with 9800=constant.value with call.procName=print.varName with "assign"=call.procName  such that Uses(assign, "else") with print.varName="assign"  pattern if(read, _, _) with print.stmt#=8800 with call.procName="then" with call.procName="read" with 1900=read.stmt#  such that Affects(stmt, 4)  pattern while(_, _)  such that Follows*(10, print)  pattern if(read, _, _)  such that Next(if, print)  such that Next*(17, stmt) with 6200=read.stmt#  such that Affects(13, assign)  pattern while(_, _) with "read"=procedure.procName  pattern while(read, _)  pattern while(_, _)  such that Affects*(assign, 15) with 8700=if.stmt#  such that Affects*(10, assign) with 9700=read.stmt# with procedure.procName="if"  such that Follows*(print, stmt)  such that Calls(_, procedure) with print.varName="assign" with call.procName="then" with variable.varName=procedure.procName 

5000
95 - Query 95
print print; assign assign; variable variable; constant constant; stmt stmt; read read; procedure procedure; while while; if if; call call; 
Select <print, assign, variable, constant, stmt, read, procedure, while, if, call>  pattern while(_, _) with 7700=print.stmt#  pattern while(_, _)  pattern assign(assign, "2500/7400")  pattern assign(_, _) with procedure.procName="print"  pattern if(assign, _, _) with procedure.procName=variable.varName  such that Parent(stmt, _)  pattern if(read, _, _)  such that Calls(_, procedure)  pattern while(procedure, _)  such that Uses(procedure, _)  pattern if(variable, _, _) with assign.stmt#=8500  pattern assign(_, _"assign/200"_)  pattern assign(variable, "2200*3500") with stmt.stmt#=6300 with "variable"=call.procName  pattern assign(variable, _"8700-4700"_)  such that Calls(procedure, "else")  such that Uses(procedure, variable) with while.stmt#=print.stmt#  pattern while(while, _)  pattern assign(_, "1900-9500")  pattern assign(constant, _)  such that Affects*(stmt, stmt)  pattern if(_, _, _)  such that Calls(_, procedure) with constant.value=2600  pattern assign(constant, "8800+3300") with 4800=print.stmt#  pattern if(_, _, _) with print.varName="else" with print.varName=procedure.procName with print.varName="else"  pattern if(assign, _, _)  pattern if(print, _, _)  pattern assign(variable, _) with 9200=call.stmt# with 9000=print.stmt# with if.stmt#=2900  pattern assign(variable, _"6300/2300"_)  such that Affects*(assign, _)  such that Calls(_, procedure)  pattern if(constant, _, _)  pattern if(_, _, _)  pattern assign(_, _)  such that Parent*(print, _)  such that Affects(assign, 15)  pattern if(_, _, _)  such that Follows*(if, _)  such that Follows(_, if) with 7800=constant.value  such that Uses(call, _) with 6400=stmt.stmt# with procedure.procName=call.procName  such that Modifies(3, variable) with "print"=call.procName  such that Parent*(read, 26)  pattern assign(_, _) with read.stmt#=9900  such that Parent(assign, 25)  such that Calls(procedure, _) with variable.varName=print.varName  pattern if(_, _, _) with "then"=read.varName  pattern if(read, _, _)  pattern if(variable, _, _) with "while"=read.varName  pattern while(_, _)  such that Uses(if, variable)  pattern while(_, _) with 3800=while.stmt#  pattern if(read, _, _) with read.varName=procedure.procName  such that Affects(11, assign)  pattern assign(variable, "(6000*2800)-6300")  pattern if(_, _, _)  pattern assign(variable, _)  pattern while(_, _)  pattern if(_, _, _) with read.varName=variable.varName  pattern while(_, _)  such that Uses(26, variable)  pattern if(_, _, _)  pattern assign(call, _)  pattern if(variable, _, _)  pattern while(else, _)  pattern if(read, _, _) with stmt.stmt#=read.stmt#  pattern if(read, _, _)  pattern while(_, _) with variable.varName=read.varName  pattern while(_, _) with call.procName="print"  pattern assign(assign, "9400*7100") with stmt.stmt#=600  such that Follows(call, if)  such that Uses(assign, "print")  pattern while(if, _)  pattern assign(while, "8300+7900") with procedure.procName=variable.varName  such that Uses(16, variable)  pattern assign(_, _"5300-2800"_)  pattern if(procedure, _, _) with print.varName="print"  pattern assign(variable, "6000-200")  pattern if(_, _, _)  pattern while(_, _)  such that Affects(assign, _) with procedure.procName=call.procName  pattern while(_, _)  pattern assign(_, _)  such that Affects(stmt, stmt) with read.varName=read.varName  pattern while(variable, _)  such that Next(_, assign)  such that Parent(6, call)  pattern if(variable, _, _) with 600=assign.stmt#  pattern assign(read, _)  such that Parent*(22, assign) with print.varName="else" with 5700=read.stmt#  such that Uses(21, variable)  pattern while(variable, _) with "constant"=procedure.procName with "read"=print.varName with 5600=call.stmt# with variable.varName="if"  pattern while(variable, _)  pattern if(then, _, _)  such that Parent(print, print)  pattern if(_, _, _)  such that Follows(read, read)  pattern if(_, _, _)  such that Calls("if", procedure)  pattern while(variable, _)  pattern assign(variable, "(4800+2600)*200")  pattern if(_, _, _)  pattern while(constant, _)  such that Calls(procedure, _)  pattern assign(then, _)  pattern while(assign, _) with 900=assign.stmt#  such that Calls*("print", procedure)  pattern assign(_, _)  pattern if(if, _, _)  pattern assign(variable, _"(700-then)/8900"_)  pattern assign(_, _)  pattern if(variable, _, _)  pattern assign(variable, _"6000*then"_)  such that Follows(27, if)  pattern assign(variable, _"2300+4600"_)  such that Uses(read, variable)  pattern if(variable, _, _)  pattern while(procedure, _)  pattern if(_, _, _)  pattern assign(assign, "6900+9700") with read.varName="variable"  such that Modifies(call, _)  pattern while(then, _) with "read"=read.varName  such that Follows*(while, stmt)  pattern if(variable, _, _)  pattern if(read, _, _) with "print"=procedure.procName  pattern while(_, _)  pattern if(variable, _, _) with print.varName=variable.varName with procedure.procName="if"  pattern while(call, _)  such that Calls(_, procedure) with read.varName="constant" with variable.varName="call"  such that Calls("assign", procedure)  pattern while(variable, _)  pattern assign(variable, _"4500*2100"_) with call.procName=print.varName  such that Affects(25, assign)  pattern if(_, _, _)  such that Parent(read, 28)  pattern assign(variable, _) with constant.value=assign.stmt#  pattern assign(_, "8500*7600")  such that Follows(print, stmt) with if.stmt#=3200 with call.procName=variable.varName  such that Parent*(stmt, 2) with call.stmt#=8300  such that Uses(while, "read")  pattern if(variable, _, _)  such that Follows(27, if) with procedure.procName="else" with if.stmt#=5400  pattern if(assign, _, _) with assign.stmt#=read.stmt#  pattern if(read, _, _) with variable.varName="print"  pattern if(_, _, _) with read.stmt#=2300  pattern assign(then, "(2500-4400)/700")  such that Affects*(stmt, stmt)  such that Calls("procedure", procedure)  such that Uses(stmt, "else")  pattern assign(assign, _)  pattern if(read, _, _)  such that Follows(22, assign)  pattern if(variable, _, _)  pattern assign(variable, _"9400/5900"_)  such that Affects(stmt, _)  pattern assign(variable, "9900*8800")  such that Parent*(if, 8) with "else"=read.varName  such that Affects*(stmt, _)  such that Follows*(while, 22)  pattern if(procedure, _, _) with procedure.procName=procedure.procName with 100=call.stmt# with call.procName="while" with variable.varName="variable"  such that Follows*(_, call) with 2100=while.stmt#  pattern while(procedure, _)  pattern assign(variable, "2200-8700")  such that Next(print, _)  pattern while(variable, _)  pattern if(assign, _, _)  pattern while(variable, _)  such that Uses(procedure, _)  pattern assign(if, "7400+5300")  pattern while(variable, _) with 5800=if.stmt#  pattern assign(_, _)  pattern while(if, _) with variable.varName="procedure" with variable.varName="variable"  such that Calls*(procedure, "while")  pattern while(_, _)  pattern assign(_, _"3300+200"_)  such that Affects*(23, assign)  pattern assign(else, "7300+2900")  pattern assign(_, _)  pattern if(_, _, _) with while.stmt#=2200  pattern if(procedure, _, _)  pattern while(variable, _)  pattern if(variable, _, _) with "if"=procedure.procName  pattern if(variable, _, _)  pattern while(variable, _)  pattern while(then, _)  pattern assign(procedure, _"(2000-2700)/5900"_)  pattern while(variable, _)  pattern assign(else, _"8400+5400"_)  pattern if(variable, _, _) with 2200=print.stmt#  pattern assign(_, _) with "constant"=variable.varName  pattern while(variable, _)  such that Parent*(assign, 12)  pattern if(_, _, _)  pattern while(variable, _)  such that Calls(procedure, procedure)  pattern assign(variable, _"7900+3700"_)  such that Parent(read, _) with call.stmt#=7300  pattern assign(assign, _)  pattern while(_, _) with variable.varName="procedure"  pattern if(_, _, _) with print.varName=call.procName  such that Follows*(while, _)  pattern while(_, _) with if.stmt#=read.stmt# with call.procName=call.procName  such that Calls(_, procedure)  pattern while(variable, _) with 8600=assign.stmt#  pattern if(print, _, _)  such that Uses(3, variable)  pattern while(_, _)  pattern while(if, _)  pattern while(constant, _) with if.stmt#=3900  such that Calls*(procedure, procedure)  such that Affects*(assign, assign) with "procedure"=call.procName  such that Parent(_, print)  pattern if(while, _, _)  pattern assign(variable, "8300*7400") with read.stmt#=9700  such that Parent*(_, while) with read.stmt#=while.stmt# with assign.stmt#=3500 with variable.varName="print"  pattern if(_, _, _) with 6300=read.stmt# with "if"=procedure.procName  pattern if(_, _, _)  pattern while(variable, _) with call.stmt#=call.stmt#  pattern while(assign, _) with "while"=call.procName  pattern if(while, _, _)  such that Affects*(stmt, 17)  pattern if(variable, _, _)  pattern assign(_, _) with call.procName=print.varName with while.stmt#=1600 with print.stmt#=4100  such that Uses(while, variable)  such that Parent(print, call)  pattern if(call, _, _) with if.stmt#=print.stmt# with variable.varName="else"  pattern if(if, _, _)  such that Affects*(stmt, assign)  pattern while(_, _) with variable.varName="then" with read.varName=read.varName with 3100=while.stmt#  pattern if(variable, _, _)  pattern while(then, _)  pattern assign(while, _"9000+3600"_)  pattern assign(variable, _"8500-1400"_)  pattern while(_, _)  pattern while(variable, _)  pattern while(variable, _)  pattern assign(variable, "8000-3700")  pattern if(while, _, _)  such that Follows(call, while)  pattern if(_, _, _) with stmt.stmt#=while.stmt#  such that Affects(_, assign)  such that Next*(7, stmt) with "if"=call.procName  such that Uses(procedure, variable) with call.procName=procedure.procName  pattern if(_, _, _)  pattern while(then, _)  such that Next*(print, print)  such that Calls*("call", procedure)  pattern while(variable, _)  pattern while(variable, _) with assign.stmt#=assign.stmt# with 7400=print.stmt# with print.varName="while" with call.stmt#=read.stmt#  such that Calls*(procedure, procedure) with 9000=read.stmt#  such that Affects*(_, stmt) with constant.value=constant.value  pattern while(variable, _)  pattern if(_, _, _)  such that Uses(17, variable) with variable.varName="if"  pattern assign(_, "6000+then")  such that Follows*(print, if)  pattern if(constant, _, _)  such that Calls(procedure, _)  pattern while(_, _) with "read"=variable.varName  pattern if(variable, _, _)  pattern while(_, _) with print.stmt#=3200  such that Uses(15, variable)  pattern assign(assign, _)  such that Calls*(procedure, _) with 3300=constant.value  such that Modifies(procedure, variable)  pattern while(while, _)  such that Calls(procedure, "else")  pattern assign(variable, _"4400-3000"_)  pattern assign(else, _)  pattern if(variable, _, _)  pattern while(_, _)  such that Calls*(procedure, "print")  such that Calls*("call", procedure)  pattern while(_, _)  pattern if(variable, _, _)  pattern while(call, _) with procedure.procName="procedure" with while.stmt#=100 with read.stmt#=8600  such that Modifies(while, variable) with stmt.stmt#=7900  pattern assign(variable, _"7200*6700"_)  such that Uses(assign, _) with "variable"=variable.varName  pattern assign(_, "3800-4000") with variable.varName=variable.varName  such that Modifies(print, "constant")  pattern while(variable, _) with procedure.procName="constant" with stmt.stmt#=while.stmt#  such that Parent*(stmt, _) with "call"=variable.varName  such that Next(print, 24)  pattern assign(_, _"300*7700"_) with call.procName="assign"  such that Affects(assign, assign)  pattern while(variable, _)  such that Calls(_, procedure)  pattern if(variable, _, _)  pattern assign(then, "5700/4500") with constant.value=constant.value  such that Affects(25, stmt)  pattern if(variable, _, _)  such that Parent(20, read)  pattern assign(assign, "3100-9400")  such that Calls(procedure, procedure)  pattern assign(_, _)  such that Affects*(4, assign)  such that Parent*(while, 17) with "procedure"=read.varName  pattern while(_, _)  pattern if(assign, _, _)  pattern assign(_, _) with read.varName="read" with call.stmt#=9100  pattern if(while, _, _)  pattern while(variable, _) with procedure.procName="else"  pattern if(variable, _, _)  pattern assign(_, "6000+1100")  pattern assign(assign, _"8000+8200"_)  pattern assign(_, _)  such that Parent(1, print)  such that Next(print, 11) with print.varName=call.procName with print.stmt#=4500 with "call"=read.varName  pattern if(if, _, _)  pattern assign(_, _"8600+900"_)  pattern if(while, _, _) with "then"=print.varName  such that Follows*(while, call)  pattern if(variable, _, _)  pattern assign(variable, "assign+4100") with variable.varName=call.procName with variable.varName=procedure.procName  pattern assign(_, "9900/variable")  pattern assign(_, "8900*5200") with constant.value=call.stmt#  such that Next(call, 9)  such that Calls*(procedure, "while")  pattern if(variable, _, _) with while.stmt#=while.stmt# with "while"=variable.varName with read.stmt#=600  pattern assign(else, "5900-9300")  pattern if(_, _, _) with stmt.stmt#=8900  pattern assign(_, _)  pattern while(variable, _) with read.stmt#=call.stmt#  pattern while(_, _) with print.varName=call.procName  pattern assign(_, _"7800+6900"_)  pattern while(variable, _) with variable.varName=print.varName with call.procName="print"  pattern while(_, _) with "print"=read.varName with "else"=procedure.procName with print.stmt#=if.stmt# with while.stmt#=constant.value with "if"=procedure.procName  such that Parent*(while, while)  pattern assign(variable, "6600+7800")  pattern while(_, _)  such that Parent(if, 27)  pattern if(variable, _, _) with "else"=variable.varName  pattern if(variable, _, _) with 4600=read.stmt# with read.varName="print"  pattern if(assign, _, _)  such that Follows(_, print)  pattern while(if, _)  pattern assign(read, _) with read.varName="call"  pattern while(_, _)  pattern assign(_, "5200-then") with 2100=if.stmt#  such that Affects(_, stmt) with print.varName=call.procName  pattern while(_, _) with read.stmt#=1600 with 1800=assign.stmt#  pattern if(_, _, _)  pattern if(_, _, _)  pattern assign(while, "3000+3800")  pattern while(else, _)  pattern if(while, _, _)  pattern assign(_, _"600*4900"_)  such that Modifies(stmt, _) with call.stmt#=3300 

5000
96 - Query 96
print print; variable variable; assign assign; constant constant; stmt stmt; read read; procedure procedure; if if; while while; call call; 
Select <print, variable, assign, constant, stmt, read, procedure, if, while, call>  such that Parent(read, _)  such that Modifies(procedure, _) with call.procName=print.varName with 4500=if.stmt#  such that Uses(11, variable) with 6100=call.stmt#  pattern assign(_, "5900/9900")  pattern if(_, _, _) with stmt.stmt#=while.stmt# with 5000=print.stmt#  pattern while(else, _) with assign.stmt#=800 with 6300=if.stmt#  pattern while(_, _)  such that Parent(assign, _)  pattern if(_, _, _) with if.stmt#=500 with call.stmt#=print.stmt#  pattern if(variable, _, _) with 4300=constant.value  such that Affects*(22, assign) with assign.stmt#=while.stmt# with assign.stmt#=stmt.stmt#  pattern if(_, _, _)  pattern while(variable, _)  such that Next(call, _)  such that Parent(11, print)  pattern if(_, _, _)  pattern while(call, _)  such that Modifies(while, variable)  pattern assign(call, "5300/300") with assign.stmt#=4200 with print.varName="procedure"  such that Uses(19, variable)  pattern assign(call, _"8100*8500"_)  such that Parent(29, stmt)  pattern assign(procedure, "1100/6000") with variable.varName="call" with read.stmt#=7800  pattern assign(variable, "while*8100")  such that Affects(stmt, 5)  such that Follows*(call, print)  pattern while(if, _)  pattern if(variable, _, _) with assign.stmt#=stmt.stmt# with stmt.stmt#=stmt.stmt#  such that Parent*(assign, print)  such that Modifies(read, "constant")  such that Uses(call, variable)  pattern if(variable, _, _) with stmt.stmt#=6800  pattern assign(variable, "procedure-700")  pattern if(variable, _, _)  such that Next(17, stmt) with 6700=constant.value with while.stmt#=constant.value  pattern if(variable, _, _) with "while"=variable.varName with while.stmt#=3100  such that Modifies(3, variable) with if.stmt#=assign.stmt#  pattern if(_, _, _)  such that Follows*(9, if)  pattern if(_, _, _)  pattern if(variable, _, _)  pattern assign(read, _)  pattern if(variable, _, _)  such that Parent(read, 13)  pattern assign(_, _"2600-3100"_)  pattern assign(variable, _) with stmt.stmt#=if.stmt#  such that Calls("constant", procedure) with 5800=read.stmt#  pattern while(variable, _)  such that Calls*(procedure, _)  pattern while(if, _)  pattern if(variable, _, _)  such that Modifies(while, _) with if.stmt#=while.stmt# with call.stmt#=9200  pattern if(_, _, _) with while.stmt#=constant.value  pattern assign(variable, "9900/8900")  pattern assign(print, _"(2700-3800)*600"_) with "procedure"=procedure.procName  pattern if(else, _, _)  such that Uses(stmt, "call")  pattern while(if, _) with if.stmt#=5000  pattern if(_, _, _) with read.varName="else" with "while"=call.procName  such that Modifies(procedure, _)  such that Parent(print, 18)  pattern while(variable, _)  pattern if(if, _, _)  pattern while(_, _) with 5100=if.stmt#  pattern assign(while, _"1100-5100"_)  such that Next(16, call) with print.varName=procedure.procName  pattern while(variable, _) with procedure.procName=procedure.procName  pattern assign(if, _"6700*2100"_) with if.stmt#=constant.value  pattern assign(read, _)  such that Calls*(_, procedure)  such that Uses(assign, _)  pattern assign(variable, _"((5200-7800)-4400)+5200"_) with 6600=call.stmt# with if.stmt#=5600  pattern if(constant, _, _)  pattern while(_, _)  such that Follows(7, print) with "constant"=variable.varName with if.stmt#=print.stmt#  pattern assign(if, _"2600/100"_)  pattern if(constant, _, _) with "constant"=procedure.procName  such that Follows*(_, if)  pattern if(_, _, _) with if.stmt#=9000 with "then"=variable.varName  pattern if(_, _, _) with read.stmt#=assign.stmt#  pattern assign(variable, _) with read.varName=read.varName  pattern assign(assign, "5500-8800")  pattern assign(_, "9300-4400") with read.varName=procedure.procName  pattern assign(_, _"6900*4900"_) with 700=print.stmt#  such that Uses(call, "while")  pattern while(variable, _)  pattern while(_, _)  such that Affects*(17, stmt)  pattern if(_, _, _)  pattern assign(variable, "3200*2000") with "call"=procedure.procName  pattern assign(print, "4800/2100")  pattern while(procedure, _) with constant.value=5100  pattern assign(if, "3600/2000")  pattern while(print, _)  pattern assign(variable, _"6400+8800"_)  such that Follows(read, 3)  pattern while(variable, _)  such that Modifies(assign, _)  pattern if(variable, _, _)  pattern assign(print, "4100-8900")  pattern if(_, _, _)  pattern while(print, _)  pattern assign(while, "4000*8500")  pattern if(_, _, _) with print.varName=call.procName with print.stmt#=stmt.stmt#  such that Parent(21, call) with assign.stmt#=constant.value  such that Parent*(if, _)  pattern if(variable, _, _)  pattern while(_, _)  such that Calls*(procedure, "if") with call.stmt#=while.stmt#  pattern if(while, _, _) with print.varName="else"  pattern if(_, _, _)  pattern while(read, _)  pattern while(_, _)  pattern while(_, _)  such that Follows*(24, stmt)  pattern while(variable, _)  such that Affects*(stmt, 2)  pattern while(variable, _)  such that Follows(call, _) with procedure.procName=variable.varName with print.varName="assign"  such that Parent(23, call)  pattern while(_, _)  pattern while(variable, _) with 2400=read.stmt#  pattern while(variable, _) with 800=constant.value  such that Follows*(_, call)  pattern if(_, _, _)  pattern assign(call, "3000*variable")  such that Follows(27, assign)  pattern assign(_, _) with constant.value=4800  such that Calls*(procedure, "variable")  pattern if(_, _, _)  such that Modifies(27, variable) with call.stmt#=while.stmt# with "call"=procedure.procName  such that Calls(_, procedure)  pattern while(variable, _)  such that Next*(call, _)  such that Follows*(1, if)  such that Parent*(5, assign)  pattern assign(_, _)  such that Affects*(stmt, assign)  pattern if(variable, _, _) with read.varName=call.procName  such that Parent*(20, while)  pattern if(_, _, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern assign(assign, "1100*6000")  pattern assign(variable, _) with variable.varName="procedure"  pattern assign(_, _)  such that Parent*(if, assign)  pattern assign(_, "if/400")  pattern if(variable, _, _) with while.stmt#=stmt.stmt# with constant.value=1900 with if.stmt#=constant.value  such that Affects(assign, assign)  pattern while(variable, _)  pattern while(_, _) with assign.stmt#=8400  such that Modifies(5, variable) with if.stmt#=read.stmt# with read.varName=read.varName  pattern assign(if, _)  pattern while(then, _)  such that Affects(stmt, _)  such that Next(if, if) with stmt.stmt#=if.stmt#  pattern while(_, _) with assign.stmt#=200  such that Modifies(22, variable)  such that Modifies(while, variable)  pattern assign(_, _)  pattern if(else, _, _) with call.procName=print.varName  pattern if(if, _, _)  such that Calls(procedure, _) with 6600=print.stmt# with 8700=call.stmt#  such that Affects(11, stmt)  pattern if(_, _, _)  such that Parent(21, stmt) with constant.value=4500 with print.varName=read.varName  pattern assign(_, _)  pattern while(variable, _) with "else"=variable.varName with read.varName="constant" with "else"=variable.varName with while.stmt#=while.stmt#  such that Parent(_, if)  pattern if(variable, _, _) with 2500=assign.stmt# with 600=while.stmt# with 9600=stmt.stmt#  pattern assign(then, _"2100+600"_)  pattern assign(_, "9700-1400")  such that Modifies(14, variable)  such that Modifies(stmt, _)  pattern if(_, _, _)  pattern if(variable, _, _) with "constant"=read.varName with call.stmt#=6800  such that Affects(assign, _)  pattern while(variable, _)  such that Follows(call, 6)  such that Calls(procedure, procedure)  pattern assign(if, _)  such that Next*(stmt, _)  such that Uses(call, variable) with "variable"=print.varName  pattern while(_, _) with 7000=while.stmt# with "print"=read.varName with if.stmt#=if.stmt#  such that Parent(12, call) with variable.varName=variable.varName  such that Parent(6, while)  pattern assign(variable, _"3400*8700"_)  pattern while(variable, _)  such that Calls(_, procedure)  such that Parent*(if, _)  pattern if(_, _, _)  pattern while(variable, _)  such that Modifies(print, variable) with call.stmt#=assign.stmt#  such that Next*(_, call)  such that Uses(procedure, variable)  pattern if(_, _, _) with procedure.procName="print"  pattern assign(else, "(2000-5600)*9700")  pattern if(variable, _, _)  pattern if(_, _, _)  such that Follows(25, assign)  pattern if(variable, _, _) with 9900=call.stmt# with read.varName=variable.varName with print.varName=variable.varName  such that Affects(assign, 16)  pattern assign(_, "7500+7300")  pattern if(procedure, _, _)  such that Follows*(if, _) with 7800=if.stmt#  pattern if(read, _, _)  pattern assign(variable, _)  pattern while(variable, _)  pattern assign(variable, _)  pattern assign(_, _"(5500/7400)-9100"_) with read.varName=variable.varName with print.varName=print.varName  pattern assign(_, _)  pattern while(variable, _)  such that Parent(read, print)  pattern assign(_, _"3000/8300"_)  pattern assign(variable, "6800+9100")  pattern assign(_, _)  such that Parent(read, stmt)  such that Uses(28, variable)  such that Affects*(assign, _)  such that Uses(24, variable)  pattern assign(while, _"4200-1900"_)  such that Parent(call, 15)  pattern while(else, _) with "procedure"=call.procName  such that Uses(stmt, _)  such that Next*(stmt, call)  such that Next*(while, 5)  pattern while(_, _) with while.stmt#=while.stmt# with "read"=call.procName  such that Modifies(27, variable) with variable.varName="if"  such that Next(assign, 8)  pattern assign(else, _"2400/6400"_)  pattern if(variable, _, _)  such that Parent(if, 4)  pattern if(variable, _, _) with 4800=read.stmt#  such that Parent(19, stmt)  pattern while(_, _) with procedure.procName="else"  such that Uses(2, variable) with 4000=constant.value with procedure.procName="while"  pattern if(_, _, _) with call.stmt#=9700  such that Calls(procedure, procedure)  pattern assign(_, _) with variable.varName=procedure.procName with read.stmt#=5800  such that Parent*(_, while)  pattern assign(variable, "300+6000")  such that Next(while, _)  pattern while(_, _)  pattern assign(_, _"7500*5800"_)  pattern while(else, _)  pattern assign(while, "9600*7700")  such that Modifies(while, _) with print.stmt#=constant.value  pattern assign(_, "2300*4900")  pattern if(then, _, _)  pattern while(variable, _)  such that Next(if, _) with "if"=call.procName with stmt.stmt#=while.stmt#  such that Affects(stmt, 27)  pattern while(variable, _)  pattern while(_, _)  such that Modifies(read, "if") with variable.varName=call.procName  pattern if(while, _, _)  pattern while(variable, _) with while.stmt#=9400  pattern assign(variable, _)  such that Modifies(if, _)  such that Calls(procedure, "constant") with 7300=read.stmt#  pattern while(print, _) with constant.value=call.stmt#  pattern while(_, _)  such that Parent(_, read)  pattern while(read, _)  pattern if(_, _, _) with read.varName="assign"  pattern assign(_, _"1800+6600"_)  pattern if(variable, _, _)  such that Modifies(assign, _) with if.stmt#=constant.value with constant.value=print.stmt#  pattern if(variable, _, _) with procedure.procName=variable.varName with read.varName=procedure.procName with 700=assign.stmt# with 7900=call.stmt#  such that Affects*(stmt, 15)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern while(_, _)  pattern assign(else, _"6300*9800"_) with read.varName="then" with print.varName=print.varName  pattern assign(call, _) with print.varName=call.procName  pattern assign(variable, _"7800*8900"_)  such that Follows(assign, _)  pattern if(variable, _, _)  such that Affects*(assign, 6)  such that Affects(stmt, stmt)  such that Calls(procedure, "then")  such that Next(if, _)  pattern if(_, _, _) with while.stmt#=5500  pattern while(variable, _)  pattern assign(assign, "2100*8900") with 600=call.stmt# with variable.varName=read.varName  pattern assign(variable, _"6200/variable"_)  such that Affects(26, stmt)  pattern assign(variable, _"3500+3200"_)  pattern if(else, _, _)  such that Parent*(read, _)  pattern while(variable, _) with 4200=while.stmt#  such that Next*(_, if)  pattern while(while, _) with while.stmt#=1600  pattern if(_, _, _)  pattern assign(variable, "7500/4600")  pattern while(variable, _) with "call"=read.varName  pattern if(print, _, _)  such that Affects(assign, assign)  such that Follows(call, stmt)  pattern assign(variable, "8300/6500") with stmt.stmt#=stmt.stmt# with read.varName="if"  such that Parent(print, 19) with variable.varName=read.varName  such that Affects(2, stmt)  pattern assign(variable, _"(5700*5600)/6400"_)  pattern while(variable, _) with "variable"=variable.varName with "read"=print.varName  such that Next(while, _) with call.stmt#=2600 with constant.value=4100 with assign.stmt#=4000  pattern assign(then, _)  pattern if(else, _, _)  such that Follows*(read, _)  pattern assign(_, _)  pattern if(variable, _, _)  pattern assign(_, _)  pattern assign(assign, _)  such that Follows*(_, call) with call.stmt#=assign.stmt#  pattern assign(variable, _) with 6600=assign.stmt# with read.stmt#=8400 with stmt.stmt#=constant.value with variable.varName="procedure"  such that Next*(read, _)  such that Parent*(assign, _) with call.stmt#=call.stmt#  such that Next*(call, call) with read.stmt#=call.stmt#  such that Parent(1, assign)  pattern while(variable, _)  pattern if(print, _, _)  pattern while(_, _)  pattern assign(variable, "400+8100")  pattern while(_, _) with 2300=constant.value  pattern if(variable, _, _)  pattern while(print, _) with 3800=assign.stmt#  pattern while(constant, _) with read.stmt#=8500  such that Next*(print, 26)  pattern while(_, _)  pattern assign(variable, _)  such that Affects*(assign, 16)  pattern if(procedure, _, _)  pattern assign(if, _"4900+2200"_)  such that Parent*(29, call)  pattern if(variable, _, _)  such that Next*(_, assign) with read.stmt#=read.stmt# with call.procName="call"  such that Calls*(procedure, _)  such that Parent(8, if)  such that Parent*(call, 20) with call.procName="variable"  pattern if(variable, _, _) with 5000=while.stmt#  such that Follows(assign, 24)  pattern if(_, _, _)  pattern if(_, _, _)  such that Parent*(_, assign) with "else"=call.procName 

5000
97 - Query 97
variable variable; assign assign; print print; call call; constant constant; stmt stmt; read read; if if; while while; procedure procedure; 
Select <variable, assign, print, call, constant, stmt, read, if, while, procedure>  pattern if(else, _, _)  pattern assign(_, _"8500/1900"_)  pattern if(variable, _, _) with print.varName="while"  pattern assign(variable, _)  pattern while(_, _) with "call"=print.varName  such that Next*(assign, _)  such that Uses(stmt, variable) with if.stmt#=9200  such that Calls*(procedure, procedure) with if.stmt#=read.stmt# with if.stmt#=stmt.stmt#  such that Affects(_, assign)  pattern if(call, _, _)  such that Next*(if, while)  such that Calls*(procedure, "variable") with print.varName=print.varName with print.varName=read.varName with print.stmt#=1100 with call.procName="if"  pattern while(while, _)  pattern if(variable, _, _) with stmt.stmt#=1900  pattern if(procedure, _, _)  such that Calls*(procedure, _)  pattern while(constant, _)  pattern if(_, _, _) with call.stmt#=5300  pattern assign(assign, _)  pattern assign(variable, "then*200")  such that Affects(assign, assign)  pattern assign(assign, "800+200")  pattern while(read, _)  pattern if(_, _, _)  such that Affects*(stmt, _)  such that Next(while, read)  such that Calls*(procedure, _)  pattern if(variable, _, _)  pattern assign(variable, _)  pattern while(_, _)  pattern while(_, _)  pattern assign(variable, "700/7600") with call.procName="call"  pattern assign(_, "4700/4200")  such that Calls*(procedure, _) with 300=assign.stmt#  pattern if(_, _, _) with "assign"=read.varName with assign.stmt#=1100 with while.stmt#=read.stmt#  such that Parent(stmt, _)  such that Uses(while, variable)  pattern assign(_, _)  pattern assign(variable, _"1500/4600"_) with 7000=while.stmt#  pattern assign(variable, "(3800-read)*2200")  pattern if(_, _, _)  pattern assign(_, "5500/1000")  such that Calls(procedure, procedure)  such that Affects*(assign, stmt)  pattern if(variable, _, _)  pattern if(_, _, _) with read.varName=call.procName  pattern assign(variable, _"100-300"_)  pattern while(_, _)  pattern assign(read, _)  such that Uses(while, "assign")  pattern assign(variable, "4200-3500")  pattern if(_, _, _)  pattern if(variable, _, _)  such that Modifies(procedure, variable) with call.stmt#=5000  such that Modifies(call, "read")  pattern assign(variable, "print+7800")  pattern while(_, _)  such that Follows*(print, while)  such that Next*(assign, stmt) with 3600=read.stmt# with "assign"=procedure.procName with read.varName="assign"  such that Calls*("call", procedure)  such that Parent(while, while)  such that Next(call, _)  pattern if(variable, _, _)  pattern while(_, _)  such that Calls(procedure, procedure) with print.stmt#=3100  pattern if(while, _, _) with call.stmt#=call.stmt#  pattern if(while, _, _)  pattern if(variable, _, _)  such that Parent*(_, assign)  pattern assign(else, "(constant+2200)+4000") with variable.varName="if" with print.varName=read.varName  pattern while(variable, _) with "constant"=print.varName  pattern assign(_, _"2200*100"_)  such that Uses(procedure, _)  pattern assign(_, _)  pattern if(variable, _, _) with 2500=stmt.stmt#  such that Affects*(stmt, _) with "call"=read.varName  such that Follows*(assign, call) with constant.value=600 with 600=stmt.stmt# with call.procName="print" with "assign"=read.varName  pattern if(variable, _, _)  such that Calls(procedure, _)  pattern while(while, _)  pattern if(_, _, _)  pattern while(variable, _)  such that Affects*(stmt, 11)  pattern if(call, _, _) with stmt.stmt#=call.stmt#  pattern if(variable, _, _)  pattern assign(variable, _"while-4300"_)  such that Uses(if, "while")  such that Calls(procedure, "while")  pattern while(assign, _) with print.varName="constant" with 2500=print.stmt# with procedure.procName="print"  such that Affects*(assign, assign) with read.varName=print.varName with 2500=stmt.stmt#  such that Calls(procedure, "constant") with "assign"=read.varName  pattern assign(_, "9900/5800")  pattern if(variable, _, _) with variable.varName=read.varName  pattern assign(if, _)  pattern assign(_, _"8400-else"_)  such that Uses(call, _)  pattern assign(variable, _)  pattern assign(_, "5700*5600") with if.stmt#=100  pattern assign(_, _) with print.varName=print.varName  such that Follows(23, if)  pattern assign(call, _)  pattern while(variable, _)  pattern if(_, _, _)  such that Calls(procedure, _)  such that Next*(_, stmt) with variable.varName=variable.varName with "if"=read.varName  such that Follows(while, 5) with procedure.procName=procedure.procName with assign.stmt#=while.stmt#  pattern while(call, _)  pattern if(procedure, _, _)  pattern if(print, _, _)  pattern assign(procedure, "2900+8100") with "constant"=variable.varName  pattern while(read, _)  pattern if(variable, _, _) with "print"=call.procName with print.stmt#=200 with "read"=procedure.procName  pattern if(_, _, _)  pattern if(_, _, _)  pattern if(print, _, _)  such that Next*(print, _)  pattern if(_, _, _)  such that Next(assign, 29)  pattern while(variable, _)  such that Modifies(call, "print")  pattern while(procedure, _)  such that Uses(12, variable)  pattern while(_, _) with "else"=variable.varName with variable.varName="while"  pattern if(variable, _, _)  pattern if(variable, _, _)  such that Calls(procedure, "if")  such that Follows*(_, print)  such that Next*(_, call)  such that Modifies(20, variable)  pattern if(_, _, _)  pattern while(variable, _)  pattern assign(_, _"(9800-4800)/1700"_) with read.stmt#=assign.stmt# with if.stmt#=stmt.stmt#  pattern assign(variable, _"if/1700"_)  pattern while(read, _)  pattern while(variable, _) with variable.varName=print.varName  pattern while(variable, _)  such that Follows*(if, read)  pattern if(variable, _, _)  such that Uses(25, variable) with constant.value=stmt.stmt#  such that Parent(call, _)  such that Follows(_, call) with stmt.stmt#=constant.value  such that Follows*(while, if)  such that Calls*("read", procedure)  pattern assign(variable, _"1100-2800"_) with variable.varName="else" with "procedure"=call.procName  such that Next*(read, _) with variable.varName=call.procName  pattern while(_, _)  pattern if(variable, _, _) with 6900=read.stmt#  pattern while(read, _)  pattern if(while, _, _)  pattern if(then, _, _) with "while"=read.varName with constant.value=assign.stmt#  such that Modifies(9, variable)  pattern assign(_, _"9100/6100"_) with procedure.procName="print"  pattern assign(variable, _"8400-9200"_) with 2700=stmt.stmt#  pattern assign(variable, "4800+while") with "then"=print.varName  pattern if(variable, _, _)  pattern assign(variable, _"7700+while"_) with 8300=while.stmt# with 6100=assign.stmt#  pattern assign(variable, _)  pattern assign(while, _"1400+4500"_)  pattern while(_, _)  pattern if(variable, _, _)  pattern if(assign, _, _) with read.varName="if" with read.varName="print"  pattern assign(assign, _"assign-7300"_)  pattern assign(_, "2100/7800")  such that Parent(7, while)  such that Affects(1, assign) with stmt.stmt#=assign.stmt#  pattern assign(_, _"8500/6800"_) with call.procName="read"  pattern while(call, _)  pattern if(variable, _, _)  pattern while(_, _)  pattern if(_, _, _) with read.varName=procedure.procName  such that Calls*(_, procedure)  pattern if(_, _, _) with print.varName=call.procName  pattern assign(procedure, _)  pattern while(variable, _)  such that Calls(procedure, _) with assign.stmt#=6900  pattern while(variable, _)  such that Calls*(procedure, "call")  such that Modifies(stmt, variable)  pattern while(assign, _) with "then"=variable.varName  pattern while(variable, _)  pattern while(variable, _) with call.stmt#=if.stmt# with 6600=constant.value  pattern while(_, _)  such that Calls("assign", procedure)  pattern while(procedure, _) with 2700=if.stmt# with print.varName=read.varName  pattern if(if, _, _)  pattern assign(_, "variable-2300") with while.stmt#=1500  pattern if(if, _, _) with read.varName="then"  pattern while(_, _) with read.varName=procedure.procName with print.varName=call.procName  pattern while(_, _) with constant.value=4400  such that Parent(24, read)  pattern if(variable, _, _) with procedure.procName=variable.varName  pattern if(print, _, _)  such that Affects(25, stmt)  such that Next*(_, read)  pattern assign(procedure, _"3900/200"_)  pattern if(_, _, _)  pattern if(variable, _, _)  pattern while(variable, _)  pattern if(constant, _, _)  such that Calls*("while", procedure) with print.varName=call.procName  such that Follows*(6, while)  such that Calls(procedure, procedure) with read.varName=variable.varName  such that Calls*("else", procedure)  pattern if(procedure, _, _)  such that Affects(assign, 1) with 1900=call.stmt#  pattern assign(procedure, _"4000+4200"_) with procedure.procName="else" with "while"=procedure.procName with procedure.procName=read.varName with "then"=call.procName  pattern assign(variable, "1500-9000") with procedure.procName="else" with constant.value=7800  such that Calls("procedure", procedure)  such that Parent(23, if)  pattern if(procedure, _, _) with read.varName=call.procName  such that Calls*("assign", procedure)  pattern if(call, _, _)  such that Next(11, if) with call.procName=read.varName  pattern assign(_, "5700/assign")  such that Modifies(if, _) with "while"=read.varName  such that Calls*(procedure, _)  pattern if(while, _, _) with assign.stmt#=stmt.stmt# with read.stmt#=if.stmt#  pattern assign(_, "2000*4100") with 4300=stmt.stmt#  pattern if(print, _, _)  pattern if(then, _, _)  such that Follows(read, _) with print.stmt#=print.stmt# with "read"=call.procName  pattern assign(_, _)  such that Calls("while", procedure) with 4500=assign.stmt# with procedure.procName=print.varName  such that Next*(call, read)  pattern if(call, _, _) with read.varName=variable.varName  pattern while(variable, _)  such that Next(23, print)  pattern if(variable, _, _) with read.varName="while"  such that Parent*(read, 5)  pattern while(_, _)  pattern while(variable, _) with variable.varName=print.varName with read.varName=procedure.procName  pattern while(variable, _) with "while"=variable.varName  pattern if(variable, _, _)  pattern assign(_, _"3900*6900"_)  pattern if(_, _, _)  such that Follows*(print, _)  pattern if(read, _, _)  pattern if(_, _, _)  such that Affects(24, stmt)  such that Parent*(_, while)  such that Calls("print", procedure) with 100=while.stmt#  pattern while(_, _) with assign.stmt#=constant.value with print.varName="procedure" with procedure.procName=read.varName  pattern assign(_, _) with procedure.procName="assign" with "if"=procedure.procName  pattern while(_, _) with 800=read.stmt#  pattern while(_, _) with print.stmt#=7200  pattern if(read, _, _)  pattern if(variable, _, _)  pattern if(_, _, _)  such that Parent*(read, _) with 9700=print.stmt#  pattern assign(constant, "4700+3300")  pattern if(if, _, _)  pattern assign(_, _"1100-8200"_) with stmt.stmt#=6500  such that Modifies(24, variable)  such that Affects*(assign, _)  such that Next*(9, call)  such that Affects(stmt, 21)  pattern assign(procedure, "else+900")  such that Uses(stmt, variable)  pattern if(print, _, _) with procedure.procName="assign"  such that Next(read, _) with print.stmt#=read.stmt#  pattern assign(variable, _"2400-assign"_)  pattern assign(_, _"while-1400"_)  pattern assign(_, _"9600*700"_)  pattern if(while, _, _)  pattern assign(then, "4100+3100") with "constant"=procedure.procName  pattern if(variable, _, _)  pattern if(else, _, _)  pattern if(_, _, _) with call.procName="variable"  pattern while(if, _) with while.stmt#=4200  pattern while(procedure, _) with read.varName="call"  pattern assign(procedure, "1800+4100")  pattern while(constant, _)  such that Affects*(stmt, assign) with call.procName="then"  such that Parent*(while, _)  pattern if(constant, _, _)  such that Affects(assign, stmt) with "while"=print.varName with constant.value=6400  pattern while(variable, _)  pattern while(_, _) with variable.varName="else"  pattern assign(read, _)  pattern while(print, _) with call.stmt#=if.stmt# with procedure.procName="while"  pattern while(_, _)  pattern assign(_, _"6100/7300"_)  pattern while(variable, _)  pattern if(_, _, _) with procedure.procName="print"  such that Follows*(print, _)  pattern if(variable, _, _) with 7000=assign.stmt#  such that Next(call, _) with 3800=assign.stmt#  pattern if(call, _, _)  pattern if(variable, _, _)  pattern if(while, _, _) with 4800=print.stmt#  such that Parent(assign, 16)  pattern if(variable, _, _)  such that Next*(4, print)  pattern while(_, _)  such that Parent(5, if)  pattern if(_, _, _)  such that Modifies(assign, _)  such that Modifies(7, variable)  pattern while(while, _)  such that Modifies(stmt, _)  pattern if(variable, _, _)  such that Modifies(3, variable)  such that Next(while, _)  such that Affects(stmt, assign)  pattern assign(variable, _"((8300-4800)+else)-5200"_) with procedure.procName="if" with 1500=stmt.stmt# with procedure.procName="variable"  such that Parent(13, stmt) with assign.stmt#=print.stmt# with constant.value=4100  pattern if(variable, _, _)  pattern if(_, _, _) with procedure.procName="variable"  pattern while(constant, _) with "read"=read.varName  such that Follows*(call, while)  pattern if(variable, _, _)  such that Calls(procedure, procedure)  such that Modifies(8, variable)  pattern if(print, _, _)  pattern assign(procedure, "3800-6600")  pattern if(if, _, _) with if.stmt#=constant.value  pattern assign(_, _"1300*1200"_)  pattern assign(variable, _"7400*9100"_)  pattern assign(else, "6200/9800") with "variable"=read.varName  pattern while(_, _) with "assign"=print.varName with print.varName=procedure.procName  such that Follows(while, 24)  pattern if(variable, _, _)  pattern assign(variable, "4500-9300")  pattern if(_, _, _)  pattern if(variable, _, _)  pattern while(if, _)  pattern if(_, _, _)  pattern assign(_, "(4200+3700)/4400")  such that Modifies(call, _) with 2300=print.stmt# with stmt.stmt#=stmt.stmt# with while.stmt#=5700  such that Calls*(procedure, "read")  pattern assign(variable, "6500*4100")  pattern assign(print, _"8400+6400"_)  such that Affects*(_, assign)  pattern if(_, _, _) with read.stmt#=print.stmt# with "constant"=print.varName  such that Follows*(while, read) with "constant"=print.varName with 3700=stmt.stmt#  pattern while(variable, _) with if.stmt#=call.stmt# with variable.varName="variable"  pattern while(variable, _)  such that Calls(procedure, "print")  pattern if(variable, _, _)  such that Uses(procedure, _) with "else"=call.procName with read.varName=call.procName  pattern if(variable, _, _) 

5000
98 - Query 98
variable variable; assign assign; print print; constant constant; stmt stmt; read read; procedure procedure; if if; while while; call call; 
Select <variable, assign, print, constant, stmt, read, procedure, if, while, call>  pattern if(_, _, _) with "constant"=variable.varName  pattern if(if, _, _)  pattern while(_, _)  pattern while(variable, _)  pattern assign(variable, "8000/2000")  such that Next*(_, assign)  pattern if(variable, _, _)  such that Follows*(_, while)  pattern if(_, _, _)  pattern assign(_, "1200-9000")  pattern if(_, _, _)  such that Affects*(stmt, 17)  such that Modifies(read, "if") with variable.varName="assign"  pattern while(variable, _) with print.stmt#=while.stmt#  such that Uses(print, "if") with print.varName=variable.varName  pattern assign(variable, _)  pattern if(assign, _, _) with call.stmt#=while.stmt#  pattern while(print, _)  such that Uses(stmt, variable) with if.stmt#=8800  pattern if(variable, _, _)  pattern if(variable, _, _) with "assign"=call.procName with call.procName="assign"  pattern if(print, _, _) with "variable"=variable.varName  pattern if(_, _, _)  pattern while(variable, _) with print.stmt#=4300  pattern assign(variable, "7400-7100")  pattern if(_, _, _)  such that Follows(_, read)  pattern assign(_, _"4700/2100"_)  such that Affects(stmt, _)  pattern if(then, _, _)  pattern if(variable, _, _)  such that Parent(27, while)  pattern if(_, _, _)  such that Parent*(print, 29)  pattern while(variable, _)  such that Affects(assign, 23)  such that Calls(procedure, procedure)  such that Parent*(if, while)  such that Calls*(procedure, "procedure")  such that Affects*(_, assign)  pattern assign(variable, _"5700-2600"_)  pattern while(variable, _) with constant.value=assign.stmt# with call.stmt#=if.stmt# with call.stmt#=if.stmt# with 500=print.stmt# with variable.varName="read"  pattern while(_, _)  pattern assign(call, "600-1800")  pattern assign(_, "read+7400")  such that Follows(read, call)  pattern while(variable, _)  pattern assign(_, _"7200*9500"_)  such that Follows(if, _) with read.varName=call.procName  such that Follows*(print, _)  pattern if(_, _, _) with "while"=procedure.procName  such that Parent*(20, read)  pattern if(variable, _, _)  pattern if(_, _, _)  pattern while(assign, _)  pattern if(variable, _, _)  pattern assign(variable, _"3200/2600"_) with "call"=print.varName with call.procName=call.procName  pattern while(variable, _) with 3200=assign.stmt#  such that Parent*(call, _)  pattern while(if, _) with read.varName=print.varName  such that Modifies(call, variable) with read.varName="constant"  pattern assign(variable, _"8100+2900"_) with read.stmt#=constant.value with print.varName=print.varName  pattern assign(read, "7600-else") with 3000=assign.stmt#  pattern while(_, _)  such that Uses(assign, _) with variable.varName=call.procName  pattern assign(_, _"4800/constant"_)  pattern while(variable, _)  pattern if(variable, _, _)  such that Affects*(_, assign)  pattern assign(procedure, "1300*6500")  such that Calls*("read", procedure)  such that Calls(procedure, _) with constant.value=assign.stmt# with "print"=variable.varName  such that Uses(read, _) with variable.varName=variable.varName  pattern assign(variable, _"5800/9900"_)  such that Affects(19, assign) with 2500=constant.value with assign.stmt#=call.stmt#  pattern assign(variable, _)  such that Calls("procedure", procedure)  pattern assign(_, "5100-if")  pattern while(variable, _)  pattern if(procedure, _, _)  pattern if(then, _, _)  pattern if(variable, _, _)  such that Affects(stmt, assign) with "procedure"=print.varName  pattern if(_, _, _)  such that Next(_, assign)  pattern assign(else, "8800/2400") with procedure.procName="if"  pattern if(if, _, _)  pattern while(else, _)  pattern if(read, _, _) with if.stmt#=print.stmt#  pattern if(_, _, _) with call.procName=variable.varName  pattern while(read, _)  pattern while(_, _) with "constant"=variable.varName  pattern assign(_, _"8100*6100"_) with print.stmt#=read.stmt#  pattern if(_, _, _) with read.varName="call" with "print"=procedure.procName  such that Follows(if, read) with procedure.procName="variable"  pattern while(constant, _)  pattern if(_, _, _)  such that Calls(procedure, "print")  such that Calls*(procedure, procedure)  pattern assign(_, _"8300*constant"_) with read.varName=call.procName  such that Calls(procedure, _)  pattern while(_, _) with assign.stmt#=stmt.stmt#  pattern assign(_, "1300/1300") with assign.stmt#=2500  pattern while(while, _)  pattern if(variable, _, _)  pattern if(variable, _, _)  pattern assign(_, _)  pattern assign(variable, _)  pattern if(variable, _, _)  pattern assign(variable, "6300+3100")  pattern while(else, _) with "assign"=procedure.procName  pattern while(variable, _)  pattern assign(variable, _)  pattern if(if, _, _)  pattern while(while, _)  pattern while(_, _)  such that Next*(read, _)  pattern while(procedure, _)  such that Follows*(stmt, _)  pattern while(variable, _)  pattern if(variable, _, _)  such that Parent(call, 2)  pattern assign(_, "7100/1000")  pattern if(variable, _, _)  such that Uses(23, variable)  pattern assign(procedure, "1800/6300") with 7300=print.stmt#  pattern while(_, _)  such that Modifies(stmt, "call")  such that Affects(stmt, 15)  pattern assign(variable, _)  such that Next(print, if)  such that Parent*(_, print)  pattern if(_, _, _) with call.procName="else" with call.stmt#=6500  such that Next(call, while) with if.stmt#=6700 with 9300=call.stmt# with variable.varName=procedure.procName  pattern while(variable, _)  pattern assign(_, "6100-3200")  such that Affects(assign, assign)  pattern while(_, _) with "while"=read.varName  such that Affects(assign, _) with constant.value=assign.stmt#  such that Affects*(stmt, 26) with 8800=constant.value with while.stmt#=3100 with call.stmt#=call.stmt#  such that Parent(assign, _) with 2500=while.stmt#  pattern while(constant, _)  pattern while(procedure, _) with procedure.procName="constant" with "else"=call.procName  pattern while(_, _) with "variable"=print.varName  such that Parent*(call, 22)  such that Modifies(1, variable) with "else"=read.varName  pattern assign(variable, "else+5300") with "call"=print.varName with 5100=while.stmt#  pattern while(print, _)  pattern assign(variable, _)  such that Modifies(print, "while")  pattern if(_, _, _)  pattern if(call, _, _)  pattern if(variable, _, _)  such that Follows*(call, 25)  such that Follows*(while, assign)  pattern assign(else, _"(6500/call)-6900"_)  such that Affects(stmt, _)  pattern assign(_, "read*1000")  such that Modifies(assign, _)  such that Calls(procedure, procedure)  such that Parent*(print, if)  pattern assign(variable, "(1100-assign)-2200")  such that Modifies(21, variable)  pattern assign(read, _)  pattern while(_, _)  such that Next*(_, assign) with "print"=call.procName  pattern assign(variable, _"7400/9400"_)  pattern assign(_, _) with constant.value=if.stmt#  such that Uses(if, variable)  pattern if(_, _, _)  such that Calls*(procedure, procedure)  such that Next(_, while)  such that Calls*(_, procedure) with if.stmt#=read.stmt# with "while"=call.procName  such that Follows(call, read) with procedure.procName=call.procName  such that Follows*(while, 8)  pattern while(_, _)  such that Calls(procedure, "if") with constant.value=8600  pattern if(read, _, _)  pattern assign(_, "else/assign") with read.varName=print.varName  pattern if(read, _, _) with "procedure"=procedure.procName with "variable"=variable.varName with variable.varName=read.varName with variable.varName="procedure"  pattern while(variable, _)  pattern if(variable, _, _)  pattern assign(_, "7400-6900") with "print"=variable.varName with "print"=call.procName  pattern while(call, _) with print.varName=call.procName with procedure.procName="while" with call.stmt#=6500  pattern if(variable, _, _) with variable.varName="else" with read.varName="while" with print.varName=read.varName  pattern assign(call, _) with procedure.procName="print"  pattern while(_, _)  pattern if(_, _, _) with "print"=print.varName  pattern while(variable, _)  pattern if(call, _, _) with while.stmt#=if.stmt# with stmt.stmt#=call.stmt# with if.stmt#=if.stmt#  pattern if(_, _, _)  pattern while(variable, _)  pattern assign(else, _) with read.stmt#=read.stmt#  such that Affects(7, assign) with 8700=print.stmt#  such that Parent*(_, assign)  such that Uses(read, variable)  such that Next*(_, read)  pattern while(_, _)  such that Calls(procedure, _)  such that Affects*(assign, 21) with procedure.procName="if" with "while"=call.procName  pattern if(if, _, _)  such that Uses(print, variable)  pattern assign(variable, "9100*7400")  such that Affects*(assign, 13) with print.stmt#=constant.value  pattern while(variable, _)  pattern assign(procedure, "8900/variable")  pattern while(read, _) with call.procName="constant" with "then"=read.varName  such that Affects(assign, stmt)  pattern assign(call, _"2800*3200"_)  pattern while(_, _)  such that Calls(procedure, procedure) with read.stmt#=print.stmt#  pattern assign(procedure, _"9600-1400"_)  pattern assign(print, _)  such that Calls*("else", procedure)  pattern assign(_, _)  pattern assign(_, _"1900-1900"_)  pattern assign(variable, _)  pattern if(_, _, _)  pattern assign(variable, "2000+1000") with read.varName="else"  such that Modifies(27, variable) with call.procName=print.varName with "assign"=procedure.procName  pattern assign(procedure, _)  pattern assign(while, _"assign+7500"_)  pattern assign(constant, _)  pattern while(variable, _)  such that Follows(call, 2)  pattern assign(_, "8300/call") with "call"=read.varName  pattern while(_, _)  pattern while(variable, _)  pattern while(if, _) with if.stmt#=5900 with 5200=if.stmt#  pattern if(procedure, _, _)  pattern while(variable, _)  pattern while(call, _)  pattern assign(while, _)  such that Parent*(_, call)  pattern while(variable, _)  such that Follows*(stmt, 18)  pattern assign(_, _) with print.varName=procedure.procName  pattern while(_, _)  pattern assign(variable, "4000*4000")  pattern assign(_, _"3200-call"_)  pattern if(variable, _, _)  pattern if(variable, _, _) with "print"=print.varName with stmt.stmt#=stmt.stmt# with call.stmt#=9300  pattern if(if, _, _)  such that Uses(23, variable)  such that Next(print, 4)  pattern assign(variable, _"print*3000"_) with 8000=while.stmt# with 2100=read.stmt#  pattern while(_, _)  such that Affects(_, stmt) with variable.varName=read.varName with "read"=procedure.procName  such that Modifies(read, _)  pattern while(_, _)  pattern while(read, _)  such that Follows(stmt, 20)  such that Affects*(stmt, _) with if.stmt#=while.stmt#  pattern while(_, _)  pattern if(_, _, _)  pattern assign(variable, "6000-2000") with while.stmt#=8400  pattern while(_, _)  pattern if(_, _, _)  pattern assign(variable, _)  pattern if(read, _, _)  such that Parent*(read, read)  such that Affects*(_, stmt)  such that Follows(stmt, _) with 3200=assign.stmt#  pattern if(procedure, _, _)  pattern if(print, _, _)  pattern assign(assign, _"4900*7100"_) with "call"=procedure.procName  pattern assign(_, "6300+8600") with 2200=print.stmt# with constant.value=constant.value  such that Next(22, print) with variable.varName=call.procName  such that Next(_, stmt)  pattern while(call, _)  such that Affects(_, stmt) with print.stmt#=stmt.stmt#  pattern while(print, _)  pattern assign(_, _) with variable.varName=procedure.procName  pattern if(_, _, _)  such that Next(if, _)  pattern if(else, _, _)  pattern while(variable, _)  pattern if(_, _, _)  pattern assign(then, "8000+constant")  pattern while(variable, _) with stmt.stmt#=2300 with 4100=call.stmt#  such that Next*(13, stmt) with procedure.procName="procedure" with constant.value=5000  such that Follows(assign, 10)  pattern assign(variable, _"8000+9500"_)  pattern if(variable, _, _)  pattern assign(_, _)  pattern assign(_, "3900/8500")  pattern assign(_, "while+7300")  such that Affects(20, stmt)  pattern assign(_, "4000/4400") with assign.stmt#=if.stmt# with 1700=stmt.stmt#  pattern while(_, _)  such that Modifies(procedure, variable)  pattern assign(_, _)  pattern if(_, _, _)  pattern if(variable, _, _) with stmt.stmt#=6300 with print.varName=call.procName with while.stmt#=1800  pattern assign(variable, _"call+6000"_)  pattern if(else, _, _)  pattern while(call, _)  such that Follows(23, stmt)  pattern while(constant, _) with procedure.procName=read.varName  pattern assign(variable, "8600/8600")  pattern assign(call, "7700*8100")  pattern while(_, _)  such that Modifies(5, variable)  pattern if(then, _, _)  such that Parent*(read, 18)  such that Next*(call, _)  such that Uses(call, variable)  such that Next(stmt, 26) with print.varName="then" with 8200=print.stmt#  pattern while(variable, _)  pattern while(procedure, _)  pattern if(_, _, _)  pattern while(_, _) with variable.varName="procedure"  pattern if(variable, _, _) with "constant"=variable.varName with 4300=constant.value with "else"=procedure.procName  such that Uses(procedure, _)  pattern while(_, _)  pattern while(assign, _)  pattern while(variable, _)  pattern if(procedure, _, _)  pattern while(assign, _)  pattern while(variable, _)  pattern while(read, _)  pattern while(variable, _)  pattern if(variable, _, _) with 2300=assign.stmt#  pattern while(assign, _) with read.stmt#=if.stmt# with read.varName="then"  such that Calls*(procedure, procedure) with call.procName="while"  such that Follows(read, _)  pattern if(_, _, _) with 2700=read.stmt#  pattern while(assign, _)  such that Uses(stmt, variable)  pattern assign(print, "4600/9300") with while.stmt#=800 with print.varName="variable"  such that Calls(_, procedure)  such that Follows*(_, assign)  pattern while(variable, _)  such that Calls*(procedure, procedure) with call.procName="call"  pattern if(_, _, _) with print.varName=variable.varName  such that Follows*(_, call) with read.varName=call.procName  such that Modifies(28, variable)  pattern if(variable, _, _)  pattern assign(_, "3200+500")  pattern while(_, _)  such that Calls(procedure, "read")  pattern assign(_, "2500/2500")  pattern while(_, _)  such that Follows*(if, 10)  such that Affects(6, assign) with "else"=variable.varName  pattern while(procedure, _)  such that Calls(procedure, procedure)  such that Next(call, _)  pattern while(variable, _)  pattern while(then, _)  pattern while(variable, _)  pattern while(variable, _)  pattern assign(_, _"4300-constant"_)  pattern assign(else, _"6300+8000"_)  pattern while(assign, _)  such that Parent*(_, assign) 

5000
99 - Query 99
print print; variable variable; assign assign; constant constant; stmt stmt; read read; procedure procedure; while while; if if; call call; 
Select <print, variable, assign, constant, stmt, read, procedure, while, if, call>  pattern assign(variable, _"400/1100"_) with call.procName="procedure" with print.varName="while" with "print"=variable.varName  such that Modifies(call, variable)  pattern assign(variable, _) with "read"=call.procName  pattern assign(variable, _"4100+5000"_)  pattern assign(variable, "(1000*then)-7500")  such that Uses(call, variable)  pattern assign(variable, _)  pattern while(then, _)  pattern if(_, _, _)  pattern while(variable, _)  pattern assign(else, _"read*if"_)  pattern while(_, _) with "print"=call.procName  pattern assign(assign, "(7400-2800)*2600") with 8000=read.stmt#  such that Parent*(print, 3)  pattern while(_, _) with "assign"=variable.varName with variable.varName=print.varName  pattern if(_, _, _)  pattern while(read, _)  pattern while(variable, _)  pattern assign(variable, _)  pattern assign(_, "700-5300")  pattern if(_, _, _)  such that Uses(assign, "while") with print.stmt#=call.stmt# with read.varName=variable.varName  such that Modifies(if, variable) with stmt.stmt#=4100 with read.stmt#=read.stmt# with assign.stmt#=call.stmt#  pattern if(call, _, _)  pattern while(constant, _)  pattern while(variable, _)  such that Parent(_, if) with call.stmt#=print.stmt# with procedure.procName=variable.varName  pattern assign(procedure, "5800*4100")  such that Modifies(procedure, variable) with read.varName=variable.varName  such that Parent*(stmt, 11)  pattern while(variable, _) with if.stmt#=while.stmt# with 5600=if.stmt#  such that Parent*(call, read) with "else"=print.varName with call.stmt#=while.stmt#  such that Follows*(stmt, print)  such that Modifies(11, variable)  pattern if(assign, _, _)  such that Next*(22, print)  pattern assign(if, _"6700*else"_)  pattern assign(assign, _)  such that Next*(print, print)  pattern if(variable, _, _)  pattern if(call, _, _) with print.stmt#=while.stmt#  such that Parent(assign, 18) with if.stmt#=9500 with "then"=procedure.procName  such that Uses(stmt, variable)  pattern while(variable, _)  pattern while(assign, _) with call.procName="while"  such that Next(stmt, _) with "print"=call.procName  such that Affects*(assign, stmt) with read.varName=procedure.procName  pattern assign(variable, _)  pattern while(then, _) with 1800=read.stmt#  such that Uses(print, _)  pattern while(variable, _)  pattern while(assign, _) with print.varName=call.procName  pattern while(variable, _)  such that Next(_, print)  pattern while(_, _)  such that Next(29, read)  such that Follows(20, call) with assign.stmt#=if.stmt# with call.procName=call.procName  such that Next(if, 27) with constant.value=assign.stmt#  such that Calls(_, procedure) with read.varName=variable.varName with procedure.procName="call"  such that Follows*(print, _)  pattern while(_, _)  pattern while(_, _)  pattern if(variable, _, _)  such that Follows*(assign, stmt) with variable.varName="else"  such that Affects*(stmt, _) with "constant"=read.varName  pattern if(variable, _, _) with read.varName=print.varName  pattern while(variable, _)  such that Affects(stmt, assign) with call.stmt#=if.stmt#  pattern if(_, _, _)  pattern if(then, _, _) with variable.varName=variable.varName  pattern assign(call, _)  such that Calls(procedure, _) with call.procName="read"  such that Next*(_, call)  pattern while(constant, _) with variable.varName="call"  such that Parent(stmt, 9)  such that Parent(while, 5)  pattern assign(_, _)  pattern if(assign, _, _)  such that Modifies(3, variable) with stmt.stmt#=9900  pattern if(variable, _, _)  pattern if(variable, _, _) with call.procName=read.varName  pattern while(if, _) with variable.varName=print.varName  pattern while(_, _) with "print"=variable.varName  pattern if(constant, _, _)  such that Calls*(procedure, _)  pattern while(variable, _)  pattern while(variable, _)  pattern assign(while, _"(7600*7500)+8000"_)  such that Next(stmt, _)  pattern if(_, _, _)  pattern assign(_, _) with print.stmt#=assign.stmt#  such that Calls*(procedure, procedure)  such that Uses(assign, "constant")  such that Follows*(assign, 10) with if.stmt#=8400  pattern if(print, _, _)  pattern if(read, _, _)  such that Calls*(_, procedure)  pattern assign(_, "(9900*8600)/8600")  such that Follows*(stmt, stmt)  pattern assign(_, _"4100+procedure"_)  pattern assign(procedure, _"2600+1800"_) with "procedure"=variable.varName  pattern while(read, _)  such that Parent(assign, _)  pattern if(_, _, _)  pattern if(_, _, _) with 100=read.stmt#  pattern while(_, _) with call.stmt#=1100  pattern assign(_, _)  pattern while(variable, _)  such that Follows(stmt, _)  pattern if(variable, _, _) with print.varName="procedure" with call.stmt#=3100  pattern if(then, _, _) with variable.varName=print.varName with procedure.procName="then"  such that Next(_, while)  pattern if(constant, _, _)  such that Parent(_, call) with 8600=if.stmt#  such that Follows(14, stmt)  pattern assign(variable, _)  pattern if(_, _, _)  pattern while(variable, _) with call.procName="procedure"  pattern assign(_, _)  pattern if(variable, _, _)  such that Follows*(_, read) with "read"=read.varName  such that Next(stmt, _)  such that Follows*(15, print)  pattern while(_, _)  pattern if(read, _, _) with "else"=read.varName with procedure.procName="call"  pattern if(read, _, _)  pattern if(variable, _, _) with stmt.stmt#=constant.value  pattern assign(variable, _)  such that Follows*(if, 22)  such that Follows*(assign, _) with print.stmt#=print.stmt#  such that Next(3, print)  pattern assign(_, _)  pattern assign(procedure, "2100-8900")  pattern if(call, _, _)  pattern if(print, _, _)  such that Affects*(assign, assign)  such that Follows*(stmt, _)  pattern assign(read, _) with assign.stmt#=100  such that Uses(if, _) with read.stmt#=if.stmt#  pattern assign(while, _) with constant.value=constant.value  such that Next*(_, stmt) with read.stmt#=300 with print.varName=print.varName with "read"=call.procName  pattern if(variable, _, _) with call.stmt#=constant.value with 600=constant.value  such that Parent(if, print)  such that Modifies(stmt, "read")  pattern if(procedure, _, _) with 1400=assign.stmt#  such that Next*(while, while)  pattern if(_, _, _)  pattern assign(variable, _)  such that Parent*(print, 8)  pattern assign(_, "3700+constant")  pattern while(_, _) with call.procName="then"  pattern assign(variable, "8900-2500") with "procedure"=variable.varName  pattern while(print, _)  such that Next*(20, while)  pattern if(_, _, _) with call.procName="call" with 5500=while.stmt#  such that Calls*("then", procedure)  pattern assign(constant, _)  pattern assign(procedure, _"(8200+if)/7600"_) with "variable"=call.procName  such that Calls*(procedure, procedure)  pattern assign(_, "(read*7500)-2200")  pattern while(_, _)  such that Parent(_, call)  such that Parent(if, _) with print.varName="else"  pattern while(_, _)  pattern assign(variable, _"1900-print"_) with while.stmt#=8500  pattern if(then, _, _)  pattern while(_, _) with stmt.stmt#=while.stmt#  such that Next(assign, _) with "else"=print.varName  such that Affects(stmt, 14)  such that Next(_, print)  pattern assign(_, _"500+5400"_) with print.stmt#=if.stmt#  pattern if(read, _, _) with 8200=print.stmt#  pattern while(_, _)  such that Affects*(_, stmt)  such that Affects(stmt, _) with "else"=procedure.procName  such that Calls("assign", procedure)  pattern assign(then, "constant/8500")  pattern if(variable, _, _) with call.procName="constant" with 6100=while.stmt# with 5700=constant.value  pattern if(then, _, _)  pattern while(variable, _) with constant.value=4800  such that Follows(23, assign) with constant.value=1400  pattern if(variable, _, _)  such that Next(7, stmt)  pattern assign(variable, _"(1400-9500)/1100"_)  pattern while(variable, _)  pattern if(variable, _, _) with 3000=read.stmt# with call.procName="procedure"  such that Affects(9, stmt)  pattern assign(then, _"5000-400"_)  pattern if(_, _, _)  such that Calls*(_, procedure)  such that Parent(_, print) with call.stmt#=8900  such that Modifies(read, "print") with procedure.procName="then"  such that Calls(procedure, "while") with variable.varName=call.procName with assign.stmt#=3600  pattern while(_, _) with 5600=assign.stmt# with variable.varName=print.varName  such that Next*(stmt, call)  such that Calls(_, procedure)  pattern assign(constant, "else*8000") with 1600=print.stmt# with 1900=assign.stmt# with 2200=while.stmt#  pattern if(_, _, _)  pattern if(if, _, _) with 500=constant.value  pattern if(variable, _, _)  such that Parent*(6, stmt)  pattern if(_, _, _)  pattern if(variable, _, _)  pattern while(variable, _)  pattern assign(variable, _"1500+600"_)  such that Next*(stmt, 6)  such that Affects*(26, assign)  pattern if(_, _, _)  pattern while(variable, _)  such that Follows*(1, assign) with 1600=constant.value  pattern assign(procedure, _"2400-6900"_)  pattern assign(procedure, _)  such that Uses(13, variable) with read.stmt#=4300  such that Follows(call, 28)  pattern if(variable, _, _)  such that Uses(18, variable)  pattern assign(variable, _)  such that Modifies(print, variable)  pattern while(_, _) with print.varName="while"  pattern while(_, _)  pattern while(_, _)  pattern assign(_, _) with read.stmt#=8200 with while.stmt#=stmt.stmt#  such that Next*(_, assign)  pattern if(else, _, _)  pattern while(variable, _)  such that Follows(stmt, 20)  pattern if(variable, _, _) with read.varName=procedure.procName  such that Affects(assign, assign) with call.procName=procedure.procName  such that Next*(_, stmt)  such that Follows*(read, print)  such that Affects*(_, assign)  such that Calls("read", procedure)  pattern assign(procedure, _)  pattern while(_, _)  such that Next*(15, call)  such that Follows(print, 7)  pattern while(_, _) with 8700=if.stmt#  pattern while(_, _)  pattern if(variable, _, _)  such that Uses(assign, _)  pattern assign(_, _"(5400-5700)-4900"_)  pattern while(if, _) with 6100=if.stmt#  pattern while(variable, _)  such that Calls(procedure, _) with "constant"=procedure.procName  pattern while(_, _) with while.stmt#=8600 with 5000=assign.stmt#  pattern while(then, _)  such that Modifies(stmt, _) with "read"=procedure.procName with print.stmt#=4100  such that Calls*(procedure, _)  such that Affects*(stmt, stmt)  pattern while(variable, _) with variable.varName="else" with read.stmt#=100  pattern if(print, _, _)  pattern assign(variable, "8400-constant")  pattern while(variable, _) with 6700=call.stmt# with "then"=read.varName  pattern while(_, _) with call.stmt#=read.stmt#  pattern if(variable, _, _)  such that Modifies(while, variable)  pattern while(_, _) with print.stmt#=2800  pattern if(variable, _, _) with "read"=call.procName  such that Parent*(while, call) with "assign"=print.varName  such that Next(assign, 17) with call.procName=print.varName  pattern while(variable, _) with if.stmt#=stmt.stmt# with 1700=constant.value  pattern assign(_, _)  pattern if(constant, _, _)  such that Parent(print, 7)  pattern while(variable, _)  pattern assign(while, "8900/3700") with procedure.procName="assign"  pattern while(variable, _)  pattern while(_, _)  pattern assign(variable, _)  such that Calls(_, procedure)  pattern while(procedure, _)  pattern if(_, _, _)  pattern assign(_, _"700/else"_)  pattern while(else, _)  such that Uses(while, "while")  pattern assign(_, _"constant/100"_) with stmt.stmt#=assign.stmt# with procedure.procName=call.procName  such that Calls*(procedure, _)  pattern while(variable, _) with while.stmt#=read.stmt#  pattern assign(procedure, _)  such that Follows(while, 10)  pattern while(print, _)  pattern assign(procedure, _"(7000/400)*2900"_)  such that Follows(2, if)  pattern assign(_, "9800*4600") with "read"=procedure.procName  pattern if(call, _, _)  such that Follows*(_, read)  pattern if(variable, _, _) with "while"=call.procName  pattern while(variable, _)  pattern assign(variable, "3200*200")  pattern assign(variable, "5700/2100") with if.stmt#=while.stmt# with if.stmt#=read.stmt#  pattern while(_, _)  such that Uses(read, _)  pattern assign(_, _) with read.varName=procedure.procName with "assign"=read.varName  pattern if(if, _, _)  such that Calls(procedure, _)  pattern assign(else, _)  pattern if(variable, _, _)  such that Follows*(if, 11) with 7500=assign.stmt#  such that Affects*(assign, assign)  pattern if(_, _, _)  pattern assign(if, _) with call.procName="procedure"  such that Affects(assign, assign) with print.varName="while"  such that Next*(read, stmt)  pattern if(_, _, _)  pattern while(then, _)  pattern if(assign, _, _)  pattern if(read, _, _)  pattern if(variable, _, _)  such that Calls*(procedure, procedure)  such that Parent*(read, stmt)  pattern if(variable, _, _)  pattern if(variable, _, _) with while.stmt#=assign.stmt#  pattern while(variable, _)  such that Next(_, stmt) with variable.varName="procedure"  such that Next(_, call)  pattern assign(_, _"7100+5600"_) with constant.value=9900 with "print"=call.procName  pattern assign(_, "1200*8900") with call.stmt#=7700 with assign.stmt#=9300  pattern assign(_, "8400*2800")  pattern if(_, _, _)  pattern if(variable, _, _)  pattern assign(_, "2400*9000")  pattern while(constant, _)  such that Affects*(19, assign) with call.procName=procedure.procName  pattern assign(print, "7900+9000")  pattern if(assign, _, _)  such that Follows*(while, while) with "print"=read.varName  pattern assign(variable, "200/8900")  pattern assign(_, _"2000+3300"_) with print.varName="call"  pattern while(variable, _) with call.stmt#=3000  such that Modifies(read, _) with "constant"=print.varName  pattern while(read, _) with while.stmt#=constant.value  pattern while(_, _)  such that Modifies(procedure, "else")  pattern if(read, _, _)  pattern while(_, _) with 2000=call.stmt#  pattern if(_, _, _)  pattern if(variable, _, _)  pattern if(procedure, _, _) with "while"=print.varName with call.stmt#=stmt.stmt# with print.varName=variable.varName  such that Next*(stmt, 12)  such that Parent*(_, assign)  pattern if(_, _, _) with print.stmt#=while.stmt# with procedure.procName=read.varName  such that Calls*(_, procedure) with print.varName="while"  pattern while(variable, _) with procedure.procName="call"  pattern assign(constant, _) 

5000