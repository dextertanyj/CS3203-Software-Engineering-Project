1 - Select all stmt
stmt stmt; while while;
Select stmt pattern while(_, _) with 7000=7000
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49
5000
2 - Select all variables
variable variable; procedure procedure; call call; 
Select variable with call.procName=procedure.procName
assign, call, constant, else, if, print, procedure, read, then, variable, while
5000
3 - Select all procedure
procedure procedure;
Select procedure such that Calls*(_, _)
call, procedure, read, while
5000
4 - part number match 1
stmt stmt; assign assign; variable variable;
Select assign pattern assign(variable, _"0"_) with stmt.stmt#=assign.stmt#
49
5000
5 - part number match 2
stmt stmt; assign assign; variable variable;
Select assign pattern assign(_, _"0+5"_) with assign.stmt#=5

5000
5 - part number match 3
stmt stmt; assign assign; variable variable;
Select assign pattern assign(_, _"3"_)

5000
6 - multi-clause with 1
if if; variable variable; print print; 
Select <variable, if> pattern if(variable, _, _) with print.varName = variable.varName and if.stmt#=45
constant 45, then 45
5000
7 - multi-clause with 2
if if; while while; call call; variable variable;
Select <if, if> such that Uses(call, variable) and Uses(if, variable) and Uses(while, variable) and Next*(if, call) and Next*(while, while) with "a"="a"
9 9, 13 13
5000
8 - multi-clause with 3
if if; variable variable; while while; 
Select <while, variable> with 36=while.stmt# and 1=1 such that Uses(while, variable)  pattern while("while", _) 
36 while
5000
9 - multi-clause with 4
print print; call call; 
Select <call.procName, print>  such that Next*(call, print) with "constant"=print.varName 
call 21, procedure 21
5000
10 - multi-clause with 5
procedure procedure; variable variable; while while;
Select <procedure, variable, while>  such that Calls(procedure, _) with procedure.procName=variable.varName pattern while(variable, _) 
while while 36
5000
11 - multi-clause with 6
print print; while while; assign assign;
Select <assign, print>  such that Modifies(assign, "print") and Next(assign, print) with print.stmt#=39 with 39=print.stmt# 
38 39
5000
12 - select attrib tuple 1
print print; read read; 
Select <read.stmt#, read.varName, print.stmt#, print.varName>  such that Modifies(read, "read") such that Uses(print, "print") 
33 read 32 print
5000
13 - select attrib tuple 2
call call; read read; while while; assign assign; 
Select <while.stmt#, call.procName, assign>  pattern while(_, _)  such that Affects*(41, assign) and Next*(while, assign) with read.varName=call.procName 
36 call 42, 36 read 42
5000
14 - select attrib tuple 3
if if; assign assign; stmt stmt; 
Select <assign.stmt#, if.stmt#>  pattern assign(_, _"2000"_) such that Parent*(if, assign) and Next*(assign, stmt)
37 34, 37 35
5000
15 - select attrib single 1
variable variable; while while; 
Select <while, variable>  pattern while(variable, _)  pattern while(variable, _)  pattern while(variable, _) 
36 while
5000
16 - select attrib single 2
procedure procedure; print print; 
Select print.stmt# with procedure.procName=print.varName
17, 23, 39
5000
17 - select attrib single 3
constant constant; assign assign;
Select constant.value with assign.stmt#=constant.value pattern assign("if", "(then - 8000)")
1
5000